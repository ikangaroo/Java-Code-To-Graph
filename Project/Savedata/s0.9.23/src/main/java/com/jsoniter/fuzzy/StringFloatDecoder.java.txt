{"fileName":"src/main/java/com/jsoniter/fuzzy/StringFloatDecoder.java","version":"0.9.23","hasMethodName":["decodeFloat-StringFloatDecoder-JsonIterator"]}
{"fileName":"src/main/java/com/jsoniter/fuzzy/StringFloatDecoder.java","version":"0.9.23","methodName":"decodeFloat-StringFloatDecoder-JsonIterator","callMethodNameReferTo":{"38":"src/main/java/com/jsoniter/CodegenAccess.java-nextToken-CodegenAccess-JsonIterator","62":"src/main/java/com/jsoniter/CodegenAccess.java-nextToken-CodegenAccess-JsonIterator"},"num":74,"succs":[[1,27],[2,40],[4,3,41,42,30],[4,44],[5,53],[60,6],[7,64],[9,8,65,34,41],[9,66],[55,10,73],[11,17,14,13,16,19,15,12],[],[],[14],[],[21,26],[18],[],[],[4,5,9,1,0,6],[21],[],[20,21],[22,21],[21,23],[21,24],[],[36],[20,29],[],[28],[2,28,30],[33,28,31,24],[],[32],[32,34,7],[28,37,38],[28],[20,29,39],[],[3],[],[43],[],[47,22,46,45],[],[48],[51,49,50],[],[48],[],[31,52],[],[56],[23],[54],[57,58,54],[54],[59,23],[],[32,61,62],[],[63,33,24],[],[8],[43],[69,67,68,25],[],[48],[50,71,70],[48],[35,72],[],[]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Return Stmt ","Method Declaration Throws ","Name Expr nextToken ","PUBLIC","Primitive Type short ","Simple Name decodeShort ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Name Expr iter ","Void Type ","Name Expr data ","Name Expr iter ","Void Type ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name c ","Name Expr CodegenAccess ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr CodegenAccess ","Name Expr c ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Method Call Expr ","Simple Name nextToken ","Block Stmt ","NOT_EQUALS","Char Literal Expr ''' ","'''","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","StringLiteralExpr","String Literal Expr Not Empty  ","PLUS","Cast Expr ","Primitive Type char ","Variable Declaration Expr ","Simple Name val ","Name Expr val ","Variable Declarator short val = ","Class Or Interface Type Class ","Simple Name addNewMapDecoder ","Name Expr classInfo ","Method Call Expr ","ASSIGN","Method Call Expr ","Simple Name nextToken ","Block Stmt ","Char Literal Expr '}' ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Cast Expr ","Primitive Type char ","ReturnStmt"]}
