{"fileName":"src/main/java/com/jsoniter/CodegenImplNative.java","version":"0.9.23","hasMethodName":["genReadOp-CodegenImplNative-Type","getTypeName-CodegenImplNative-Type","genField-CodegenImplNative-Binding","genReadOp-CodegenImplNative-String-Type"]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplNative.java","version":"0.9.23","methodName":"genReadOp-CodegenImplNative-Type","callMethodNameReferTo":{"20":"src/main/java/com/jsoniter/spi/TypeLiteral.java-getDecoderCacheKey-TypeLiteral-","21":"src/main/java/com/jsoniter/spi/TypeLiteral.java-create-TypeLiteral-Type","253":"src/main/java/com/jsoniter/spi/TypeLiteral.java-getDecoderCacheKey-TypeLiteral-","254":"src/main/java/com/jsoniter/spi/TypeLiteral.java-create-TypeLiteral-Type"},"num":471,"succs":[[1,14],[25,2,24],[8,6,7,4,5,3],[4],[],[6],[],[10,13],[1,0],[10],[],[10,33,9],[10,37,11],[],[18],[16,9],[],[15,36],[19,15,20],[15],[22,21],[23,16,9],[],[],[],[28,30,29,27,26],[],[],[31],[32,11,34],[38,17,12,35],[],[],[],[55,54,53,4,56,3],[],[],[],[185,187,184,182,4,183,186],[43,40,64],[66,57,43,41,65],[68,42],[75,34,24],[77,48,44],[45,59,78,48,65],[46,80],[87,47],[96,34,24],[98,49,51],[61,99,50,65,51],[101,34,24],[52],[105],[54],[],[63,33],[39],[33],[33,57,40],[33,57,40],[59,33,40,44],[59,33,40,44],[61,60,33,58,40,44,49],[],[42,41],[67,414,336,100,454,375,79,316,434],[],[],[71],[58],[69],[69,73,72],[69],[58,74],[],[76,70],[],[45,46,47],[],[],[83],[60],[81],[84,81,85],[81],[60,86],[],[90],[82],[88],[91,92,88],[88],[93,94],[],[82,95],[],[89,97],[],[50],[],[],[103,102],[104],[],[],[107,106],[],[108,62,109],[31],[],[228,111],[247,112],[249,133,248,231,113],[114,251],[257,115],[116,260],[133,117,248,234,261],[262,124,118],[214,124,119,65,263],[120,264],[271,121],[122,282],[127,284,283,274,123],[127,38,275,24],[285,125],[127,126,286,216,65],[127,38,24,287],[128,294],[297,131,129],[298,299,194,131,130],[38,133,300,24],[132],[38,133,304,24],[134,308],[248,139,309,135,218],[311,136],[313,138,137,312],[319,138],[38,325,139,24],[140,329],[248,330,145,141,219],[332,142],[143,313,333,144],[339,144],[38,145,345,24],[349,146],[220,151,248,147,350],[352,148],[313,149,150,353],[150,358],[151,38,364,24],[368,152],[221,369,248,153,157],[154,371],[156,313,372,155],[156,378],[38,157,384,24],[158,388],[159,248,163,222,389],[160,391],[392,313,162,161],[397,162],[38,163,403,24],[164,407],[248,408,169,165,223],[166,410],[313,167,411,168],[417,168],[38,169,24,423],[427,170],[175,248,428,224,171],[172,430],[174,313,431,173],[174,437],[38,175,24,443],[176,447],[225,248,181,448,177],[450,178],[313,179,451,180],[457,180],[38,181,463,24],[38,467,24],[4],[184],[],[36,226],[37,227],[133,151,163,175,181,145,169,139,157,111,110],[36],[191,190,36,188],[],[37],[189],[192,189],[189,193],[194,189,129],[194,189,195,129],[196,189],[197,189],[189,198],[199,189],[189,200],[189,201],[189,202],[203,189],[204,189],[189,205],[206,189],[207,189],[208,189],[189,209],[210,189],[211,189],[212,189],[191,37],[37,214,118],[37,214,215,118],[37,216],[217,37],[37,218],[37,219],[220,37],[221,37],[222,37],[37,223],[37,224],[],[],[243],[230,188],[],[229],[233,192,112,229,231],[],[232,112],[234,232],[232,235],[236,232],[237,232],[238,232],[239,232],[240,232],[232,241],[245,244,229],[229],[230,246,188],[],[114,115,113],[],[250],[],[252,253,189],[],[254,255],[191,190,256],[],[],[258,252,232],[233,192,259],[],[127,117,128],[250],[120,121,119],[],[267],[215],[265],[268,269,265],[265],[270,215],[],[276],[273,266],[],[272],[122,274,272],[278,272,277],[272],[273,279,280],[],[281,266],[],[123],[],[250],[126],[],[290,289,288],[],[],[292,291],[293],[],[],[295,217,193,296],[],[],[130],[],[],[303,195,301,302],[],[],[31],[307,196,306,305],[],[],[31],[138,135],[310],[],[137],[314],[],[315,65,235],[317,318],[],[],[],[321,320],[],[323,322,109],[197,324,109],[31],[31],[327,328,326,198],[],[],[31],[141,144],[331],[],[143],[334],[236,335,65],[337,338],[],[],[],[340,341],[],[343,109,342],[199,344,109],[31],[31],[348,346,347,200],[],[],[31],[150,147],[351],[],[149],[354],[237,355,65],[357,356],[],[],[359,360],[],[109,362,361],[363,109,201],[31],[31],[367,365,366,202],[],[],[31],[156,153],[370],[],[155],[373],[238,374,65],[377,376],[],[],[],[379,380],[],[382,109,381],[203,383,109],[31],[31],[387,204,385,386],[],[],[31],[159,162],[390],[],[161],[393],[239,65,394],[396,395],[],[],[398,399],[],[400,109,401],[109,205,402],[31],[31],[206,406,405,404],[],[],[31],[165,168],[409],[],[167],[412],[240,413,65],[416,415],[],[],[],[418,419],[],[421,420,109],[207,422,109],[31],[31],[208,426,425,424],[],[],[31],[174,171],[429],[],[173],[432],[241,433,65],[435,436],[],[],[],[439,438],[],[441,440,109],[209,109,442],[31],[31],[445,446,210,444],[],[],[31],[180,177],[449],[],[179],[452],[242,65,453],[455,456],[],[],[],[458,459],[],[460,461,109],[462,211,109],[31],[31],[466,212,464,465],[],[],[31],[468,469,470,213],[],[],[31]],"attribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Class Expr Map.class ","Parameter Type type ","Block Stmt ","Name Expr type ","Simple Name type ","Name Expr type ","Name Expr type ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name cacheKey ","Name Expr TypeLiteral ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Name Expr stream ","Method Call Expr ","Method Call Expr ","Simple Name getDecoderCacheKey ","Simple Name create ","ReturnStmt","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","StringLiteralExpr","Simple Name getTypeName ","Simple Name fieldType ","Method Declaration ","Simple Name genReadOp ","Simple Name cacheKey ","Simple Name valueType ","Method Declaration ","If Stmt ","Instance Of Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Block Stmt ","Throw Stmt ","Class Or Interface Type String ","Simple Name getTypeName ","Parameter Type fieldType ","Block Stmt ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Class Or Interface Type Type ","Block Stmt ","InstanceOfExpr","Class Or Interface Type Class ","Class","Variable Declaration Expr ","Simple Name clazz ","Name Expr cache ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getCanonicalName ","Block Stmt ","Class Or Interface Type ParameterizedType ","ParameterizedType","Method Call Expr ","Simple Name pType ","Name Expr pType ","Variable Declarator ParameterizedType pType = ","Name Expr CodegenImplNative ","Cast Expr ","Class Or Interface Type ParameterizedType ","Variable Declaration Expr ","Simple Name clazz ","Simple Name write ","Variable Declarator Class clazz = ","Simple Name start ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getRawType ","Method Call Expr ","Simple Name getCanonicalName ","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","Method Call Expr ","Class Expr Object.class ","Simple Name getCanonicalName ","Class Or Interface Type Object ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Block Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","For Each Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Assign Expr ASSIGN ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","Return Stmt ","PRIVATE","Class Or Interface Type String ","Simple Name genReadOp ","Parameter String cacheKey ","Parameter Type valueType ","Block Stmt ","Name Expr cacheKey ","Assign Expr PLUS ","Simple Name reportError ","Name Expr valueType ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Simple Name writeNull ","Name Expr valueType ","Array Access Expr d++ ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Simple Name fillCache ","Name Expr valueType ","Class Or Interface Type String ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name getDecoderCacheKey ","Simple Name create ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getDecoder ","Block Stmt ","Null Literal Expr ","Block Stmt ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name nativeRead ","Name Expr NATIVE_READS ","Name Expr nativeRead ","Name Expr nativeRead ","Variable Declarator String nativeRead = ","Class Or Interface Type String ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name getCanonicalName ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","Block Stmt ","Class Or Interface Type WildcardType ","Method Call Expr ","Name Expr NATIVE_READS ","Simple Name get ","Method Call Expr ","Class Expr Object.class ","Simple Name getCanonicalName ","Class Or Interface Type Object ","Method Call Expr ","Name Expr Codegen ","Simple Name readObject ","Block Stmt ","Name Expr Codegen ","Simple Name canStaticAccess ","Method Call Expr ","Name Expr String ","Class Or Interface Type String ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name length ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr boolean.class ","Primitive Type boolean ","Block Stmt ","Enclosed Expr ","LOGICAL_COMPLEMENT","Instance Of Expr ","Class Or Interface Type BooleanDecoder ","Decoder.BooleanDecoder","Class Or Interface Type Decoder ","Simple Name BooleanDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Class Or Interface Type String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr byte.class ","Primitive Type byte ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type ShortDecoder ","Decoder.ShortDecoder","Class Or Interface Type Decoder ","Simple Name ShortDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Binary Expr SIGNED_RIGHT_SHIFT ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr short.class ","Primitive Type short ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type ShortDecoder ","Class Or Interface Type Decoder ","Simple Name ShortDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr char.class ","Char Literal Expr 'n' ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type IntDecoder ","Decoder.IntDecoder","Class Or Interface Type Decoder ","Simple Name IntDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr int.class ","Primitive Type int ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type IntDecoder ","Class Or Interface Type Decoder ","Simple Name IntDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr long.class ","Primitive Type long ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type LongDecoder ","Decoder.LongDecoder","Class Or Interface Type Decoder ","Simple Name LongDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr float.class ","Primitive Type float ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type FloatDecoder ","Decoder.FloatDecoder","Class Or Interface Type Decoder ","Simple Name FloatDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr double.class ","Primitive Type double ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type DoubleDecoder ","Decoder.DoubleDecoder","Class Or Interface Type Decoder ","Simple Name DoubleDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplNative.java","version":"0.9.23","methodName":"getTypeName-CodegenImplNative-Type","callMethodNameReferTo":{},"num":77,"succs":[[4,1,29],[31,21,4,2,30],[33,3],[41,14,40],[43,9,5],[6,24,44,9,30],[7,46],[53,8],[62,14,40],[64,12,10],[26,65,11,30,12],[67,14,40],[13],[71],[19,18,17,16,20,15],[16],[],[18],[],[28,22],[0],[22],[],[22,21,1],[22,21,1],[24,22,1,5],[24,22,1,5],[26,25,22,23,1,5,10],[],[3,2],[32,66,45],[],[],[36],[23],[34],[34,37,38],[34],[23,39],[],[],[42,35],[],[6,7,8],[],[],[49],[25],[47],[50,47,51],[47],[25,52],[],[56],[48],[54],[57,58,54],[54],[59,60],[],[48,61],[],[55,63],[],[11],[],[],[69,68],[70],[],[],[73,72],[],[74,27,75],[76],[],[]],"attribute":["If Stmt ","Instance Of Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Block Stmt ","Throw Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name getTypeName ","Parameter Type fieldType ","Block Stmt ","Name Expr fieldType ","Simple Name fieldType ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Class Or Interface Type Type ","Block Stmt ","InstanceOfExpr","Class Or Interface Type Class ","Class","Variable Declaration Expr ","Simple Name clazz ","Name Expr cache ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Simple Name getCanonicalName ","Block Stmt ","Class Or Interface Type ParameterizedType ","ParameterizedType","Method Call Expr ","Simple Name pType ","Name Expr pType ","Variable Declarator ParameterizedType pType = ","Name Expr CodegenImplNative ","Cast Expr ","Class Or Interface Type ParameterizedType ","Variable Declaration Expr ","Simple Name clazz ","Simple Name write ","Variable Declarator Class clazz = ","Simple Name start ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getRawType ","Method Call Expr ","Simple Name getCanonicalName ","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","Method Call Expr ","Class Expr Object.class ","Simple Name getCanonicalName ","Class Or Interface Type Object ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplNative.java","version":"0.9.23","methodName":"genField-CodegenImplNative-Binding","callMethodNameReferTo":{},"num":476,"succs":[[13,1],[2,20],[29,3,28],[8,4,7,5,6],[],[6],[],[10,12],[2,0,1],[10],[],[9,10],[],[16],[9],[14,40],[18,14,17],[14],[19,9],[],[24],[11],[21,37],[41,21,22],[21,25,26],[21],[11,27],[],[],[33,31,32,34,30],[],[],[35],[36,38,22],[39,42,15,23],[],[],[],[60,59,58,4,61,57],[],[],[],[190,192,189,187,4,191,188],[47,44,69],[71,62,47,45,70],[73,46],[80,38,28],[82,52,48],[49,64,83,52,70],[50,85],[92,51],[101,38,28],[103,55,53],[66,104,54,70,55],[106,38,28],[56],[110],[4],[59],[],[68,37],[43],[37],[37,62,44],[37,62,44],[64,37,44,48],[64,37,44,48],[66,65,37,63,44,48,53],[],[46,45],[72,419,341,105,459,84,380,321,439],[],[],[76],[63],[74],[74,78,77],[74],[63,79],[],[81,75],[],[49,50,51],[],[],[88],[65],[86],[89,86,90],[86],[65,91],[],[95],[87],[93],[96,97,93],[93],[98,99],[],[87,100],[],[94,102],[],[54],[],[],[108,107],[109],[],[],[112,111],[],[113,67,114],[35],[],[233,116],[252,117],[254,138,253,118,236],[119,256],[262,120],[121,265],[138,122,253,239,266],[267,129,123],[219,129,124,268,70],[269,125],[276,126],[127,287],[132,289,288,279,128],[132,42,280,28],[290,130],[132,131,291,221,70],[132,42,28,292],[133,299],[302,136,134],[303,304,199,136,135],[42,138,305,28],[137],[138,42,309,28],[139,313],[253,144,314,140,223],[316,141],[318,143,142,317],[324,143],[42,330,144,28],[334,145],[253,335,150,146,224],[337,147],[148,318,338,149],[344,149],[42,150,350,28],[354,151],[225,156,253,152,355],[153,357],[318,155,154,358],[155,363],[156,42,369,28],[373,157],[226,253,374,158,162],[159,376],[161,318,377,160],[161,383],[42,162,389,28],[163,393],[164,168,253,227,394],[165,396],[397,318,167,166],[402,167],[42,168,408,28],[169,412],[253,413,174,170,228],[171,415],[318,172,416,173],[422,173],[42,174,28,428],[432,175],[253,180,229,433,176],[177,435],[179,318,436,178],[179,442],[42,180,28,448],[181,452],[230,253,186,453,182],[455,183],[318,184,456,185],[462,185],[42,186,468,28],[42,472,28],[4],[189],[],[40,231],[41,232],[156,138,168,180,186,150,174,162,144,115,116],[40],[196,195,40,193],[],[41],[194],[197,194],[194,198],[199,194,134],[199,194,200,134],[201,194],[202,194],[194,203],[204,194],[194,205],[194,206],[194,207],[208,194],[209,194],[194,210],[211,194],[212,194],[213,194],[194,214],[215,194],[216,194],[217,194],[196,41],[41,219,123],[41,219,220,123],[41,221],[222,41],[41,223],[41,224],[225,41],[226,41],[227,41],[41,228],[41,229],[],[],[248],[235,193],[],[234],[238,197,117,234,236],[],[237,117],[239,237],[237,240],[241,237],[242,237],[243,237],[244,237],[245,237],[237,246],[250,249,234],[234],[235,251,193],[],[119,120,118],[],[255],[],[257,258,194],[],[259,260],[196,195,261],[],[],[263,257,237],[238,197,264],[],[132,122,133],[255],[125,126,124],[],[272],[220],[270],[273,274,270],[270],[275,220],[],[281],[278,271],[],[277],[127,279,277],[283,277,282],[277],[278,284,285],[],[286,271],[],[128],[],[255],[131],[],[295,294,293],[],[],[297,296],[298],[],[],[300,222,198,301],[],[],[135],[],[],[308,200,306,307],[],[],[35],[312,201,311,310],[],[],[35],[143,140],[315],[],[142],[319],[],[320,240,70],[322,323],[],[],[],[326,325],[],[328,327,114],[202,329,114],[35],[35],[332,333,331,203],[],[],[35],[146,149],[336],[],[148],[339],[241,340,70],[342,343],[],[],[],[345,346],[],[348,114,347],[204,349,114],[35],[35],[353,351,352,205],[],[],[35],[155,152],[356],[],[154],[359],[242,360,70],[362,361],[],[],[364,365],[],[114,367,366],[368,114,206],[35],[35],[372,370,371,207],[],[],[35],[161,158],[375],[],[160],[378],[243,379,70],[382,381],[],[],[],[384,385],[],[387,114,386],[208,388,114],[35],[35],[392,209,390,391],[],[],[35],[164,167],[395],[],[166],[398],[244,70,399],[401,400],[],[],[403,404],[],[405,114,406],[114,210,407],[35],[35],[211,411,410,409],[],[],[35],[170,173],[414],[],[172],[417],[245,418,70],[421,420],[],[],[],[423,424],[],[426,425,114],[212,427,114],[35],[35],[213,431,430,429],[],[],[35],[179,176],[434],[],[178],[437],[246,70,438],[440,441],[],[],[],[444,443],[],[446,445,114],[214,114,447],[35],[35],[450,451,215,449],[],[],[35],[185,182],[454],[],[184],[457],[247,70,458],[460,461],[],[],[],[463,464],[],[465,466,114],[467,216,114],[35],[35],[471,217,469,470],[],[],[35],[473,474,475,218],[],[],[35]],"attribute":["Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","STATIC","Class Or Interface Type String ","Name Expr cacheKey ","Parameter Binding field ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr IterImplArray ","Name Expr fieldCacheKey ","Variable Declarator String fieldCacheKey = ","Class Or Interface Type String ","Method Call Expr ","Simple Name decoderCacheKey ","Variable Declaration Expr ","Simple Name fieldType ","Name Expr fieldType ","Name Expr fieldType ","Variable Declarator Type fieldType = ","Name Expr bits ","Field Access Expr ","Simple Name valueType ","ReturnStmt","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","StringLiteralExpr","Simple Name getTypeName ","Simple Name fieldType ","Method Declaration ","Simple Name genReadOp ","Simple Name cacheKey ","Simple Name valueType ","Method Declaration ","If Stmt ","Instance Of Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Block Stmt ","Throw Stmt ","PUBLIC","Class Or Interface Type String ","Simple Name getTypeName ","Parameter Type fieldType ","Block Stmt ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Name Expr fieldType ","Class Or Interface Type Type ","Block Stmt ","InstanceOfExpr","Class Or Interface Type Class ","Class","Variable Declaration Expr ","Simple Name clazz ","Name Expr cache ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getCanonicalName ","Block Stmt ","Class Or Interface Type ParameterizedType ","ParameterizedType","Method Call Expr ","Simple Name pType ","Name Expr pType ","Variable Declarator ParameterizedType pType = ","Name Expr CodegenImplNative ","Cast Expr ","Class Or Interface Type ParameterizedType ","Variable Declaration Expr ","Simple Name clazz ","Simple Name write ","Variable Declarator Class clazz = ","Simple Name start ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getRawType ","Method Call Expr ","Simple Name getCanonicalName ","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","Method Call Expr ","Class Expr Object.class ","Simple Name getCanonicalName ","Class Or Interface Type Object ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Block Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","For Each Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Assign Expr ASSIGN ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","Return Stmt ","PRIVATE","Class Or Interface Type String ","Simple Name genReadOp ","Parameter String cacheKey ","Parameter Type valueType ","Block Stmt ","Name Expr cacheKey ","Assign Expr PLUS ","Simple Name reportError ","Name Expr valueType ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Simple Name writeNull ","Name Expr valueType ","Array Access Expr d++ ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Simple Name fillCache ","Name Expr valueType ","Class Or Interface Type String ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name getDecoderCacheKey ","Simple Name create ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getDecoder ","Block Stmt ","Null Literal Expr ","Block Stmt ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name nativeRead ","Name Expr NATIVE_READS ","Name Expr nativeRead ","Name Expr nativeRead ","Variable Declarator String nativeRead = ","Class Or Interface Type String ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name getCanonicalName ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","Block Stmt ","Class Or Interface Type WildcardType ","Method Call Expr ","Name Expr NATIVE_READS ","Simple Name get ","Method Call Expr ","Class Expr Object.class ","Simple Name getCanonicalName ","Class Or Interface Type Object ","Method Call Expr ","Name Expr Codegen ","Simple Name readObject ","Block Stmt ","Name Expr Codegen ","Simple Name canStaticAccess ","Method Call Expr ","Name Expr String ","Class Or Interface Type String ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name length ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr boolean.class ","Primitive Type boolean ","Block Stmt ","Enclosed Expr ","LOGICAL_COMPLEMENT","Instance Of Expr ","Class Or Interface Type BooleanDecoder ","Decoder.BooleanDecoder","Class Or Interface Type Decoder ","Simple Name BooleanDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Class Or Interface Type String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr byte.class ","Primitive Type byte ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type ShortDecoder ","Decoder.ShortDecoder","Class Or Interface Type Decoder ","Simple Name ShortDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Binary Expr SIGNED_RIGHT_SHIFT ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr short.class ","Primitive Type short ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type ShortDecoder ","Class Or Interface Type Decoder ","Simple Name ShortDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr char.class ","Char Literal Expr 'n' ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type IntDecoder ","Decoder.IntDecoder","Class Or Interface Type Decoder ","Simple Name IntDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr int.class ","Primitive Type int ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type IntDecoder ","Class Or Interface Type Decoder ","Simple Name IntDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr long.class ","Primitive Type long ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type LongDecoder ","Decoder.LongDecoder","Class Or Interface Type Decoder ","Simple Name LongDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr float.class ","Primitive Type float ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type FloatDecoder ","Decoder.FloatDecoder","Class Or Interface Type Decoder ","Simple Name FloatDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr double.class ","Primitive Type double ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type DoubleDecoder ","Decoder.DoubleDecoder","Class Or Interface Type Decoder ","Simple Name DoubleDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplNative.java","version":"0.9.23","methodName":"genReadOp-CodegenImplNative-String-Type","callMethodNameReferTo":{"192":"src/main/java/com/jsoniter/Codegen.java-getDecoder-Codegen-String-Type","19":"src/main/java/com/jsoniter/Codegen.java-canStaticAccess-Codegen-String","147":"src/main/java/com/jsoniter/spi/TypeLiteral.java-getDecoderCacheKey-TypeLiteral-","148":"src/main/java/com/jsoniter/spi/TypeLiteral.java-create-TypeLiteral-Type","152":"src/main/java/com/jsoniter/spi/JsoniterSpi.java-getDecoder-JsoniterSpi-String","139":"src/main/java/com/jsoniter/spi/JsoniterSpi.java-getDecoder-JsoniterSpi-String"},"num":371,"succs":[[122,1],[141,2],[143,23,142,125,3],[4,145],[151,5],[6,154],[23,7,142,128,155],[156,14,8],[108,14,9,157,158],[10,160],[167,11],[12,178],[17,180,179,170,13],[17,72,171,181],[182,15],[17,16,183,110,157],[17,72,181,185],[18,192],[195,21,19],[196,197,87,21,20],[72,23,198,181],[22],[23,72,203,181],[24,207],[142,29,208,25,112],[210,26],[212,28,27,211],[218,28],[72,225,29,181],[229,30],[142,230,35,31,113],[232,32],[33,212,233,34],[239,34],[72,35,245,181],[249,36],[114,41,142,37,250],[38,252],[212,39,40,253],[40,258],[41,72,264,181],[268,42],[115,142,269,43,47],[44,271],[212,46,272,45],[46,278],[72,47,284,181],[48,288],[49,53,142,116,289],[50,291],[292,212,52,51],[297,52],[72,53,303,181],[54,307],[142,308,59,55,117],[56,310],[212,57,311,58],[317,58],[72,59,181,323],[327,60],[142,65,328,118,61],[62,330],[64,212,331,63],[64,337],[72,65,181,343],[66,347],[119,142,71,348,67],[350,68],[212,69,351,70],[357,70],[72,71,363,181],[72,367,181],[79,77,76,73,74,78,75],[74],[],[76],[],[81,120],[107,121],[41,23,53,65,71,35,59,47,29,0,1],[81],[],[84,83,81,80],[],[107],[82],[85,82],[82,86],[87,82,19],[87,82,88,19],[89,82],[90,82],[82,91],[92,82],[82,93],[82,94],[82,95],[82,96],[97,82],[82,98],[99,82],[100,82],[101,82],[82,102],[103,82],[104,82],[105,82],[],[84,107],[107,108,8],[107,108,109,8],[107,110],[111,107],[107,112],[107,113],[114,107],[115,107],[116,107],[107,117],[107,118],[],[],[137],[124,80],[],[123],[127,85,2,123,125],[],[126,2],[128,126],[126,129],[130,126],[131,126],[132,126],[133,126],[134,126],[126,135],[139,138,123],[123],[124,140,80],[],[4,5,3],[],[144],[],[146,147,82],[],[148,149],[84,83,150],[],[],[152,146,126],[127,85,153],[],[17,7,18],[144],[10,11,9],[159,314,236,184,354,275,215,334],[],[],[163],[109],[161],[164,165,161],[161],[166,109],[],[172],[169,162],[],[168],[12,170,168],[174,168,173],[168],[169,175,176],[],[177,162],[],[13],[],[144],[],[16],[],[],[188,187,186],[],[],[190,189],[191],[],[],[193,111,86,194],[],[],[20],[],[],[201,88,199,200],[],[],[202],[],[206,89,205,204],[],[],[202],[28,25],[209],[],[27],[213],[],[214,157,129],[216,217],[],[],[],[220,219],[],[223,221,222],[90,224,222],[],[202],[202],[227,228,226,91],[],[],[202],[31,34],[231],[],[33],[234],[130,235,157],[237,238],[],[],[],[240,241],[],[243,222,242],[92,244,222],[202],[202],[248,246,247,93],[],[],[202],[40,37],[251],[],[39],[254],[131,255,157],[257,256],[],[],[259,260],[],[222,262,261],[263,222,94],[202],[202],[267,265,266,95],[],[],[202],[46,43],[270],[],[45],[273],[132,274,157],[277,276],[],[],[],[279,280],[],[282,222,281],[96,283,222],[202],[202],[287,97,285,286],[],[],[202],[49,52],[290],[],[51],[293],[133,157,294],[296,295],[],[],[298,299],[],[300,222,301],[222,98,302],[202],[202],[99,306,305,304],[],[],[202],[55,58],[309],[],[57],[312],[134,313,157],[316,315],[],[],[],[318,319],[],[321,320,222],[100,322,222],[202],[202],[101,326,325,324],[],[],[202],[64,61],[329],[],[63],[332],[135,333,157],[335,336],[],[],[],[339,338],[],[341,340,222],[102,222,342],[202],[202],[345,346,103,344],[],[],[202],[70,67],[349],[],[69],[352],[136,157,353],[355,356],[],[],[],[358,359],[],[360,361,222],[362,104,222],[202],[202],[366,105,364,365],[],[],[202],[368,369,370,106],[],[],[202]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Block Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","For Each Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Assign Expr ASSIGN ","Throw Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type String ","Simple Name genReadOp ","Parameter String cacheKey ","Parameter Type valueType ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Assign Expr PLUS ","Simple Name reportError ","Name Expr valueType ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Simple Name valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Simple Name writeNull ","Name Expr valueType ","Array Access Expr d++ ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Simple Name fillCache ","Name Expr valueType ","Class Or Interface Type String ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name getDecoderCacheKey ","Simple Name create ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getDecoder ","Block Stmt ","Null Literal Expr ","Block Stmt ","InstanceOfExpr","Class Or Interface Type Class ","Class","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name nativeRead ","Name Expr NATIVE_READS ","Name Expr nativeRead ","Name Expr nativeRead ","Variable Declarator String nativeRead = ","Class Or Interface Type String ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name getCanonicalName ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","ReturnStmt","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","Method Call Expr ","Name Expr NATIVE_READS ","Simple Name get ","Method Call Expr ","Class Expr Object.class ","Simple Name getCanonicalName ","Class Or Interface Type Object ","Method Call Expr ","Name Expr Codegen ","Simple Name readObject ","Block Stmt ","Name Expr Codegen ","Simple Name canStaticAccess ","Method Call Expr ","Name Expr String ","Class Or Interface Type String ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Name Expr String ","Simple Name length ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr boolean.class ","Primitive Type boolean ","Block Stmt ","Enclosed Expr ","LOGICAL_COMPLEMENT","Instance Of Expr ","Class Or Interface Type BooleanDecoder ","Decoder.BooleanDecoder","Class Or Interface Type Decoder ","Simple Name BooleanDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Class Or Interface Type String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr byte.class ","Primitive Type byte ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type ShortDecoder ","Decoder.ShortDecoder","Class Or Interface Type Decoder ","Simple Name ShortDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Binary Expr SIGNED_RIGHT_SHIFT ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr short.class ","Primitive Type short ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type ShortDecoder ","Class Or Interface Type Decoder ","Simple Name ShortDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr char.class ","Char Literal Expr 'n' ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type IntDecoder ","Decoder.IntDecoder","Class Or Interface Type Decoder ","Simple Name IntDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr int.class ","Primitive Type int ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type IntDecoder ","Class Or Interface Type Decoder ","Simple Name IntDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr long.class ","Primitive Type long ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type LongDecoder ","Decoder.LongDecoder","Class Or Interface Type Decoder ","Simple Name LongDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr float.class ","Primitive Type float ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type FloatDecoder ","Decoder.FloatDecoder","Class Or Interface Type Decoder ","Simple Name FloatDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr double.class ","Primitive Type double ","Block Stmt ","Enclosed Expr ","Instance Of Expr ","Class Or Interface Type DoubleDecoder ","Decoder.DoubleDecoder","Class Or Interface Type Decoder ","Simple Name DoubleDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  "]}
