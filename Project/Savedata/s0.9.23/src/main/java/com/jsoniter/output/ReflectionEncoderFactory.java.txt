{"fileName":"src/main/java/com/jsoniter/output/ReflectionEncoderFactory.java","version":"0.9.23","hasMethodName":["create-ReflectionEncoderFactory-ClassInfo"]}
{"fileName":"src/main/java/com/jsoniter/output/ReflectionEncoderFactory.java","version":"0.9.23","methodName":"create-ReflectionEncoderFactory-ClassInfo","callMethodNameReferTo":{},"num":87,"succs":[[32,1],[2,48],[58,3],[4,34,5,59],[61,18,5,60],[6,63],[7,8,36,64,65],[67,8,18,60],[9,69],[38,71,11,70,10],[73,11,18,60],[75,12],[14,76,13,77,40],[14,18,79,60],[15,81],[42,16,82,17],[83,18,60,17],[85,18,60],[21,22,20,23,24,19],[20],[],[22,25,26],[],[31,28],[8,14,0,11,2,5,1,17],[],[],[28],[],[28,27],[29,28],[],[44],[27],[33],[33,34,3],[33,35],[6,33,36],[33,37],[38,33,9],[33,39],[33,12,40],[33,41],[42,15,33],[45,33,46],[33],[47,27],[],[54],[29],[49],[49,50],[49,51],[49,52],[49,56,55],[49],[29,57],[],[4],[],[],[62,50,35],[],[7],[66],[],[],[68,37,51],[],[10],[72],[],[],[52,39,74],[],[13],[78],[],[],[80,41,53],[],[16],[],[43,84],[],[86,30],[]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type ReflectionEncoder ","Simple Name create ","Parameter ClassInfo classInfo ","Block Stmt ","Class Or Interface Type Encoder ","Simple Name ReflectionEncoder ","Name Expr classInfo ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Class Or Interface Type ClassInfo ","Variable Declaration Expr ","Simple Name clazz ","Name Expr slot2 ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Field Access Expr ","Simple Name clazz ","Variable Declaration Expr ","Simple Name typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Simple Name append ","Field Access Expr ","Simple Name typeArgs ","Block Stmt ","Simple Name isArray ","ReturnStmt","Object Creation Expr ReflectionArrayEncoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionArrayEncoder ","Block Stmt ","Class Expr List.class ","Simple Name isAssignableFrom ","Class Or Interface Type List ","Object Creation Expr ReflectionListEncoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionListEncoder ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Class Or Interface Type Collection ","Object Creation Expr ReflectionCollectionEncoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionCollectionEncoder ","Block Stmt ","Switch Entry Stmt ","Simple Name isAssignableFrom ","Simple Name len ","Object Creation Expr ReflectionMapEncoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionMapEncoder ","Block Stmt ","Simple Name object ","Object Creation Expr ReflectionEnumEncoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionEnumEncoder ","Object Creation Expr ReflectionObjectEncoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionObjectEncoder "]}
