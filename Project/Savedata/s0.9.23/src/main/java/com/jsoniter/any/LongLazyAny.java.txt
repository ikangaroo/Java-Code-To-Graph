{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","hasMethodName":["valueType-LongLazyAny-","object-LongLazyAny-","toBoolean-LongLazyAny-","toInt-LongLazyAny-","toLong-LongLazyAny-","toFloat-LongLazyAny-","toDouble-LongLazyAny-","toBigInteger-LongLazyAny-","toBigDecimal-LongLazyAny-","fillCache-LongLazyAny-"]}
{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","methodName":"valueType-LongLazyAny-","callMethodNameReferTo":{},"num":11,"succs":[[5,4,1,3,2],[],[],[4],[],[6],[0,8,7],[],[9,10],[],[]],"attribute":["Method Declaration ","Binary Expr EQUALS ","PUBLIC","Class Or Interface Type ValueType ","Simple Name valueType ","Block Stmt ","Return Stmt ","ReturnStmt","Field Access Expr ","Name Expr ValueType ","Simple Name STRING "]}
{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","methodName":"object-LongLazyAny-","callMethodNameReferTo":{},"num":58,"succs":[[8,1],[2,12,11],[5,6,3,7,4],[],[],[6],[],[0,1],[10,9],[],[23,22,24,25],[],[],[14,26],[29,15,28],[30,16],[40,18,17,39,20,38],[41,20],[47,48,19],[20,49],[21,52],[55],[],[24],[],[13],[21,16,15],[14],[],[],[34],[32],[],[31,32],[36,35,32],[32],[37],[],[17],[18,46],[20],[43,42,44],[],[],[31,45],[],[19],[],[],[50,51],[],[],[54,53,33],[],[],[43,27,56],[57],[]],"attribute":["Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Name Expr cache ","If Stmt ","Unary Expr ! ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr isCached ","Name Expr isCached ","LOGICAL_COMPLEMENT","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","Name Expr cache ","ASSIGN","Method Call Expr ","Simple Name readLong ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Assign Expr ASSIGN ","Boolean Literal Expr true ","true"]}
{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","methodName":"toBoolean-LongLazyAny-","callMethodNameReferTo":{},"num":62,"succs":[[1,8],[12,2,11],[6,3,7,5,4],[],[],[6],[],[1,0],[10,9],[],[27,26,28,29],[],[13,14,15],[],[],[16],[],[18,30],[33,19,32],[34,20],[22,44,21,43,24,42],[45,24],[51,52,23],[24,53],[25,56],[59],[],[28],[],[17],[25,20,19],[18],[],[],[38],[36],[],[35,36],[40,39,36],[36],[41],[],[21],[22,50],[24],[47,46,48],[],[],[35,49],[],[23],[],[],[54,55],[],[],[58,57,37],[],[],[47,31,60],[61],[]],"attribute":["Field Access Expr ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name toBoolean ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Binary Expr NOT_EQUALS ","Name Expr cache ","NOT_EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","If Stmt ","Unary Expr ! ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr isCached ","Name Expr isCached ","LOGICAL_COMPLEMENT","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","Name Expr cache ","ASSIGN","Method Call Expr ","Simple Name readLong ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Assign Expr ASSIGN ","Boolean Literal Expr true ","true"]}
{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","methodName":"toInt-LongLazyAny-","callMethodNameReferTo":{},"num":60,"succs":[[8,1],[12,11,2],[5,6,7,3,4],[],[],[6],[],[1,0],[9,10],[],[24,25,26,27],[],[13,14],[],[],[16,28],[31,17,30],[32,18],[42,19,20,41,22,40],[43,22],[49,50,21],[51,22],[23,54],[57],[],[26],[],[15],[23,18,17],[16],[],[],[36],[34],[],[33,34],[38,37,34],[34],[39],[],[19],[20,48],[22],[45,44,46],[],[],[33,47],[],[21],[],[],[52,53],[],[],[56,55,35],[],[],[45,29,58],[59],[]],"attribute":["Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type int ","Simple Name toInt ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Cast Expr ","Primitive Type int ","Name Expr cache ","If Stmt ","Unary Expr ! ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr isCached ","Name Expr isCached ","LOGICAL_COMPLEMENT","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","Name Expr cache ","ASSIGN","Method Call Expr ","Simple Name readLong ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Assign Expr ASSIGN ","Boolean Literal Expr true ","true"]}
{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","methodName":"toLong-LongLazyAny-","callMethodNameReferTo":{},"num":58,"succs":[[8,1],[12,2,11],[3,5,6,7,4],[],[],[6],[],[1,0],[10,9],[],[22,23,24,25],[],[],[14,26],[29,15,28],[30,16],[40,18,17,39,20,38],[41,20],[47,48,19],[49,20],[21,52],[55],[],[24],[],[13],[21,16,15],[14],[],[],[34],[32],[],[31,32],[36,35,32],[32],[37],[],[17],[18,46],[20],[43,42,44],[],[],[31,45],[],[19],[],[],[50,51],[],[],[54,53,33],[],[],[43,27,56],[57],[]],"attribute":["Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type long ","Simple Name toLong ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Name Expr cache ","If Stmt ","Unary Expr ! ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr isCached ","Name Expr isCached ","LOGICAL_COMPLEMENT","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","Name Expr cache ","ASSIGN","Method Call Expr ","Simple Name readLong ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Assign Expr ASSIGN ","Boolean Literal Expr true ","true"]}
{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","methodName":"toFloat-LongLazyAny-","callMethodNameReferTo":{},"num":58,"succs":[[8,1],[2,12,11],[5,3,7,6,4],[],[],[6],[],[1,0],[10,9],[],[22,23,24,25],[],[],[14,26],[29,15,28],[30,16],[40,18,17,39,20,38],[41,20],[47,48,19],[49,20],[21,52],[55],[],[24],[],[13],[21,16,15],[14],[],[],[34],[32],[],[31,32],[36,35,32],[32],[37],[],[17],[18,46],[20],[43,42,44],[],[],[31,45],[],[19],[],[],[50,51],[],[],[54,53,33],[],[],[43,27,56],[57],[]],"attribute":["Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type float ","Simple Name toFloat ","Block Stmt ","Method Call Expr ","Class Or Interface Type lang ","Method Declaration ","ReturnStmt","Boolean Literal Expr false ","If Stmt ","Unary Expr ! ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr isCached ","Name Expr isCached ","LOGICAL_COMPLEMENT","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","Name Expr cache ","ASSIGN","Method Call Expr ","Simple Name readLong ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Assign Expr ASSIGN ","Boolean Literal Expr true ","true"]}
{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","methodName":"toDouble-LongLazyAny-","callMethodNameReferTo":{},"num":58,"succs":[[1,8],[2,12,11],[3,6,5,7,4],[],[],[6],[],[1,0],[9,10],[],[22,23,24,25],[],[],[14,26],[29,15,28],[30,16],[40,18,17,39,20,38],[41,20],[47,48,19],[49,20],[21,52],[55],[],[24],[],[13],[21,16,15],[14],[],[],[34],[32],[],[31,32],[36,35,32],[32],[37],[],[17],[18,46],[20],[43,42,44],[],[],[31,45],[],[19],[],[],[50,51],[],[],[54,53,33],[],[],[43,27,56],[57],[]],"attribute":["Class Or Interface Type JsonIterator ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type double ","Simple Name toDouble ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Name Expr cache ","If Stmt ","Unary Expr ! ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr isCached ","Name Expr isCached ","LOGICAL_COMPLEMENT","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","Name Expr cache ","ASSIGN","Method Call Expr ","Simple Name readLong ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Assign Expr ASSIGN ","Boolean Literal Expr true ","true"]}
{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","methodName":"toBigInteger-LongLazyAny-","callMethodNameReferTo":{},"num":12,"succs":[[5,4,3,1,2],[],[],[4],[],[6],[8,7,0],[],[10,9],[],[11],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type BigInteger ","Simple Name toBigInteger ","Block Stmt ","Return Stmt ","ReturnStmt","Object Creation Expr BigInteger Optional.empty Optional.empty ","Class Or Interface Type BigInteger ","Method Call Expr ","Simple Name toString "]}
{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","methodName":"toBigDecimal-LongLazyAny-","callMethodNameReferTo":{},"num":12,"succs":[[3,1,4,5,2],[],[],[4],[],[6],[8,0,7],[],[10,9],[],[11],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type BigDecimal ","Simple Name toBigDecimal ","Block Stmt ","Return Stmt ","ReturnStmt","Object Creation Expr BigDecimal Optional.empty Optional.empty ","Class Or Interface Type BigDecimal ","Method Call Expr ","Simple Name toString "]}
{"fileName":"src/main/java/com/jsoniter/any/LongLazyAny.java","version":"0.9.23","methodName":"fillCache-LongLazyAny-","callMethodNameReferTo":{"32":"src/main/java/com/jsoniter/JsonIterator.java-readLong-JsonIterator-","40":"src/main/java/com/jsoniter/JsonIteratorPool.java-returnJsonIterator-JsonIteratorPool-JsonIterator"},"num":46,"succs":[[1,14],[17,2,16],[18,3],[4,5,28,27,7,26],[29,7],[35,36,6],[37,7],[8,40],[43],[10,11,12,13],[],[12],[],[0],[8,3,2],[1],[],[],[22],[20],[],[19,20],[24,23,20],[20],[25],[],[4],[5,34],[7],[31,30,32],[],[],[19,33],[],[6],[],[],[38,39],[],[],[42,41,21],[],[],[31,15,44],[45],[]],"attribute":["If Stmt ","Unary Expr ! ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr isCached ","Name Expr isCached ","LOGICAL_COMPLEMENT","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","Name Expr cache ","ASSIGN","Method Call Expr ","Simple Name readLong ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Assign Expr ASSIGN ","Boolean Literal Expr true ","true"]}
