{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","hasMethodName":["shouldOmit-OmitValue-Object","code-OmitValue-","shouldOmit-OmitValue.Null-Object","code-OmitValue.Null-","shouldOmit-OmitValue.ZeroByte-Object","code-OmitValue.ZeroByte-","shouldOmit-OmitValue.ZeroShort-Object","code-OmitValue.ZeroShort-","shouldOmit-OmitValue.ZeroInt-Object","code-OmitValue.ZeroInt-","shouldOmit-OmitValue.ZeroLong-Object","code-OmitValue.ZeroLong-","shouldOmit-OmitValue.ZeroFloat-Object","code-OmitValue.ZeroFloat-","shouldOmit-OmitValue.ZeroDouble-Object","code-OmitValue.ZeroDouble-","shouldOmit-OmitValue.ZeroChar-Object","code-OmitValue.ZeroChar-","shouldOmit-OmitValue.False-Object","code-OmitValue.False-","parse-OmitValue.Parsed-Type-String","shouldOmit-OmitValue.Parsed-Object","code-OmitValue.Parsed-"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue-Object","callMethodNameReferTo":{},"num":6,"succs":[[1,2,3],[2],[],[4,5],[],[]],"attribute":["Method Declaration ","Primitive Type boolean ","Simple Name shouldOmit ","Parameter Object val ","Class Or Interface Type Object ","Simple Name val "]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue-","callMethodNameReferTo":{},"num":3,"succs":[[2,1],[2],[]],"attribute":["Method Declaration ","Class Or Interface Type String ","Name Expr list "]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue.Null-Object","callMethodNameReferTo":{},"num":16,"succs":[[4,1,5,6,3,2],[],[],[4],[],[9,10],[7],[0,12,11],[9],[],[],[],[13,8,14],[],[15],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name shouldOmit ","Parameter Object val ","Block Stmt ","Return Stmt ","Char Literal Expr ':' ","Simple Name val ","Class Or Interface Type Object ","ReturnStmt","Binary Expr EQUALS ","EQUALS","Name Expr user ","NullLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue.Null-","callMethodNameReferTo":{},"num":10,"succs":[[5,3,4,1,2],[],[],[4],[],[6],[0,8,7],[],[9],[]],"attribute":["If Stmt ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name code ","Block Stmt ","Return Stmt ","ReturnStmt","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue.ZeroByte-Object","callMethodNameReferTo":{},"num":18,"succs":[[4,1,3,5,6,2],[],[],[4],[],[9,10],[7],[0,12,11],[9],[],[],[],[14,13,15],[8,16],[],[17],[],[]],"attribute":["If Stmt ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name shouldOmit ","Parameter Object val ","Block Stmt ","Return Stmt ","Name Expr val ","Simple Name val ","Class Or Interface Type Object ","ReturnStmt","Binary Expr EQUALS ","Cast Expr ","EQUALS","Integer Literal Expr Zero  ","Class Or Interface Type Byte ","Zero IntegerLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue.ZeroByte-","callMethodNameReferTo":{},"num":10,"succs":[[5,3,4,1,2],[],[],[4],[],[6],[8,7,0],[],[9],[]],"attribute":["Method Declaration ","Return Stmt ","PUBLIC","Class Or Interface Type String ","Simple Name code ","Block Stmt ","Return Stmt ","ReturnStmt","Simple Name toBoolean ","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue.ZeroShort-Object","callMethodNameReferTo":{},"num":18,"succs":[[6,3,5,4,1,2],[],[],[4],[],[9,10],[7],[0,12,11],[9],[],[],[],[14,13,15],[8,16],[],[17],[],[]],"attribute":["While Stmt ","Class Or Interface Type lang ","PUBLIC","Primitive Type boolean ","Simple Name shouldOmit ","Parameter Object val ","Block Stmt ","Return Stmt ","Simple Name obj ","Simple Name val ","Class Or Interface Type Object ","ReturnStmt","Simple Name writeObjectField ","Cast Expr ","EQUALS","Integer Literal Expr Zero  ","Class Or Interface Type Short ","Zero IntegerLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue.ZeroShort-","callMethodNameReferTo":{},"num":10,"succs":[[4,1,5,3,2],[],[],[4],[],[6],[8,7,0],[],[9],[]],"attribute":["Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Method Call Expr ","Simple Name code ","Block Stmt ","Return Stmt ","ReturnStmt","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue.ZeroInt-Object","callMethodNameReferTo":{},"num":19,"succs":[[6,5,3,1,4,2],[],[],[4],[],[10,9],[7],[12,0,11],[9],[],[],[],[14,15,13],[16],[],[18],[17,8],[],[]],"attribute":["Method Declaration ","Class Or Interface Type lang ","PUBLIC","Primitive Type boolean ","Name Expr jacksonObj ","Parameter Object val ","Block Stmt ","Return Stmt ","Name Expr val ","Simple Name val ","Class Or Interface Type Object ","ReturnStmt","Binary Expr EQUALS ","Enclosed Expr ","EQUALS","Integer Literal Expr Zero  ","Cast Expr ","Class Or Interface Type Integer ","Zero IntegerLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue.ZeroInt-","callMethodNameReferTo":{},"num":10,"succs":[[3,5,1,4,2],[],[],[4],[],[6],[0,8,7],[],[9],[]],"attribute":["Method Declaration ","Class Or Interface Type lang ","PUBLIC","Class Or Interface Type String ","Simple Name code ","Block Stmt ","Name Expr CodegenImplNative ","ReturnStmt","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue.ZeroLong-Object","callMethodNameReferTo":{},"num":19,"succs":[[1,5,4,6,2,3],[],[],[4],[],[9,10],[7],[0,11,12],[9],[],[],[],[13,14,15],[16],[],[18],[17,8],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name shouldOmit ","Parameter Object val ","Block Stmt ","Return Stmt ","Name Expr pos ","Simple Name val ","Method Call Expr ","ReturnStmt","Binary Expr EQUALS ","Enclosed Expr ","EQUALS","Integer Literal Expr Zero  ","Cast Expr ","Class Or Interface Type Long ","Zero IntegerLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue.ZeroLong-","callMethodNameReferTo":{},"num":10,"succs":[[4,5,3,1,2],[],[],[4],[],[6],[8,0,7],[],[9],[]],"attribute":["Method Declaration ","Method Call Expr ","PUBLIC","Class Or Interface Type String ","Simple Name code ","Block Stmt ","Method Call Expr ","ReturnStmt","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue.ZeroFloat-Object","callMethodNameReferTo":{},"num":19,"succs":[[6,4,3,1,2,5],[],[],[4],[],[10,9],[7],[12,11,0],[9],[],[],[],[14,15,13],[16],[],[18],[17,8],[],[]],"attribute":["Method Declaration ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name shouldOmit ","Parameter Object val ","Block Stmt ","Return Stmt ","Name Expr val ","Simple Name val ","Method Call Expr ","ReturnStmt","Method Call Expr ","Enclosed Expr ","EQUALS","Integer Literal Expr Zero  ","Cast Expr ","Class Or Interface Type Float ","Zero IntegerLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue.ZeroFloat-","callMethodNameReferTo":{},"num":10,"succs":[[1,4,5,3,2],[],[],[4],[],[6],[0,7,8],[],[9],[]],"attribute":["If Stmt ","Return Stmt ","PUBLIC","Class Or Interface Type String ","Simple Name code ","Block Stmt ","Return Stmt ","ReturnStmt","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue.ZeroDouble-Object","callMethodNameReferTo":{},"num":19,"succs":[[5,4,1,3,6,2],[],[],[4],[],[9,10],[7],[12,0,11],[9],[],[],[],[14,15,13],[16],[],[18],[17,8],[],[]],"attribute":["Method Declaration ","Field Access Expr ","PUBLIC","Primitive Type boolean ","Name Expr jacksonObj ","Parameter Object val ","Block Stmt ","Expression Stmt ","Name Expr val ","Simple Name val ","Class Or Interface Type Object ","ReturnStmt","Binary Expr EQUALS ","Enclosed Expr ","EQUALS","Integer Literal Expr Zero  ","Cast Expr ","Class Or Interface Type Double ","Zero IntegerLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue.ZeroDouble-","callMethodNameReferTo":{},"num":10,"succs":[[4,3,5,1,2],[],[],[4],[],[6],[8,0,7],[],[9],[]],"attribute":["Method Declaration ","Field Access Expr ","PUBLIC","Class Or Interface Type String ","Simple Name code ","Block Stmt ","Return Stmt ","ReturnStmt","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue.ZeroChar-Object","callMethodNameReferTo":{},"num":18,"succs":[[3,1,5,4,2,6],[],[],[4],[],[9,10],[7],[12,0,11],[9],[],[],[],[14,13,15],[16,8],[],[17],[],[]],"attribute":["Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name shouldOmit ","Parameter Object val ","Block Stmt ","Assign Expr ASSIGN ","Name Expr val ","Simple Name val ","Class Or Interface Type Object ","ReturnStmt","Binary Expr EQUALS ","Cast Expr ","EQUALS","Integer Literal Expr Zero  ","Class Or Interface Type Character ","Zero IntegerLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue.ZeroChar-","callMethodNameReferTo":{},"num":10,"succs":[[4,3,1,5,2],[],[],[4],[],[6],[8,0,7],[],[9],[]],"attribute":["Method Declaration ","Field Access Expr ","PUBLIC","Class Or Interface Type String ","Null Literal Expr ","Block Stmt ","Return Stmt ","ReturnStmt","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue.False-Object","callMethodNameReferTo":{},"num":17,"succs":[[6,5,4,1,3,2],[],[],[4],[],[10,9],[7],[0,12,11],[9],[],[],[],[13,14],[15],[],[8,16],[]],"attribute":["For Each Stmt ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name shouldOmit ","Parameter Object val ","Block Stmt ","Return Stmt ","Name Expr val ","Name Expr idx ","Class Or Interface Type Object ","ReturnStmt","Unary Expr ! ","Enclosed Expr ","LOGICAL_COMPLEMENT","Cast Expr ","Class Or Interface Type Boolean "]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue.False-","callMethodNameReferTo":{},"num":10,"succs":[[1,5,4,3,2],[],[],[4],[],[6],[8,0,7],[],[9],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name code ","Block Stmt ","Return Stmt ","ReturnStmt","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"parse-OmitValue.Parsed-Type-String","callMethodNameReferTo":{},"num":428,"succs":[[137,3,1],[138,97,3,139,2],[142,72,141],[6,144,4],[146,5,6,145,99],[147,72,141],[7,10,149],[10,150,151,8,80],[153,9],[161,72,141],[14,166,11],[167,14,168,12,82],[170,13],[178,72,141],[18,182,15],[16,183,18,184,83],[17,186],[194,72,141],[22,19,198],[20,22,200,84,199],[202,21],[72,141,210],[214,26,23],[215,216,85,26,24],[218,25],[72,141,226],[230,27,30],[232,28,30,231,86],[234,29],[242,72,141],[31,34,246],[247,248,87,32,34],[33,250],[258,72,141],[35,38,262],[88,36,263,38,264],[37,266],[274,72,141],[278,42,39],[89,279,42,40,280],[282,41],[290,72,141],[46,43,294],[90,295,296,46,44],[45,298],[72,141,306],[50,310,47],[50,48,312,91,311],[49,314],[322,72,141],[54,51,326],[327,54,52,328,92],[330,53],[72,338,141],[58,55,342],[58,344,56,93,343],[346,57],[72,141,354],[62,59,358],[60,62,359,94,360],[362,61],[370,72,141],[66,374,63],[66,375,376,64,377],[65,386],[395,72,141],[70,401,67],[402,68,70,376,403],[410,69],[418,72,141],[71],[424],[77,75,76,74,78,79,73],[74],[],[76],[],[135,81],[136,98],[0],[81],[],[7,80,81],[7,82,11,81],[7,83,11,15,81],[7,19,84,11,81,15],[7,19,85,11,23,81,15],[7,19,27,11,23,81,15,86],[31,7,19,87,27,11,23,81,15],[31,7,88,19,27,35,11,23,15,81],[31,7,89,19,27,35,11,39,23,15,81],[90,31,43,7,19,27,35,11,23,39,15,81],[43,35,11,81,15,31,7,19,47,91,27,23,39],[43,51,35,11,81,92,15,31,7,19,47,27,23,39],[43,51,35,93,11,81,15,31,7,55,19,47,27,23,39],[43,51,35,11,15,81,31,7,55,19,47,59,27,94,39,23],[90,35,95,92,15,31,47,27,83,59,94,39,43,89,51,85,84,93,11,86,80,81,7,55,88,19,87,91,82,23,63],[98],[],[98,97,1],[98,99,1,4],[98,100,1,4],[98,99,1,4],[98,4,102,1],[98,99,1,4],[104,98,1,4],[98,99,4,1],[98,4,106,1],[98,99,1,4],[98,108,1,4],[98,99,4,1],[110,98,1,4],[98,99,1,4],[98,1,4,112],[98,99,4,1],[114,98,1,4],[98,99,1,4],[116,98,4,1],[98,99,4,1],[98,118,1,4],[98,99,1,4],[120,98,4,1],[98,99,1,4],[122,98,1,4],[98,99,1,4],[124,98,4,1],[98,99,1,4],[126,98,1,4],[98,99,4,1],[98,128,63,1,4],[129,98,63,1,4],[98,128,63,1,4],[98,63,67,131,4,1],[132,98,63,67,1,4],[119,101,103,133,98,97,111,127,123,105,113,4,115,117,109,130,125,99,63,67,107,121,131,1],[],[],[2],[140],[],[],[],[143],[],[5],[140],[],[148],[],[9,8],[152],[],[],[156],[100],[154],[158,157,154],[154],[159,160,100],[],[],[155,162,163],[],[101,164,165],[],[140],[12,13],[169],[],[],[173],[102],[171],[171,175,174],[171],[176,177,102],[],[],[172,179,180],[],[181,103,164],[140],[17,16],[185],[],[],[189],[104],[187],[191,190,187],[187],[193,104,192],[],[],[195,188,196],[],[164,105,197],[140],[20,21],[201],[],[],[205],[106],[203],[203,207,206],[203],[208,209,106],[],[],[211,212,204],[],[213,164,107],[140],[25,24],[217],[],[],[221],[108],[219],[222,219,223],[219],[224,225,108],[],[],[220,228,227],[],[229,109,164],[140],[28,29],[233],[],[],[237],[110],[235],[235,238,239],[235],[240,110,241],[],[],[236,244,243],[],[245,164,111],[140],[32,33],[249],[],[],[253],[112],[251],[251,254,255],[251],[256,257,112],[],[],[252,260,259],[],[261,164,113],[140],[36,37],[265],[],[],[269],[114],[267],[271,270,267],[267],[273,114,272],[],[],[275,276,268],[],[115,164,277],[140],[41,40],[281],[],[],[285],[116],[283],[286,287,283],[283],[116,289,288],[],[],[284,291,292],[],[293,117,164],[140],[45,44],[297],[],[],[301],[118],[299],[299,303,302],[299],[304,305,118],[],[],[300,308,307],[],[119,164,309],[140],[49,48],[313],[],[],[317],[120],[315],[315,318,319],[315],[321,320,120],[],[],[323,324,316],[],[325,164,121],[140],[52,53],[329],[],[],[333],[122],[331],[334,335,331],[331],[336,122,337],[],[],[332,339,340],[],[164,341,123],[140],[57,56],[345],[],[],[349],[124],[347],[351,347,350],[347],[124,352,353],[],[],[355,356,348],[],[125,357,164],[140],[60,61],[361],[],[],[365],[126],[363],[363,366,367],[363],[126,368,369],[],[],[371,372,364],[],[373,164,127],[140],[65,64],[379,95,378],[],[382,383,381],[380],[],[],[384,128],[],[385],[],[],[389],[129],[387],[387,391,390],[387],[129,393,392],[],[394],[],[388,397,396],[],[398,399,164],[400,130,164],[140],[140],[68,69],[404,405,96],[408,382,407],[406],[],[],[409,131],[385],[],[413],[132],[411],[414,415,411],[411],[416,132,417],[],[394],[419,420,412],[],[421,164,422],[133,423,164],[140],[140],[425,426],[],[427,164,134],[140]],"attribute":["If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Return Stmt ","Block Stmt ","Throw Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type OmitValue ","Simple Name parse ","Parameter Type valueType ","Parameter String defaultValueToOmit ","Block Stmt ","Name Expr valueType ","Simple Name nextToken ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Simple Name fieldType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr defaultValueToOmit ","Simple Name defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Class Or Interface Type Type ","Class Or Interface Type String ","Block Stmt ","String Literal Expr Not Empty  ","Simple Name equals ","StringLiteralExpr","ReturnStmt","Name Expr data ","NullLiteralExpr","Block Stmt ","String Literal Expr Not Empty  ","Simple Name equals ","Object Creation Expr OmitValue.Null Optional.empty Optional.empty ","Class Or Interface Type Null ","Block Stmt ","Class Expr boolean.class ","Simple Name format ","Primitive Type boolean ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Boolean defaultValue = ","Class Or Interface Type Boolean ","Method Call Expr ","Name Expr Boolean ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Boolean.class ","Simple Name equals ","Name Expr element ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Boolean defaultValue = ","Name Expr binding ","Method Call Expr ","Name Expr Boolean ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr int.class ","Simple Name equals ","Primitive Type int ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Integer defaultValue = ","Simple Name element ","Method Call Expr ","Name Expr Integer ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Array Access Expr (int) q2 ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Integer.class ","Simple Name equals ","Class Or Interface Type Integer ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Integer defaultValue = ","Class Or Interface Type Integer ","Method Call Expr ","Name Expr Integer ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr byte.class ","Simple Name equals ","Primitive Type byte ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Byte defaultValue = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name bits ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Byte.class ","Simple Name equals ","Class Or Interface Type Byte ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Byte defaultValue = ","Class Or Interface Type Byte ","Method Call Expr ","This Expr ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr short.class ","Simple Name equals ","Primitive Type short ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Short defaultValue = ","Class Or Interface Type Short ","Method Call Expr ","Name Expr Short ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Short.class ","Simple Name equals ","Class Or Interface Type Short ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Short defaultValue = ","Name Expr cache ","Method Call Expr ","Name Expr Short ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr long.class ","Simple Name equals ","Primitive Type long ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Long defaultValue = ","Class Or Interface Type Long ","Method Call Expr ","Name Expr Long ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Long.class ","Simple Name equals ","Class Or Interface Type Long ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Long defaultValue = ","Class Or Interface Type Long ","Method Call Expr ","Name Expr Long ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr float.class ","Simple Name equals ","Primitive Type float ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Float defaultValue = ","Name Expr cache ","Method Call Expr ","Name Expr Float ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Array Creation Expr Type Array Creation Level Not Empty Array Initializer Expr ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Float.class ","Simple Name equals ","Class Or Interface Type Float ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Float defaultValue = ","Name Expr cache ","Method Call Expr ","Name Expr Float ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr double.class ","Simple Name equals ","Primitive Type double ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Double defaultValue = ","Class Or Interface Type Double ","Method Call Expr ","Name Expr Double ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Double.class ","Simple Name equals ","Class Or Interface Type Double ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Double defaultValue = ","Expression Stmt ","Method Call Expr ","Name Expr Double ","Simple Name valueOf ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Method Call Expr ","AND","Binary Expr EQUALS ","Class Expr char.class ","Simple Name equals ","Primitive Type char ","Method Call Expr ","EQUALS","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Character defaultValue = ","Class Or Interface Type Character ","Method Call Expr ","Simple Name charAt ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Method Call Expr ","Binary Expr EQUALS ","Class Expr Character.class ","Simple Name equals ","Class Or Interface Type Character ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","Variable Declaration Expr ","Simple Name defaultValue ","Name Expr defaultValue ","Variable Declarator Character defaultValue = ","Class Or Interface Type Character ","Method Call Expr ","Simple Name charAt ","Integer Literal Expr Zero  ","Object Creation Expr OmitValue.Parsed Optional.empty Optional.empty ","Class Or Interface Type Parsed ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Object Creation Expr UnsupportedOperationException Optional.empty Optional.empty ","Class Or Interface Type UnsupportedOperationException ","Binary Expr PLUS ","String Literal Expr Not Empty  "]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"shouldOmit-OmitValue.Parsed-Object","callMethodNameReferTo":{},"num":15,"succs":[[4,1,3,6,2,5],[],[],[4],[],[9,10],[7],[0,12,11],[9],[],[],[],[8,13,14],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name shouldOmit ","Parameter Object val ","Block Stmt ","Return Stmt ","Name Expr val ","Simple Name val ","Class Or Interface Type Object ","ReturnStmt","Method Call Expr ","Name Expr defaultValue ","Simple Name equals "]}
{"fileName":"src/main/java/com/jsoniter/spi/OmitValue.java","version":"0.9.23","methodName":"code-OmitValue.Parsed-","callMethodNameReferTo":{},"num":9,"succs":[[3,4,5,1,2],[],[],[4],[],[6],[8,0,7],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name code ","Block Stmt ","Return Stmt ","ReturnStmt","Void Type "]}
