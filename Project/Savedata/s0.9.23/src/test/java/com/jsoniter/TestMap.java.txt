{"fileName":"src/test/java/com/jsoniter/TestMap.java","version":"0.9.23","hasMethodName":["test_object_key-TestMap-","test_string_key-TestMap-","test_integer_key-TestMap-","test_enum_key-TestMap-","test_MapKeyCodec-TestMap-"]}
{"fileName":"src/test/java/com/jsoniter/TestMap.java","version":"0.9.23","methodName":"test_object_key-TestMap-","callMethodNameReferTo":{},"num":33,"succs":[[1,10],[22],[9,5,4,7,6,3],[],[5],[],[8],[],[],[0,1],[13],[12],[],[15,14,12],[12],[18,16,19,17],[],[],[20],[21],[],[],[24,11,23],[],[25],[],[],[28],[29,30,31],[],[20],[32],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Assign Expr ASSIGN ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name len ","Simple Name map ","Variable Declarator Map<Object, Object> map = ","Class Or Interface Type Map ","Method Call Expr ","Name Expr JsonIterator ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<Object, Object>> Optional.empty Optional.empty ","StringLiteralExpr","Class Or Interface Type TypeLiteral ","Method Call Expr ","Class Or Interface Type JsonIterator ","Object Creation Expr HashMap<Object, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Initializer Declaration ","Expression Stmt ","Return Stmt ","Simple Name put ","Name Expr hash ","Name Expr iter ","NullLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/TestMap.java","version":"0.9.23","methodName":"test_string_key-TestMap-","callMethodNameReferTo":{},"num":33,"succs":[[1,10],[22],[9,5,7,6,4,3],[],[5],[],[8],[],[],[1,0],[13],[12],[],[12,14,15],[12],[17,18,19,16],[],[],[20],[21],[],[],[11,23,24],[],[25],[],[],[28],[30,31,29],[],[20],[32],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_string_key ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name any ","Simple Name map ","Variable Declarator Map<String, Object> map = ","Field Access Expr ","Method Call Expr ","Class Or Interface Type WildcardType ","Simple Name deserialize ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<String, Object>> Optional.empty Optional.empty ","StringLiteralExpr","Class Or Interface Type TypeLiteral ","Method Call Expr ","Return Stmt ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Method Call Expr ","Initializer Declaration ","Expression Stmt ","Unary Expr ! ","Simple Name any ","String Literal Expr Not Empty  ","Simple Name code ","NullLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/TestMap.java","version":"0.9.23","methodName":"test_integer_key-TestMap-","callMethodNameReferTo":{},"num":34,"succs":[[1,10],[22],[9,7,4,5,6,3],[],[5],[],[8],[],[],[1,0],[13],[12],[],[15,14,12],[12],[17,19,16,18],[],[],[20],[21],[],[],[11,24,23],[],[25],[],[],[28],[29,30,31],[],[32],[33],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_one_element ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name len ","Simple Name any ","Variable Declarator Map<Integer, Object> map = ","Method Call Expr ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<Integer, Object>> Optional.empty Optional.empty ","StringLiteralExpr","Class Or Interface Type TypeLiteral ","Method Call Expr ","Simple Name assertEquals ","Object Creation Expr HashMap<Integer, Object> Optional.empty Optional.empty ","Method Call Expr ","Initializer Declaration ","Return Stmt ","Method Call Expr ","Simple Name map ","Integer Literal Expr Note Zero  ","Simple Name iter ","IntegerLiteralExpr","NullLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/TestMap.java","version":"0.9.23","methodName":"test_enum_key-TestMap-","callMethodNameReferTo":{},"num":32,"succs":[[7,1],[19],[6,4,5,3],[],[5],[],[0,1],[10],[9],[],[11,9,12],[9],[16,13,14,15],[],[],[17],[18],[],[],[20,21,8],[],[22],[],[],[25],[27,26,28],[],[29,30],[31],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_enum_key ","Block Stmt ","Variable Declaration Expr ","Name Expr ctx ","Char Literal Expr '*' ","Variable Declarator Map<EnumKey, Object> map = ","Class Or Interface Type Map ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<EnumKey, Object>> Optional.empty Optional.empty ","StringLiteralExpr","Class Or Interface Type TypeLiteral ","Method Call Expr ","Simple Name assertEquals ","Object Creation Expr HashMap<EnumKey, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Initializer Declaration ","Expression Stmt ","Method Call Expr ","Primitive Type int ","Simple Name encodeDouble ","Name Expr desc ","Name Expr EnumKey ","Simple Name KeyA ","NullLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/TestMap.java","version":"0.9.23","methodName":"test_MapKeyCodec-TestMap-","callMethodNameReferTo":{},"num":125,"succs":[[1,15],[2,54],[68,3],[81,4],[5,87],[6,96],[107,7],[8,112],[117],[13,11,12,10],[],[12],[],[8,6,0,1,5,3,2,4,7],[22,9,39,53],[19,16,18,17],[],[],[20],[21],[],[],[23,25,30,27,26,24,10,28],[],[25],[],[33,32],[29],[],[],[14,34,35],[32],[],[],[36],[44],[40],[38,31],[],[37],[41,38,42],[38],[43],[],[45,46,47],[37,48],[],[51,50,49],[],[],[],[31,52],[],[],[59],[56],[],[55,56],[57],[60,61,56],[56],[64,62,63,65],[],[],[66],[67],[],[],[75],[55],[69],[69,70],[69,58,71],[72],[73,72],[69,77,76],[69],[78,79],[],[80,55],[],[82,83,84],[],[85],[70,86],[],[],[89,88,90],[],[85],[92,91],[93,71,94],[],[],[95],[],[57,46,97],[101,99,102,98,100],[],[],[104,103],[66],[106],[105],[],[],[],[108,46,72],[109,110],[],[58,111],[],[114,115,113],[],[85],[73,116],[],[120,119,118],[],[85],[121,122],[74,124,123],[],[],[95]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Call Expr ","Expression Stmt ","Method Call Expr ","Variable Declaration Expr [FINAL] ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_integer_key ","Block Stmt ","Return Stmt ","Method Call Expr ","Simple Name assertFalse ","Simple Name registerMapKeyDecoder ","Class Expr TestObject1.class ","Object Creation Expr Decoder Optional.empty Optional.empty ","Class Or Interface Type TestObject1 ","Class Or Interface Type Decoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Name Expr field1 ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Name Expr baos ","Class Or Interface Type JsonIterator ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name map ","Name Expr obj ","Variable Declarator TestObject1 obj = ","Method Call Expr ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Class Or Interface Type TestObject1 ","Assign Expr ASSIGN ","Simple Name test_utf8 ","ASSIGN","Method Call Expr ","Simple Name Field ","Name Expr Integer ","Simple Name valueOf ","Method Call Expr ","Simple Name readString ","ReturnStmt","Variable Declaration Expr ","Name Expr map ","String Literal Expr Not Empty  ","Name Expr ctx ","Name Expr map ","Variable Declarator Map<TestObject1, Object> map = ","Class Or Interface Type Map ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<TestObject1, Object>> Optional.empty Optional.empty ","StringLiteralExpr","Class Or Interface Type TypeLiteral ","Expression Stmt ","Simple Name keys ","Name Expr keys ","Name Expr iter ","Primitive Type byte ","Expression Stmt ","Name Expr keys ","Variable Declarator ArrayList<TestObject1> keys = ","Variable Declaration Expr ","Object Creation Expr ArrayList<TestObject1> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name keySet ","Method Call Expr ","Array Access Expr count++ ","Integer Literal Expr Note Zero  ","Class Or Interface Type GsonBuilder ","IntegerLiteralExpr","Simple Name size ","Expression Stmt ","Array Access Expr count++ ","Integer Literal Expr Note Zero  ","Object Creation Expr TestObject4 Optional.empty Optional.empty ","Name Expr TypeLiteral ","Simple Name input ","Simple Name get ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","Method Call Expr ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<TestObject1, Object>> Optional.empty Optional.empty ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Variable Declarator False objectUnderTest = ","Class Or Interface Type TypeLiteral ","Assign Expr ASSIGN ","Object Creation Expr ArrayList<TestObject1> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name keySet ","Method Call Expr ","Array Access Expr count++ ","Simple Name a ","Method Call Expr ","Simple Name size ","Expression Stmt ","Array Access Expr count++ ","Name Expr str ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Method Call Expr ","Simple Name Field ","Simple Name get ","Integer Literal Expr Zero  "]}
