{"fileName":"TestNested.java","Version":"0.9.22","callMethodName":["setUp","test_array_of_objects","test_collection_of_objects","test_object_of_array","test_map_of_objects","test_recursive_class"]}
{"Version":"0.9.22","MethodName":"TestNested_setUp","callMethodNameReferTo":{},"num":19,"succs":[[1,7],[12],[4,5,3,6],[],[5],[],[1,0],[10,8,9],[],[],[11],[],[13,14,9],[],[17,16,15],[],[],[18],[]],"nodeAttribute":["Assign Expr ASSIGN ","Method Call Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name setUp ","Block Stmt ","Expression Stmt ","Class Or Interface Type Gson ","ASSIGN","Object Creation Expr ByteArrayOutputStream Optional.empty Optional.empty ","Class Or Interface Type ByteArrayOutputStream ","Variable Declaration Expr ","Simple Name append ","Object Creation Expr JsonStream Optional.empty Optional.empty ","Name Expr JsonStream ","Name Expr baos ","Name Expr iter ","IntegerLiteralExpr"]}
{"Version":"0.9.22","MethodName":"TestNested_test_array_of_objects","callMethodNameReferTo":{"39":"JsonStream.java_JsonStream_outer_serialize"},"num":56,"succs":[[1,14],[2,23],[29,3],[33,4],[5,46],[51],[9,7,13,11,10,8],[],[9],[],[12],[],[],[1,2,0,4,3,5],[19],[16],[],[15],[17],[16,20,21],[16],[22],[],[24,25,26],[27,15],[],[28],[],[],[31,30,25],[17,32],[28],[],[37],[18],[34],[35,34],[34,38,39],[34],[42,40,41],[],[],[45,44,43],[],[],[18],[47,48],[],[35,49,50],[],[28],[52,53],[],[36,54,55],[],[28]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_array_of_objects ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr desc ","Simple Name obj1 ","Name Expr type ","Name Expr obj1 ","Variable Declarator TestObject1 obj1 = ","Return Stmt ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Class Or Interface Type TestObject1 ","Return Stmt ","Class Or Interface Type TestObject6 ","ASSIGN","String Literal Expr Not Empty  ","Simple Name field1 ","StringLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","String Literal Expr Not Empty  ","Simple Name fields ","Method Call Expr ","Simple Name output ","Name Expr output ","Name Expr output ","Variable Declarator String output = ","Simple Name append ","Method Call Expr ","Name Expr JsonStream ","Simple Name decodeInt ","Array Creation Expr TestObject1 Array Creation Level Not Empty Array Initializer Expr ","Class Or Interface Type TestObject1 ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Name Expr JsonStream ","Method Call Expr ","Simple Name contains ","String Literal Expr Not Empty  ","Expression Stmt ","Name Expr JsonStream ","Method Call Expr ","Simple Name contains ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"TestNested_test_collection_of_objects","callMethodNameReferTo":{},"num":61,"succs":[[14,1],[24,2],[30,3],[34,4],[5,51],[56],[13,7,9,10,11,8],[],[9],[],[12],[],[],[4,1,5,2,0,3],[20,19],[16],[],[15],[17],[],[21,16,22],[16],[23],[],[25,27,26],[28,15],[],[29],[],[],[32,31,26],[17,33],[29],[],[38],[18],[35],[36,35],[40,39,35],[35],[44,42,41,43],[],[],[45],[46],[],[],[],[49],[50,18],[],[53,52],[],[36,55,54],[],[29],[57,58],[],[60,59,37],[],[29]],"nodeAttribute":["Expression Stmt ","Class Or Interface Type ArrayList ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_collection_of_objects ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr [FINAL] ","Name Expr obj1 ","Simple Name obj1 ","Class Or Interface Type List ","Name Expr obj1 ","FINAL","Variable Declarator TestObject1 obj1 = ","Class Or Interface Type TestObject1 ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Class Or Interface Type TestObject1 ","Class Or Interface Type InputStreamReader ","Return Stmt ","ASSIGN","Name Expr arr ","Simple Name field1 ","StringLiteralExpr","Assign Expr ASSIGN ","Method Call Expr ","Name Expr arr ","Simple Name field2 ","Variable Declaration Expr ","Simple Name output ","Name Expr output ","Class Or Interface Type Object ","Variable Declarator String output = ","Simple Name append ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TypeLiteral<List<TestObject1>> Optional.empty Optional.empty ","Object Creation Expr ArrayList Optional.empty Optional.empty ","Class Or Interface Type TypeLiteral ","Field Access Expr ","Initializer Declaration ","Switch Entry Stmt ","Field Access Expr ","Name Expr ctx ","Method Call Expr ","Name Expr JsonStream ","Method Call Expr ","Simple Name toString ","String Literal Expr Not Empty  ","Expression Stmt ","Name Expr JsonStream ","Method Call Expr ","Simple Name contains ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"TestNested_test_object_of_array","callMethodNameReferTo":{},"num":121,"succs":[[22,1],[25,2,23,3,24],[3,32,14],[33,4],[39,38,5],[6,40],[7,51],[59,8],[9,67],[76,10],[84,11],[87,12],[90,13],[117],[21,15,19,18,16,17],[],[17],[],[20],[],[],[0,3,4],[2],[26,27],[],[30,31],[29,28],[],[],[],[],[],[],[35,34,36],[],[],[37],[],[7,8,9,10,11,5,6,12],[13],[47],[42],[],[41],[43],[44],[45],[48,42,49],[42],[50],[],[52,54,53],[41,55],[],[56,57],[],[],[],[37],[60,53,61],[62,63],[66],[43,64],[65],[],[],[],[69,68,53],[70,71],[75],[73,72],[],[44,74],[65],[],[],[77,53,78],[80,79],[75],[82,81],[],[45,83],[65],[],[46,86,85],[],[],[88,89],[],[],[92,93,91],[],[94,95,96],[116,115],[98,97,95],[],[110,111,109,112],[95,99,100],[75],[102,101,95],[75],[104,103,95],[75],[106,95,105],[75],[107,95,108],[75],[75],[75],[75],[],[113],[114],[],[],[],[],[119,118,120],[],[],[65]],"nodeAttribute":["If Stmt ","Binary Expr NOT_EQUALS ","Class Or Interface Type Integer ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_object_of_array ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Block Stmt ","Method Call Expr ","NOT_EQUALS","Field Access Expr ","Expression Stmt ","Simple Name encodingMode ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr EncodingMode ","Simple Name REFLECTION_MODE ","ReturnStmt","Expression Stmt ","Expression Stmt ","Simple Name setIndentionStep ","Name Expr e ","IntegerLiteralExpr","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Name Expr map ","Name Expr obj ","Name Expr idx ","Char Literal Expr 'n' ","Name Expr obj ","Variable Declarator TestObject2 obj = ","Class Or Interface Type TestObject2 ","Object Creation Expr TestObject2 Optional.empty Optional.empty ","Class Or Interface Type TestObject2 ","Assign Expr ASSIGN ","Binary Expr EQUALS ","ASSIGN","Array Creation Expr TestObject1 Array Creation Level Not Empty ","Simple Name objs ","Class Or Interface Type TestObject1 ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Name Expr JsoniterSpi ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Class Or Interface Type Class ","Integer Literal Expr Zero  ","Simple Name objs ","Zero IntegerLiteralExpr","Class Or Interface Type TestObject1 ","Assign Expr ASSIGN ","Binary Expr EQUALS ","String Literal Expr Not Empty  ","Return Stmt ","Simple Name length ","Name Expr epilogue ","Integer Literal Expr Zero  ","Simple Name objs ","StringLiteralExpr","Assign Expr ASSIGN ","Method Call Expr ","String Literal Expr Not Empty  ","Binary Expr EQUALS ","Primitive Type double ","Binary Expr EQUALS ","Integer Literal Expr Zero  ","Simple Name objs ","Method Call Expr ","Name Expr stream ","Name Expr IterImpl ","Method Call Expr ","Name Expr stream ","Simple Name close ","Method Call Expr ","Return Stmt ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","PLUS","Method Call Expr ","Binary Expr PLUS ","Name Expr decoder ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","'\\''","'\"'","Name Expr baos ","Simple Name toString ","Method Call Expr ","Simple Name encodeLong ","Simple Name setIndentionStep ","Integer Literal Expr Zero  "]}
{"Version":"0.9.22","MethodName":"TestNested_test_map_of_objects","callMethodNameReferTo":{"96":"JsonStream.java_JsonStream_outer_setIndentionStep","31":"JsonStream.java_JsonStream_outer_setIndentionStep"},"num":101,"succs":[[1,20],[21,2,3,22,23],[3,12,30],[31,4],[37,36,5],[6,38],[48,7],[8,54],[9,58],[70,10],[73,11],[96],[14,13,17,19,16,15],[],[15],[],[18],[],[],[0,3,4],[2],[25,24],[],[28,29],[27,26],[],[],[],[],[],[],[34,32,33],[],[],[35],[],[9,10,5,8,6,7],[11],[44,43],[40],[],[39],[41],[],[45,46,40],[40],[47],[],[49,50,51],[52,39],[],[53],[],[],[56,55,50],[57,41],[53],[],[62,61,60,59],[],[],[63],[64],[],[],[],[67],[69,68,42],[],[53],[71,72],[],[],[74,75,76],[],[79,78,77],[94,95],[81,80,78],[],[88,91,90,89],[82,83,78],[53],[85,78,84],[53],[86,87,78],[53],[53],[53],[53],[],[92],[93],[],[],[],[],[99,98,97],[],[],[100],[]],"nodeAttribute":["If Stmt ","Binary Expr NOT_EQUALS ","Name Expr binding ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_map_of_objects ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Block Stmt ","Method Call Expr ","NOT_EQUALS","Field Access Expr ","Expression Stmt ","Simple Name encodingMode ","Binary Expr EQUALS ","Simple Name getCurrentConfig ","Name Expr EncodingMode ","Simple Name REFLECTION_MODE ","ReturnStmt","Method Call Expr ","Name Expr JsonStream ","Method Call Expr ","Name Expr e ","IntegerLiteralExpr","Block Stmt ","Block Stmt ","Expression Stmt ","Name Expr iter ","Simple Name obj1 ","Name Expr type ","Name Expr obj1 ","FINAL","Variable Declarator TestObject1 obj1 = ","Class Or Interface Type TestObject1 ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Class Or Interface Type TestObject1 ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Name Expr pos ","Simple Name field1 ","StringLiteralExpr","Return Stmt ","Field Access Expr ","Name Expr pos ","Simple Name field2 ","Method Call Expr ","Name Expr stream ","Name Expr IterImpl ","Object Creation Expr TypeLiteral<Map<String, TestObject1>> Optional.empty Optional.empty ","Object Creation Expr HashMap Optional.empty Optional.empty ","Class Or Interface Type TypeLiteral ","Class Or Interface Type HashMap ","Initializer Declaration ","Expression Stmt ","Method Call Expr ","Simple Name put ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name ensure ","Simple Name close ","Method Call Expr ","Return Stmt ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","PLUS","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Simple Name idx ","'\\''","'\"'","Boolean Literal Expr true ","Simple Name toString ","Method Call Expr ","Name Expr JsonStream ","Simple Name setIndentionStep ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr"]}
{"Version":"0.9.22","MethodName":"TestNested_test_recursive_class","callMethodNameReferTo":{"17":"JsonStream.java_JsonStream_outer_serialize"},"num":21,"succs":[[1,7],[14],[5,4,3,6],[],[5],[],[0,1],[10],[9],[],[9,11,12],[9],[13],[],[15,16,17],[],[18],[8,20,19],[],[],[]],"nodeAttribute":["Method Call Expr ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_recursive_class ","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Variable Declarator TestObject3 obj = ","Name Expr JsoniterSpi ","Object Creation Expr TestObject3 Optional.empty Optional.empty ","Class Or Interface Type TestObject3 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize "]}
{"fileName":"TestNested.java","Version":"0.9.22","callMethodName":["test_array_of_objects","test_get_all_array_elements_via_any","skip_get_all_object_values_via_any","test_get_all_with_some_invalid_path","test_recursive_class"]}
{"Version":"0.9.22","MethodName":"TestNested_test_array_of_objects","callMethodNameReferTo":{"22":"JsonIterator.java_JsonIterator_outer_parse"},"num":91,"succs":[[1,14],[2,33],[3,42],[72,4],[76,5],[83],[11,8,13,7,10,9],[],[9],[],[12],[],[],[2,0,1,3,4,5],[20],[16],[],[16,15],[16,17],[18,16],[16,21,22],[16],[24,23,25],[],[],[28,29,27,26],[30],[],[31],[32],[],[],[],[36],[15],[34],[38,37,34],[34],[39,15,40],[],[41],[],[35,45,43,44],[],[],[47,46,48],[],[],[49,50],[51],[62],[],[],[54],[57,56,55],[],[],[30],[59],[60,61,56],[],[30],[],[],[65],[67,66,56],[],[30],[69],[71,70,56],[],[30],[73,74,17],[],[18,75],[],[79],[19],[77],[80,77,81],[77],[82,19],[],[86,85,84],[],[30],[89,78,88,87],[],[90],[30],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_array_of_objects ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Simple Name that ","Name Expr iter ","Void Type ","Void Type ","Variable Declarator JsonIterator iter = ","Class Or Interface Type SimpleObject ","Method Call Expr ","Name Expr JsonIterator ","Simple Name chars ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","StringLiteralExpr","'\\''","'\"'","Expression Stmt ","Simple Name objects ","Class Or Interface Type Decoder ","Variable Declarator SimpleObject[] objects = ","Simple Name setContentView ","Method Call Expr ","Simple Name read ","Class Expr SimpleObject[].class ","Array Type 1 ","Method Call Expr ","Simple Name append ","Simple Name assertArrayEquals ","Array Creation Expr SimpleObject Array Creation Level Not Empty Array Initializer Expr ","Class Or Interface Type SimpleObject ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Object Creation Expr SimpleObject Optional.empty Optional.empty ","Object Creation Expr SimpleObject Optional.empty Optional.empty ","Class Or Interface Type SimpleObject ","Initializer Declaration ","Expression Stmt ","Assign Expr ASSIGN ","Name Expr field1 ","ASSIGN","Simple Name data ","Expression Stmt ","Assign Expr ASSIGN ","Class Or Interface Type String ","String Literal Expr Not Empty  ","Class Or Interface Type SimpleObject ","Initializer Declaration ","Expression Stmt ","Assign Expr ASSIGN ","Class Or Interface Type Object ","Name Expr iter ","Expression Stmt ","Return Stmt ","Name Expr field2 ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name reset ","Simple Name writeRaw ","Name Expr any ","Return Stmt ","Simple Name len ","Name Expr any ","Variable Declarator Any any = ","Name Expr ctx ","Method Call Expr ","Simple Name println ","Method Call Expr ","Return Stmt ","Name Expr iter ","Method Call Expr ","Simple Name toString ","Integer Literal Expr Note Zero  ","String Literal Expr Not Empty  ","IntegerLiteralExpr"]}
{"Version":"0.9.22","MethodName":"TestNested_test_get_all_array_elements_via_any","callMethodNameReferTo":{"22":"JsonIterator.java_JsonIterator_outer_deserialize","46":"Any.java_Any_outer_rewrap"},"num":61,"succs":[[14,1],[2,27],[3,39],[4,44],[51,5],[56],[8,7,13,10,11,9],[],[9],[],[12],[],[],[2,3,5,4,0,1],[20],[16],[],[16,18],[15,16],[17],[21,16,22],[16],[24,23,25],[],[],[26],[],[32],[15],[28],[28,29,19],[30],[28,33,34],[28],[35,15,36,37],[],[38],[26],[],[40,41,42],[],[26],[29,43],[],[17,45,46],[],[48,47,49],[],[],[18,50],[],[52,30,45],[53,55,54,19],[],[38],[26],[58,59,57],[],[26],[60,31],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_get_all_array_elements_via_any ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr any ","Name Expr ctx ","Class Or Interface Type Any ","Name Expr any ","Char Literal Expr '8' ","Variable Declarator Any any = ","Name Expr val ","Method Call Expr ","Name Expr JsonIterator ","Simple Name reportError ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Name Expr stream ","Name Expr number ","Simple Name append ","Class Or Interface Type String ","Assign Expr ASSIGN ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Name Expr obj ","String Literal Expr Not Empty  ","'*'","Expression Stmt ","Return Stmt ","Simple Name valueType ","Method Call Expr ","Simple Name toString ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Name Expr Any ","Simple Name object ","String Literal Expr Not Empty  ","Simple Name asList ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name get ","Char Literal Expr '*' ","Simple Name pType ","Method Call Expr ","Field Access Expr ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name cacheKey "]}
{"Version":"0.9.22","MethodName":"TestNested_skip_get_all_object_values_via_any","callMethodNameReferTo":{"22":"JsonIterator.java_JsonIterator_outer_deserialize","47":"Any.java_Any_outer_rewrap"},"num":62,"succs":[[14,1],[27,2],[40,3],[45,4],[5,52],[57],[13,8,7,10,11,9],[],[9],[],[12],[],[],[5,2,0,3,1,4],[20],[16],[],[16,18],[15,16],[17],[16,21,22],[16],[24,25,23],[],[],[26],[],[32],[15],[28],[19,29,28],[30],[34,33,28],[28],[15,36,37,35],[],[38],[39],[],[],[43,41,42],[],[26],[29,44],[],[17,47,46],[],[48,50,49],[],[],[18,51],[],[30,53,46],[55,19,56,54],[],[38],[39],[58,59,60],[],[26],[31,61],[]],"nodeAttribute":["Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name skip_get_all_object_values_via_any ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Name Expr any ","Name Expr len ","Primitive Type int ","Name Expr any ","Name Expr any ","Expression Stmt ","Class Or Interface Type Any ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Expression Stmt ","Name Expr stream ","Name Expr result ","Simple Name append ","Name Expr result ","Variable Declarator Any result = ","Class Or Interface Type Map ","Method Call Expr ","Simple Name get ","Char Literal Expr '*' ","Integer Literal Expr Note Zero  ","'*'","IntegerLiteralExpr","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Name Expr Any ","Simple Name rewrap ","Method Call Expr ","Simple Name asMap ","Single Member Annotation Expr @JsonProperty(\"field-1\") ","Method Call Expr ","Simple Name get ","Char Literal Expr '*' ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"TestNested_test_get_all_with_some_invalid_path","callMethodNameReferTo":{"33":"JsonIterator.java_JsonIterator_outer_deserialize","61":"Any.java_Any_outer_rewrap","77":"JsonIterator.java_JsonIterator_outer_deserialize","93":"Any.java_Any_outer_rewrap"},"num":108,"succs":[[20,1],[2,38],[54,3],[4,59],[66,5],[71,6],[76,7],[8,81],[9,87],[92,10],[11,98],[103],[14,17,13,15,19,16],[],[15],[],[18],[],[],[8,2,9,4,0,7,10,1,6,11,3,5],[31],[22],[],[24,22],[21,22],[23],[23,25],[26],[29,26],[26,27],[28],[22,32,33],[22],[35,36,34],[],[],[37],[],[47],[21],[39],[25,40,39],[41],[41,42,27],[43],[44,43,30],[45],[48,49,39],[39],[52,50,51,21],[],[53],[37],[],[57,56,55],[],[37],[58,40],[],[23,60,61],[],[64,62,63],[],[],[24,65],[],[41,67,60],[70,69,25,68],[],[53],[37],[74,73,72],[],[37],[42,75],[],[26,77,60],[79,80,78],[],[],[37],[82,43,60],[85,84,83,27],[],[53],[86],[],[90,88,89],[],[37],[44,91],[],[93,28,60],[95,94,96],[],[],[97,29],[],[45,99,60],[101,100,102,30],[],[53],[86],[105,106,104],[],[37],[46,107],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_get_all_with_some_invalid_path ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name put ","Simple Name any ","Primitive Type int ","Name Expr any ","Name Expr any ","Primitive Type int ","Name Expr arr ","Primitive Type int ","Char Literal Expr '\"' ","Primitive Type int ","Variable Declarator Any any = ","Name Expr buf ","Method Call Expr ","Name Expr JsonIterator ","Simple Name reportError ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name append ","Name Expr result ","Simple Name append ","Name Expr result ","Simple Name append ","Name Expr result ","Simple Name append ","Name Expr result ","Method Call Expr ","Class Or Interface Type Any ","Method Call Expr ","Char Literal Expr '\"' ","Char Literal Expr '*' ","String Literal Expr Not Empty  ","'*'","Variable Declaration Expr ","Simple Name assertEquals ","Simple Name setter ","Method Call Expr ","Simple Name toString ","Method Call Expr ","ASSIGN","Method Call Expr ","Name Expr Any ","Simple Name rewrap ","Method Call Expr ","Simple Name asList ","Expression Stmt ","Method Call Expr ","Simple Name add ","Name Expr Any ","String Literal Expr Not Empty  ","Method Call Expr ","Return Stmt ","Name Expr stream ","Method Call Expr ","Simple Name toString ","Method Call Expr ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name add ","Name Expr Any ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Parameter JsonStream stream ","Simple Name toString ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr Any ","Simple Name Object ","Method Call Expr ","Name Expr lines ","Method Call Expr ","Method Call Expr ","Name Expr len ","Char Literal Expr '*' ","Integer Literal Expr Note Zero  ","Method Call Expr ","Array Access Expr count++ ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr cacheKey "]}
{"Version":"0.9.22","MethodName":"TestNested_test_recursive_class","callMethodNameReferTo":{"16":"JsonIterator.java_JsonIterator_outer_deserialize"},"num":24,"succs":[[1,7],[13],[4,3,5,6],[],[5],[],[0,1],[8],[11,9,10],[10],[],[12],[],[15,14],[],[17,16],[21,18,20,19],[],[],[],[22],[23],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_recursive_class ","Block Stmt ","Variable Declaration Expr ","Variable Declarator com.jsoniter.output.TestNested.TestObject3 obj = ","Class Or Interface Type TestObject3 ","Simple Name obj ","Object Creation Expr com.jsoniter.output.TestNested.TestObject3 Optional.empty Optional.empty ","Class Or Interface Type TestObject3 ","Method Call Expr ","Expression Stmt ","Field Access Expr ","Method Call Expr ","Simple Name reference ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject3.class ","StringLiteralExpr","Class Or Interface Type TestObject3 "]}
