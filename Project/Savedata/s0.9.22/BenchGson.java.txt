{"fileName":"BenchGson.java","Version":"0.9.22","callMethodName":["benchSetup","gsonDecoder","jsoniterReflectionDecoder","main","toString","toString","toString","toString","toString"]}
{"Version":"0.9.22","MethodName":"BenchGson_benchSetup","callMethodNameReferTo":{"62":"JsonIterator.java_JsonIterator_outer_setMode","47":"JsonIterator.java_JsonIterator_outer_setMode"},"num":68,"succs":[[1,23],[2,34],[3,43],[4,47],[53,5],[19,55,6,54],[7,57],[60,58,59,8],[62],[12,10,11,15,14,13],[],[],[13],[],[20,22],[1,3,2,0,4],[17,18],[],[],[20],[],[20,5,19],[],[26,24,25],[],[],[27,28],[29,30,31],[],[32],[],[33],[],[],[36,35,25],[],[38,37],[41,39,40],[],[42],[],[33],[],[44,45,46],[],[],[],[49,50,48],[],[],[51,52],[],[],[6],[],[56],[],[8],[61,21],[],[33],[],[64,65,63],[],[],[66,67],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Method Call Expr ","Expression Stmt ","Method Declaration ","Single Member Annotation Expr @Setup(Level.Trial) ","PUBLIC","Void Type ","Array Initializer Expr ","Parameter BenchmarkParams params ","Block Stmt ","Field Access Expr ","Name Expr Level ","Simple Name Trial ","Name Expr stream ","Simple Name params ","Name Expr stream ","Class Or Interface Type BenchmarkParams ","Assign Expr ASSIGN ","Name Expr iter ","ASSIGN","Method Call Expr ","Method Call Expr ","Array Type 1 ","Object Creation Expr GsonBuilder Optional.empty Optional.empty ","Parameter IOException e ","String Literal Expr Not Empty  ","Class Or Interface Type GsonBuilder ","StringLiteralExpr","Assign Expr ASSIGN ","Name Expr gsonCompatibilityMode ","Method Call Expr ","Method Call Expr ","Simple Name build ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name setDateFormat ","String Literal Expr Not Empty  ","Class Or Interface Type Builder ","Variable Declaration Expr ","Field Access Expr ","Simple Name setCurrentConfig ","Name Expr gsonCompatibilityMode ","Method Call Expr ","Field Access Expr ","String Literal Expr Not Empty  ","Field Access Expr ","Name Expr DecodingMode ","Simple Name DYNAMIC_MODE_AND_MATCH_FIELD_WITH_HASH ","Block Stmt ","NOT_EQUALS","Name Expr iter ","NullLiteralExpr","Block Stmt ","Method Call Expr ","Simple Name contains ","String Literal Expr Not Empty  ","Simple Name getBenchmark ","Method Call Expr ","Class Or Interface Type jsoniter ","Simple Name setMode ","Field Access Expr ","Name Expr DecodingMode ","Simple Name DYNAMIC_MODE_AND_MATCH_FIELD_WITH_HASH "]}
{"Version":"0.9.22","MethodName":"BenchGson_gsonDecoder","callMethodNameReferTo":{},"num":52,"succs":[[19,1],[29,2],[3,38,37],[4,39],[48,5],[50],[11,7,13,8,12,10,15,9],[],[],[10],[],[18,17],[14],[],[],[0,1,2],[17],[],[],[23],[21],[],[21,20],[25,21,24],[21],[27,26],[],[28],[],[33],[20],[30],[31,30],[35,34,30],[30],[36,20],[],[3],[4,5],[40,16,41],[],[31,42,44,43],[],[],[46,45],[47],[],[],[49,32],[],[51,22],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Binary Expr EQUALS ","Method Declaration Throws ","Marker Annotation Expr @Benchmark ","PUBLIC","Void Type ","Simple Name gsonDecoder ","Parameter Blackhole bh ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr bh ","Simple Name bh ","Class Or Interface Type Blackhole ","Variable Declaration Expr ","Name Expr stream ","Simple Name stream ","Simple Name append ","Variable Declarator FileInputStream stream = ","Class Or Interface Type FileInputStream ","Object Creation Expr FileInputStream Optional.empty Optional.empty ","Parameter String cacheKey ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name reader ","Name Expr reader ","Simple Name append ","Variable Declarator InputStreamReader reader = ","Class Or Interface Type InputStreamReader ","Object Creation Expr InputStreamReader Optional.empty Optional.empty ","Class Or Interface Type InputStreamReader ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name consume ","Method Call Expr ","Null Literal Expr ","Simple Name fromJson ","Method Call Expr ","Object Creation Expr TypeReference<List<Tweet>> Optional.empty Optional.empty ","Simple Name getType ","Class Or Interface Type TypeReference ","Name Expr parameterTypes ","Name Expr lines ","Method Call Expr ","Name Expr lines "]}
{"Version":"0.9.22","MethodName":"BenchGson_jsoniterReflectionDecoder","callMethodNameReferTo":{"52":"JsonIteratorPool.java_JsonIteratorPool_outer_returnJsonIterator","38":"JsonIteratorPool.java_JsonIteratorPool_outer_borrowJsonIterator"},"num":57,"succs":[[1,20],[30,2],[40,41,3],[42,4],[5,44],[6,52],[55],[11,10,14,8,12,9,16,13],[],[],[11],[],[19,18],[15],[],[],[0,1,2],[18],[],[],[24],[22],[],[22,21],[22,26,25],[22],[27,28],[],[29],[],[36],[32],[],[31],[33,31],[34,31],[38,37,31],[31],[39,32],[],[4,3],[6,5],[43,21,33],[],[17,46,45],[],[48,47,34],[],[50,49],[51],[],[],[53,35,54],[],[],[23,56],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Try Stmt ","Variable Declarator int toWriteLen = ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Declaration Throws ","Simple Name attachment ","PUBLIC","Primitive Type long ","Simple Name jsoniterReflectionDecoder ","Parameter Blackhole bh ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr bh ","Simple Name bh ","Class Or Interface Type Blackhole ","Variable Declaration Expr ","Simple Name newArr ","Simple Name stream ","Name Expr stream ","Variable Declarator FileInputStream stream = ","Class Or Interface Type List ","Object Creation Expr FileInputStream Optional.empty Optional.empty ","Class Or Interface Type FileInputStream ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr hash ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Expression Stmt ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name reset ","Method Call Expr ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name read ","Method Call Expr ","Object Creation Expr TypeReference<List<Tweet>> Optional.empty Optional.empty ","Class Or Interface Type Builder ","Class Or Interface Type TypeReference ","Method Call Expr ","Class Or Interface Type GenericArrayType ","Simple Name returnJsonIterator ","Binary Expr LESS ","Simple Name close "]}
{"Version":"0.9.22","MethodName":"BenchGson_main","callMethodNameReferTo":{},"num":29,"succs":[[7,3,5,4,1,9,6,2],[2],[],[4],[],[10,11],[8],[],[],[13],[12],[],[],[14],[17,16,15,0],[],[],[20,18,19,11],[],[],[21,23,24,22,27,26,25],[28],[28],[28],[28],[28],[28],[28],[]],"nodeAttribute":["Method Declaration Throws ","PUBLIC","STATIC","Void Type ","Simple Name main ","Binary Expr LESS ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Array Type 1 ","Simple Name head ","Class Or Interface Type String ","Expression Stmt ","Method Call Expr ","Name Expr iter ","Simple Name hash ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Name Expr JsoniterSpi ","String Literal Expr Not Empty  ","Simple Name get ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Class Or Interface Type Byte ","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"Version":"0.9.22","MethodName":"Feed_toString","callMethodNameReferTo":{},"num":75,"succs":[[1,13],[2,49],[56,3,4],[6,4],[58,5],[60,3],[72,73,7],[8,11,12,10,9],[],[],[11],[],[1,0,6,2],[22],[18,17,16,19,15],[],[],[],[],[],[14],[20,14],[23,24,14],[14],[19,25,26],[29,27,28],[],[18,31,30],[],[48],[32,34,33],[],[17,36,35],[],[48],[39,38,37],[],[16,40,41],[],[48],[42,43,44],[],[45,15,46],[],[48],[47],[],[],[],[52],[51],[],[53,51,54],[51],[55],[],[5],[58],[59],[58],[63,61,62],[64,57,65],[],[48],[66,68,67],[],[70,20,69],[],[48],[],[50,71],[],[],[74,21,7],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr items ","Variable Declaration Expr ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Variable Declaration Expr ","Simple Name result ","Name Expr id ","Name Expr title ","Name Expr description ","Name Expr alternates ","Name Expr updated ","Name Expr result ","Class Or Interface Type Object ","Variable Declarator StringBuilder result = ","Class Or Interface Type StringBuilder ","Method Call Expr ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr stream ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Object Creation Expr StringBuilder Optional.empty Optional.empty ","Simple Name append ","Class Or Interface Type StringBuilder ","StringLiteralExpr","Variable Declaration Expr ","Name Expr i ","Simple Name i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Name Expr item ","Simple Name item ","Class Or Interface Type Item ","Method Call Expr ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Field Access Expr ","Simple Name append ","String Literal Expr Not Empty  ","Simple Name append ","Unary Expr ++ ","POSTFIX_INCREMENT","ReturnStmt","Method Call Expr ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"Link_toString","callMethodNameReferTo":{},"num":9,"succs":[[5,2,3,4,1],[],[],[4],[],[6],[8,7,0],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Return Stmt ","ReturnStmt","Void Type "]}
{"Version":"0.9.22","MethodName":"Item_toString","callMethodNameReferTo":{},"num":39,"succs":[[3,1,2,5,4],[],[],[4],[],[6],[0,8,7],[],[9,10,11],[12,13,10],[],[],[15,14,10],[38],[17,16,10],[],[19,18,10],[38],[20,10,21],[],[22,10,23],[38],[25,24,10],[],[27,26,10],[38],[29,28,10],[],[31,30,10],[38],[33,10,32],[],[34,10,35],[38],[36,10,37],[],[],[38],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Return Stmt ","ReturnStmt","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Name Expr categories ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr alternates ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr likingUsers ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr content ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr updated ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr published ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr author ","Simple Name count ","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"Version":"0.9.22","MethodName":"Content_toString","callMethodNameReferTo":{},"num":9,"succs":[[5,2,4,1,3],[],[],[4],[],[6],[8,7,0],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr content "]}
{"Version":"0.9.22","MethodName":"ReaderUser_toString","callMethodNameReferTo":{},"num":9,"succs":[[4,2,3,1,5],[],[],[4],[],[6],[8,7,0],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr userId "]}
