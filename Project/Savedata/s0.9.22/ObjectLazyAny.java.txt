{"fileName":"ObjectLazyAny.java","Version":"0.9.22","callMethodName":["valueType","object","toBoolean","toInt","toLong","toFloat","toDouble","toBigInteger","toBigDecimal","size","keys","get","get","fillCacheUntil","fillCache","entries","next","key","value","writeTo","toString"]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_valueType","callMethodNameReferTo":{},"num":11,"succs":[[1,4,3,5,2],[],[],[4],[],[6],[0,8,7],[],[10,9],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type ValueType ","Simple Name valueType ","Block Stmt ","Return Stmt ","ReturnStmt","Field Access Expr ","Name Expr ValueType ","Simple Name OBJECT "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_object","callMethodNameReferTo":{},"num":135,"succs":[[1,8],[12,2,11],[6,3,5,4,7],[],[],[6],[],[0,1],[10,9],[],[39,38,40,41],[],[],[42,14],[45,15,16,43,44],[16,10,11],[17,46],[49,48,19,18,44],[51,19],[20,57],[73,74,35,37,72,21],[22,75],[23,80],[82,30,24,83,44],[84,25],[85,86,26,28],[27,89],[10,28,11],[91,29],[30,99],[31,104],[105,106,32,34,44],[33,110],[30,118],[123,37],[127,36,128],[37,129],[132],[],[40],[],[20,13,16,19],[15],[],[],[],[18],[17],[],[50],[],[53,47,52],[],[54,55],[],[56],[],[68],[59],[],[58],[58,60],[61,58],[58,62],[66,63,58],[64,58],[65,58],[66,58],[58,69,70],[58],[71,59],[],[22,30,34,21],[126,35],[37],[79,78,77,60,76],[],[],[],[],[29,24,28],[23],[],[],[27,26],[61,87,88],[],[],[],[90,81,52],[],[95],[62,93],[],[92],[92,97,96],[92],[62,93,98],[],[94,101,100,102],[],[],[103,63],[],[33,32],[64,108,107],[109],[],[],[],[114],[65,112],[],[111],[116,115,111],[111],[65,117,112],[],[121,120,113,119],[],[],[122,66],[],[52,125,124],[],[],[36],[],[],[131,130],[],[],[67,133,134],[],[]],"nodeAttribute":["Field Access Expr ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_toBoolean","callMethodNameReferTo":{"26":"CodegenAccess.java_CodegenAccess_outer_readObjectStart","29":"JsonIteratorPool.java_JsonIteratorPool_outer_returnJsonIterator"},"num":38,"succs":[[1,5,14,13],[15,2],[23,24,3],[26,7,4,25],[29],[34,6,33],[35],[11,9,10,12,8],[],[],[11],[],[0],[1,2],[32,5],[19],[17],[],[17,16],[20,17,21],[17],[22],[],[3],[4],[],[16,28,27],[],[],[18,30,31],[],[],[6],[],[],[36,37],[],[]],"nodeAttribute":["Try Stmt ","Expression Stmt ","Try Stmt ","Return Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name toBoolean ","Block Stmt ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Block Stmt ","ReturnStmt","Method Call Expr ","Name Expr CodegenAccess ","Simple Name readObjectStart ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Integer Literal Expr Note Zero  "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_toInt","callMethodNameReferTo":{},"num":145,"succs":[[4,1,2,3,5],[],[],[4],[],[6],[0,8,7],[],[9,10],[],[14,16,15,2,13],[17,12],[20,10,7],[],[15],[],[12,11],[19,18],[],[49,48,50,51],[21,22,10],[],[],[52,24],[55,25,26,53,54],[26,19,7],[27,56],[59,58,28,29,54],[61,29],[30,67],[83,84,45,47,82,31],[32,85],[33,90],[92,40,34,54,93],[94,35],[95,96,36,38],[37,99],[19,38,7],[101,39],[40,109],[41,114],[115,116,42,44,54],[43,120],[40,128],[133,47],[137,46,138],[47,139],[142],[],[50],[],[30,23,26,29],[25],[],[],[],[28],[27],[],[60],[],[63,57,62],[],[64,65],[],[66],[],[78],[69],[],[68],[68,70],[71,68],[72,68],[76,73,68],[74,68],[75,68],[76,68],[68,79,80],[68],[81,69],[],[32,40,44,31],[136,45],[47],[89,88,87,86,70],[],[],[],[],[39,34,38],[33],[],[],[37,36],[71,97,98],[],[],[],[100,91,62],[],[105],[72,103],[],[102],[102,107,106],[102],[72,108,103],[],[104,111,110,112],[],[],[113,73],[],[43,42],[74,118,117],[119],[],[],[],[124],[75,122],[],[121],[126,125,121],[121],[75,127,122],[],[123,130,131,129],[],[],[132,76],[],[135,62,134],[],[],[46],[],[],[141,140],[],[],[77,143,144],[],[]],"nodeAttribute":["Method Declaration ","Simple Name firstName ","PUBLIC","Primitive Type int ","Name Expr cache ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size ","Method Declaration ","Expression Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Method Call Expr ","Name Expr cache ","Simple Name size ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_toLong","callMethodNameReferTo":{},"num":145,"succs":[[5,4,1,2,3],[],[],[4],[],[6],[8,7,0],[],[10,9],[],[14,16,15,2,13],[17,12],[20,10,7],[],[15],[],[12,11],[19,18],[],[49,48,50,51],[21,22,10],[],[],[52,24],[55,25,26,53,54],[26,19,7],[27,56],[59,58,28,29,54],[61,29],[30,67],[83,84,45,47,82,31],[32,85],[33,90],[92,40,34,54,93],[94,35],[95,96,36,38],[37,99],[19,38,7],[101,39],[40,109],[41,114],[115,116,42,44,54],[43,120],[40,128],[133,47],[137,46,138],[47,139],[142],[],[50],[],[30,23,26,29],[25],[],[],[],[28],[27],[],[60],[],[63,57,62],[],[64,65],[],[66],[],[78],[69],[],[68],[68,70],[71,68],[72,68],[76,73,68],[74,68],[75,68],[76,68],[68,79,80],[68],[81,69],[],[32,40,44,31],[136,45],[47],[89,88,87,86,70],[],[],[],[],[39,34,38],[33],[],[],[37,36],[71,97,98],[],[],[],[100,91,62],[],[105],[72,103],[],[102],[102,107,106],[102],[72,108,103],[],[104,111,110,112],[],[],[113,73],[],[43,42],[74,118,117],[119],[],[],[],[124],[75,122],[],[121],[126,125,121],[121],[75,127,122],[],[123,130,131,129],[],[],[132,76],[],[135,62,134],[],[],[46],[],[],[141,140],[],[],[77,143,144],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type long ","Simple Name toLong ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size ","Method Declaration ","Expression Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Method Call Expr ","Name Expr cache ","Simple Name size ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_toFloat","callMethodNameReferTo":{},"num":145,"succs":[[3,1,5,2,4],[],[],[4],[],[6],[0,8,7],[],[9,10],[],[14,16,15,2,13],[17,12],[20,10,7],[],[15],[],[12,11],[19,18],[],[49,48,50,51],[21,22,10],[],[],[52,24],[55,25,26,53,54],[26,19,7],[27,56],[59,58,28,29,54],[61,29],[30,67],[83,84,45,47,82,31],[32,85],[33,90],[92,40,34,54,93],[94,35],[95,96,36,38],[37,99],[19,38,7],[101,39],[40,109],[41,114],[115,116,42,44,54],[43,120],[40,128],[133,47],[137,46,138],[47,139],[142],[],[50],[],[30,23,26,29],[25],[],[],[],[28],[27],[],[60],[],[63,57,62],[],[64,65],[],[66],[],[78],[69],[],[68],[68,70],[71,68],[72,68],[76,73,68],[74,68],[75,68],[76,68],[68,79,80],[68],[81,69],[],[32,40,44,31],[136,45],[47],[89,88,87,86,70],[],[],[],[],[39,34,38],[33],[],[],[37,36],[71,97,98],[],[],[],[100,91,62],[],[105],[72,103],[],[102],[102,107,106],[102],[72,108,103],[],[104,111,110,112],[],[],[113,73],[],[43,42],[74,118,117],[119],[],[],[],[124],[75,122],[],[121],[126,125,121],[121],[75,127,122],[],[123,130,131,129],[],[],[132,76],[],[135,62,134],[],[],[46],[],[],[141,140],[],[],[77,143,144],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type float ","Simple Name toFloat ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size ","Method Declaration ","Expression Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Method Call Expr ","Name Expr cache ","Simple Name size ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_toDouble","callMethodNameReferTo":{},"num":145,"succs":[[5,3,4,2,1],[],[],[4],[],[6],[8,7,0],[],[9,10],[],[14,16,15,2,13],[17,12],[20,10,7],[],[15],[],[12,11],[19,18],[],[49,48,50,51],[21,22,10],[],[],[52,24],[55,25,26,53,54],[26,19,7],[27,56],[59,58,28,29,54],[61,29],[30,67],[83,84,45,47,82,31],[32,85],[33,90],[92,40,34,54,93],[94,35],[95,96,36,38],[37,99],[19,38,7],[101,39],[40,109],[41,114],[115,116,42,44,54],[43,120],[40,128],[133,47],[137,46,138],[47,139],[142],[],[50],[],[30,23,26,29],[25],[],[],[],[28],[27],[],[60],[],[63,57,62],[],[64,65],[],[66],[],[78],[69],[],[68],[68,70],[71,68],[72,68],[76,73,68],[74,68],[75,68],[76,68],[68,79,80],[68],[81,69],[],[32,40,44,31],[136,45],[47],[89,88,87,86,70],[],[],[],[],[39,34,38],[33],[],[],[37,36],[71,97,98],[],[],[],[100,91,62],[],[105],[72,103],[],[102],[102,107,106],[102],[72,108,103],[],[104,111,110,112],[],[],[113,73],[],[43,42],[74,118,117],[119],[],[],[],[124],[75,122],[],[121],[126,125,121],[121],[75,127,122],[],[123,130,131,129],[],[],[132,76],[],[135,62,134],[],[],[46],[],[],[141,140],[],[],[77,143,144],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type double ","Simple Name toDouble ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size ","Method Declaration ","Expression Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Method Call Expr ","Name Expr cache ","Simple Name size ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_toBigInteger","callMethodNameReferTo":{},"num":148,"succs":[[1,2,4,3,5],[],[],[4],[],[6],[0,8,7],[],[10,11,9],[],[],[12,13],[],[17,19,18,2,16],[20,15],[23,13,7],[],[18],[],[15,14],[22,21],[],[52,51,53,54],[24,25,13],[],[],[55,27],[58,28,29,56,57],[29,22,7],[30,59],[62,61,32,31,57],[64,32],[33,70],[86,87,48,50,85,34],[35,88],[36,93],[95,43,37,57,96],[97,38],[98,99,39,41],[40,102],[22,41,7],[104,42],[43,112],[44,117],[118,119,45,47,57],[46,123],[43,131],[136,50],[140,49,141],[50,142],[145],[],[53],[],[33,26,29,32],[28],[],[],[],[31],[30],[],[63],[],[66,60,65],[],[67,68],[],[69],[],[81],[72],[],[71],[71,73],[74,71],[75,71],[79,76,71],[77,71],[78,71],[79,71],[71,82,83],[71],[84,72],[],[35,43,47,34],[139,48],[50],[92,91,90,73,89],[],[],[],[],[42,37,41],[36],[],[],[40,39],[74,100,101],[],[],[],[103,94,65],[],[108],[75,106],[],[105],[105,110,109],[105],[75,106,111],[],[107,114,113,115],[],[],[116,76],[],[46,45],[77,121,120],[122],[],[],[],[127],[78,125],[],[124],[129,128,124],[124],[78,130,125],[],[126,133,134,132],[],[],[135,79],[],[138,65,137],[],[],[49],[],[],[144,143],[],[],[80,146,147],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type BigInteger ","Simple Name toBigInteger ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr BigInteger ","Simple Name valueOf ","Method Call Expr ","Simple Name size ","Method Declaration ","Expression Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Method Call Expr ","Name Expr cache ","Simple Name size ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_toBigDecimal","callMethodNameReferTo":{},"num":148,"succs":[[3,2,4,1,5],[],[],[4],[],[6],[0,7,8],[],[9,10,11],[],[],[12,13],[],[17,19,18,2,16],[20,15],[23,13,7],[],[18],[],[15,14],[22,21],[],[52,51,53,54],[24,25,13],[],[],[55,27],[58,28,29,56,57],[29,22,7],[30,59],[62,61,32,31,57],[64,32],[33,70],[86,87,48,50,85,34],[35,88],[36,93],[95,43,37,57,96],[97,38],[98,99,39,41],[40,102],[22,41,7],[104,42],[43,112],[44,117],[118,119,45,47,57],[46,123],[43,131],[136,50],[140,49,141],[50,142],[145],[],[53],[],[33,26,29,32],[28],[],[],[],[31],[30],[],[63],[],[66,60,65],[],[67,68],[],[69],[],[81],[72],[],[71],[71,73],[74,71],[75,71],[79,76,71],[77,71],[78,71],[79,71],[71,82,83],[71],[84,72],[],[35,43,47,34],[139,48],[50],[92,91,90,73,89],[],[],[],[],[42,37,41],[36],[],[],[40,39],[74,100,101],[],[],[],[103,94,65],[],[108],[75,106],[],[105],[105,110,109],[105],[75,106,111],[],[107,114,113,115],[],[],[116,76],[],[46,45],[77,121,120],[122],[],[],[],[127],[78,125],[],[124],[129,128,124],[124],[78,130,125],[],[126,133,134,132],[],[],[135,79],[],[138,65,137],[],[],[49],[],[],[144,143],[],[],[80,146,147],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type BigDecimal ","Simple Name toBigDecimal ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr BigDecimal ","Simple Name valueOf ","Method Call Expr ","Simple Name size ","Method Declaration ","Expression Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Method Call Expr ","Name Expr cache ","Simple Name size ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_size","callMethodNameReferTo":{},"num":137,"succs":[[8,1],[12,2,11],[5,6,7,4,3],[],[],[6],[],[1,0],[10,9],[],[41,40,43,42],[],[13,14,2],[],[],[44,16],[47,17,18,45,46],[18,10,11],[19,48],[51,50,21,20,46],[53,21],[22,59],[75,76,37,39,74,23],[24,77],[25,82],[84,32,26,85,46],[86,27],[87,88,28,30],[29,91],[10,30,11],[93,31],[32,101],[33,106],[107,108,34,36,46],[35,112],[32,120],[125,39],[129,38,130],[39,131],[134],[],[42],[],[22,15,18,21],[17],[],[],[],[20],[19],[],[52],[],[55,49,54],[],[56,57],[],[58],[],[70],[61],[],[60],[60,62],[63,60],[64,60],[68,65,60],[66,60],[67,60],[68,60],[60,71,72],[60],[73,61],[],[24,32,36,23],[128,37],[39],[81,80,79,78,62],[],[],[],[],[31,26,30],[25],[],[],[29,28],[63,89,90],[],[],[],[92,83,54],[],[97],[64,95],[],[94],[94,99,98],[94],[64,95,100],[],[103,96,102,104],[],[],[105,65],[],[35,34],[110,66,109],[111],[],[],[],[116],[67,114],[],[113],[118,117,113],[113],[67,119,114],[],[115,122,123,121],[],[],[124,68],[],[127,54,126],[],[],[38],[],[],[133,132],[],[],[135,69,136],[],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type int ","Simple Name size ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Method Call Expr ","Name Expr cache ","Simple Name size ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_keys","callMethodNameReferTo":{},"num":141,"succs":[[1,10],[14,2,13],[6,3,4,7,5],[],[],[6,8,9],[],[1,0],[],[],[12,11],[],[45,44,46,47],[],[15,16],[],[17,18],[],[],[48,20],[51,21,22,49,50],[22,12,13],[23,52],[55,54,24,25,50],[57,25],[26,63],[79,80,41,43,78,27],[28,81],[29,86],[88,36,30,50,89],[90,31],[91,92,32,34],[33,95],[12,34,13],[97,35],[36,105],[37,110],[111,112,38,40,50],[39,116],[36,124],[129,43],[133,42,134],[43,135],[138],[],[46],[],[26,19,22,25],[21],[],[],[],[24],[23],[],[56],[],[59,53,58],[],[60,61],[],[62],[],[74],[65],[],[64],[64,66],[67,64],[64,68],[72,69,64],[70,64],[71,64],[72,64],[64,75,76],[64],[77,65],[],[28,36,40,27],[132,41],[43],[85,84,83,66,82],[],[],[],[],[35,30,34],[29],[],[],[33,32],[67,93,94],[],[],[],[96,87,58],[],[101],[68,99],[],[98],[98,103,102],[98],[68,99,104],[],[100,107,106,108],[],[],[109,69],[],[39,38],[70,114,113],[115],[],[],[],[120],[71,118],[],[117],[122,121,117],[117],[71,123,118],[],[126,119,127,125],[],[],[128,72],[],[131,58,130],[],[],[42],[],[],[137,136],[],[],[73,139,140],[],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Set ","Simple Name keys ","Block Stmt ","Primitive Type int ","Class Or Interface Type String ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Method Call Expr ","Class Or Interface Type Set ","Method Call Expr ","Name Expr cache ","Simple Name keySet ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_get","callMethodNameReferTo":{},"num":362,"succs":[[16,1],[2,26],[28,4,18,27,3],[4,31,30,5],[19,30,5],[6,8,9,7,10,11],[],[],[9],[],[15,13],[0,1,4],[24,13],[],[13,12],[],[20],[12],[17],[17,18],[22,17,21],[17],[25,23,12],[],[],[80,77,76,79,78],[3],[],[29],[],[],[33,14,32],[],[35,34],[],[241,239,240,7,242],[37,88],[38,90,89,27,39],[25,91,39,30],[40,94],[41,42,97,96,27],[42,98],[104,43],[44,121],[46,45,107,123,122],[25,46,108,30],[47,124],[139,141,75,73,140,48],[49,142],[147,50],[62,51,151,27,150],[52,152],[53,153,154,55],[157,54],[25,159,30,55],[160,56],[170,57],[58,173],[176,59],[60,62,177,178,179],[61,185],[25,62,112,30],[63,189],[191,71,64,190,27],[195,65],[205,66],[67,208],[68,211],[62,213,69,178,212],[219,70],[25,62,116,30],[224,72],[25,75,30,227],[74,229,230],[75,231],[234],[],[78],[],[24,87],[47,46,42,43,36,39],[24,13],[24,81,13],[82,24],[24,83],[84,24,86],[24,85],[],[38],[],[],[93,81,5,92],[],[],[41],[40],[],[29],[100,99,95],[],[101,102],[],[103],[],[117],[82,106],[],[105],[44,107,105],[110,108,105],[129,125],[109],[109,111],[114,109,112,116],[132,125],[113],[113,115],[118,119,105],[105],[82,120,106,5],[],[45],[],[29],[135],[126],[],[125],[127,125],[128,125],[110,125],[133,130,125],[131,125],[114,125],[133,125],[136,137,125],[125],[126,138],[],[71,62,49,72,48],[73,228],[75],[146,127,145,143,144],[],[],[],[],[51,58,57,56,55],[50],[50],[],[],[53,54],[128,156,155],[],[],[],[158,148,99],[],[29],[166],[129,162],[],[161],[161,163],[161,164],[161,167,168],[161],[129,169,162],[],[109,171,99],[110,172],[],[111,174,163,175],[],[],[60,61],[180,181,27],[],[84,184,165],[182,164],[83,183],[],[],[],[149,186,99],[188,130,187],[],[],[67,64,65,66],[193,192,131],[194],[],[],[],[201],[197,132],[],[196],[198,196],[199,196],[202,203,196],[196],[197,204,132],[],[206,113,99],[207,114],[],[198,209,210,115],[],[],[69,70],[214,27,215],[200,218,86],[199,216],[85,217],[],[],[],[220,221,99],[],[133,223,222],[],[],[225,226,99],[],[],[29],[74],[],[],[233,232],[],[],[134,236,235],[],[],[238,243],[246,35,30],[],[241],[],[238,237],[245,244],[],[272,76,273,274],[],[275,248],[277,249,250,276,27],[250,245,30],[251,278],[281,280,253,252,27],[282,253],[254,286],[302,303,269,271,301,255],[256,304],[257,309],[311,264,258,27,312],[313,259],[314,154,260,262],[261,317],[245,262,30],[319,263],[264,327],[265,332],[333,334,266,268,27],[267,337],[264,345],[350,271],[354,270,355],[271,356],[359],[273],[],[254,247,250,253],[249],[],[],[252],[251],[],[29],[283,279,99],[284,285],[],[103],[297],[288],[],[287],[287,289],[290,287],[291,287],[295,292,287],[293,287],[294,287],[295,287],[287,298,299],[287],[300,288],[],[256,264,268,255],[353,269],[271],[308,307,306,289,305],[],[],[],[],[263,258,262],[257],[],[],[261,260],[290,315,316],[],[],[318,310,99],[],[323],[291,321],[],[320],[320,325,324],[320],[291,321,326],[],[329,322,328,330],[],[],[331,292],[],[267,266],[336,293,335],[194],[],[],[341],[294,339],[],[338],[343,342,338],[338],[294,344,339],[],[340,348,347,346],[],[],[349,295],[],[352,99,351],[],[],[270],[],[],[358,357],[],[],[360,296,361],[],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name get ","Parameter Object key ","Block Stmt ","Name Expr key ","Simple Name key ","Name Expr key ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name element ","Name Expr element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name fillCacheUntil ","Simple Name target ","Method Declaration ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Method Call Expr ","Simple Name object ","Method Declaration ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Name Expr lastParsedPos ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Return Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Return Stmt ","Expression Stmt ","Return Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Class Or Interface Type Any ","Simple Name fillCacheUntil ","Parameter Object target ","Block Stmt ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Class Or Interface Type Object ","Block Stmt ","Name Expr lastParsedPos ","Name Expr tail ","Method Call Expr ","Name Expr cache ","Simple Name get ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Name Expr cache ","Name Expr cache ","Name Expr cache ","Name Expr value ","Name Expr value ","Name Expr iter ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr iter ","Name Expr value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Null Literal Expr ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Name Expr field ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Name Expr cache ","Simple Name add ","Block Stmt ","Binary Expr EQUALS ","AND","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name hashCode ","Simple Name equals ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name head ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Name Expr field ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Name Expr cache ","Simple Name put ","Block Stmt ","Binary Expr EQUALS ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name hashCode ","Simple Name equals ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name head ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Null Literal Expr ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Field Access Expr ","Return Stmt ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_get","callMethodNameReferTo":{"104":"Any.java_Any_outer_rewrap"},"num":489,"succs":[[44,1],[2,3,46,35,45],[21,3,48,49],[51,4],[58,5],[53,6,59,16],[60,7],[63,8],[10,71,9],[15,77,76,10],[73,11],[12,78],[92,13],[93,95,9,94,14],[100,9],[21,104,48,16],[17,107],[18,117],[118,19,20,45,109],[21,20,120,48],[21,125,48],[24,26,28,23,27,25,22],[],[],[25],[],[41,30],[36,43],[17,0,20,3,4,16],[30],[],[29,30],[31,30],[32,30],[30,33],[36],[],[36,35],[37,36],[38,36],[36,39],[42],[],[],[2],[],[29,47],[],[],[50],[],[55],[31,37],[52],[53,115,52],[57,56,52],[52],[31,37],[6,15,7,8],[],[62,61],[],[155,154,156,157],[67],[65],[],[64,65],[68,69,65],[65],[70],[],[12,11],[73],[75],[72,73],[73],[],[],[82],[32,72,38],[79],[80,79,13],[84,83,79],[79],[32,21,86,87,85],[72,88],[],[90,38,36,89],[],[],[91],[],[14],[96,80,97],[],[98,99],[],[248,250,249,251,23],[],[],[102,101,64,81],[],[74,103],[],[105,66,106],[],[],[111],[54],[108],[109,108],[113,112,108],[108],[114,116,54],[],[],[299,296,154,298,297],[19],[119],[],[121,122,39,33],[],[123,124],[],[457,455,456,23,458],[127,21,34,126,110],[],[36,128,89,40],[91],[158,130],[160,131,132,159,45],[132,62,48],[133,161],[164,163,135,134,45],[165,135],[136,170],[186,187,151,153,185,137],[138,188],[139,193],[195,146,140,196,45],[197,141],[198,199,142,144],[143,202],[62,144,48],[204,145],[146,212],[147,217],[218,219,148,150,45],[149,223],[146,231],[236,153],[240,152,241],[153,242],[245],[],[156],[],[136,129,132,135],[131],[],[],[134],[133],[],[119],[167,162,166],[],[169,168],[],[91],[181],[172],[],[171],[171,173],[174,171],[175,171],[179,176,171],[177,171],[178,171],[179,171],[171,182,183],[171],[184,172],[],[138,146,150,137],[239,151],[153],[192,191,190,189,173],[],[],[],[],[145,140,144],[139],[],[],[143,142],[174,200,201],[],[],[],[203,194,166],[],[208],[175,206],[],[205],[205,210,209],[205],[175,211,206],[],[207,214,213,215],[],[],[216,176],[],[149,148],[177,221,220],[222],[],[],[],[227],[178,225],[],[224],[229,228,224],[224],[178,230,225],[],[233,234,226,232],[],[],[235,179],[],[166,238,237],[],[],[152],[],[],[244,243],[],[],[180,246,247],[],[],[],[250],[],[252],[97,253,48],[255,254],[],[],[257,307],[258,309,308,259,45],[116,310,259,48],[260,315],[261,262,318,317,45],[262,319],[323,263],[264,340],[266,265,326,341,94],[116,266,327,48],[267,342],[357,359,295,293,358,268],[269,360],[365,270],[282,271,369,45,368],[272,370],[273,199,371,275],[374,274],[116,376,48,275],[377,276],[387,277],[278,390],[393,279],[280,282,394,395,396],[281,402],[116,282,331,48],[283,406],[408,291,407,284,45],[411,285],[421,286],[287,424],[288,427],[282,429,289,395,428],[435,290],[116,282,335,48],[440,292],[116,295,48,443],[294,445,446],[295,447],[450],[297],[],[115,306],[267,266,262,263,256,259],[115,313],[115,300,313],[301,115],[115,302],[303,115,305],[115,304],[],[258],[],[],[312,300,314,311],[],[],[],[467,468,23,469,470,471],[261],[260],[],[119],[320,316,166],[321,322],[],[91],[336],[301,325],[],[324],[264,326,324],[329,327,324],[347,343],[328],[328,330],[328,333,331,335],[350,343],[332],[332,334],[337,338,324],[324],[301,339,325,314],[],[265],[119],[353],[344],[],[343],[345,343],[346,343],[329,343],[351,348,343],[349,343],[333,343],[351,343],[354,355,343],[343],[344,356],[],[291,282,269,292,268],[293,444],[295],[364,345,363,361,362],[],[],[],[],[271,278,277,276,275],[270],[270],[],[],[273,274],[346,373,372],[],[],[375,366,166],[],[119],[383],[347,379],[],[378],[378,380],[378,381],[378,384,385],[378],[347,386,379],[],[388,328,166],[329,389],[],[330,391,380,392],[],[],[280,281],[398,397,45],[],[303,401,382],[399,381],[400,302],[],[],[],[367,403,166],[405,348,404],[],[],[287,284,285,286],[409,410,349],[222],[],[],[417],[413,350],[],[412],[414,412],[415,412],[418,419,412],[412],[413,420,350],[],[422,332,166],[423,333],[],[414,426,425,334],[],[],[289,290],[430,45,431],[434,416,305],[415,432],[304,433],[],[],[],[437,436,166],[],[351,439,438],[],[],[441,442,166],[],[],[119],[294],[],[],[449,448],[],[],[352,452,451],[],[],[454,459],[461,124,48],[],[457],[],[453,454],[62,460],[],[],[475,463],[464,483],[484,466,45,477,465],[466,485,48,314],[478,48,314],[],[469],[],[474,313],[462,463,466],[115,313],[313,472],[],[479],[472],[476],[476,477],[481,476,480],[476],[116,482,472],[],[465],[119],[487,473,486],[],[124,488],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name get ","Parameter Object[] keys ","Parameter int idx ","Block Stmt ","Name Expr keys ","Simple Name keys ","Name Expr keys ","Name Expr keys ","Name Expr keys ","Name Expr keys ","Name Expr idx ","Simple Name idx ","Name Expr idx ","Name Expr idx ","Name Expr idx ","Name Expr idx ","Array Type 1 ","Class Or Interface Type Object ","Primitive Type int ","Block Stmt ","EQUALS","Field Access Expr ","Simple Name length ","ReturnStmt","Name Expr keys ","ThisExpr","Variable Declaration Expr ","Name Expr val ","Name Expr key ","Name Expr key ","Variable Declarator Object key = ","Class Or Interface Type Object ","Array Access Expr idx ","Block Stmt ","Simple Name isWildcard ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Variable Declaration Expr ","Name Expr mapped ","Simple Name result ","Name Expr result ","Variable Declarator HashMap<String, Any> result = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr cache ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name mapped ","Simple Name mapped ","Name Expr mapped ","Variable Declarator Any mapped = ","Class Or Interface Type Any ","Method Call Expr ","Method Call Expr ","Simple Name get ","Binary Expr PLUS ","Simple Name getValue ","PLUS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Method Call Expr ","NOT_EQUALS","Field Access Expr ","Simple Name valueType ","Method Declaration ","Name Expr ValueType ","Simple Name INVALID ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name getKey ","Method Call Expr ","Name Expr Any ","Simple Name rewrap ","Variable Declaration Expr ","Simple Name child ","Name Expr child ","Name Expr child ","Variable Declarator Any child = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name fillCacheUntil ","Simple Name target ","Method Declaration ","Block Stmt ","Null Literal Expr ","NullLiteralExpr","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Method Call Expr ","Simple Name object ","Method Declaration ","Method Call Expr ","Simple Name get ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Marker Annotation Expr @Override ","Class Or Interface Type ValueType ","Simple Name valueType ","Block Stmt ","Return Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name OBJECT ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Name Expr lastParsedPos ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Return Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Return Stmt ","Expression Stmt ","Return Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Class Or Interface Type Any ","Simple Name fillCacheUntil ","Parameter Object target ","Block Stmt ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Class Or Interface Type Object ","Block Stmt ","Name Expr lastParsedPos ","Name Expr tail ","Method Call Expr ","Name Expr cache ","Simple Name get ","Simple Name key ","Method Declaration ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Name Expr cache ","Name Expr cache ","Name Expr cache ","Name Expr value ","Name Expr value ","Name Expr iter ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr iter ","Name Expr value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Null Literal Expr ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Name Expr field ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Name Expr cache ","Simple Name add ","Block Stmt ","Binary Expr EQUALS ","AND","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name hashCode ","Simple Name equals ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name head ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Name Expr field ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Name Expr cache ","Simple Name put ","Block Stmt ","Binary Expr EQUALS ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name hashCode ","Simple Name equals ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name head ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Null Literal Expr ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Field Access Expr ","Return Stmt ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Name Expr cache ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Class Or Interface Type Any ","Simple Name get ","Parameter Object key ","Block Stmt ","Name Expr key ","Name Expr key ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name element ","Name Expr element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name fillCacheUntil ","Block Stmt ","Null Literal Expr ","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Method Call Expr ","Simple Name object "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_fillCacheUntil","callMethodNameReferTo":{"192":"CodegenAccess.java_CodegenAccess_outer_head","161":"CodegenAccess.java_CodegenAccess_outer_nextToken","325":"CodegenAccess.java_CodegenAccess_outer_readObjectFieldAsString","359":"JsonIteratorPool.java_JsonIteratorPool_outer_returnJsonIterator","139":"CodegenAccess.java_CodegenAccess_outer_readObjectFieldAsString","299":"JsonIteratorPool.java_JsonIteratorPool_outer_borrowJsonIterator","108":"JsonIteratorPool.java_JsonIteratorPool_outer_borrowJsonIterator","205":"JsonIteratorPool.java_JsonIteratorPool_outer_returnJsonIterator","333":"CodegenAccess.java_CodegenAccess_outer_nextToken","174":"CodegenAccess.java_CodegenAccess_outer_readObjectFieldAsString","343":"CodegenAccess.java_CodegenAccess_outer_readObjectFieldAsString","314":"CodegenAccess.java_CodegenAccess_outer_readObjectStart","124":"CodegenAccess.java_CodegenAccess_outer_readObjectStart","157":"CodegenAccess.java_CodegenAccess_outer_head"},"num":362,"succs":[[1,54],[2,57,55,56,3],[40,59,3,58],[4,64],[5,6,67,66,56],[6,69],[75,7],[8,92],[10,9,78,94,93],[40,10,79,58],[11,95],[110,112,39,37,111,12],[13,113],[118,14],[26,15,122,56,121],[16,123],[17,124,125,19],[128,18],[40,130,58,19],[131,20],[141,21],[22,144],[147,23],[24,26,148,149,150],[25,156],[40,26,83,58],[27,160],[162,35,161,28,56],[166,29],[176,30],[31,179],[32,182],[26,184,33,149,183],[190,34],[40,26,87,58],[195,36],[40,39,58,198],[38,200,201],[39,202],[205],[45,42,41,44,43],[],[43],[],[47,53],[11,10,6,7,0,3],[47,62],[],[47,46,62],[48,47],[47,49],[50,47,52],[47,51],[],[2],[],[],[],[],[61,46,63,60],[],[],[],[213,215,214,216,217,218],[5],[4],[],[68],[],[71,70,65],[],[72,73],[],[74],[],[88],[48,77],[],[76],[8,78,76],[81,79,76],[100,96],[80],[80,82],[80,85,83,87],[103,96],[84],[84,86],[89,90,76],[76],[48,91,77,63],[],[9],[],[68],[106],[97],[],[96],[98,96],[99,96],[81,96],[104,101,96],[102,96],[85,96],[104,96],[107,108,96],[96],[97,109],[],[35,26,13,36,12],[37,199],[39],[117,98,116,114,115],[],[],[],[],[15,22,21,20,19],[14],[14],[],[],[17,18],[99,127,126],[],[],[],[129,119,70],[],[68],[137],[100,133],[],[132],[132,134],[132,135],[132,138,139],[132],[100,140,133],[],[142,80,70],[81,143],[],[82,145,134,146],[],[],[24,25],[151,152,56],[],[50,155,136],[153,135],[154,49],[],[],[],[120,157,70],[159,101,158],[],[],[31,28,29,30],[163,164,102],[165],[],[],[],[172],[168,103],[],[167],[169,167],[170,167],[173,174,167],[167],[168,175,103],[],[177,84,70],[178,85],[],[169,180,86,181],[],[],[33,34],[185,56,186],[171,189,52],[170,187],[51,188],[],[],[],[192,191,70],[],[104,194,193],[],[],[196,197,70],[],[],[68],[38],[],[],[204,203],[],[],[105,207,206],[],[],[222,209],[210,230],[231,212,224,56,211],[212,232,58,63],[225,58,63],[],[],[216],[],[221,62],[208,209,212],[47,62],[62,219],[],[226],[219],[223],[223,224],[223,228,227],[223],[40,229,219],[],[211],[68],[234,220,233],[],[236,235],[],[241,239,240,214,242],[238,243],[246,236,58],[],[241],[],[237,238],[245,244],[],[272,41,274,273],[],[275,248],[277,249,250,276,56],[250,245,58],[251,278],[281,280,253,252,56],[282,253],[254,286],[302,303,269,271,301,255],[256,304],[257,309],[311,264,258,56,312],[313,259],[314,125,260,262],[261,317],[245,262,58],[319,263],[264,327],[265,332],[333,334,266,268,56],[267,337],[264,345],[350,271],[354,270,355],[271,356],[359],[273],[],[254,247,250,253],[249],[],[],[252],[251],[],[68],[283,279,70],[284,285],[],[74],[297],[288],[],[287],[287,289],[290,287],[291,287],[295,292,287],[293,287],[294,287],[295,287],[287,298,299],[287],[300,288],[],[256,264,268,255],[353,269],[271],[308,307,306,305,289],[],[],[],[],[263,258,262],[257],[],[],[261,260],[290,315,316],[],[],[318,310,70],[],[323],[291,321],[],[320],[320,325,324],[320],[291,321,326],[],[329,322,328,330],[],[],[331,292],[],[267,266],[336,293,335],[165],[],[],[341],[294,339],[],[338],[343,342,338],[338],[294,344,339],[],[340,348,347,346],[],[],[349,295],[],[352,70,351],[],[],[270],[],[],[358,357],[],[],[360,296,361],[],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Name Expr lastParsedPos ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Return Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Return Stmt ","Expression Stmt ","Return Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","Class Or Interface Type Any ","Simple Name fillCacheUntil ","Parameter Object target ","Block Stmt ","Name Expr target ","Simple Name target ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Class Or Interface Type Object ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","ReturnStmt","Method Call Expr ","Name Expr cache ","Simple Name get ","Simple Name key ","Method Declaration ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Name Expr cache ","Name Expr cache ","Name Expr cache ","Name Expr value ","Name Expr value ","Name Expr iter ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr iter ","Name Expr value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Null Literal Expr ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Name Expr field ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Name Expr cache ","Simple Name add ","Block Stmt ","Binary Expr EQUALS ","AND","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name hashCode ","Simple Name equals ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name head ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Name Expr field ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Name Expr cache ","Simple Name put ","Block Stmt ","Binary Expr EQUALS ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name hashCode ","Simple Name equals ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name head ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Null Literal Expr ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Return Stmt ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name get ","Parameter Object key ","Block Stmt ","Name Expr key ","Name Expr key ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name element ","Name Expr element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name fillCacheUntil ","Block Stmt ","Null Literal Expr ","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Method Call Expr ","Simple Name object ","Method Declaration ","Field Access Expr ","Return Stmt ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_fillCache","callMethodNameReferTo":{"86":"CodegenAccess.java_CodegenAccess_outer_readObjectFieldAsString","105":"CodegenAccess.java_CodegenAccess_outer_readObjectFieldAsString","121":"JsonIteratorPool.java_JsonIteratorPool_outer_returnJsonIterator","74":"CodegenAccess.java_CodegenAccess_outer_readObjectStart","59":"JsonIteratorPool.java_JsonIteratorPool_outer_borrowJsonIterator","94":"CodegenAccess.java_CodegenAccess_outer_nextToken"},"num":124,"succs":[[30,1],[33,2,3,31,32],[3,25,34],[4,35],[38,37,5,6,32],[40,6],[7,46],[62,63,22,24,61,8],[9,64],[10,69],[71,17,11,32,72],[73,12],[74,75,13,15],[14,78],[25,15,34],[80,16],[17,88],[18,93],[94,95,19,21,32],[20,99],[17,107],[112,24],[116,23,117],[24,118],[121],[27,26,29,28],[],[28],[],[7,0,3,6],[2],[],[],[],[],[5],[4],[],[39],[],[42,36,41],[],[44,43],[],[45],[],[57],[48],[],[47],[47,49],[50,47],[51,47],[55,52,47],[53,47],[54,47],[55,47],[47,58,59],[47],[60,48],[],[9,17,21,8],[115,22],[24],[68,67,66,49,65],[],[],[],[],[16,11,15],[10],[],[],[14,13],[50,76,77],[],[],[],[79,70,41],[],[84],[51,82],[],[81],[81,86,85],[81],[51,82,87],[],[90,83,89,91],[],[],[92,52],[],[20,19],[97,53,96],[98],[],[],[],[103],[54,101],[],[100],[105,104,100],[100],[54,106,101],[],[102,109,110,108],[],[],[111,55],[],[114,41,113],[],[],[23],[],[],[120,119],[],[],[56,122,123],[],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","ReturnStmt","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_entries","callMethodNameReferTo":{},"num":10,"succs":[[4,3,2,1,5],[],[],[4],[],[6],[8,0,7],[],[9],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type EntryIterator ","Simple Name entries ","Block Stmt ","Return Stmt ","ReturnStmt","Object Creation Expr LazyIterator Optional.empty Optional.empty ","Class Or Interface Type LazyIterator "]}
{"Version":"0.9.22","MethodName":"LazyIterator_next","callMethodNameReferTo":{"83":"JsonIteratorPool.java_JsonIteratorPool_outer_borrowJsonIterator","116":"CodegenAccess.java_CodegenAccess_outer_head","109":"CodegenAccess.java_CodegenAccess_outer_nextToken","95":"CodegenAccess.java_CodegenAccess_outer_readObjectFieldAsString","127":"JsonIteratorPool.java_JsonIteratorPool_outer_returnJsonIterator"},"num":131,"succs":[[1,34],[2,37,35,36,3],[39,28,38,3],[41,4],[5,47,13,45,46],[11,6,49],[50,7,11,42],[8,51],[9,59],[10,64],[68,28,13,38],[12],[70,13],[14,72],[26,85,86,87,15,24],[88,16],[93,17],[18,98],[19,102],[107,22,20],[21,110,22,109,36],[26,114],[23],[118,26],[123,122,25],[26,124],[127,27],[130,28,38],[33,32,30,31,29],[],[],[32],[],[14,0,13,27,3],[2],[],[],[],[],[40],[],[5],[4],[4,6],[4,6],[],[],[48],[],[8,9,10,7],[],[55],[43],[52],[52,53],[56,52,57],[52],[43,58,28],[],[60,61,62],[],[],[63,53],[],[66,65,61],[],[67,54],[],[69],[],[44,61,71],[48],[81],[74],[],[73],[75,73],[76,73],[79,73,77],[78,73,20],[78,73],[82,83,73],[73],[84,74],[],[16,15,17,18,19],[121,24],[26],[91,92,89,90,75],[],[],[],[],[94,95,61],[],[97,76,96],[],[],[100,61,99],[],[101,77],[],[104,106,105,103],[],[],[],[],[21],[20],[111,112,78],[113],[],[],[],[116,61,115],[],[79,108,117],[],[120,61,119],[],[],[25],[],[],[126,125],[],[],[128,129,80],[],[],[69]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name next ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr tail ","ReturnStmt","Boolean Literal Expr false ","false","Block Stmt ","Name Expr mapIter ","Name Expr mapIter ","Name Expr mapIter ","Name Expr mapIter ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Block Stmt ","Simple Name hasNext ","Variable Declaration Expr ","Simple Name entry ","Name Expr entry ","Name Expr entry ","Variable Declarator Map.Entry<String, Any> entry = ","Class Or Interface Type Entry ","Method Call Expr ","Simple Name next ","Assign Expr ASSIGN ","Name Expr key ","ASSIGN","Method Call Expr ","Simple Name getKey ","Assign Expr ASSIGN ","Name Expr value ","Method Call Expr ","Simple Name getValue ","Boolean Literal Expr true ","true","Assign Expr ASSIGN ","Null Literal Expr ","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Assign Expr ASSIGN ","Name Expr key ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name readObjectFieldAsString ","Assign Expr ASSIGN ","Name Expr value ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Name Expr cache ","Simple Name put ","Name Expr key ","Name Expr value ","Block Stmt ","Name Expr CodegenAccess ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Method Call Expr ","Simple Name head ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator ","Boolean Literal Expr true "]}
{"Version":"0.9.22","MethodName":"LazyIterator_key","callMethodNameReferTo":{},"num":9,"succs":[[1,4,2,3,5],[],[],[4],[],[6],[8,7,0],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name key ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr key "]}
{"Version":"0.9.22","MethodName":"LazyIterator_value","callMethodNameReferTo":{},"num":9,"succs":[[4,3,2,1,5],[],[],[4],[],[6],[7,8,0],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name value ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr value "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_writeTo","callMethodNameReferTo":{},"num":159,"succs":[[1,3,20],[2,3,23,22,21],[24],[4,5],[28,5],[31],[15,10,8,11,12,7,13,9],[],[],[10],[],[19,17],[14],[],[],[0],[17],[],[17,16],[],[2],[],[],[],[25,6,16,26],[27],[],[],[29,30],[],[63,62,65,64],[33,32,34,18],[],[],[35,36],[],[],[66,38],[68,39,40,67,22],[40,30,69],[41,70],[73,72,43,42,22],[75,43],[44,81],[97,98,59,61,96,45],[46,99],[47,104],[106,54,48,22,107],[108,49],[109,110,50,52],[51,113],[30,52,69],[115,53],[54,123],[55,128],[129,130,56,58,22],[57,134],[54,142],[147,61],[151,60,152],[61,153],[156],[],[64],[],[44,37,40,43],[39],[],[],[],[42],[41],[],[74],[],[77,71,76],[],[78,79],[],[80],[],[92],[83],[],[82],[82,84],[85,82],[86,82],[90,87,82],[88,82],[89,82],[90,82],[82,93,94],[82],[95,83],[],[46,54,58,45],[150,59],[61],[103,102,101,84,100],[],[],[],[],[53,48,52],[47],[],[],[51,50],[85,111,112],[],[],[],[114,105,76],[],[119],[86,117],[],[116],[116,121,120],[116],[86,117,122],[],[125,118,124,126],[],[],[127,87],[],[57,56],[132,88,131],[133],[],[],[],[138],[89,136],[],[135],[140,139,135],[135],[89,141,136],[],[137,145,144,143],[],[],[146,90],[],[76,149,148],[],[],[60],[],[],[155,154],[],[],[157,91,158],[],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Void Type ","Simple Name writeTo ","Parameter JsonStream stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Class Or Interface Type JsonStream ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr head ","Method Call Expr ","Super Expr ","Simple Name writeTo ","SuperExpr","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Name Expr typeLiteral ","Cast Expr ","Class Or Interface Type Map ","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","Name Expr tail ","ReturnStmt","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"Version":"0.9.22","MethodName":"ObjectLazyAny_toString","callMethodNameReferTo":{"24":"JsonStream.java_JsonStream_outer_serialize"},"num":149,"succs":[[1,12,3],[15,14,3,13,2],[6,17,16],[4,5],[21,5],[24,6,16],[7,11,9,8,10],[],[],[10],[],[0],[2],[],[],[],[],[18,19,6],[20],[],[],[22,23],[],[54,53,56,55],[26,27,25],[],[],[],[57,29],[59,30,31,58,14],[31,23,16],[32,60],[63,62,33,34,14],[65,34],[35,71],[87,88,50,52,86,36],[37,89],[94,38],[96,45,39,97,14],[98,40],[99,100,41,43],[42,103],[23,43,16],[105,44],[45,113],[46,118],[119,120,47,49,14],[48,124],[45,132],[137,52],[141,51,142],[52,143],[146],[],[55],[],[35,28,31,34],[30],[],[],[33],[32],[],[64],[],[67,61,66],[],[69,68],[],[70],[],[82],[73],[],[72],[72,74],[75,72],[76,72],[80,77,72],[78,72],[79,72],[80,72],[72,83,84],[72],[85,73],[],[37,45,49,36],[140,50],[52],[93,92,91,90,74],[],[],[],[],[44,39,43],[38],[],[],[42,41],[75,101,102],[],[],[],[104,95,66],[],[109],[76,107],[],[106],[106,111,110],[106],[76,112,107],[],[115,108,114,116],[],[],[117,77],[],[48,47],[122,78,121],[123],[],[],[],[128],[79,126],[],[125],[130,129,125],[125],[79,131,126],[],[134,135,127,133],[],[],[136,80],[],[66,139,138],[],[],[51],[],[],[145,144],[],[],[147,81,148],[],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","EQUALS","Name Expr head ","ReturnStmt","Method Call Expr ","Super Expr ","Simple Name toString ","SuperExpr","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr JsonIteratorPool ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name borrowJsonIterator ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Name Expr data ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Name Expr lastParsedPos ","Name Expr lastParsedPos ","Name Expr head ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Assign Expr ASSIGN ","Name Expr tail ","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Variable Declaration Expr ","Simple Name field ","Name Expr CodegenAccess ","Name Expr field ","Variable Declarator String field = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readObjectFieldAsString ","Method Call Expr ","Name Expr cache ","Simple Name put ","Method Call Expr ","Simple Name readAny ","Assign Expr ASSIGN ","Name Expr lastParsedPos ","Name Expr tail ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
