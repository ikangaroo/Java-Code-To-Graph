{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","hasMethodName":["createGenericArrayType-GenericsHelper-Type","createParameterizedType-GenericsHelper-Type[]-Type-Type","isSameClass-GenericsHelper-Type-Class","useImpl-GenericsHelper-Type-Class","getGenericComponentType-GenericsHelper.GenericArrayTypeImpl-","equals-GenericsHelper.GenericArrayTypeImpl-Object","hashCode-GenericsHelper.GenericArrayTypeImpl-","toString-GenericsHelper.GenericArrayTypeImpl-","getActualTypeArguments-GenericsHelper.ParameterizedTypeImpl-","getOwnerType-GenericsHelper.ParameterizedTypeImpl-","getRawType-GenericsHelper.ParameterizedTypeImpl-","equals-GenericsHelper.ParameterizedTypeImpl-Object","hashCode-GenericsHelper.ParameterizedTypeImpl-","toString-GenericsHelper.ParameterizedTypeImpl-"]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"createGenericArrayType-GenericsHelper-Type","callMethodNameReferTo":{},"num":14,"succs":[[4,6,5,2,3,1],[2],[],[4],[],[9,10],[7],[12,0,11],[9],[],[],[],[13,8],[]],"attribute":["Method Declaration ","PUBLIC","STATIC","Class Or Interface Type GenericArrayType ","Simple Name createGenericArrayType ","Parameter Type componentType ","Block Stmt ","Return Stmt ","Name Expr componentType ","Simple Name componentType ","Class Or Interface Type Type ","ReturnStmt","Object Creation Expr GenericArrayTypeImpl Optional.empty Optional.empty ","Class Or Interface Type GenericArrayTypeImpl "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"createParameterizedType-GenericsHelper-Type[]-Type-Type","callMethodNameReferTo":{},"num":23,"succs":[[3,5,8,4,2,7,6,1],[2],[],[4],[],[16,11],[18,13],[15,19],[9],[21,0,20],[11],[],[13],[],[15],[],[17],[],[],[],[],[12,22,14,10],[]],"attribute":["Method Declaration ","PUBLIC","STATIC","Class Or Interface Type ParameterizedType ","Simple Name createParameterizedType ","Parameter Type[] actualTypeArguments ","Parameter Type ownerType ","Parameter Type rawType ","Block Stmt ","Return Stmt ","Name Expr actualTypeArguments ","Simple Name actualTypeArguments ","Name Expr ownerType ","Simple Name ownerType ","Name Expr rawType ","Simple Name rawType ","Array Type 1 ","Class Or Interface Type Type ","Simple Name demo ","Class Or Interface Type Type ","ReturnStmt","Object Creation Expr ParameterizedTypeImpl Optional.empty Optional.empty ","Class Or Interface Type ParameterizedTypeImpl "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"isSameClass-GenericsHelper-Type-Class","callMethodNameReferTo":{},"num":52,"succs":[[1,25],[16,2,26,20,3],[28,8,27,3],[4,30],[18,5,7,31,32],[34,6],[7,8,27,41],[8,27,45],[10,13,12,15,14,11,9],[10],[],[12],[],[17,23],[21,24],[0,7,3],[17],[],[16,17],[18,17,4],[21],[],[20,21],[],[],[2],[],[],[29],[],[5,6],[33],[],[],[37],[19],[35],[35,38,39],[35],[40,19],[],[42,26,22],[44,36,43],[],[47,49,48,9],[46],[],[48],[],[50],[44,51,27],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Return Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Primitive Type boolean ","Simple Name isSameClass ","Parameter Type type ","Parameter Class clazz ","Block Stmt ","Class Or Interface Type List ","Name Expr iter ","Name Expr type ","Name Expr type ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Class Or Interface Type Type ","Class Or Interface Type Class ","Block Stmt ","EQUALS","ReturnStmt","Void Type ","true","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Name Expr pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Class Or Interface Type ParameterizedType ","Binary Expr EQUALS ","Method Call Expr ","Simple Name getRawType ","If Stmt ","Boolean Literal Expr false ","false","Class Or Interface Type Type ","Simple Name getRawType ","Block Stmt ","Binary Expr EQUALS ","Name Expr rawType "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"useImpl-GenericsHelper-Type-Class","callMethodNameReferTo":{},"num":87,"succs":[[1,26],[28,16,2,3,27],[21,8,3,30],[4,31],[7,18,5,32,27],[6,34],[42,7,8,30],[54],[15,14,11,12,13,10,9],[10],[],[12],[],[24,17],[22,25],[7,0,3],[17],[],[17,16],[4,18,17],[17,19],[22],[],[22,21,48],[],[],[2],[29,33],[],[],[],[6,5],[],[],[38],[19],[35],[35,36],[35,40,39],[35],[41,19],[],[45,49,43,23,44],[],[51,50,46,36],[37,53,52,47],[],[],[],[60,62,10,65,61,64,63,9],[],[78,77,76,9],[],[82,83,84,9],[56,55],[],[57,20,58],[59],[],[],[61],[],[70,46],[72,47],[48,73],[66],[49,74,30],[46],[47],[48],[71],[],[],[],[68,75,69,67],[],[77,80],[],[79],[81,51,30],[],[],[83],[],[85],[53,30,86],[]],"attribute":["For Each Stmt ","Method Call Expr ","Return Stmt ","For Stmt ","Instance Of Expr ","Expression Stmt ","Return Stmt ","Throw Stmt ","Method Declaration ","PUBLIC","STATIC","Simple Name lang ","Simple Name Integer ","Parameter Type type ","Parameter Class clazz ","Block Stmt ","Name Expr list ","Name Expr iter ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Simple Name User ","Class Or Interface Type Class ","Block Stmt ","InstanceOfExpr","Class Or Interface Type Class ","Class","ReturnStmt","Block Stmt ","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Name Expr pType ","Name Expr pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Method Call Expr ","Simple Name createParameterizedType ","Method Call Expr ","Method Call Expr ","Simple Name actualTypeArguments ","Simple Name ownerType ","Simple Name rawType ","Method Declaration ","Simple Name getActualTypeArguments ","Method Declaration ","Simple Name getOwnerType ","Method Declaration ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr","Class Or Interface Type ParameterizedType ","Simple Name createParameterizedType ","Parameter Type[] actualTypeArguments ","Parameter Type ownerType ","Parameter Type rawType ","Block Stmt ","Return Stmt ","Name Expr actualTypeArguments ","Name Expr ownerType ","Name Expr rawType ","Array Type 1 ","Class Or Interface Type Type ","Simple Name demo ","Class Or Interface Type Type ","Object Creation Expr ParameterizedTypeImpl Optional.empty Optional.empty ","Class Or Interface Type ParameterizedTypeImpl ","Array Type 1 ","Simple Name getActualTypeArguments ","Block Stmt ","Throw Stmt ","Class Or Interface Type Type ","Name Expr actualTypeArguments ","Class Or Interface Type Type ","Simple Name getOwnerType ","Block Stmt ","Return Stmt ","Name Expr ownerType "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"getGenericComponentType-GenericsHelper.GenericArrayTypeImpl-","callMethodNameReferTo":{},"num":9,"succs":[[3,5,4,1,2],[],[],[4],[],[6],[0,8,7],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Type ","Simple Name getGenericComponentType ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr componentType "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"equals-GenericsHelper.GenericArrayTypeImpl-Object","callMethodNameReferTo":{},"num":60,"succs":[[13,1],[22,21,2,15],[3,14],[28,29,4,27],[5,39],[6,47,24],[10,9,12,11,7,8],[],[],[10],[],[16,20],[5,4,0,2],[25,6,24],[37,6,24],[16],[],[16,15],[17,16],[18,16],[],[23],[],[],[],[26],[],[17,22,30],[],[32,33,34],[31],[],[35],[],[18,36],[],[],[38],[],[43],[19],[40],[41,40],[45,40,44],[40],[19,46],[],[50,49,48],[33,52,51],[55,53,6,54],[57,22,58],[],[31],[],[],[16,41,56],[],[42,59],[31],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr OR ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name equals ","Parameter Object o ","Block Stmt ","Return Stmt ","Return Stmt ","Name Expr o ","Simple Name o ","Integer Literal Expr Note Zero  ","Name Expr o ","Name Expr o ","Class Or Interface Type Object ","This Expr ","EQUALS","ThisExpr","ReturnStmt","Boolean Literal Expr true ","true","Binary Expr EQUALS ","OR","Binary Expr NOT_EQUALS ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","NOT_EQUALS","Method Call Expr ","Simple Name getClass ","Simple Name getClass ","Boolean Literal Expr false ","false","Variable Declaration Expr ","Simple Name that ","Name Expr that ","Name Expr that ","Variable Declarator GenericArrayTypeImpl that = ","Class Or Interface Type GenericArrayTypeImpl ","Cast Expr ","Class Or Interface Type GenericArrayTypeImpl ","Conditional Expr componentType != null ? componentType.equals(that.componentType) : that.componentType == null ","Binary Expr NOT_EQUALS ","Method Call Expr ","Binary Expr EQUALS ","Name Expr componentType ","Name Expr iter ","Name Expr componentType ","Simple Name equals ","Field Access Expr ","Simple Name componentType ","Field Access Expr ","Null Literal Expr ","Simple Name componentType "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"hashCode-GenericsHelper.GenericArrayTypeImpl-","callMethodNameReferTo":{},"num":19,"succs":[[5,4,1,3,2],[],[],[4],[],[6],[8,7,0],[],[9,10,11],[12,14,13],[17,0,16],[18],[],[],[15],[],[],[],[]],"attribute":["Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Name Expr Any ","Simple Name hashCode ","Block Stmt ","Return Stmt ","ReturnStmt","Conditional Expr componentType != null ? componentType.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Simple Name writeFirstBuf ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Name Expr componentType ","Simple Name hashCode ","Zero IntegerLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"toString-GenericsHelper.GenericArrayTypeImpl-","callMethodNameReferTo":{},"num":18,"succs":[[4,3,5,1,2],[],[],[4],[],[6],[0,8,7],[],[11,9,10],[13,12,10],[],[17],[14,10,15],[],[16],[16],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Simple Name newArr ","Simple Name toString ","Block Stmt ","Return Stmt ","ReturnStmt","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Char Literal Expr '}' ","Binary Expr PLUS ","Name Expr componentType ","String Literal Expr Not Empty  ","Variable Declarator int x = ","StringLiteralExpr","'}'"]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"getActualTypeArguments-GenericsHelper.ParameterizedTypeImpl-","callMethodNameReferTo":{},"num":9,"succs":[[4,3,2,1],[],[3,6],[],[5],[8,0,7],[],[],[]],"attribute":["Method Declaration ","PUBLIC","Array Type 1 ","Simple Name getActualTypeArguments ","Block Stmt ","Throw Stmt ","Class Or Interface Type Type ","ReturnStmt","Name Expr actualTypeArguments "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"getOwnerType-GenericsHelper.ParameterizedTypeImpl-","callMethodNameReferTo":{},"num":8,"succs":[[2,4,3,1],[],[3],[],[5],[0,6,7],[],[]],"attribute":["Method Declaration ","PUBLIC","Class Or Interface Type Type ","Simple Name getOwnerType ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr ownerType "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"getRawType-GenericsHelper.ParameterizedTypeImpl-","callMethodNameReferTo":{},"num":8,"succs":[[2,4,3,1],[],[3],[],[5],[0,7,6],[],[]],"attribute":["If Stmt ","PUBLIC","Class Or Interface Type Type ","Simple Name getRawType ","Block Stmt ","Binary Expr EQUALS ","ReturnStmt","Name Expr rawType "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"equals-GenericsHelper.ParameterizedTypeImpl-Object","callMethodNameReferTo":{},"num":142,"succs":[[17,1],[2,28,21,27],[18,3],[35,34,4,33],[5,45],[19,6],[57,7,56],[8,20],[66,65,9,64],[80,30,10],[15,11,13,16,14,12],[],[],[14],[],[26,22],[2,0,5,9,7,4],[31,30,10],[43,30,10],[30,63,10],[79,30,10],[22],[],[21,22],[22,23],[24,22],[],[29],[],[],[],[32],[],[28,36,23],[],[38,40,39],[37],[],[41],[],[42,24],[],[],[44],[],[52],[25],[46],[47,46],[46,48],[49,46],[46,50],[54,46,53],[46],[25,55],[],[60,59,61,58],[],[],[],[],[47,62],[],[44],[67,39,68],[57,69],[76,77,39],[],[37],[71,70,74,72],[],[],[75,73,48],[],[101,100,103,102,99,12],[],[78,49],[37],[],[44],[81,82,83],[84,85,39],[87,86,74,88],[90,28,91],[],[37],[],[],[73,50,89],[],[92,51],[37],[],[104,94],[28,111,95,106],[96,105],[34,114,97,113],[98,121],[74,129,30],[],[101],[],[73,110],[98,97,93,95],[112,74,30],[120,74,30],[73],[73,106],[107,73],[108,73],[],[29],[32],[107,28,115],[116,39,117],[37],[118],[108,119],[],[],[44],[125],[109],[122],[123,122],[127,122,126],[122],[109,128],[],[132,131,130],[39,134,133],[137,135,74,136],[139,28,140],[],[37],[],[],[73,123,138],[],[124,141],[37],[]],"attribute":["Throw Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr OR ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Conditional Expr ownerType != null ? !ownerType.equals(that.ownerType) : that.ownerType != null ","Return Stmt ","Method Declaration ","Unary Expr ++ ","PUBLIC","Primitive Type boolean ","Simple Name equals ","Parameter Object o ","Block Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Name Expr o ","Simple Name o ","Simple Name i ","Name Expr o ","Name Expr o ","Class Or Interface Type Object ","Primitive Type byte ","EQUALS","ThisExpr","ReturnStmt","Name Expr desc ","true","Binary Expr EQUALS ","OR","Binary Expr NOT_EQUALS ","Name Expr keys ","NullLiteralExpr","Method Call Expr ","NOT_EQUALS","Method Call Expr ","Simple Name getClass ","Simple Name getClass ","Simple Name field ","false","Variable Declaration Expr ","Simple Name that ","Name Expr that ","Name Expr that ","Name Expr that ","Name Expr that ","Name Expr that ","Variable Declarator ParameterizedTypeImpl that = ","Class Or Interface Type ParameterizedTypeImpl ","Cast Expr ","Class Or Interface Type ParameterizedTypeImpl ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr Arrays ","Simple Name equals ","Name Expr actualTypeArguments ","Field Access Expr ","Simple Name actualTypeArguments ","Boolean Literal Expr false ","Binary Expr NOT_EQUALS ","Unary Expr ! ","Binary Expr NOT_EQUALS ","Name Expr ownerType ","Null Literal Expr ","Method Call Expr ","Name Expr ownerType ","Simple Name equals ","Field Access Expr ","Simple Name o ","Method Declaration ","Simple Name ownerType ","Field Access Expr ","Null Literal Expr ","Simple Name ownerType ","Boolean Literal Expr false ","Conditional Expr rawType != null ? rawType.equals(that.rawType) : that.rawType == null ","Binary Expr NOT_EQUALS ","Method Call Expr ","Binary Expr EQUALS ","Name Expr rawType ","Null Literal Expr ","Name Expr rawType ","Simple Name equals ","Field Access Expr ","Simple Name rawType ","Field Access Expr ","Null Literal Expr ","Simple Name rawType ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr OR ","Expression Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name equals ","Parameter Object o ","Block Stmt ","Return Stmt ","Return Stmt ","Name Expr o ","Integer Literal Expr Note Zero  ","Name Expr o ","Name Expr o ","Class Or Interface Type Object ","This Expr ","Boolean Literal Expr true ","Binary Expr EQUALS ","Binary Expr NOT_EQUALS ","Null Literal Expr ","Method Call Expr ","Method Call Expr ","Simple Name getClass ","Simple Name getClass ","Boolean Literal Expr false ","Variable Declaration Expr ","Simple Name that ","Name Expr that ","Name Expr that ","Variable Declarator GenericArrayTypeImpl that = ","Class Or Interface Type GenericArrayTypeImpl ","Cast Expr ","Class Or Interface Type GenericArrayTypeImpl ","Conditional Expr componentType != null ? componentType.equals(that.componentType) : that.componentType == null ","Binary Expr NOT_EQUALS ","Method Call Expr ","Binary Expr EQUALS ","Name Expr componentType ","Name Expr iter ","Name Expr componentType ","Simple Name equals ","Field Access Expr ","Simple Name componentType ","Field Access Expr ","Null Literal Expr ","Simple Name componentType "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"hashCode-GenericsHelper.ParameterizedTypeImpl-","callMethodNameReferTo":{},"num":71,"succs":[[1,10],[2,27],[46,3],[4,57,22],[5,7,9,8,6],[],[],[8],[],[1,2,0,3],[23],[12,13],[],[],[11,15,16,17],[11],[],[],[20,19,14,21],[14],[],[],[18],[11,24,25],[11],[12,13,26],[],[28,29,14],[],[30,31,32],[15,33,34],[],[36],[35],[],[],[39,38,37],[41,16,40],[17,43,44],[45],[],[42],[],[],[61,60,58,59,6],[],[28,47,18],[48,31,49],[19,50,34],[51],[35],[53,52,54],[40,20,55],[56,44,21],[45],[42],[],[],[],[60],[],[62],[63,44,57],[64,65,66],[67,68,40],[70,44,69],[45],[],[42],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type int ","Simple Name hashCode ","Block Stmt ","Variable Declaration Expr ","Name Expr stream ","Name Expr Arrays ","Name Expr actualTypeArguments ","Simple Name append ","Simple Name format ","Name Expr ownerType ","Name Expr ownerType ","Simple Name append ","Name Expr result ","Name Expr rawType ","Name Expr rawType ","Name Expr result ","Variable Declarator int result = ","Primitive Type int ","Method Call Expr ","Simple Name hashCode ","Assign Expr ASSIGN ","ASSIGN","Binary Expr PLUS ","Binary Expr MULTIPLY ","PLUS","Enclosed Expr ","Integer Literal Expr Note Zero  ","MULTIPLY","IntegerLiteralExpr","Conditional Expr ownerType != null ? ownerType.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Simple Name hashCode ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Conditional Expr rawType != null ? rawType.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","ReturnStmt","Marker Annotation Expr @Override ","Name Expr Any ","Simple Name hashCode ","Block Stmt ","Return Stmt ","Conditional Expr componentType != null ? componentType.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Simple Name writeFirstBuf ","Null Literal Expr ","Name Expr componentType ","Simple Name hashCode "]}
{"fileName":"src/main/java/com/jsoniter/spi/GenericsHelper.java","version":"0.9.22","methodName":"toString-GenericsHelper.ParameterizedTypeImpl-","callMethodNameReferTo":{},"num":72,"succs":[[12,1],[2,23],[25,26,27,5,3],[29,4],[35,5],[6,40,39],[9,10,7,11,8],[],[],[10],[],[0,1,5],[18],[14],[],[16,13],[30],[15],[19,13,20],[13],[22,21,14],[],[62,61,63,60,8],[3,4],[2],[],[28],[],[],[31],[24],[30,32,33],[30],[24,34],[],[36,15,37],[],[16,38],[],[],[43,41,42],[17,42,44],[],[59],[46,42,45],[47,42,48],[55],[50,49,42],[],[51,52,42],[55],[54,42,53],[57,56,58],[55],[55],[],[],[],[],[],[],[62],[],[64],[22,65,39],[67,66,42],[69,68,42],[59],[70,42,71],[],[55],[55]],"attribute":["Expression Stmt ","Method Declaration ","Instance Of Expr ","Expression Stmt ","Method Call Expr ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Variable Declaration Expr ","Simple Name rawTypeName ","Name Expr rawType ","Name Expr rawTypeName ","Name Expr clazz ","Name Expr rawTypeName ","Variable Declarator String rawTypeName = ","Simple Name append ","Method Call Expr ","Simple Name toString ","Method Declaration ","Block Stmt ","Name Expr rawType ","Return Stmt ","InstanceOfExpr","Class Or Interface Type Class ","Class","Variable Declaration Expr ","Simple Name clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name getName ","ReturnStmt","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Char Literal Expr '}' ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr ownerType ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Name Expr Arrays ","Simple Name toString ","Name Expr actualTypeArguments ","'}'","Marker Annotation Expr @Override ","Simple Name newArr ","Simple Name toString ","Block Stmt ","Return Stmt ","Binary Expr PLUS ","Binary Expr PLUS ","Char Literal Expr '}' ","Binary Expr PLUS ","Name Expr componentType ","String Literal Expr Not Empty  ","Variable Declarator int x = "]}
