{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","hasMethodName":["valueType-MapWrapperAny-","object-MapWrapperAny-","toBoolean-MapWrapperAny-","toInt-MapWrapperAny-","toLong-MapWrapperAny-","toFloat-MapWrapperAny-","toDouble-MapWrapperAny-","toBigInteger-MapWrapperAny-","toBigDecimal-MapWrapperAny-","toString-MapWrapperAny-","writeTo-MapWrapperAny-JsonStream","size-MapWrapperAny-","get-MapWrapperAny-Object","get-MapWrapperAny-Object[]-int","entries-MapWrapperAny-","fillCacheUntil-MapWrapperAny-Object","fillCache-MapWrapperAny-","next-MapWrapperAny.WrapperIterator-","key-MapWrapperAny.WrapperIterator-","value-MapWrapperAny.WrapperIterator-"]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"valueType-MapWrapperAny-","callMethodNameReferTo":{},"num":11,"succs":[[1,3,4,5,2],[],[],[4],[],[6],[0,8,7],[],[10,9],[],[]],"attribute":["Method Declaration ","Name Expr nextToken ","PUBLIC","Class Or Interface Type ValueType ","Simple Name valueType ","Block Stmt ","Return Stmt ","ReturnStmt","Field Access Expr ","Name Expr ValueType ","Simple Name OBJECT "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"object-MapWrapperAny-","callMethodNameReferTo":{},"num":77,"succs":[[8,1],[2,11,12],[6,3,5,7,4],[],[],[6],[],[1,0],[10,9],[],[27,26,28,29],[],[],[14,30],[33,34,15,32,16],[16,36],[17,40],[18,47,19],[41,19],[49,20],[52,21],[60,22],[23,61,62,54,24],[63],[25,64],[18,74],[],[28],[],[17,13,16],[15],[14],[],[],[35],[],[37,31,38],[],[39],[],[43],[42],[],[41,45,44],[41],[46,42],[],[25,21,24,20],[49],[51],[49,48],[49],[56],[48],[53],[53,54],[53,57,58],[53],[59,48],[],[23],[],[],[],[67],[50],[65],[65,68,69],[65],[72,70,71],[],[],[50,73],[],[75,55,76,66],[],[]],"attribute":["Assign Expr ASSIGN ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr entries ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Simple Name entries ","Name Expr val ","Variable Declarator Set<Map.Entry<String, Object>> entries = ","Class Or Interface Type Set ","Method Call Expr ","Simple Name entrySet ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Variable Declaration Expr ","Simple Name key ","Name Expr key ","Name Expr key ","Variable Declarator String key = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Name Expr cache ","Simple Name containsKey ","continue;","Variable Declaration Expr ","Simple Name element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Name Expr cache ","Simple Name put "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"toBoolean-MapWrapperAny-","callMethodNameReferTo":{},"num":23,"succs":[[3,5,1,4,2],[],[],[4],[],[6],[0,8,7],[],[9,10,11],[13,12],[],[14],[],[18,15,16,17,2],[],[],[17],[],[19],[13,20,7],[21,13,22],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name toBoolean ","Block Stmt ","Return Stmt ","ReturnStmt","Binary Expr NOT_EQUALS ","Method Call Expr ","NOT_EQUALS","Integer Literal Expr Zero  ","Simple Name size ","Method Declaration ","Zero IntegerLiteralExpr","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Return Stmt ","Method Call Expr ","Name Expr val ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"toInt-MapWrapperAny-","callMethodNameReferTo":{},"num":19,"succs":[[4,1,2,3,5],[],[],[4],[],[6],[8,7,0],[],[10,9],[],[14,11,2,12,13],[],[13],[],[15],[10,16,7],[17,10,18],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type int ","Simple Name toInt ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Return Stmt ","Method Call Expr ","Name Expr val ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"toLong-MapWrapperAny-","callMethodNameReferTo":{},"num":19,"succs":[[1,5,4,3,2],[],[],[4],[],[6],[8,7,0],[],[10,9],[],[14,11,2,12,13],[],[13],[],[15],[10,16,7],[17,10,18],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type long ","Simple Name toLong ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Return Stmt ","Method Call Expr ","Name Expr val ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"toFloat-MapWrapperAny-","callMethodNameReferTo":{},"num":19,"succs":[[1,5,4,3,2],[],[],[4],[],[6],[8,0,7],[],[10,9],[],[14,11,2,12,13],[],[13],[],[15],[10,16,7],[17,10,18],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type float ","Simple Name toFloat ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Return Stmt ","Method Call Expr ","Name Expr val ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"toDouble-MapWrapperAny-","callMethodNameReferTo":{},"num":19,"succs":[[4,5,1,3,2],[],[],[4],[],[6],[8,7,0],[],[10,9],[],[14,11,2,12,13],[],[13],[],[15],[10,16,7],[17,10,18],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type double ","Simple Name toDouble ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Return Stmt ","Method Call Expr ","Name Expr val ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"toBigInteger-MapWrapperAny-","callMethodNameReferTo":{},"num":22,"succs":[[4,3,5,1,2],[],[],[4],[],[6],[8,7,0],[],[11,10,9],[],[],[13,12],[],[17,14,15,16,2],[],[16],[],[18],[13,19,7],[20,13,21],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type BigDecimal ","Simple Name toBigDecimal ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr BigDecimal ","Simple Name valueOf ","Method Call Expr ","Simple Name size ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Return Stmt ","Method Call Expr ","Name Expr val ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"toBigDecimal-MapWrapperAny-","callMethodNameReferTo":{},"num":22,"succs":[[5,3,1,4,2],[],[],[4],[],[6],[0,8,7],[],[9,10,11],[],[],[13,12],[],[17,14,15,16,2],[],[16],[],[18],[13,19,7],[20,13,21],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type BigDecimal ","Simple Name toBigDecimal ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name writeFalse ","Simple Name valueOf ","Method Call Expr ","Simple Name size ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name size ","Block Stmt ","Return Stmt ","Method Call Expr ","Name Expr val ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"toString-MapWrapperAny-","callMethodNameReferTo":{"19":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object","26":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":91,"succs":[[12,3,1],[15,2,3,14,16],[19,18,6],[5,4],[23,5],[26,18,6],[11,9,10,7,8],[],[],[10],[],[0],[2],[1],[],[],[17],[],[],[21,20,22],[],[],[],[25,24],[],[43,42,44,45],[27,28,13],[],[],[30,46],[15,49,31,48,32],[32,50],[33,54],[34,61,35],[55,35],[63,36],[66,37],[74,38],[39,76,75,68,40],[77],[41,78],[34,88],[],[44],[],[33,29,32],[31],[30],[],[17],[51,47,52],[],[53],[],[57],[56],[],[55,59,58],[55],[60,56],[],[41,37,40,36],[63],[65],[63,62],[63],[70],[62],[67],[67,68],[67,71,72],[67],[73,62],[],[39],[],[],[],[81],[64],[79],[79,82,83],[79],[86,84,85],[],[],[64,87],[],[89,69,90,80],[],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Class Or Interface Type JsonIterator ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Simple Name iter ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Name Expr val ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr entries ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Simple Name entries ","Name Expr val ","Variable Declarator Set<Map.Entry<String, Object>> entries = ","Class Or Interface Type Set ","Method Call Expr ","Simple Name entrySet ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Variable Declaration Expr ","Simple Name key ","Name Expr key ","Name Expr key ","Variable Declarator String key = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Name Expr cache ","Simple Name containsKey ","continue;","Variable Declaration Expr ","Simple Name element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Name Expr cache ","Simple Name put "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"writeTo-MapWrapperAny-JsonStream","callMethodNameReferTo":{},"num":96,"succs":[[1,3,20],[22,23,3,24,2],[26],[4,5],[5,29],[32],[13,11,10,9,15,12,7,8],[],[],[10],[],[17,19],[14],[],[],[0],[17],[],[16,17],[],[2],[1],[],[],[25],[],[16,27,28],[],[],[31,30],[],[48,47,49,50],[33,18,21],[],[35,51],[23,54,53,36,37],[37,55],[38,59],[39,66,40],[60,40],[68,41],[71,42],[79,43],[44,80,81,73,45],[82],[46,83],[39,93],[],[49],[],[34,38,37],[36],[35],[],[25],[56,52,57],[],[58],[],[62],[61],[],[60,64,63],[60],[65,61],[],[46,42,45,41],[68],[70],[68,67],[68],[75],[67],[72],[72,73],[72,76,77],[72],[78,67],[],[44],[],[],[],[86],[69],[84],[87,84,88],[84],[91,89,90],[],[],[69,92],[],[94,74,95,85],[],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Void Type ","Simple Name writeTo ","Parameter JsonStream stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Class Or Interface Type JsonStream ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeVal ","Name Expr val ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr entries ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Simple Name entries ","Name Expr val ","Variable Declarator Set<Map.Entry<String, Object>> entries = ","Class Or Interface Type Set ","Method Call Expr ","Simple Name entrySet ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Variable Declaration Expr ","Simple Name key ","Name Expr key ","Name Expr key ","Variable Declarator String key = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Name Expr cache ","Simple Name containsKey ","continue;","Variable Declaration Expr ","Simple Name element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Name Expr cache ","Simple Name put "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"size-MapWrapperAny-","callMethodNameReferTo":{},"num":11,"succs":[[5,1,4,2,3],[],[],[4],[],[6],[0,8,7],[],[9,0,10],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type int ","Simple Name size ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr val ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"get-MapWrapperAny-Object","callMethodNameReferTo":{},"num":125,"succs":[[3,6,4,5,1,2],[],[],[4],[],[10,9],[7],[0,12,11],[14,9],[],[],[],[13,8,15],[],[],[42,39,38,40,41],[48,17],[52,51,18,50,19],[54,19],[20,58],[21,71],[23,73,22,72,61],[23,15,11,62],[24,74],[81,25],[88,26,27],[37,75,27],[28,90],[29,92],[102,30],[103,94,104,32,31],[105],[106,33],[34,112],[115,35],[36,117,26,118,116],[66,26,15,11],[15,122,11],[],[40],[],[14,47],[24,37,23,25,20,16,19],[14,9],[14,43],[14,44],[14,45],[],[18],[17],[],[],[53],[],[55,56,49],[],[57],[],[67],[60,43],[],[59],[21,59,61],[64,59,62],[89,90],[63],[63,65],[68,59,69],[59],[0,70,60,43],[],[22],[],[53],[77],[76],[],[75,79,78],[75],[80,76],[],[84],[44],[82],[85,82,86],[82],[87,44],[],[34,29,28,33,32],[90],[91],[90],[98],[89],[93],[93,94],[95,93],[93,96],[99,100,93],[93],[89,101],[],[31],[],[],[],[55,107,63],[109,108,110],[],[],[64,111],[],[95,113,114,65],[],[],[36],[51,119,83],[],[97,121,45],[120,96],[],[],[123,124,46],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name get ","Parameter Object key ","Block Stmt ","Return Stmt ","Name Expr key ","Simple Name key ","Class Or Interface Type Object ","ReturnStmt","Method Call Expr ","Simple Name fillCacheUntil ","Simple Name target ","Method Declaration ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr entries ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Return Stmt ","Return Stmt ","PRIVATE","Class Or Interface Type Any ","Simple Name fillCacheUntil ","Parameter Object target ","Block Stmt ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Class Or Interface Type Object ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Return Stmt ","Name Expr cache ","Name Expr element ","Name Expr element ","Name Expr element ","Name Expr entry ","Name Expr element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","Variable Declaration Expr ","Simple Name entries ","Name Expr val ","Variable Declarator Set<Map.Entry<String, Object>> entries = ","Class Or Interface Type Set ","Method Call Expr ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name targetHashcode ","Name Expr targetHashcode ","Variable Declaration Expr ","Primitive Type int ","Method Call Expr ","Simple Name hashCode ","Block Stmt ","Name Expr entry ","Simple Name entry ","Class Or Interface Type Entry ","Variable Declaration Expr ","Simple Name key ","Name Expr key ","Name Expr key ","Name Expr key ","Name Expr key ","Variable Declarator String key = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Name Expr cache ","Simple Name containsKey ","continue;","Assign Expr ASSIGN ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Name Expr cache ","Simple Name put ","Block Stmt ","Binary Expr EQUALS ","AND","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name equals ","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Name Expr val "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"get-MapWrapperAny-Object[]-int","callMethodNameReferTo":{"84":"src/main/java/com/jsoniter/any/Any.java-get-Any-Object[]-int","104":"src/main/java/com/jsoniter/any/Any.java-rewrap-Any-List<Any>","125":"src/main/java/com/jsoniter/any/Any.java-get-Any-Object[]-int"},"num":323,"succs":[[1,44],[45,3,2,46,35],[21,3,48,49],[4,51],[58,5],[53,16,59,6],[60,7],[8,63],[10,9,71],[77,10,76,15],[73,11],[12,78],[13,92],[14,93,94,9,95],[100,9],[21,16,104,48],[107,17],[117,18],[118,109,45,19,20],[21,120,48,20],[125,21,48],[27,24,26,28,25,22,23],[],[],[25],[],[30,41],[43,36],[0,3,4,16,17,20],[30],[],[30,29],[30,31],[30,32],[30,33],[36],[],[35,36],[37,36],[38,36],[39,36],[42],[],[],[2],[],[29,47],[],[],[50],[],[55],[37,31],[52],[53,115,52],[56,57,52],[52],[37,31],[8,7,6,15],[],[61,62],[],[143,142,144,145],[67],[65],[],[65,64],[69,65,68],[65],[70],[],[12,11],[73],[75],[73,72],[73],[],[],[82],[38,72,32],[79],[80,13,79],[84,79,83],[79],[21,85,86,87,32],[72,88],[],[38,89,36,90],[],[],[91],[],[14],[97,96,80],[],[99,98],[],[192,191,194,193,23],[],[],[102,81,64,101],[],[74,103],[],[66,106,105],[],[],[111],[54],[108],[109,108],[112,113,108],[108],[54,116,114],[],[],[224,221,142,222,223],[19],[119],[],[121,122,39,33],[],[124,123],[],[308,306,307,309,23],[21,127,126,110,34],[],[128,89,40,36],[91],[130,146],[45,149,131,148,132],[132,150],[133,154],[134,161,135],[155,135],[163,136],[166,137],[174,138],[139,176,175,168,140],[177],[141,178],[134,188],[],[144],[],[133,129,132],[131],[130],[],[119],[151,147,152],[],[153],[],[157],[156],[],[155,159,158],[155],[160,156],[],[141,137,140,136],[163],[165],[163,162],[163],[170],[162],[167],[167,168],[167,171,172],[167],[173,162],[],[139],[],[],[],[181],[164],[179],[179,182,183],[179],[186,184,185],[],[],[164,187],[],[189,169,190,180],[],[],[],[193],[],[195],[97,196,48],[198,197],[],[],[230,200],[233,201,45,232,202],[234,202],[203,237],[204,252],[206,253,205,94,240],[206,116,48,241],[207,254],[261,208],[268,209,210],[255,220,210],[211,270],[212,272],[282,213],[283,284,274,215,214],[177],[285,216],[217,291],[294,218],[219,209,296,297,295],[245,209,116,48],[116,301,48],[222],[],[115,229],[207,220,208,206,203,199,202],[115,250],[115,225],[115,226],[115,227],[],[201],[200],[],[119],[151,235,231],[236],[],[246],[239,225],[],[238],[238,204,240],[243,238,241],[269,270],[242],[242,244],[247,238,248],[238],[251,249,239,225],[],[],[314,317,315,316,313,23],[205],[119],[257],[256],[],[255,259,258],[255],[260,256],[],[264],[226],[262],[265,262,266],[262],[267,226],[],[217,212,211,216,215],[270],[271],[270],[278],[269],[273],[273,274],[275,273],[273,276],[273,280,279],[273],[269,281],[],[214],[],[],[151,286,242],[288,289,287],[],[],[243,290],[],[275,292,293,244],[],[],[219],[298,45,263],[],[277,300,227],[299,276],[],[],[302,303,228],[],[],[310,305],[124,48,312],[],[308],[],[305,304],[62,311],[],[],[],[315],[],[320,250],[318],[251,321,48],[115,250],[],[322,319,116],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name get ","Parameter Object[] keys ","Parameter int idx ","Block Stmt ","This Expr ","Simple Name keys ","Name Expr keys ","Name Expr keys ","Name Expr keys ","Name Expr keys ","Name Expr idx ","Simple Name idx ","Name Expr idx ","Name Expr idx ","Name Expr idx ","Name Expr idx ","Array Type 1 ","Class Or Interface Type Object ","Primitive Type int ","Block Stmt ","EQUALS","Field Access Expr ","Simple Name length ","ReturnStmt","This Expr ","ThisExpr","Variable Declaration Expr ","Simple Name get ","Name Expr key ","Name Expr key ","Variable Declarator Object key = ","Class Or Interface Type Object ","Array Access Expr idx ","Block Stmt ","Simple Name isWildcard ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Variable Declaration Expr ","Name Expr result ","Simple Name result ","Name Expr result ","Variable Declarator HashMap<String, Any> result = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr cache ","Simple Name entrySet ","Variable Declaration Expr ","Name Expr mapped ","Name Expr result ","Name Expr mapped ","Variable Declarator Any mapped = ","Class Or Interface Type Any ","Method Call Expr ","Method Call Expr ","Simple Name get ","Binary Expr PLUS ","Simple Name getValue ","PLUS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Method Call Expr ","NOT_EQUALS","Field Access Expr ","Simple Name valueType ","Method Declaration ","Name Expr ValueType ","Simple Name INVALID ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name getKey ","Method Call Expr ","Name Expr Any ","Simple Name rewrap ","Variable Declaration Expr ","Simple Name child ","Name Expr child ","Name Expr child ","Variable Declarator Any child = ","Class Or Interface Type Any ","Expression Stmt ","Simple Name fillCacheUntil ","Simple Name target ","Method Declaration ","Block Stmt ","Null Literal Expr ","NullLiteralExpr","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Method Call Expr ","Simple Name object ","Method Declaration ","Method Call Expr ","Simple Name get ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr entries ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Simple Name entries ","Name Expr val ","Variable Declarator Set<Map.Entry<String, Object>> entries = ","Class Or Interface Type Set ","Method Call Expr ","Simple Name entrySet ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Variable Declaration Expr ","Simple Name key ","Name Expr key ","Name Expr key ","Variable Declarator String key = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Name Expr cache ","Simple Name containsKey ","continue;","Variable Declaration Expr ","Simple Name element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Name Expr cache ","Simple Name put ","Name Expr nextToken ","Class Or Interface Type ValueType ","Simple Name valueType ","Block Stmt ","Return Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name OBJECT ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr entries ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Return Stmt ","Return Stmt ","Class Or Interface Type Any ","Simple Name fillCacheUntil ","Parameter Object target ","Block Stmt ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Class Or Interface Type Object ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Return Stmt ","Name Expr cache ","Name Expr element ","Name Expr element ","Name Expr element ","Name Expr entry ","Name Expr element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Simple Name key ","Method Declaration ","Block Stmt ","Null Literal Expr ","Variable Declaration Expr ","Simple Name entries ","Name Expr val ","Variable Declarator Set<Map.Entry<String, Object>> entries = ","Class Or Interface Type Set ","Method Call Expr ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name targetHashcode ","Name Expr targetHashcode ","Variable Declaration Expr ","Primitive Type int ","Method Call Expr ","Simple Name hashCode ","Block Stmt ","Name Expr entry ","Simple Name entry ","Class Or Interface Type Entry ","Variable Declaration Expr ","Simple Name key ","Name Expr key ","Name Expr key ","Name Expr key ","Name Expr key ","Variable Declarator String key = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Name Expr cache ","Simple Name containsKey ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Name Expr cache ","Simple Name put ","Block Stmt ","Binary Expr EQUALS ","AND","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name equals ","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Name Expr val ","Assign Expr ASSIGN ","Return Stmt ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Name Expr cache ","Marker Annotation Expr @Override ","Class Or Interface Type Any ","Simple Name get ","Parameter Object key ","Block Stmt ","Return Stmt ","Name Expr key ","Class Or Interface Type Object ","Method Call Expr ","Simple Name fillCacheUntil "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"entries-MapWrapperAny-","callMethodNameReferTo":{},"num":10,"succs":[[1,4,5,3,2],[],[],[4],[],[6],[0,8,7],[],[9],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type EntryIterator ","Simple Name entries ","Block Stmt ","Return Stmt ","ReturnStmt","Object Creation Expr WrapperIterator Optional.empty Optional.empty ","Class Or Interface Type WrapperIterator "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"fillCacheUntil-MapWrapperAny-Object","callMethodNameReferTo":{"96":"src/main/java/com/jsoniter/any/Any.java-wrap-Any-int"},"num":125,"succs":[[34,1],[38,2,37,36,3],[40,3],[4,44],[5,59],[7,61,6,60,47],[7,22,62,48],[8,63],[70,9],[77,10,11],[21,64,11],[12,79],[13,81],[91,14],[92,83,93,16,15],[94],[95,17],[18,101],[104,19],[20,10,106,107,105],[52,10,22,62],[22,111,62],[27,24,23,25,26],[],[25],[],[29,33],[8,21,9,7,4,0,3],[29,57],[],[29,28],[29,30],[29,31],[],[2],[1],[],[],[39],[],[41,42,35],[],[43],[],[53],[46,28],[],[45],[45,5,47],[50,45,48],[78,79],[49],[49,51],[54,55,45],[45],[58,56,46,28],[],[],[119,116,117,118,115,114],[6],[],[39],[],[66],[65],[],[64,68,67],[64],[69,65],[],[73],[30],[71],[74,75,71],[71],[76,30],[],[18,13,12,17,16],[79],[80],[79],[87],[78],[82],[82,83],[84,82],[82,85],[88,82,89],[82],[78,90],[],[15],[],[],[],[41,96,49],[98,97,99],[],[],[50,100],[],[84,102,103,51],[],[],[20],[108,37,72],[],[86,110,31],[109,85],[],[],[112,113,32],[],[],[],[],[117],[],[122,57],[120],[58,123,62],[29,57],[],[124,121,22],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr entries ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Return Stmt ","Return Stmt ","Method Declaration ","PRIVATE","Class Or Interface Type Any ","Simple Name fillCacheUntil ","Parameter Object target ","Block Stmt ","Name Expr target ","Simple Name target ","Name Expr target ","Name Expr target ","Name Expr target ","Class Or Interface Type Object ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Return Stmt ","Name Expr cache ","Name Expr element ","Name Expr element ","Name Expr element ","Name Expr entry ","Name Expr element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Simple Name key ","Method Declaration ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","ReturnStmt","Variable Declaration Expr ","Simple Name entries ","Name Expr val ","Variable Declarator Set<Map.Entry<String, Object>> entries = ","Class Or Interface Type Set ","Method Call Expr ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name targetHashcode ","Name Expr targetHashcode ","Variable Declaration Expr ","Primitive Type int ","Method Call Expr ","Simple Name hashCode ","Block Stmt ","Name Expr entry ","Simple Name entry ","Class Or Interface Type Entry ","Variable Declaration Expr ","Simple Name key ","Name Expr key ","Name Expr key ","Name Expr key ","Name Expr key ","Variable Declarator String key = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Name Expr cache ","Simple Name containsKey ","continue;","Assign Expr ASSIGN ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Name Expr cache ","Simple Name put ","Block Stmt ","Binary Expr EQUALS ","AND","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name equals ","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Name Expr val ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name get ","Parameter Object key ","Block Stmt ","Return Stmt ","Name Expr key ","Class Or Interface Type Object ","Method Call Expr ","Simple Name fillCacheUntil "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"fillCache-MapWrapperAny-","callMethodNameReferTo":{"57":"src/main/java/com/jsoniter/any/Any.java-wrap-Any-int"},"num":65,"succs":[[1,18],[21,22,2,20,3],[3,24],[4,28],[5,35,6],[29,6],[37,7],[40,8],[48,9],[10,49,50,42,11],[51],[12,52],[5,62],[15,14,16,17],[],[16],[],[0,4,3],[2],[1],[],[],[23],[],[25,19,26],[],[27],[],[31],[30],[],[29,33,32],[29],[34,30],[],[12,8,11,7],[37],[39],[37,36],[37],[44],[36],[41],[41,42],[41,45,46],[41],[47,36],[],[10],[],[],[],[55],[38],[53],[56,53,57],[53],[60,58,59],[],[],[38,61],[],[63,43,64,54],[],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr entries ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Simple Name entries ","Name Expr val ","Variable Declarator Set<Map.Entry<String, Object>> entries = ","Class Or Interface Type Set ","Method Call Expr ","Simple Name entrySet ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Variable Declaration Expr ","Simple Name key ","Name Expr key ","Name Expr key ","Variable Declarator String key = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Name Expr cache ","Simple Name containsKey ","continue;","Variable Declaration Expr ","Simple Name element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Name Expr cache ","Simple Name put "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"next-MapWrapperAny.WrapperIterator-","callMethodNameReferTo":{"176":"src/main/java/com/jsoniter/any/Any.java-wrap-Any-int","65":"src/main/java/com/jsoniter/any/Any.java-wrap-Any-int"},"num":194,"succs":[[20,1],[22,23,3,2,24],[3,26],[30,4],[5,32,6,31],[36,6,35,14],[38,7],[8,47],[9,51],[59,10],[62,23,11,63,13],[64,12],[70,13],[74,35,14],[17,15,18,19,16],[],[],[18],[],[8,3,0,9,6,13,7],[2],[1],[],[],[25],[],[27,28,21],[],[29],[],[5],[33,34],[],[],[],[],[37],[],[43],[40],[],[39],[41,39],[44,45,39],[39],[46,40,14],[],[27,49,48],[],[50,41],[],[27,52,53],[],[58,56,55,54],[],[],[57],[],[77,80,78,79,16,76],[11,12],[10],[10],[],[25],[27,65,60],[67,68,66],[],[],[42,69],[],[71,61,72,73],[],[],[],[75],[],[],[78],[],[83,57],[81],[58,84,35],[86,57],[],[85,82,87],[],[],[114,111,110,112,113],[120,89],[123,23,90,122,91],[124,91],[92,127],[93,140],[95,142,94,141,130],[95,87,35,131],[96,143],[150,97],[157,98,99],[144,109,99],[100,159],[101,161],[171,102],[172,173,163,104,103],[174],[175,105],[106,181],[184,107],[108,186,98,187,185],[135,98,87,35],[87,191,35],[],[112],[],[86,119],[96,109,97,95,92,88,91],[86,57],[86,115],[86,116],[86,117],[],[90],[89],[],[25],[27,125,121],[126],[],[136],[129,115],[],[128],[93,128,130],[133,128,131],[158,159],[132],[132,134],[137,138,128],[128],[58,139,129,115],[],[94],[],[25],[146],[145],[],[144,148,147],[144],[149,145],[],[153],[116],[151],[154,151,155],[151],[156,116],[],[106,101,100,105,104],[159],[160],[159],[167],[158],[162],[162,163],[164,162],[162,165],[162,169,168],[162],[158,170],[],[103],[],[],[],[27,176,132],[178,177,179],[],[],[133,180],[],[164,182,183,134],[],[],[108],[23,188,152],[],[166,190,117],[189,165],[],[],[192,193,118],[],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name next ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr iter ","Simple Name hasNext ","ReturnStmt","Boolean Literal Expr false ","false","Variable Declaration Expr ","Simple Name entry ","Name Expr iter ","Name Expr entry ","Name Expr entry ","Variable Declarator Map.Entry<String, Object> entry = ","Class Or Interface Type Entry ","Method Call Expr ","Simple Name next ","Assign Expr ASSIGN ","Name Expr key ","Method Call Expr ","Simple Name getKey ","Assign Expr ASSIGN ","Name Expr value ","Method Call Expr ","Name Expr cache ","Simple Name get ","Name Expr key ","Simple Name key ","Method Declaration ","Block Stmt ","Name Expr value ","Name Expr value ","Name Expr value ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Name Expr cache ","Simple Name put ","Name Expr key ","Boolean Literal Expr true ","true","Marker Annotation Expr @Override ","Class Or Interface Type Any ","Simple Name get ","Parameter Object key ","Block Stmt ","Return Stmt ","Name Expr key ","Class Or Interface Type Object ","Method Call Expr ","Simple Name fillCacheUntil ","Simple Name target ","Method Declaration ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr entries ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Return Stmt ","Return Stmt ","PRIVATE","Class Or Interface Type Any ","Simple Name fillCacheUntil ","Parameter Object target ","Block Stmt ","Name Expr target ","Name Expr target ","Name Expr target ","Name Expr target ","Class Or Interface Type Object ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Return Stmt ","Name Expr cache ","Name Expr element ","Name Expr element ","Name Expr element ","Name Expr entry ","Name Expr element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","Variable Declaration Expr ","Simple Name entries ","Name Expr val ","Variable Declarator Set<Map.Entry<String, Object>> entries = ","Class Or Interface Type Set ","Method Call Expr ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name targetHashcode ","Name Expr targetHashcode ","Variable Declaration Expr ","Primitive Type int ","Method Call Expr ","Simple Name hashCode ","Block Stmt ","Name Expr entry ","Simple Name entry ","Class Or Interface Type Entry ","Variable Declaration Expr ","Simple Name key ","Name Expr key ","Name Expr key ","Name Expr key ","Name Expr key ","Variable Declarator String key = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Name Expr cache ","Simple Name containsKey ","continue;","Assign Expr ASSIGN ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Name Expr cache ","Simple Name put ","Block Stmt ","Binary Expr EQUALS ","AND","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name equals ","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Name Expr val "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"key-MapWrapperAny.WrapperIterator-","callMethodNameReferTo":{},"num":9,"succs":[[3,1,5,4,2],[],[],[4],[],[6],[7,0,8],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name key ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr key "]}
{"fileName":"src/main/java/com/jsoniter/any/MapWrapperAny.java","version":"0.9.22","methodName":"value-MapWrapperAny.WrapperIterator-","callMethodNameReferTo":{},"num":9,"succs":[[5,4,1,3,2],[],[],[4],[],[6],[8,0,7],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name value ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr value "]}
