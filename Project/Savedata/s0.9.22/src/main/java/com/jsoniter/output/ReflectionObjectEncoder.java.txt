{"fileName":"src/main/java/com/jsoniter/output/ReflectionObjectEncoder.java","version":"0.9.22","hasMethodName":["encode-ReflectionObjectEncoder-Object-JsonStream","wrap-ReflectionObjectEncoder-Object","enocde_-ReflectionObjectEncoder-Object-JsonStream","writeEncodeTo-ReflectionObjectEncoder-JsonStream-boolean-EncodeTo-Object"]}
{"fileName":"src/main/java/com/jsoniter/output/ReflectionObjectEncoder.java","version":"0.9.22","methodName":"encode-ReflectionObjectEncoder-Object-JsonStream","callMethodNameReferTo":{},"num":328,"succs":[[23,2,4,24,1,25],[26],[33,32,3],[34],[36,5,37],[38],[7,12,14,9,16,11,13,10,8],[],[],[10],[],[21,18],[22,20],[91,15],[],[],[0],[18,28],[],[20,29],[],[],[],[1],[31,2],[4,35],[27,30,19,17],[],[],[],[85,87,89,88,13,92,86,90],[3],[],[],[],[5],[],[],[40,39],[],[],[111,42],[112,43,45,113,93],[115,44],[30,45,117],[118,46],[120,47],[136,49,48],[49,52],[138,50],[51,140],[48,150],[159,53,54],[57,54],[161,55],[163,56],[173,53],[58,59,176],[184,183,80,59],[178,60],[73,185,61],[73,186,177,62],[187,63],[64,201,65],[206,79,189,65],[66,203],[69,207,67],[126,69,68],[208,71],[70],[210,71],[213,72],[64,219],[74,79],[75,225,77],[126,76,77],[79,226],[78],[228,79],[58,230],[81,234,83],[82,131,83],[235],[84],[237],[],[87],[],[109,28],[110,29],[],[],[47,57,45,52,80,46,41],[28],[28,93],[28,94],[28,95],[96,28,95],[29],[98,29],[154,29,99],[102,100,105,154,29],[101,29],[101,29],[103,29],[101,29],[101,29,104],[106,29],[106,107,29],[],[],[43,44],[],[114],[],[98,116],[],[],[119,99],[],[132],[100,125,123,124,122],[125,155],[138,137,156],[157,141],[],[129,128,121,101,127],[121,155],[156,161,160],[157,164],[126,67],[75,130,126],[133,125,134],[125],[135],[],[51,50],[138],[139],[138],[142],[137,94],[144,143,141],[141],[146,145,94],[147,148],[],[137,149],[],[],[152,151,121],[],[158,100,153,123,124,122],[],[],[],[],[],[261,260,264,259,85,262,13,258,257,263],[55,56],[161],[162],[161],[165],[160,95],[167,164,166],[164],[169,168,95],[170,171],[],[160,172],[],[],[151,126,174],[175,129,128,158,101,127],[],[60],[178],[182],[177,61,178],[179,61,178],[180,177,61,178],[178],[],[],[63,62],[],[190],[179,96],[188],[191,192,188],[188],[193,194],[197,195,196],[199,198,96],[],[],[],[179,200],[],[],[66,72,71],[203],[205],[202,203],[203],[],[68],[102,209],[],[130,151,211],[212],[],[215,103,214],[],[216,217],[218,202],[],[],[222,221,220,104],[],[223,180],[204,224],[],[],[76],[105,227],[],[151,229,131],[212],[106,231,97,232],[181,233],[],[],[82],[107,236],[],[108,238,239],[],[240],[],[242,283],[243,293],[295,294,244,256],[247,245,303],[247,155,246],[304,250],[248,249],[306,249],[308,250],[310,251],[252,314,254],[316,253,315,300,254],[320,256],[255],[256,326],[158,271,117],[258],[],[154,279],[280,155],[281,156],[157,282],[],[241,256,242],[154],[154,265],[266,154],[20,154,267],[154,267,268],[245,155],[270],[156],[156,272],[273,156,275],[252,156,274],[157],[157,276,18,243],[157,277,243,276],[],[],[],[],[287],[272],[284],[284,285],[284,289,288],[284],[291,290],[292,272],[],[],[251,250,244],[296],[],[298,297,299],[301,300,285],[],[286,276,302],[],[114],[],[246],[305,265],[],[266,307],[],[270,151,309],[212],[311,267,312],[],[273,313],[],[253],[318,317],[114],[319,274],[],[],[322,321,6,277,268],[323,324],[],[325,275],[],[],[327,278,269],[]],"attribute":["Try Stmt ","Expression Stmt ","Parameter JsonException e ","Binary Expr EQUALS ","Parameter Exception e ","Variable Declaration Expr ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type long ","Simple Name toLong ","Parameter Object obj ","Parameter JsonStream stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr stream ","Simple Name stream ","Class Or Interface Type String ","Class Or Interface Type JsonStream ","Block Stmt ","Catch Clause ","Catch Clause ","Method Call Expr ","Return Stmt ","Simple Name obj ","Simple Name decode ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr fields ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr getters ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Name Expr notFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","If Stmt ","Simple Name fromName ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Name Expr notFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name enocde_ ","Parameter Object obj ","Parameter JsonStream stream ","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr stream ","Class Or Interface Type Object ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","ReturnStmt","Method Call Expr ","Simple Name writeObjectStart ","Variable Declaration Expr ","Name Expr notFirst ","Name Expr notFirst ","Name Expr encodeTo ","Name Expr val ","Simple Name notFirst ","Name Expr notFirst ","Name Expr notFirst ","Name Expr encodeTo ","Name Expr val ","Name Expr notFirst ","Name Expr notFirst ","Variable Declarator boolean notFirst = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Block Stmt ","Name Expr encodeTo ","Simple Name encodeTo ","Class Or Interface Type EncodeTo ","Variable Declaration Expr ","Simple Name val ","Variable Declarator Object val = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name get ","Field Access Expr ","Simple Name field ","Simple Name binding ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name writeEncodeTo ","Simple Name stream ","Simple Name notFirst ","Simple Name encodeTo ","Simple Name val ","Method Declaration Throws ","Block Stmt ","Name Expr encodeTo ","Simple Name encodeTo ","Class Or Interface Type EncodeTo ","Variable Declaration Expr ","Simple Name val ","Variable Declarator Object val = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Field Access Expr ","Simple Name method ","Simple Name binding ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeEncodeTo ","Block Stmt ","Name Expr unwrapper ","Simple Name unwrapper ","Name Expr unwrapper ","Name Expr unwrapper ","Name Expr unwrapper ","Class Or Interface Type UnwrapperDescriptor ","Name Expr desc ","Simple Name unwrappers ","Block Stmt ","Simple Name isMap ","Variable Declaration Expr ","Simple Name map ","Name Expr map ","Variable Declarator Map<Object, Object> map = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Object ","Class Or Interface Type Object ","Field Access Expr ","Simple Name invoke ","Simple Name method ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Block Stmt ","Method Call Expr ","Simple Name writeMore ","Assign Expr ASSIGN ","Name Expr keys ","true","Method Call Expr ","Simple Name writeObjectField ","Method Call Expr ","Method Call Expr ","Simple Name toString ","Simple Name getKey ","Method Call Expr ","Simple Name writeVal ","Field Access Expr ","Method Call Expr ","Simple Name mapValueTypeLiteral ","Simple Name getValue ","Block Stmt ","Method Call Expr ","Simple Name writeMore ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Simple Name format ","Block Stmt ","Method Call Expr ","Simple Name writeObjectEnd ","Method Call Expr ","Simple Name write ","Char Literal Expr '}' ","'}'","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Name Expr notFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name writeEncodeTo ","Parameter JsonStream stream ","Parameter boolean notFirst ","Parameter EncodeTo encodeTo ","Parameter Object val ","Class Or Interface Type IOException ","Block Stmt ","Simple Name append ","Simple Name append ","Simple Name append ","Name Expr stream ","Name Expr stream ","Name Expr notFirst ","Name Expr notFirst ","Name Expr encodeTo ","Name Expr encodeTo ","Name Expr encodeTo ","Name Expr encodeTo ","Name Expr val ","Name Expr val ","Name Expr val ","Class Or Interface Type JsonStream ","Primitive Type boolean ","Class Or Interface Type EncodeTo ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Variable Declarator OmitValue defaultValueToOmit = ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Simple Name defaultValueToOmit ","Simple Name binding ","Block Stmt ","Enclosed Expr ","LOGICAL_COMPLEMENT","Binary Expr AND ","Binary Expr NOT_EQUALS ","AND","Method Call Expr ","NOT_EQUALS","Null Literal Expr ","Simple Name shouldOmit ","Block Stmt ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeIndention ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Expression Stmt ","Simple Name writeObjectField ","Field Access Expr ","Simple Name toName ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name encoder ","Simple Name binding ","Method Call Expr ","Field Access Expr ","Simple Name encode ","Field Access Expr ","Simple Name encoder ","Simple Name binding ","Method Call Expr ","Simple Name writeVal "]}
{"fileName":"src/main/java/com/jsoniter/output/ReflectionObjectEncoder.java","version":"0.9.22","methodName":"wrap-ReflectionObjectEncoder-Object","callMethodNameReferTo":{"91":"src/main/java/com/jsoniter/any/Any.java-wrap-Any-int"},"num":94,"succs":[[28,1],[2,38,39,12,14,16,37],[3,4,40],[4,7],[42,5],[45,6],[56,3],[60,8,9],[9,16],[10,62],[65,11],[76,8],[13,81,82],[16,83],[85,86,15],[87,16],[17,90,91],[20,22,23,18,21,19],[],[],[21],[],[25,27],[0,16,1],[25],[],[25,24],[],[33],[30],[],[29,30],[30,31,25],[30,34,35],[30],[36],[],[2,7],[12,80],[84,14],[5,6],[42],[44],[41,42],[42],[48],[41,24],[46],[50,49,46],[46],[52,51,24],[54,53],[],[41,55],[],[],[29,47,58,57],[],[43,59],[],[10,11],[62],[64],[61,62],[62],[68],[61,26],[66],[70,69,66],[66],[72,26,71],[73,74],[],[61,75],[],[],[77,67,31,78],[],[79,63],[],[13],[],[],[],[15],[],[],[88,89],[],[],[],[92,32,17,93],[],[]],"attribute":["Expression Stmt ","Try Stmt ","For Each Stmt ","Name Expr fields ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr getters ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Parameter JsonException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Class Or Interface Type HashMap ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type int ","Simple Name size ","Parameter Object obj ","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Class Or Interface Type Object ","Variable Declaration Expr ","Name Expr copied ","Simple Name length ","Simple Name buffer ","Name Expr copied ","Variable Declarator HashMap<String, Object> copied = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Name Expr encodeTo ","Simple Name encodeTo ","Name Expr encodeTo ","Class Or Interface Type EncodeTo ","Variable Declaration Expr ","Name Expr Any ","Name Expr val ","Variable Declarator Object val = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name get ","Field Access Expr ","Simple Name field ","Simple Name binding ","Method Call Expr ","Simple Name obj ","Field Access Expr ","Simple Name toName ","Block Stmt ","Name Expr getter ","Simple Name getter ","Name Expr getter ","Class Or Interface Type EncodeTo ","Variable Declaration Expr ","Simple Name val ","Simple Name obj ","Variable Declarator Object val = ","Simple Name append ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Field Access Expr ","Simple Name method ","Simple Name binding ","Method Call Expr ","Char Literal Expr '[' ","Field Access Expr ","Simple Name toName ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","ReturnStmt","Method Call Expr ","Simple Name key ","Name Expr iter "]}
{"fileName":"src/main/java/com/jsoniter/output/ReflectionObjectEncoder.java","version":"0.9.22","methodName":"enocde_-ReflectionObjectEncoder-Object-JsonStream","callMethodNameReferTo":{},"num":328,"succs":[[74,1],[75,2,4,76,54],[78,3],[44,4,80],[81,5],[83,6],[99,8,7],[8,11],[101,9],[10,103],[7,113],[122,12,13],[16,13],[124,14],[126,15],[136,12],[17,139,18],[147,146,39,18],[141,19],[32,148,20],[32,149,140,21],[150,22],[23,164,24],[169,38,152,24],[25,166],[28,170,26],[89,28,27],[171,30],[29],[173,30],[176,31],[23,182],[33,38],[34,188,36],[89,35,36],[38,189],[37],[191,38],[17,193],[40,197,42],[41,94,42],[198],[43],[200],[47,45,49,48,50,53,46,51],[],[47],[],[72,55],[73,61],[52,227],[],[],[6,16,4,11,5,0,39],[55],[],[55,54],[55,56],[55,57],[58,55,57],[61],[],[60,61],[117,61,62],[65,63,68,117,61],[64,61],[64,61],[66,61],[64,61],[64,61,67],[69,61],[69,70,61],[],[],[2,3],[],[77],[],[60,79],[],[],[82,62],[],[95],[63,88,86,87,85],[88,118],[101,100,119],[120,104],[],[92,91,84,64,90],[84,118],[119,124,123],[120,127],[89,26],[34,93,89],[96,88,97],[88],[98],[],[10,9],[101],[102],[101],[105],[100,56],[107,106,104],[104],[109,108,56],[110,111],[],[100,112],[],[],[115,114,84],[],[121,63,116,86,87,85],[],[],[],[],[],[224,223,222,228,45,225,50,221,220,226],[14,15],[124],[125],[124],[128],[123,57],[130,127,129],[127],[132,131,57],[133,134],[],[123,135],[],[],[114,89,137],[138,92,91,121,64,90],[],[19],[141],[145],[140,20,141],[142,20,141],[140,143,20,141],[141],[],[],[22,21],[],[153],[142,58],[151],[154,155,151],[151],[156,157],[160,158,159],[162,161,58],[],[],[],[142,163],[],[],[25,31,30],[166],[168],[165,166],[166],[],[27],[65,172],[],[93,114,174],[175],[],[178,66,177],[],[179,180],[181,165],[],[],[185,184,183,67],[],[186,143],[167,187],[],[],[35],[68,190],[],[114,192,94],[175],[69,194,59,195],[144,196],[],[],[41],[70,199],[],[71,201,202],[],[203],[],[205,247],[206,257],[259,258,207,219],[210,208,267],[210,118,209],[268,213],[211,212],[270,212],[272,213],[274,214],[215,278,217],[280,216,279,264,217],[284,219],[218],[219,293],[121,235,80],[221],[],[117,243],[244,118],[245,119],[120,246],[],[],[204,219,205],[117],[117,229],[230,117],[291,117,231],[117,231,232],[208,118],[234],[119],[119,236],[237,119,239],[215,119,238],[120],[120,240,206,290],[120,241,240,206],[],[],[],[],[251],[236],[248],[248,249],[248,253,252],[248],[255,254],[256,236],[],[],[214,213,207],[260],[],[261,262,263],[265,264,249],[],[250,240,266],[],[77],[],[209],[269,229],[],[230,271],[],[234,114,273],[175],[275,231,276],[],[237,277],[],[216],[282,281],[77],[283,238],[],[],[286,285,292,241,232],[287,288],[],[289,239],[],[],[],[],[301,306,307,303,308,305,50,304,302],[294,242,233],[],[313,297,299,314,296,315],[316],[320,319,298],[321],[323,300,324],[325],[],[],[304],[],[311,290],[312,291],[],[295],[290,55],[291,61],[],[],[296],[318,297],[299,322],[317,44,310,309],[],[298],[],[],[],[300],[],[],[327,326],[],[]],"attribute":["If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr fields ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr getters ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Name Expr notFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","If Stmt ","Simple Name fromName ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Name Expr notFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","Void Type ","Simple Name enocde_ ","Parameter Object obj ","Parameter JsonStream stream ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr stream ","Simple Name decode ","Class Or Interface Type Object ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","ReturnStmt","Method Call Expr ","Simple Name writeObjectStart ","Variable Declaration Expr ","Name Expr notFirst ","Name Expr notFirst ","Name Expr encodeTo ","Name Expr val ","Simple Name notFirst ","Name Expr notFirst ","Name Expr notFirst ","Name Expr encodeTo ","Name Expr val ","Name Expr notFirst ","Name Expr notFirst ","Variable Declarator boolean notFirst = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Block Stmt ","Name Expr encodeTo ","Simple Name encodeTo ","Class Or Interface Type EncodeTo ","Variable Declaration Expr ","Simple Name val ","Variable Declarator Object val = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name get ","Field Access Expr ","Simple Name field ","Simple Name binding ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name writeEncodeTo ","Simple Name stream ","Simple Name notFirst ","Simple Name encodeTo ","Simple Name val ","Method Declaration Throws ","Block Stmt ","Name Expr encodeTo ","Simple Name encodeTo ","Class Or Interface Type EncodeTo ","Variable Declaration Expr ","Simple Name val ","Variable Declarator Object val = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Field Access Expr ","Simple Name method ","Simple Name binding ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeEncodeTo ","Block Stmt ","Name Expr unwrapper ","Simple Name unwrapper ","Name Expr unwrapper ","Name Expr unwrapper ","Name Expr unwrapper ","Class Or Interface Type UnwrapperDescriptor ","Name Expr desc ","Simple Name unwrappers ","Block Stmt ","Simple Name isMap ","Variable Declaration Expr ","Simple Name map ","Name Expr map ","Variable Declarator Map<Object, Object> map = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Object ","Class Or Interface Type Object ","Field Access Expr ","Simple Name invoke ","Simple Name method ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Block Stmt ","Method Call Expr ","Simple Name writeMore ","Assign Expr ASSIGN ","Name Expr keys ","true","Method Call Expr ","Simple Name writeObjectField ","Method Call Expr ","Method Call Expr ","Simple Name toString ","Simple Name getKey ","Method Call Expr ","Simple Name writeVal ","Field Access Expr ","Method Call Expr ","Simple Name mapValueTypeLiteral ","Simple Name getValue ","Block Stmt ","Method Call Expr ","Simple Name writeMore ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Simple Name format ","Block Stmt ","Method Call Expr ","Simple Name writeObjectEnd ","Method Call Expr ","Simple Name write ","Char Literal Expr '}' ","'}'","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Name Expr notFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name writeEncodeTo ","Parameter JsonStream stream ","Parameter boolean notFirst ","Parameter EncodeTo encodeTo ","Parameter Object val ","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name append ","Simple Name append ","Simple Name append ","Name Expr stream ","Name Expr stream ","Name Expr notFirst ","Name Expr notFirst ","Name Expr encodeTo ","Name Expr encodeTo ","Name Expr encodeTo ","Name Expr encodeTo ","Name Expr val ","Name Expr val ","Name Expr val ","Class Or Interface Type JsonStream ","Primitive Type boolean ","Class Or Interface Type EncodeTo ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Variable Declarator OmitValue defaultValueToOmit = ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Simple Name defaultValueToOmit ","Simple Name binding ","Block Stmt ","Enclosed Expr ","LOGICAL_COMPLEMENT","Binary Expr AND ","Binary Expr NOT_EQUALS ","AND","Method Call Expr ","NOT_EQUALS","Null Literal Expr ","Simple Name shouldOmit ","Block Stmt ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeIndention ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Expression Stmt ","Simple Name writeObjectField ","Field Access Expr ","Simple Name toName ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name encoder ","Simple Name binding ","Method Call Expr ","Field Access Expr ","Simple Name encode ","Field Access Expr ","Simple Name encoder ","Simple Name binding ","Simple Name obj ","Simple Name stream ","Method Declaration Throws ","Method Call Expr ","Simple Name writeVal ","Try Stmt ","Expression Stmt ","Parameter JsonException e ","Binary Expr EQUALS ","Parameter Exception e ","Variable Declaration Expr ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type long ","Simple Name toLong ","Parameter Object obj ","Parameter JsonStream stream ","Class Or Interface Type IOException ","Block Stmt ","Name Expr obj ","Name Expr stream ","Class Or Interface Type String ","Class Or Interface Type JsonStream ","Block Stmt ","Catch Clause ","Catch Clause ","Method Call Expr ","Return Stmt ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e "]}
{"fileName":"src/main/java/com/jsoniter/output/ReflectionObjectEncoder.java","version":"0.9.22","methodName":"writeEncodeTo-ReflectionObjectEncoder-JsonStream-boolean-EncodeTo-Object","callMethodNameReferTo":{"66":"src/main/java/com/jsoniter/spi/OmitValue.java-shouldOmit-OmitValue-Object"},"num":328,"succs":[[1,50],[2,60],[62,61,3,15],[6,4,71],[6,34,5],[72,9],[7,8],[74,8],[76,9],[10,80],[11,84,13],[86,12,85,67,13],[90,15],[14],[15,99],[16,36,101],[22,21,27,20,17,23,24,19,18,25],[],[19],[],[29,46],[47,34],[48,38],[43,49],[187,26],[],[],[0,15,1],[29],[],[29,28],[30,29],[97,29,31],[29,31,32],[],[4,34],[35],[38],[],[38,37],[39,38,41],[11,38,40],[43],[],[43,42,2,96],[43,44,42,2],[],[],[],[],[54],[37],[51],[51,52],[51,56,55],[51],[58,57],[59,37],[],[],[10,9,3],[63],[],[65,64,66],[68,67,52],[],[53,42,70],[],[69],[],[],[5],[73,28],[],[30,75],[],[35,77,78],[],[79],[],[81,31,82],[],[39,83],[],[12],[88,87],[69],[89,40],[],[],[92,91,98,44,32],[93,94],[],[95,41],[],[],[],[],[114,108,113,115,110,112,24,111,109],[100,45,33],[],[],[120,104,106,121,103,122],[123],[130,129,105],[131],[133,107,134],[135],[],[],[111],[],[118,96],[119,97],[],[102],[96,125],[97,126],[],[],[103],[128,104],[106,132],[124,127,117,116],[],[],[],[17,183,185,184,24,188,182,186],[105],[],[],[],[107],[],[],[137,136],[],[],[207,139],[208,140,142,209,189],[210,141],[127,142,101],[212,143],[214,144],[230,146,145],[146,149],[232,147],[148,234],[145,244],[247,150,151],[154,151],[249,152],[251,153],[261,150],[155,264,156],[272,271,177,156],[157,266],[170,273,158],[170,274,265,159],[275,160],[161,289,162],[294,176,277,162],[163,291],[166,295,164],[220,166,165],[296,168],[167],[298,168],[300,169],[161,306],[171,176],[172,312,174],[220,173,174],[313,176],[175],[315,176],[155,317],[178,321,180],[179,225,180],[322],[181],[324],[183],[],[205,125],[206,126],[],[],[144,154,142,149,143,138,177],[125],[125,189],[125,190],[125,191],[192,125,191],[126],[194,126],[29,126,195],[198,196,201,29,126],[197,126],[197,126],[199,126],[197,126],[197,126,200],[202,126],[202,203,126],[],[],[140,141],[],[69],[194,211],[],[213,195],[],[226],[196,219,217,218,216],[219,34],[232,231,38],[43,235],[],[223,222,215,197,221],[215,34],[38,249,248],[43,252],[220,164],[172,224,220],[227,219,228],[219],[229],[],[148,147],[232],[233],[232],[236],[231,190],[238,237,235],[235],[240,239,190],[241,242],[],[231,243],[],[],[245,77,215],[16,196,246,217,218,216],[],[152,153],[249],[250],[249],[253],[248,191],[255,252,254],[252],[257,256,191],[258,259],[],[260,248],[],[],[77,220,262],[263,223,222,16,197,221],[],[157],[266],[270],[265,158,266],[267,158,266],[268,265,158,266],[266],[],[],[160,159],[],[278],[267,192],[276],[279,280,276],[276],[281,282],[285,283,284],[287,192,286],[],[],[],[267,288],[],[],[163,169,168],[291],[293],[290,291],[291],[],[165],[198,297],[],[224,77,299],[79],[302,301,199],[],[303,304],[305,290],[],[],[309,308,307,200],[],[310,268],[292,311],[],[],[173],[201,314],[],[77,316,225],[79],[202,318,193,319],[269,320],[],[],[179],[203,323],[],[204,325,326],[],[327],[]],"attribute":["Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Name Expr notFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PRIVATE","Primitive Type boolean ","Simple Name writeEncodeTo ","Parameter JsonStream stream ","Parameter boolean notFirst ","Parameter EncodeTo encodeTo ","Parameter Object val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name append ","Simple Name stream ","Simple Name append ","Simple Name append ","Name Expr stream ","Name Expr stream ","Simple Name notFirst ","Name Expr notFirst ","Name Expr notFirst ","Name Expr encodeTo ","Simple Name encodeTo ","Name Expr encodeTo ","Name Expr encodeTo ","Name Expr encodeTo ","Name Expr val ","Simple Name val ","Name Expr val ","Name Expr val ","Class Or Interface Type JsonStream ","Primitive Type boolean ","Class Or Interface Type EncodeTo ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name defaultValueToOmit ","Name Expr defaultValueToOmit ","Name Expr defaultValueToOmit ","Variable Declarator OmitValue defaultValueToOmit = ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Simple Name defaultValueToOmit ","Simple Name binding ","Block Stmt ","Enclosed Expr ","LOGICAL_COMPLEMENT","Binary Expr AND ","Binary Expr NOT_EQUALS ","AND","Method Call Expr ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Simple Name shouldOmit ","Block Stmt ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeIndention ","Assign Expr ASSIGN ","ASSIGN","Boolean Literal Expr true ","true","Expression Stmt ","Simple Name writeObjectField ","Field Access Expr ","Simple Name toName ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name encoder ","Simple Name binding ","Method Call Expr ","Field Access Expr ","Simple Name encode ","Field Access Expr ","Simple Name encoder ","Simple Name binding ","Simple Name obj ","Simple Name stream ","Method Declaration Throws ","Method Call Expr ","Simple Name writeVal ","ReturnStmt","Try Stmt ","Expression Stmt ","Parameter JsonException e ","Binary Expr EQUALS ","Parameter Exception e ","Variable Declaration Expr ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type long ","Simple Name toLong ","Parameter Object obj ","Parameter JsonStream stream ","Class Or Interface Type IOException ","Block Stmt ","Name Expr obj ","Name Expr stream ","Class Or Interface Type String ","Class Or Interface Type JsonStream ","Block Stmt ","Catch Clause ","Catch Clause ","Method Call Expr ","Return Stmt ","Simple Name obj ","Simple Name decode ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr fields ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr getters ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Name Expr notFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","If Stmt ","Simple Name fromName ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Name Expr notFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name enocde_ ","Parameter Object obj ","Parameter JsonStream stream ","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr stream ","Class Or Interface Type Object ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Block Stmt ","EQUALS","Null Literal Expr ","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Simple Name writeObjectStart ","Variable Declaration Expr ","Name Expr notFirst ","Name Expr notFirst ","Name Expr encodeTo ","Name Expr val ","Simple Name notFirst ","Name Expr notFirst ","Name Expr notFirst ","Name Expr encodeTo ","Name Expr val ","Name Expr notFirst ","Name Expr notFirst ","Variable Declarator boolean notFirst = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Block Stmt ","Name Expr encodeTo ","Simple Name encodeTo ","Class Or Interface Type EncodeTo ","Variable Declaration Expr ","Simple Name val ","Variable Declarator Object val = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name get ","Field Access Expr ","Simple Name field ","Simple Name binding ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeEncodeTo ","Block Stmt ","Name Expr encodeTo ","Simple Name encodeTo ","Class Or Interface Type EncodeTo ","Variable Declaration Expr ","Simple Name val ","Variable Declarator Object val = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Field Access Expr ","Simple Name method ","Simple Name binding ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeEncodeTo ","Block Stmt ","Name Expr unwrapper ","Simple Name unwrapper ","Name Expr unwrapper ","Name Expr unwrapper ","Name Expr unwrapper ","Class Or Interface Type UnwrapperDescriptor ","Name Expr desc ","Simple Name unwrappers ","Block Stmt ","Simple Name isMap ","Variable Declaration Expr ","Simple Name map ","Name Expr map ","Variable Declarator Map<Object, Object> map = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Object ","Class Or Interface Type Object ","Field Access Expr ","Simple Name invoke ","Simple Name method ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Block Stmt ","Method Call Expr ","Simple Name writeMore ","Assign Expr ASSIGN ","Name Expr keys ","Method Call Expr ","Simple Name writeObjectField ","Method Call Expr ","Method Call Expr ","Simple Name toString ","Simple Name getKey ","Method Call Expr ","Simple Name writeVal ","Field Access Expr ","Method Call Expr ","Simple Name mapValueTypeLiteral ","Simple Name getValue ","Block Stmt ","Method Call Expr ","Simple Name writeMore ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Simple Name format ","Block Stmt ","Method Call Expr ","Simple Name writeObjectEnd ","Method Call Expr ","Simple Name write ","Char Literal Expr '}' ","'}'"]}
