{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","hasMethodName":["genObjectUsingStrict-CodegenImplObjectStrict-ClassDescriptor","appendSetExtraToKeyValueTypeWrappers-CodegenImplObjectStrict-StringBuilder-ClassDescriptor","appendSetExtraProperteis-CodegenImplObjectStrict-StringBuilder-ClassDescriptor","hasAnythingToBindFrom-CodegenImplObjectStrict-List<Binding>","assignMaskForRequiredProperties-CodegenImplObjectStrict-List<Binding>","updateBindingSetOp-CodegenImplObjectStrict-String-Binding","appendMissingRequiredProperties-CodegenImplObjectStrict-StringBuilder-ClassDescriptor","appendOnUnknownField-CodegenImplObjectStrict-StringBuilder-ClassDescriptor","buildTriTree-CodegenImplObjectStrict-List<Binding>","renderTriTree-CodegenImplObjectStrict-Map<Integer,Object>","addFieldDispatch-CodegenImplObjectStrict-StringBuilder-int-int-Map<Byte,Object>-List<Byte>","genObjectUsingSkip-CodegenImplObjectStrict-Class-ConstructorDescriptor","append-CodegenImplObjectStrict-StringBuilder-String"]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"genObjectUsingStrict-CodegenImplObjectStrict-ClassDescriptor","callMethodNameReferTo":{"570":"src/main/java/com/jsoniter/CodegenImplObjectHash.java-genNewInstCode-CodegenImplObjectHash-Class-ConstructorDescriptor","510":"src/main/java/com/jsoniter/output/CodegenImplNative.java-getTypeName-CodegenImplNative-Type"},"num":1701,"succs":[[1,152],[162,2],[172,3],[180,4],[195,5],[6,204],[254,7],[8,261],[9,264],[10,173,11],[265,11],[268,12,20],[270,269,13,20],[14,274],[15,277],[16,280],[9,173,18,17],[281,18],[19,286],[31,289],[31,39,21,25,26,32],[292,23,22],[25,296,297,23],[24,294],[299,22],[301,26],[304,29,27],[9,28,16,29,173],[31,305],[30],[31,307],[310,32],[34,313,33],[34,39,318,128],[315,35],[36,319],[321,320,37,322,38],[326],[327,33],[41,40,329],[41,333,129,43],[331,42],[40,334],[336,45,44],[340,45,130,50],[46,338],[47,48,341],[345,337,48,44],[343,49],[47,346],[51,348],[350,53,349,351,52],[53,362],[54,365],[368,55],[56,371],[57,374],[58,377],[59,393],[60,71,394,395],[61,62,399],[134,62,403,67],[401,63],[404,64],[321,406,405,65,66],[326],[61,410],[69,68,417],[135,69,71,420],[70,418],[68,421],[72,424],[425,427,156,76,73],[428,74],[431,75],[433,76],[77,436],[78,441],[79,444],[447,80],[450,81],[82,427,85,157,451],[83,452],[455,84],[457,85],[86,460],[87,462],[465,88],[92,89,27,173],[466,90],[91,473],[475,92],[93,478],[480,94,479,95,353],[482,95],[96,487],[358,488,98,97],[98,492],[99,497],[358,112,100,498],[101,504],[103,515,102],[521,103,145,108],[104,517],[105,522],[107,321,106,524,523],[326],[102,528],[540,109,110],[545,112,146,110],[111,542],[109,546],[113,558],[114,562],[566,565,115],[120,118,117,121,119,116],[117],[],[119],[],[123,151],[77,92,80,3,79,4,5,58,1,56,7,112,95,113,98,43,6,87,71,78,53,0,85,55,2,76,50,11,54,86,57,114,8],[123],[],[123,122],[123,124,284,12],[123,124,12,127],[123,284,12,126],[123,12,126],[123,12,125,128],[123,129],[123,130],[123,131],[123,132],[123,133,59],[123,134,59],[135,123,439],[123,439,136],[123,284,137],[123,138],[123,139,93,485],[123,140],[123,96,495,141],[123,142],[123,99,143],[144,123,99],[123,99,145],[123,146],[123,147],[123,148],[123,149],[],[158],[122],[153,170],[153,202,154],[426,155,153],[426,153,156],[159,153,160],[153],[161,122],[],[166],[154],[163],[164,163],[168,163,167],[163],[171,154,169],[],[],[598,597,600,599,117,601],[174],[164],[175,173,176],[173],[164,177,178],[],[179],[],[184],[165,182],[],[181],[181,185,186],[181],[187,188,189],[190,182],[],[191],[],[165,192,193],[194],[],[],[198],[155],[196,391],[200,196,199],[196],[155,201,203],[],[],[662,597,117,663,661,664],[250],[257,206],[],[257,206,205],[257,207,206],[257,206,208],[257,206,209],[210,206,283],[257,211,206],[257,212,206],[206,208],[257,214,206],[206,283,215],[257,206,216,215],[257,206,217],[218,206],[213,206,219],[206,220],[257,206,221],[257,206,222],[257,206,223],[257,206,224],[257,206,225],[257,206,226],[257,227,206],[228,257,206],[206,438,229],[257,206,230],[257,206,231],[257,232,206],[257,206,233],[257,234,206],[257,206,235],[236,438,206],[257,206,237],[257,238,206],[206,239,283],[257,206,240],[206,241,484],[206,242,494],[243,257,206],[257,244,206],[257,245,206],[206,246],[257,206,247],[206,248],[206,251,252],[206],[253],[],[205,259,256,255],[],[258,260],[],[],[784,787,783,117,786,785],[],[207,259,263,262],[],[258,260],[10],[259,266,267,208],[],[258,260],[19,14,13,18,15],[271,272],[],[124,273],[],[],[259,209,275,276],[],[258,260],[210,259,279,278],[],[258,260],[17],[211,282,125,285],[],[],[],[816,818,597,815,819,817,117],[212,259,288,287],[],[258,260],[213,259,291,290],[],[258,260],[24],[294],[295],[294],[298,126],[],[],[214,300,293],[],[259,303,302,215],[],[258,260],[28],[306,127,216,285],[],[309,259,217,308],[],[258,260],[218,259,312,311],[],[258,260],[35,38],[315],[317],[315,314],[315],[],[37],[323,324],[],[179],[314,325],[],[],[],[316,328,219],[],[42],[331],[332],[331],[],[335,330,220],[],[46],[338],[339],[338],[],[49],[343],[344],[343],[],[347,342,221],[],[52],[354,353,352],[],[358,357],[131,355],[],[356],[],[],[360,359],[],[361,132],[],[],[364,259,363,222],[],[258,260],[366,259,367,223],[],[258,260],[369,224,259,370],[],[258,260],[259,372,373,225],[],[258,260],[375,226,259,376],[],[258,260],[387],[197],[381,380,378],[414,378],[415,400,401],[383,379,384],[379,414],[415,418],[258,382],[385,258,382],[389,388,378],[378],[390,392,197],[],[],[916,917,918,915,597,117],[60,67],[397,396],[],[133,398],[],[],[63,66],[401],[402],[401],[],[65],[408,407],[179],[400,409],[],[],[412,411,379],[],[381,416,413,380],[],[],[],[597,117,1014,1011,1013,1012,1015],[70],[419],[418],[],[411,382,422],[416,423,383,384],[],[75,74,73],[],[],[1195,1196,1197,1198,597,117],[227,259,430,429],[],[258,260],[228,385,259,432],[],[434,259,229,435],[],[258,260],[230,437,136,440],[],[],[],[1228,597,117,1225,1229,1226,1227],[443,259,231,442],[],[258,260],[232,259,446,445],[],[258,260],[259,233,448,449],[],[258,260],[82,83,84],[],[234,259,454,453],[],[258,260],[386,259,235,456],[],[236,259,458,459],[],[258,260],[461,137,440,237],[],[464,238,259,463],[],[258,260],[91,90,89],[259,239,467,468],[],[258,469,471,470],[470,472,183],[],[260],[260],[240,474,138,285],[],[476,259,241,477],[],[258,260],[94],[139,481],[356],[],[140,242,483,486],[],[],[],[1288,597,1284,1287,117,1286,1285],[97],[490,489],[491,141],[],[],[243,493,496,142],[],[],[],[1349,1350,1352,597,1351,117,1348],[101,100,108],[499,500],[501,502],[],[503,143],[],[],[505,244,259,506],[],[258,508,507,509,510],[],[],[260],[512,513,511],[],[],[144,514],[],[107,104],[517],[520],[516,517],[518,517],[517],[],[106],[525,526],[179],[516,527],[],[],[245,259,529,530],[],[533,258,531,534,535,532],[],[],[260],[536,537],[539,519],[538,518],[],[],[],[111],[542],[544],[542,541],[542],[],[548,259,547,246],[],[549,258,551,552,553,550],[],[],[260],[555,554],[557,543],[556,541],[],[],[],[247,560,559],[],[561,147],[],[259,564,248,563],[],[258,260],[],[568,567,570,569],[571,572,573,574],[],[260],[582,579,581,580],[249,575],[],[260],[576,577],[],[578,148],[],[],[],[],[583,149],[150,584],[],[],[586,605],[588,614,587],[588,593,170],[616,589],[590,619],[591,615,587,620],[592,621],[587,628],[630,594],[177,596,631,609,595],[596,632],[610,171,565],[117],[599],[],[170,602],[593,586,596,585],[604,603],[],[],[611],[607],[],[607,606],[607,608],[607,609],[607,613,612],[607],[179],[589],[616],[618],[590,616,606,615],[616],[592,591],[],[623,411,622],[617,624],[606,625,626],[],[627],[],[],[629,608],[],[595],[194],[634,633],[],[260],[636,671],[680,637,638],[202,660,638],[639,682],[641,685,640],[689,641,681,637],[687,642],[643,690],[644,702],[723,645],[646,321,648,704,724],[647,725],[648,728],[732,649,658,650],[737,650],[733,741,740,651,659],[745,652],[653,752],[766,654],[321,657,767,655,754],[656,768],[771,657],[658,773],[629,735,650],[774,640],[675,203,565],[662,667,666,665],[],[668,202],[636,660,635],[],[],[],[670,669],[],[],[676],[673],[],[673,672],[673,674],[678,677,673],[673],[679],[],[639],[682],[684],[681,682],[682],[643,644,648,642,659],[687],[688],[687],[],[698],[686],[691],[691,692],[693,691,695],[691,694],[691,695],[696,691],[699,700,691],[691],[686,701],[],[712],[692,672],[703],[703,704,645],[705,645],[705,706,709],[705,707,709],[705,708,710],[755,756],[709],[703,714,713],[703],[716,715],[718,719,717],[672,720,721],[],[],[],[],[722,692],[],[646,647],[356],[705,411,726],[727],[],[730,706,674,729],[],[693,731],[],[657,652,651,653],[734,736],[],[733,734],[734,735],[739,734,738],[734],[179],[],[742,193,743],[744,694],[194],[],[749],[736,695],[746],[747,746],[746,750,751],[746],[736,695],[757],[707,747],[753],[754,654,753],[755,654],[758,759,753],[753],[760,761],[762,764,763],[707,747,765],[],[],[],[],[656,655],[356],[411,755,769],[770],[],[772,748,708,756],[],[411,710,709],[775,683,776,711],[],[777,696],[778,779,193],[780,697],[194],[],[782,793],[795],[784],[],[257,791],[258,792],[781,782],[257],[257,788],[258],[],[],[788,794,790],[],[789,797,796],[],[260],[833,799],[836,800,801],[806,842,825,801],[838,802],[843,803],[844,837,804,800],[805,845],[852,800],[860,807,809],[350,808,809,861,862],[872],[810],[813,875,811],[813,877,876,353,812],[881],[814],[893],[816],[],[831,283],[284,832],[806,799,798],[257,283],[257,820,283],[257,821,283],[257,821,283],[257,823,822,821,283],[284],[284,825],[284,826],[284,827,807],[828,284,807,811],[828,284,827,829,807,811],[],[],[259,834,820,835],[],[258,260],[802],[838],[841],[837,803,838],[839,803,838],[838],[],[804,805],[],[848],[839],[846],[846,849,850],[846],[839,851],[],[854,259,853,821],[],[258,857,856,858,855,847],[],[],[260],[840,859],[],[808],[321,863,864],[358,866],[865,826],[356],[],[868,867],[869,870],[],[871,827],[],[],[259,822,874,873],[],[258,260],[812],[878,879],[356],[828,880],[],[],[259,882,823,883],[],[258,885,884,887,886],[],[],[260],[888,889],[890,891],[],[892,829],[],[],[895,259,894,824],[],[898,258,897,896,899],[],[],[260],[900,901],[902,903],[],[830,904],[],[],[906,924],[907,908,934],[939,914,908,919],[909,936],[940,910],[948,911],[912,954],[913,966],[907,977],[392,980,565],[916],[],[391,920],[914,906,905],[391],[921,922,923],[],[],[],[930],[257,926],[],[925,970,926],[257,926,927],[926,928],[926,931,932],[926],[933],[],[909,912,910,913,911],[936],[938],[936,935],[936],[],[944],[935],[941],[941,971,942],[941,946,945],[941],[935,947],[],[925,949,259,950],[],[258,952,470,951],[942,953,470],[260],[260],[957],[937],[973,955],[958,959,955],[955],[960,961],[962,963,964],[965,937],[],[],[],[],[975,956,967,927,969,968,943],[],[179,972],[976,974],[],[],[],[],[],[1444,1450,597,117,1446,1447,1443,1445,1448,1449],[],[259,979,978,928],[],[258,260],[929,981],[],[1052,983],[984,321,1053,985,1054],[416,1016,985,565],[1058,986],[987,1059],[988,1060],[1071,989],[1082,990],[321,992,1073,991,1083],[416,992,1018,565],[993,1086],[1097,994],[321,1088,1098,996,995],[1100,996],[997,1107],[998,1110],[1120,999],[321,1112,1001,1121,1000],[1001,1123],[1130,1002],[1009,1136,1003],[1009,1004,353,1137,1138],[1007,1140,1005],[1007,1049,1141,1006],[1142,985],[1008],[1160,985],[1010],[1174,985],[1012],[],[414,1050],[415,1051],[982,985],[414],[1016,1039,414],[1039,414,1017],[1039,1018,414],[1019,1039,414],[1039,1020,414],[1039,414,1021],[1022,1039,414],[1028,1027,1031,1029,1030,1039,1026,414,1025],[1023,1039,414],[1072,1077],[415,1003,1049,1005],[1027,415,1003,1005],[1131],[1039,414,1025],[1111,1113],[1037,1034,1038,1033,414,1024,1036,1035],[1023,414],[1072,1026,1077],[1028,415,1003,1049,1005],[1131,1029],[1033,414],[1111,1031,1113],[1044,1042,1041,1043,1045,1032,1040,414],[1023,414],[1072,1034,1077],[415,1048,1003,1035],[1131,1036],[1040,414],[1111,1113,1038],[415],[1042,415,1046],[415,1047],[415,1048,1003],[],[],[984],[1056,1055],[179],[1057,1046],[],[],[997,998,993,987,1002,1001,988,992,989,996],[],[1063],[1047],[1061],[1065,1061,1064],[1061],[1067,470,1066],[1069,470,1068],[260],[260],[1047,1070],[],[1078],[1062,1017],[1072],[1072,1073],[1072,1074],[1072,1075],[1072,1076],[1072,1080,1079],[1072],[1081,1062,1017],[],[991],[1085,1084],[194],[],[1091],[1074,1019],[1087],[1087,1088],[1089],[1093,1087,1092],[1087],[1074,1095,1019,1094],[],[1096],[],[995],[1085,1099],[194],[1102,1101],[],[470,1103,1075],[1104,470,1105],[470,1020,1106],[260],[260],[1109,1089,1108],[],[194],[1114],[1076,1021],[1111],[1112,1111],[1111,1116,1115],[1111],[1118,1076,1117,1021],[],[1119],[],[1000],[1085,1122],[194],[1124,1125],[],[470,1077,1126],[1128,470,1127],[1022,470,1129],[260],[260],[1132],[1023,1113,1090],[1131,1134,1133],[1131],[1023,1113,1090,1135],[],[1004],[1139,1048],[356],[],[1006],[],[411,1143,1024],[1145,1147,1150,1149,1029,1146,1144,1148],[],[],[260],[1152,1026,1151,1025],[1153,1154],[1157,1156],[1159,1031,1030],[],[179],[1027,1155],[],[],[1028,1158],[],[],[],[411,1032,1161],[1165,1163,1166,1164,1162,1167,1036],[],[],[260],[1034,1033,1169,1168],[1170,1171],[1037,1038,1173],[],[179],[1172,1035],[],[],[],[1175,411,1039],[1178,1177,1179,1176,1043,1181,1180],[],[],[260],[1041,1183,1182,1040],[1184,1185],[1044,1187,1045],[],[179],[1042,1186],[],[],[],[1202,1189,1190],[426,1194,1190],[1191,1204],[1192,1206],[177,1208,1207,1189,1193],[427,1189,1212,565],[427,1213,565],[1196],[],[426,1199],[1194,1188],[1201,1200],[],[],[1191],[1204],[1205],[1204],[1193],[1209,1210],[179],[1203,1211],[],[],[1059],[1214],[],[1218,1240,1216],[1243,1241,1217,1218,1242],[1248],[1219],[1220,1223,1257],[1258,350,1223,1259,1221],[1222,1265],[1268],[1224],[1271],[1226],[],[438,1238],[439,1239],[1215],[257,438],[257,438],[257,438,1231],[257,438,1232,1230],[439],[439,1234],[439,1216,1235],[1236,439,1216,1235],[],[],[1217],[1244,1234],[],[1246,321,1245],[],[1235,1247],[356],[],[1250,259,1249,1230],[],[1254,258,1251,1252,1253],[260],[],[1255],[1256],[],[],[1222,1221],[1236,1260],[358,1261],[],[1262,1263],[1237,1264],[],[],[1267,259,1231,1266],[],[258,260],[259,1269,1270,1232],[],[258,260],[259,1233,1273,1272],[],[258,260],[1275,1294],[1276,1304],[1277,1307,1306,1308,1305,1283],[1280,1311,1278],[1313,1279,353,1280,1312],[1282,1315],[1281],[1282,1325],[565,486,1283],[1335],[1285],[],[1292,484],[1293,485],[1274,1275,1283],[257,484],[1289,257,484],[485],[],[],[1300],[1291],[1295],[1276,1296,1295],[1276,1297,1295,1278],[1276,1297,1295,1298,1278],[1302,1301,1295],[1295],[1303,1291],[],[1282,1277],[],[],[1309,1296],[1310],[],[],[1279],[1297,1314],[356],[],[1316,1289,259,1317],[],[258,1320,1318,1319,1321],[],[],[260],[1322,1323],[1324,1298],[],[],[259,1326,1327,1290],[],[258,1328,1330,1331,1329],[],[],[260],[1332,1333],[1299,1334],[],[],[1336,1337],[],[260],[1363,1339],[1366,1340],[1369,1342,1341],[1373,1347,1342,1360],[1371,1343],[1344,1374],[1377,1345],[1380,1346],[1383,1341],[1391],[1349],[],[1361,494],[495,1362],[1338,1347,1340,1339],[257,494],[1353,257,494],[257,1354,494],[257,1355,494],[257,1356,494],[1357,257,494],[257,494,1358],[495],[],[],[1353,259,1364,1365],[],[258,260],[259,1368,1354,1367],[],[258,260],[1344,1343,1346,1345],[1371],[1372],[1371],[],[1376,259,1355,1375],[],[258,260],[1378,259,1379,1356],[],[258,260],[1357,1382,259,1381],[],[258,260],[259,1385,1384,1358],[],[258,1389,1386,1388,1387],[],[],[260],[1370,1390],[],[259,1359,1393,1392],[],[258,260],[1396,1395,1497],[1396,1503,1479],[1397,1499],[1398,1504],[1399,1513],[321,1514,1425,1472,1400],[1516,1401],[1406,1402,1519,1403],[1525,1403],[1528,1407,1404,740,1520],[1530,1405],[1406,1537],[1522,629,1403],[1408,1547],[1553,1409],[1556,1410],[1571,1411,1413],[1572,1412,1558,1413],[1573,1422],[1417,1414,1585],[1417,1560,1586,1415],[1587,1416],[1422,1590],[1418,1419,1422],[1593,1419],[1604,1420],[1563,1421,1422,1605],[1606,1422],[1423,1614],[1617,1424],[326],[1620,1426],[1634,1427],[321,1432,1636,1635,1428],[1638,1429],[1430,1646],[1648,1431],[326],[1652,1433],[1434,1435,1655,1438],[1435,1661],[1656,1664,1436,1439,740],[1666,1437],[1673,1438],[629,1435,1658],[1683,1440],[1689,1441],[1692,1442],[1395,1698],[1444],[],[970,1487],[971,1488],[972,1489],[973,1490],[974,1494],[1394],[257,970],[257,970,1451],[257,970,1452],[257,970,1453],[257,970,1454],[257,970,1454],[257,970,1456],[257,970,1454],[257,970,1458],[257,970,1455,1459,1457],[257,1460,970],[970,1461],[257,970,1462],[257,970,1463],[257,970,1464],[257,970,1465],[970,1466],[257,1467,970],[971],[1469,971],[971,1470],[972],[1399,972,1472],[1399,1473,972],[972,1474],[1475,972],[1476,972],[972,1477],[973],[974,1482],[974,1480],[974,1481],[974,1482],[974,1483],[1484,974],[974,1485],[],[],[],[1493,1492,1491],[],[],[],[1495,1496],[],[],[1397,1398,1432,1426,1441,1439,1440,1425,1433,1442],[1499],[1502],[1498,1499],[1500,1499],[1499],[],[1509],[1498],[1505],[1505,1506],[1505,1507],[1505,1510,1511],[1505],[1498,1512],[],[1408,1423,1407,1424,1410,1401,1409,1400],[1469,1515,193],[194],[1517,259,1518,1451],[],[258,260],[1404,1405],[1524,1521],[],[1521,1520],[1522,1521],[1523,1521],[1526,1527,1521],[1521],[179],[1529,1480],[],[1533],[1523,1481],[1531],[1534,1531,1535],[1531],[1523,1536,1481],[],[259,1539,1538,1452],[],[258,1542,1540,1532,1543,1541],[],[],[260],[1544,1524,470],[193,1473,1545],[1546,1482],[],[1548,259,1549,1453],[],[258,1506,1552,1551,1550,1474],[],[],[260],[259,1454,1555,1554],[],[258,260],[1565],[1500],[1557],[1557,1558,1411],[1557,1558,1411],[1557,1411,1560,1414],[1557,1411,1414,1561],[1557,1411,1414,1562],[1557,1563,1420,1411,1560,1559,1414],[1557,1566,1567],[1557],[1568,1569],[],[1570,1500],[],[1412],[],[259,1574,1575,1455],[],[258,1578,1579,1577,1576],[],[],[1581,1583,1582,1580],[1559,1584],[260],[],[1255],[1256],[],[1416,1415],[],[259,1589,1456,1588],[],[258,260],[259,1591,1592,1457],[],[258,260],[259,1458,1595,1594],[],[258,1599,1597,1600,1596,1598],[],[],[260],[1561,1601],[1603,1602,1562],[],[],[],[1421],[],[1608,259,1607,1459],[],[258,1610,1609,470],[470,1612,1611],[260],[260],[1564,1613],[],[1460,259,1615,1616],[],[258,260],[259,1618,1619,1461],[],[258,260],[1625],[1501],[1621],[1621,1427,973,1622],[1623,1621,973],[1626,1621,1627],[1621],[1629,1628],[1632,1631,1630],[1501,1633],[],[],[],[],[1431,1430,1429,1428],[1637,1622],[194],[],[1642],[1483],[1639],[1640,974,1639],[1643,1644,1639],[1639],[1645,1483],[],[1640,1647,1507],[],[1623,975,1462,1649,1650,1641,1470],[],[1651,1475,470,972],[194],[259,1463,1653,1654],[],[258,260],[1436,1437],[1657,1660],[],[1656,1657],[1658,1657],[1659,1657],[1663,1662,1657],[1657],[179],[1665,1484],[],[1669],[1659,1485],[1667],[1670,1667,1671],[1667],[1659,1672,1485],[],[1675,259,1464,1674],[],[258,1676,1668,1678,1677,1679],[],[],[260],[1680,1660,470],[1476,193,1681],[1486,1682],[],[259,1465,1685,1684],[],[1687,258,1688,1686,1508,1477],[],[],[260],[1691,259,1690,1466],[],[258,260],[1471,1467,975,1693,1624,1694,1695],[],[1478,1696,470,972],[974,1697],[194],[],[1468,259,1699,1700],[],[258,260]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Name Expr hasRequiredBinding ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Name Expr hasRequiredBinding ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Name Expr hasRequiredBinding ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Name Expr hasRequiredBinding ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Unary Expr ! ","Expression Stmt ","If Stmt ","Unary Expr ! ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Simple Name object ","Simple Name genObjectUsingStrict ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr desc ","Simple Name desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Simple Name allBindings ","Name Expr allBindings ","Name Expr allBindings ","Name Expr allBindings ","Name Expr allBindings ","Variable Declarator List<Binding> allBindings = ","Class Or Interface Type List ","Method Call Expr ","Simple Name allDecoderBindings ","Variable Declaration Expr ","Simple Name lastRequiredIdx ","Name Expr lastRequiredIdx ","Name Expr lastRequiredIdx ","Variable Declarator int lastRequiredIdx = ","Primitive Type int ","Method Call Expr ","Simple Name assignMaskForRequiredProperties ","Simple Name allBindings ","Method Declaration ","Variable Declaration Expr ","Simple Name hasRequiredBinding ","Variable Declarator boolean hasRequiredBinding = ","Primitive Type boolean ","Binary Expr GREATER ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Simple Name expectedTracker ","Name Expr Long ","Name Expr expectedTracker ","Variable Declarator long expectedTracker = ","Primitive Type long ","Binary Expr SIGNED_RIGHT_SHIFT ","Field Access Expr ","SIGNED_RIGHT_SHIFT","Enclosed Expr ","Simple Name MAX_VALUE ","Binary Expr MINUS ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name trieTree ","Name Expr trieTree ","Variable Declarator Map<Integer, Object> trieTree = ","Class Or Interface Type Map ","Method Call Expr ","Simple Name buildTriTree ","Simple Name allBindings ","Method Declaration ","Variable Declaration Expr ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Primitive Type float ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr Array ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Simple Name close ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr cache ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Variable Declarator StringBuilder lines = ","Return Stmt ","Object Creation Expr StringBuilder Optional.empty Optional.empty ","Class Or Interface Type StringBuilder ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Simple Name lines ","Simple Name str ","Method Declaration ","StringLiteralExpr","Method Call Expr ","Name Expr stream ","String Literal Expr Not Empty  ","Block Stmt ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Field Access Expr ","Simple Name isEmpty ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Method Call Expr ","Simple Name appendMissingRequiredProperties ","Simple Name lines ","Simple Name desc ","Method Declaration ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Simple Name ONE ","Block Stmt ","Name Expr parameter ","Simple Name parameter ","Class Or Interface Type Binding ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Method Call Expr ","Simple Name appendVarDef ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Method Call Expr ","Simple Name appendMissingRequiredProperties ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Class Or Interface Type Binding ","Simple Name fields ","Block Stmt ","Field Access Expr ","EQUALS","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","continue;","Method Call Expr ","Simple Name appendVarDef ","Block Stmt ","Name Expr setter ","Simple Name setter ","Class Or Interface Type Binding ","Simple Name setters ","Method Call Expr ","Simple Name appendVarDef ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type WrapperDescriptor ","Simple Name bindingTypeWrappers ","Block Stmt ","Name Expr param ","Simple Name param ","Class Or Interface Type Binding ","Simple Name parameters ","Method Call Expr ","Simple Name appendVarDef ","Block Stmt ","Expression Stmt ","OR","Unary Expr ! ","Field Access Expr ","NOT_EQUALS","Null Literal Expr ","Simple Name onExtraProperties ","NullLiteralExpr","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Return Stmt ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr field ","Name Expr rendered ","Name Expr rendered ","Name Expr setter ","Name Expr rendered ","Name Expr rendered ","Variable Declarator String rendered = ","Class Or Interface Type String ","Method Call Expr ","Simple Name renderTriTree ","Simple Name trieTree ","Method Declaration ","Block Stmt ","Field Access Expr ","Simple Name isEmpty ","Field Access Expr ","Simple Name parameters ","Void Type ","Block Stmt ","Name Expr field ","Simple Name field ","Class Or Interface Type Binding ","Simple Name fields ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name updateBindingSetOp ","Simple Name rendered ","Simple Name binding ","Method Declaration ","Block Stmt ","Simple Name setter ","Class Or Interface Type Binding ","Simple Name setters ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name updateBindingSetOp ","Block Stmt ","Simple Name hasAnythingToBindFrom ","Simple Name allBindings ","Method Declaration ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","Name Expr idx ","Method Call Expr ","Simple Name appendOnUnknownField ","Simple Name lines ","Simple Name desc ","Method Declaration ","Method Call Expr ","Simple Name append ","Name Expr val ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Simple Name hasAnythingToBindFrom ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name appendOnUnknownField ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Method Call Expr ","Simple Name append ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name appendMissingRequiredProperties ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Field Access Expr ","Simple Name size ","Simple Name onExtraProperties ","Method Call Expr ","Simple Name appendSetExtraProperteis ","Simple Name lines ","Simple Name desc ","Method Declaration ","Block Stmt ","Method Call Expr ","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Method Call Expr ","Expression Stmt ","Simple Name lines ","Simple Name desc ","Method Declaration ","Block Stmt ","Method Call Expr ","Field Access Expr ","Simple Name isEmpty ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Method Call Expr ","Simple Name append ","Method Call Expr ","Class Or Interface Type String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr CodegenImplNative ","Simple Name getTypeName ","Field Access Expr ","Simple Name clazz ","Block Stmt ","Simple Name Class ","Simple Name field ","Name Expr field ","Name Expr field ","Class Or Interface Type Binding ","Simple Name fields ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Field Access Expr ","Simple Name getName ","Simple Name field ","Simple Name name ","Block Stmt ","Name Expr setter ","Simple Name setter ","Name Expr setter ","Class Or Interface Type Binding ","Simple Name setters ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Field Access Expr ","Simple Name getName ","Simple Name method ","Simple Name name ","Method Call Expr ","Simple Name appendWrappers ","Field Access Expr ","Simple Name bindingTypeWrappers ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","ReturnStmt","Method Call Expr ","Method Call Expr ","Simple Name replace ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Primitive Type boolean ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString ","Field Access Expr ","Simple Name getCanonicalName ","Simple Name clazz ","Name Expr CodegenImplObjectHash ","Simple Name genNewInstCode ","Field Access Expr ","Field Access Expr ","Simple Name clazz ","Simple Name ctor ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Throw Stmt ","Return Stmt ","PRIVATE","Primitive Type int ","Simple Name assignMaskForRequiredProperties ","Parameter List<Binding> allBindings ","Block Stmt ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr requiredIdx ","Simple Name requiredIdx ","Name Expr requiredIdx ","Name Expr requiredIdx ","Name Expr requiredIdx ","Variable Declarator int requiredIdx = ","Primitive Type int ","Integer Literal Expr Zero  ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Class Or Interface Type Binding ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Method Call Expr ","Field Access Expr ","Binary Expr LEFT_SHIFT ","Simple Name mask ","Long Literal Expr Note Zero  ","LEFT_SHIFT","LongLiteralExpr","Unary Expr ++ ","POSTFIX_INCREMENT","Block Stmt ","Integer Literal Expr Note Zero  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Return Stmt ","Class Or Interface Type Map ","Simple Name buildTriTree ","Parameter List<Binding> allBindings ","Block Stmt ","Simple Name Map ","Class Or Interface Type Integer ","Class Or Interface Type Object ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr trieTree ","Simple Name trieTree ","Name Expr trieTree ","Name Expr trieTree ","Variable Declarator Map<Integer, Object> trieTree = ","Class Or Interface Type Map ","Object Creation Expr HashMap<Integer, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Class Or Interface Type Binding ","Block Stmt ","Name Expr fromName ","Simple Name fromName ","Class Or Interface Type String ","Simple Name fromNames ","Variable Declaration Expr ","Simple Name fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Variable Declarator byte[] fromNameBytes = ","Array Type 1 ","Method Call Expr ","Simple Name getBytes ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr next ","Name Expr current ","Variable Declarator Map<Byte, Object> current = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name get ","Field Access Expr ","Simple Name length ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<Byte, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Binary Expr MINUS ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","Variable Declaration Expr ","Simple Name b ","Name Expr b ","Name Expr b ","Variable Declarator byte b = ","Primitive Type byte ","Array Access Expr i ","Variable Declaration Expr ","Simple Name next ","Name Expr next ","Simple Name read ","Name Expr next ","Variable Declarator Map<Byte, Object> next = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name get ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<Byte, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name put ","Array Access Expr fromNameBytes.length - 1 ","Binary Expr MINUS ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","This Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Block Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name appendMissingRequiredProperties ","Parameter StringBuilder lines ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type StringBuilder ","Class Or Interface Type ClassDescriptor ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr mapIter ","Simple Name binding ","Simple Name hasNext ","Name Expr binding ","Class Or Interface Type Binding ","Simple Name allDecoderBindings ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Variable Declaration Expr ","Simple Name mask ","Name Expr mask ","Variable Declarator long mask = ","Primitive Type long ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name name ","Block Stmt ","Binary Expr EQUALS ","Unary Expr ! ","Field Access Expr ","Null Literal Expr ","Simple Name onMissingProperties ","Method Call Expr ","Field Access Expr ","Simple Name isEmpty ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name field ","Simple Name onMissingProperties ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name getName ","Field Access Expr ","Simple Name field ","Simple Name onMissingProperties ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name getName ","Field Access Expr ","Simple Name method ","Simple Name onMissingProperties ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type String ","Simple Name renderTriTree ","Parameter Map<Integer, Object> trieTree ","Block Stmt ","Name Expr trieTree ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type Integer ","Class Or Interface Type Object ","Variable Declaration Expr ","Name Expr switchBody ","Simple Name switchBody ","Name Expr switchBody ","Name Expr switchBody ","Name Expr switchBody ","Variable Declarator StringBuilder switchBody = ","Class Or Interface Type StringBuilder ","Object Creation Expr StringBuilder Optional.empty Optional.empty ","Class Or Interface Type StringBuilder ","Block Stmt ","Name Expr entry ","Name Expr cache ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name len ","Name Expr len ","Name Expr len ","Variable Declarator Integer len = ","Class Or Interface Type Integer ","Method Call Expr ","Simple Name getKey ","Method Call Expr ","Simple Name append ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Variable Declarator Map<Byte, Object> current = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name getValue ","Method Call Expr ","Simple Name addFieldDispatch ","Integer Literal Expr Zero  ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Simple Name lines ","Simple Name len ","Simple Name i ","Simple Name current ","Simple Name bytesToCompare ","Method Declaration ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","While Stmt ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Field Access Expr ","Expression Stmt ","Block Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Class Or Interface Type String ","Simple Name updateBindingSetOp ","Parameter String rendered ","Parameter Binding binding ","Block Stmt ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr start ","Name Expr binding ","Name Expr binding ","Name Expr op ","Name Expr rendered ","Name Expr end ","Name Expr rendered ","Name Expr rendered ","Name Expr start ","Name Expr binding ","Name Expr op ","Name Expr rendered ","Name Expr end ","Name Expr rendered ","Name Expr rendered ","Name Expr start ","Name Expr binding ","Name Expr op ","Name Expr rendered ","Name Expr end ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type String ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Block Stmt ","true","Variable Declaration Expr ","Simple Name marker ","Name Expr marker ","Variable Declarator String marker = ","Class Or Interface Type String ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name name ","Variable Declaration Expr ","Simple Name start ","Name Expr start ","Name Expr start ","Name Expr start ","Name Expr start ","Name Expr start ","Variable Declarator int start = ","Primitive Type int ","Method Call Expr ","Simple Name indexOf ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","MINUS","Variable Declaration Expr ","Simple Name middle ","Name Expr middle ","Name Expr middle ","Name Expr middle ","Variable Declarator int middle = ","Primitive Type int ","Method Call Expr ","Simple Name indexOf ","Char Literal Expr '=' ","'='","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Assign Expr PLUS ","PLUS","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name end ","Name Expr end ","Name Expr end ","Variable Declarator int end = ","Primitive Type int ","Method Call Expr ","Simple Name indexOf ","Char Literal Expr ';' ","';'","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name op ","Variable Declarator String op = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Block Stmt ","Simple Name valueCanReuse ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name getName ","Simple Name field ","Field Access Expr ","Simple Name getName ","Simple Name field ","Simple Name substring ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name getName ","Simple Name field ","Simple Name substring ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name getName ","Simple Name method ","Simple Name substring ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr GREATER ","Return Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name hasAnythingToBindFrom ","Parameter List<Binding> allBindings ","Block Stmt ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Block Stmt ","Name Expr binding ","Simple Name binding ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Name Expr data ","Boolean Literal Expr false ","false","If Stmt ","Binary Expr AND ","Expression Stmt ","Block Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name appendOnUnknownField ","Parameter StringBuilder lines ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type StringBuilder ","Class Or Interface Type ClassDescriptor ","Block Stmt ","Field Access Expr ","AND","Binary Expr EQUALS ","Simple Name asExtraForUnknownProperties ","Field Access Expr ","Null Literal Expr ","Simple Name onExtraProperties ","Method Call Expr ","Simple Name append ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","'''","'''","Block Stmt ","Field Access Expr ","Unary Expr ! ","Simple Name asExtraForUnknownProperties ","Method Call Expr ","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Expression Stmt ","If Stmt ","Method Call Expr ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Throw Stmt ","Void Type ","Simple Name appendSetExtraProperteis ","Parameter StringBuilder lines ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr desc ","Class Or Interface Type StringBuilder ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Simple Name onExtraProperties ","Name Expr onExtraProperties ","Name Expr onExtraProperties ","Name Expr onExtraProperties ","Name Expr onExtraProperties ","Variable Declarator Binding onExtraProperties = ","Class Or Interface Type Binding ","Field Access Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr GenericsHelper ","Simple Name isSameClass ","Field Access Expr ","Class Expr Map.class ","Simple Name valueType ","Class Or Interface Type Map ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name getName ","Simple Name field ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name getName ","Simple Name method ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name appendSetExtraToKeyValueTypeWrappers ","Parameter StringBuilder lines ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr cache ","Name Expr lines ","Simple Name wrap ","Class Or Interface Type StringBuilder ","Class Or Interface Type ClassDescriptor ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type Method ","Simple Name keyValueTypeWrappers ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Class Or Interface Type String ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getName ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name addFieldDispatch ","Parameter StringBuilder lines ","Parameter int len ","Parameter int i ","Parameter Map<Byte, Object> current ","Parameter List<Byte> bytesToCompare ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr len ","Name Expr len ","Name Expr len ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr current ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Class Or Interface Type StringBuilder ","Primitive Type int ","Primitive Type int ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Byte ","Block Stmt ","Name Expr ARRAY ","Simple Name entry ","Name Expr entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name b ","Name Expr b ","Name Expr b ","Name Expr b ","Variable Declarator Byte b = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Binary Expr MINUS ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name size ","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Variable Declarator Binding field = ","Class Or Interface Type Binding ","Cast Expr ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name getValue ","Block Stmt ","Simple Name asExtraWhenPresent ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","Method Call Expr ","Field Access Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","Simple Name name ","Block Stmt ","Simple Name shouldSkip ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Method Call Expr ","Simple Name name ","Name Expr CodegenImplNative ","Simple Name genField ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Method Call Expr ","Simple Name append ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name next ","Name Expr next ","Name Expr next ","Name Expr next ","Variable Declarator Map<Byte, Object> next = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name getValue ","Block Stmt ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name size ","Variable Declaration Expr ","Simple Name nextBytesToCompare ","Name Expr nextBytesToCompare ","Name Expr nextBytesToCompare ","Variable Declarator ArrayList<Byte> nextBytesToCompare = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name size ","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"appendSetExtraToKeyValueTypeWrappers-CodegenImplObjectStrict-StringBuilder-ClassDescriptor","callMethodNameReferTo":{},"num":82,"succs":[[30,1],[37,2],[40,4,3],[44,9,26,4],[42,5],[6,45],[48,7],[51,8],[54,3],[62],[14,15,17,11,16,12,13],[12],[],[14],[],[28,19],[27,29],[0,9,2,1],[33,19],[],[18,33,19],[33,20,19],[33,21,19],[33,22,19],[23,33,19],[33,19,24],[27],[],[],[],[18,35,31,32],[],[34,36],[],[],[68,71,67,12,70,69],[],[35,39,20,38],[],[34,36],[6,5,8,7],[42],[43],[42],[],[47,35,21,46],[],[34,36],[49,35,50,22],[],[34,36],[23,53,35,52],[],[34,36],[35,56,55,24],[],[34,60,57,59,58],[],[],[36],[41,61],[],[35,25,64,63],[],[34,36],[66,77],[79],[68],[],[33,75],[34,76],[65,66],[33],[33,72],[34],[],[],[72,78,74],[],[81,73,80],[],[36]],"attribute":["Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name appendSetExtraToKeyValueTypeWrappers ","Parameter StringBuilder lines ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr cache ","Name Expr lines ","Simple Name wrap ","Simple Name desc ","Class Or Interface Type StringBuilder ","Class Or Interface Type ClassDescriptor ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Simple Name lines ","Simple Name str ","Method Declaration ","StringLiteralExpr","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type Method ","Simple Name keyValueTypeWrappers ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Class Or Interface Type String ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getName ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","This Expr "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"appendSetExtraProperteis-CodegenImplObjectStrict-StringBuilder-ClassDescriptor","callMethodNameReferTo":{"2":"src/main/java/com/jsoniter/spi/GenericsHelper.java-isSameClass-GenericsHelper-Type-Class"},"num":93,"succs":[[1,25],[2,35],[38,3,37,39,36,9],[6,42,4],[45,5,6,44,43],[8,48],[7],[8,62],[72,10,9],[73],[17,11,13,16,12,15,14],[12],[],[14],[],[23,19],[24,22],[0,1,9],[51,19],[],[18,51,19],[22],[],[],[],[31],[21],[26],[2,27,26],[2,28,26,4],[2,28,26,4,29],[33,32,26],[26],[34,21],[],[8,3],[],[],[40,27],[41],[],[],[5],[28,46],[],[47],[],[],[18,49,53,50],[],[52,56,54,55,57],[],[],[79,82,78,12,81,80],[],[],[58],[59,60],[],[61,29],[],[],[53,63,64,20],[],[52,65,67,68,66],[],[],[58],[69,70],[30,71],[],[],[],[74,75],[],[58],[77,88],[90],[79],[],[51,86],[52,87],[76,77],[51],[51,83],[52],[],[],[83,89,85],[],[92,84,91],[],[58]],"attribute":["Expression Stmt ","If Stmt ","Method Call Expr ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Throw Stmt ","Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name appendSetExtraProperteis ","Parameter StringBuilder lines ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr desc ","Simple Name desc ","Class Or Interface Type StringBuilder ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Simple Name onExtraProperties ","Name Expr onExtraProperties ","Name Expr onExtraProperties ","Name Expr onExtraProperties ","Name Expr onExtraProperties ","Variable Declarator Binding onExtraProperties = ","Class Or Interface Type Binding ","Field Access Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr GenericsHelper ","Simple Name isSameClass ","Field Access Expr ","Class Expr Map.class ","Simple Name valueType ","Class Or Interface Type Map ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Null Literal Expr ","Simple Name field ","NullLiteralExpr","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name lines ","Simple Name str ","Method Declaration ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Field Access Expr ","Simple Name getName ","Simple Name field ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name getName ","Simple Name method ","ReturnStmt","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","This Expr "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"hasAnythingToBindFrom-CodegenImplObjectStrict-List<Binding>","callMethodNameReferTo":{},"num":35,"succs":[[18,1,2],[14,6,2],[3,20],[4,22],[23,25,24,1,5],[7,1,31,30],[33,7,30],[10,11,12,13,8,9],[9],[],[11],[],[14,15],[6,0],[],[17,16],[],[],[3],[20],[21],[20],[5],[26,27],[],[29],[19,28],[],[],[],[],[32],[],[34],[]],"attribute":["For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr GREATER ","Return Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Primitive Type boolean ","Simple Name hasAnythingToBindFrom ","Parameter List<Binding> allBindings ","Block Stmt ","Simple Name allBindings ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Block Stmt ","Name Expr binding ","Simple Name binding ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Zero IntegerLiteralExpr","ReturnStmt","Name Expr data ","true","Boolean Literal Expr false ","false"]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"assignMaskForRequiredProperties-CodegenImplObjectStrict-List<Binding>","callMethodNameReferTo":{},"num":59,"succs":[[1,23],[3,33,2],[3,8,19],[35,4],[5,38],[6,34,2,39],[7,40],[2,48],[50,9],[51,11,52,27,10],[11,54],[12,28,58],[17,15,13,16,14,18],[14],[],[16],[],[19,20],[8,1,11,0],[],[22,21],[],[],[29],[25],[],[25,24],[25,26],[25,27],[25,31,30],[25],[32],[],[4],[35],[37],[5,35,24,34],[35],[7,6],[],[43,42,41],[36,44],[],[24,45,46],[],[47],[],[],[49,26],[],[10],[],[53],[],[56,55],[],[57],[],[]],"attribute":["Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Throw Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Primitive Type int ","Simple Name assignMaskForRequiredProperties ","Parameter List<Binding> allBindings ","Block Stmt ","Simple Name allBindings ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr requiredIdx ","Simple Name requiredIdx ","Name Expr requiredIdx ","Name Expr requiredIdx ","Name Expr requiredIdx ","Variable Declarator int requiredIdx = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Class Or Interface Type Binding ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Method Call Expr ","Field Access Expr ","ASSIGN","Binary Expr LEFT_SHIFT ","Simple Name mask ","Long Literal Expr Note Zero  ","LEFT_SHIFT","LongLiteralExpr","Unary Expr ++ ","POSTFIX_INCREMENT","Block Stmt ","GREATER","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","StringLiteralExpr","ReturnStmt"]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"updateBindingSetOp-CodegenImplObjectStrict-String-Binding","callMethodNameReferTo":{},"num":220,"succs":[[1,75],[2,77,76,3,78],[29,37,3,83],[84,4],[5,85],[6,86],[99,7],[110,8],[77,101,10,9,111],[29,10,40,83],[11,115],[126,12],[77,117,127,14,13],[129,14],[15,136],[16,139],[149,17],[141,77,150,19,18],[19,152],[159,20],[27,165,21],[27,22,167,166,168],[25,171,23],[25,72,172,24],[173,3],[26],[192,3],[28],[206,3],[30,31,35,32,33,34,36],[31],[],[33],[],[38,73],[69,74],[3,0],[38],[],[37,61,38],[61,38,39],[61,40,38],[41,61,38],[61,42,38],[61,43,38],[44,61,38],[50,49,53,51,52,61,48,38,47],[45,61,38],[100,105],[69,21,72,23],[49,69,21,23],[160],[61,38,47],[140,142],[56,59,55,60,38,46,58,57],[45,38],[100,48,105],[50,69,21,72,23],[160,51],[55,38],[140,53,142],[66,65,64,63,67,54,62,38],[45,38],[100,56,105],[69,71,21,57],[160,58],[62,38],[140,142,60],[69],[],[64,69,68],[69,70],[69,71,21],[],[],[2],[80,79],[],[82],[81,68],[],[],[],[],[15,16,11,5,20,19,6,7,10,14],[],[89],[70],[87],[91,87,90],[87],[94,93,92],[96,93,95],[],[97],[97],[70,98],[],[],[106],[88,39],[100],[100,101],[100,102],[100,103],[100,104],[100,108,107],[100],[109,88,39],[],[9],[113,112],[114],[],[],[120],[102,41],[116],[116,117],[118],[122,116,121],[116],[124,102,41,123],[],[125],[],[13],[113,128],[114],[131,130],[],[93,132,103],[133,93,134],[93,42,135],[97],[97],[138,118,137],[],[114],[143],[104,43],[140],[141,140],[140,145,144],[140],[147,104,146,43],[],[148],[],[18],[113,151],[114],[154,153],[],[93,105,155],[157,93,156],[44,93,158],[97],[97],[161],[45,142,119],[160,163,162],[160],[45,142,119,164],[],[22],[169,71],[],[170],[],[],[24],[],[174,175,46],[],[177,179,182,181,51,178,176,180],[],[],[97],[184,48,183,47],[185,186],[189,188],[191,53,52],[],[82],[49,187],[],[],[50,190],[],[],[],[174,54,193],[197,195,198,196,194,199,58],[],[],[97],[56,55,201,200],[202,203],[59,60,205],[],[82],[204,57],[],[],[],[207,174,61],[210,209,208,65,211,213,212],[],[],[97],[63,215,214,62],[216,217],[66,219,67],[],[82],[64,218],[],[],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","While Stmt ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Field Access Expr ","Expression Stmt ","Block Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type String ","Simple Name updateBindingSetOp ","Parameter String rendered ","Parameter Binding binding ","Block Stmt ","Name Expr rendered ","Simple Name rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr rendered ","Name Expr start ","Name Expr binding ","Name Expr binding ","Name Expr op ","Name Expr rendered ","Name Expr end ","Name Expr rendered ","Name Expr rendered ","Name Expr start ","Name Expr binding ","Name Expr op ","Name Expr rendered ","Name Expr end ","Name Expr rendered ","Name Expr rendered ","Name Expr start ","Name Expr binding ","Name Expr op ","Name Expr rendered ","Name Expr end ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type String ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","EQUALS","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Zero IntegerLiteralExpr","ReturnStmt","Block Stmt ","true","Variable Declaration Expr ","Simple Name marker ","Name Expr marker ","Variable Declarator String marker = ","Class Or Interface Type String ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Field Access Expr ","StringLiteralExpr","Simple Name name ","Variable Declaration Expr ","Simple Name start ","Name Expr start ","Name Expr start ","Name Expr start ","Name Expr start ","Name Expr start ","Variable Declarator int start = ","Primitive Type int ","Method Call Expr ","Simple Name indexOf ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name middle ","Name Expr middle ","Name Expr middle ","Name Expr middle ","Variable Declarator int middle = ","Primitive Type int ","Method Call Expr ","Simple Name indexOf ","Char Literal Expr '=' ","'='","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Assign Expr PLUS ","PLUS","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name end ","Name Expr end ","Name Expr end ","Variable Declarator int end = ","Primitive Type int ","Method Call Expr ","Simple Name indexOf ","Char Literal Expr ';' ","';'","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name op ","Variable Declarator String op = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Null Literal Expr ","Simple Name field ","NullLiteralExpr","Block Stmt ","Simple Name valueCanReuse ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name getName ","Simple Name field ","Field Access Expr ","Simple Name getName ","Simple Name field ","Simple Name substring ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name getName ","Simple Name field ","Simple Name substring ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name getName ","Simple Name method ","Simple Name substring "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"appendMissingRequiredProperties-CodegenImplObjectStrict-StringBuilder-ClassDescriptor","callMethodNameReferTo":{},"num":138,"succs":[[40,1],[47,2,3],[8,53,31,3],[49,4],[54,5],[55,48,6,2],[7,56],[63,2],[71,9,11],[73,11,72,10,74],[87],[12],[15,90,13],[15,93,91,92,14],[97],[16],[109],[21,23,18,20,24,22,19],[19],[],[21],[],[38,26],[32,39],[8,1,0],[43,26],[],[43,25,26],[43,27,26],[43,27,26],[43,28,29,27,26],[32],[],[32,31],[32,33],[32,34,9],[35,32,9,13],[35,32,34,36,9,13],[],[],[45,41,25,42],[],[44,46],[],[],[124,127,123,19,126,125],[],[4],[49],[52],[48,5,49],[50,5,49],[49],[],[6,7],[],[59],[50],[57],[57,60,61],[57],[50,62],[],[65,45,64,27],[],[44,67,68,69,58,66],[],[],[46],[51,70],[],[10],[76,75,77],[],[81,80],[78,33],[],[79],[],[],[83,82],[],[85,84],[],[86,34],[],[],[45,28,89,88],[],[44,46],[14],[94,95],[],[79],[35,96],[],[],[45,98,29,99],[],[44,101,100,103,102],[],[],[46],[104,105],[106,107],[],[108,36],[],[],[111,45,110,30],[],[114,44,113,115,112],[],[],[46],[116,117],[118,119],[],[37,120],[],[],[122,133],[135],[124],[],[43,131],[44,132],[121,122],[43],[43,128],[44],[],[],[128,134,130],[],[137,129,136],[],[46]],"attribute":["Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Block Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name appendMissingRequiredProperties ","Parameter StringBuilder lines ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr desc ","Simple Name desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type StringBuilder ","Class Or Interface Type ClassDescriptor ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Simple Name lines ","Simple Name str ","Method Declaration ","StringLiteralExpr","Block Stmt ","Name Expr mapIter ","Simple Name binding ","Simple Name hasNext ","Name Expr binding ","Class Or Interface Type Binding ","Simple Name allDecoderBindings ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Variable Declaration Expr ","Simple Name mask ","Name Expr mask ","Variable Declarator long mask = ","Primitive Type long ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name name ","Block Stmt ","Binary Expr EQUALS ","OR","Unary Expr ! ","Field Access Expr ","EQUALS","Null Literal Expr ","Simple Name onMissingProperties ","NullLiteralExpr","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name isEmpty ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Null Literal Expr ","Field Access Expr ","Simple Name field ","Simple Name onMissingProperties ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name getName ","Field Access Expr ","Simple Name field ","Simple Name onMissingProperties ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name getName ","Field Access Expr ","Simple Name method ","Simple Name onMissingProperties ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","This Expr "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"appendOnUnknownField-CodegenImplObjectStrict-StringBuilder-ClassDescriptor","callMethodNameReferTo":{},"num":89,"succs":[[3,30,1],[33,31,2,3,32],[40],[4],[5,8,53],[54,55,8,56,6],[7,63],[66],[9],[69],[16,11,12,13,17,14,15],[12],[],[14],[],[19,28],[24,29],[0],[43,19],[],[43,19],[43,19,20],[43,19,18,21],[24],[],[24,23],[24,1,25],[26,24,1,25],[],[],[2],[34,23],[],[37,36,35],[],[25,38],[],[39],[],[],[42,45,41,18],[],[49,44,46,47,48],[],[],[75,78,74,12,77,76],[50],[],[51],[52],[],[],[],[7,6],[26,57],[],[59,58],[],[60,61],[],[27,62],[],[],[65,45,20,64],[],[44,50],[45,67,68,21],[],[44,50],[45,22,71,70],[],[44,50],[73,84],[86],[75],[],[43,82],[44,83],[72,73],[43],[43,79],[44],[],[],[79,85,81],[],[80,88,87],[],[50]],"attribute":["If Stmt ","Binary Expr AND ","Expression Stmt ","Block Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name appendOnUnknownField ","Parameter StringBuilder lines ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr desc ","Simple Name desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type StringBuilder ","Class Or Interface Type ClassDescriptor ","Block Stmt ","Field Access Expr ","AND","Binary Expr EQUALS ","Simple Name asExtraForUnknownProperties ","Field Access Expr ","EQUALS","Null Literal Expr ","Simple Name onExtraProperties ","NullLiteralExpr","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name lines ","Simple Name str ","Method Declaration ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","StringLiteralExpr","'''","'''","Block Stmt ","Field Access Expr ","OR","Unary Expr ! ","Simple Name asExtraForUnknownProperties ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","This Expr "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"buildTriTree-CodegenImplObjectStrict-List<Binding>","callMethodNameReferTo":{},"num":158,"succs":[[1,40],[49,2,3],[36,25,3],[4,51],[54,6,5],[58,6,50,2],[56,7],[8,59],[9,71],[92,10],[11,93,13,73,94],[12,96],[13,100],[104,14,23,15],[109,15],[105,114,113,16,24],[121,17],[18,128],[142,19],[93,22,143,20,130],[21,144],[147,22],[23,149],[120,107,15],[150,5],[44,26,157],[30,27,28,31,29,32],[28],[],[30,34,35,33],[],[37,36],[1,0,25],[],[],[],[],[39,38],[],[],[45],[42],[],[42,41],[42,43],[47,46,42],[42],[48],[],[4],[51],[53],[50,51],[51],[8,9,13,7,24],[56],[57],[56],[],[67],[55],[60],[60,61],[62,60,64],[60,63],[60,64],[65,60],[69,68,60],[60],[55,70],[],[81],[41,61],[72],[72,73,10],[74,10],[74,75,78],[74,76,78],[74,77,79],[131,132],[78],[72,83,82],[72],[85,84],[87,88,86],[41,89,90],[],[],[],[],[91,61],[],[11,12],[],[95],[],[74,97,98],[],[99],[],[102,75,43,101],[],[62,103],[],[22,17,16,18],[106,108],[],[105,106],[106,107],[111,106,110],[106],[112],[],[],[115,116,117],[118,63],[],[119],[],[],[],[125],[108,64],[122],[123,122],[122,126,127],[122],[108,64],[133],[123,76],[129],[130,19,129],[131,19],[134,135,129],[129],[136,137],[138,140,139],[76,123,141],[],[],[],[],[21,20],[95],[97,131,145],[146],[],[148,124,77,132],[],[97,79,78],[151,52,80,152],[],[153,65],[154,155,116],[156,66],[119],[],[]],"attribute":["Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type Map ","Simple Name buildTriTree ","Parameter List<Binding> allBindings ","Block Stmt ","Simple Name Map ","Class Or Interface Type Integer ","Class Or Interface Type Object ","Simple Name allBindings ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr trieTree ","Simple Name trieTree ","Name Expr trieTree ","Name Expr trieTree ","Variable Declarator Map<Integer, Object> trieTree = ","Class Or Interface Type Map ","Object Creation Expr HashMap<Integer, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Class Or Interface Type Binding ","Block Stmt ","Name Expr fromName ","Simple Name fromName ","Class Or Interface Type String ","Simple Name fromNames ","Variable Declaration Expr ","Simple Name fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Variable Declarator byte[] fromNameBytes = ","Array Type 1 ","Method Call Expr ","Simple Name getBytes ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr next ","Name Expr current ","Variable Declarator Map<Byte, Object> current = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name get ","Field Access Expr ","Simple Name length ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<Byte, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name b ","Name Expr b ","Name Expr b ","Variable Declarator byte b = ","Primitive Type byte ","Array Access Expr i ","Variable Declaration Expr ","Simple Name next ","Name Expr next ","Simple Name read ","Name Expr next ","Variable Declarator Map<Byte, Object> next = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name get ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<Byte, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name put ","Array Access Expr fromNameBytes.length - 1 ","Binary Expr MINUS ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","ReturnStmt"]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"renderTriTree-CodegenImplObjectStrict-Map<Integer,Object>","callMethodNameReferTo":{},"num":420,"succs":[[1,23],[2,3,33],[38,9,3,17],[4,35],[39,5],[47,6],[58,7],[8,70],[2,82],[10,85,86],[14,15,16,13,11,12],[12],[],[14],[],[18,19],[9,1,0],[18],[],[20,21,22],[],[],[],[29],[50,25],[],[24,74,25],[50,25,26],[25,27],[25,30,31],[25],[32],[],[4,7,8,5,6],[35],[37],[35,34],[35],[],[43],[34],[40],[40,75,41],[45,40,44],[40],[34,46],[],[24,48,52,49],[],[51,55,54,53],[],[],[91,94,90,12,93,92],[41,56,54],[],[57],[57],[],[61],[36],[77,59],[62,63,59],[59],[64,65],[66,67,68],[69,36],[],[],[],[],[79,60,71,26,42,72,73],[],[80,76],[81,78],[],[],[],[],[],[155,161,11,12,157,158,154,156,159,160],[],[],[52,83,84,27],[],[51,57],[],[28,87],[],[89,100],[102],[91],[],[50,98],[51,99],[88,89],[50],[50,95],[51],[],[],[95,101,97],[],[96,104,103],[],[57],[107,106,208],[107,214,190],[108,210],[109,215],[110,224],[225,226,136,183,111],[230,112],[117,113,233,114],[239,114],[243,118,115,242,234],[246,116],[117,253],[236,245,114],[119,263],[269,120],[272,121],[287,122,124],[288,123,274,124],[289,133],[128,125,303],[128,276,304,126],[305,127],[133,308],[129,130,133],[311,130],[322,131],[279,133,132,323],[324,133],[134,332],[335,135],[338],[339,137],[353,138],[225,143,355,354,139],[357,140],[141,365],[367,142],[338],[371,144],[145,146,374,149],[146,380],[375,147,383,150,242],[385,148],[392,149],[245,146,377],[402,151],[408,152],[411,153],[106,417],[155],[],[74,198],[75,199],[76,200],[77,201],[78,205],[105],[50,74],[50,74,162],[50,74,163],[50,74,164],[50,74,165],[50,74,165],[50,74,167],[50,74,165],[50,74,169],[50,74,166,170,168],[50,171,74],[74,172],[50,74,173],[50,74,174],[50,74,175],[50,74,176],[74,177],[50,178,74],[75],[180,75],[75,181],[76],[110,183,76],[110,184,76],[76,185],[186,76],[187,76],[76,188],[77],[78,193],[78,191],[78,192],[78,193],[78,194],[195,78],[78,196],[],[],[],[204,203,202],[],[],[],[207,206],[],[],[108,109,137,143,152,150,151,136,144,153],[210],[213],[209,210],[211,210],[210],[],[220],[209],[216],[216,217],[216,218],[216,221,222],[216],[209,223],[],[119,134,118,135,121,112,120,111],[],[180,228,227],[],[229],[],[52,231,232,162],[],[51,57],[115,116],[238,235],[],[235,234],[236,235],[237,235],[240,241,235],[235],[80],[],[244,191],[],[],[249],[237,192],[247],[250,247,251],[247],[237,252,192],[],[52,255,254,163],[],[51,258,256,248,259,257],[],[],[57],[260,238,54],[227,184,261],[262,193],[],[264,52,265,164],[],[51,217,268,267,185,266],[],[],[57],[52,165,271,270],[],[51,57],[281],[211],[273],[273,122,274],[273,274,122],[273,122,276,125],[273,122,125,277],[273,122,125,278],[273,279,131,122,275,276,125],[273,282,283],[273],[284,285],[],[286,211],[],[123],[],[52,290,291,166],[],[51,294,295,293,292],[],[],[297,299,298,296],[275,302],[57],[],[300],[301],[],[],[],[127,126],[],[52,307,167,306],[],[51,57],[52,309,310,168],[],[51,57],[52,169,313,312],[],[51,317,315,318,316,314],[],[],[57],[277,319],[321,320,278],[],[],[],[132],[],[326,52,325,170],[],[51,328,327,54],[330,54,329],[57],[57],[280,331],[],[171,52,333,334],[],[51,57],[52,336,337,172],[],[51,57],[],[344],[212],[340],[340,138,77,341],[342,340,77],[345,340,346],[340],[348,347],[351,349,350],[212,352],[],[],[],[],[142,141,140,139],[356,341],[229],[],[361],[194],[358],[359,78,358],[362,363,358],[358],[194,364],[],[359,366,218],[],[79,342,173,368,369,360,181],[],[370,186,54,76],[229],[52,174,372,373],[],[51,57],[147,148],[376,379],[],[375,376],[377,376],[378,376],[382,381,376],[376],[80],[384,195],[],[388],[378,196],[386],[389,386,390],[386],[378,391,196],[],[394,52,175,393],[],[51,395,387,397,396,398],[],[],[57],[399,54,379],[187,227,400],[197,401],[],[52,176,404,403],[],[406,51,407,405,219,188],[],[],[57],[52,410,409,177],[],[51,57],[182,178,412,79,343,413,414],[],[189,415,54,76],[78,416],[229],[],[52,179,418,419],[],[51,57]],"attribute":["Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type String ","Simple Name renderTriTree ","Parameter Map<Integer, Object> trieTree ","Block Stmt ","Name Expr trieTree ","Simple Name trieTree ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type Integer ","Class Or Interface Type Object ","Variable Declaration Expr ","Name Expr switchBody ","Simple Name switchBody ","Name Expr switchBody ","Name Expr switchBody ","Name Expr switchBody ","Variable Declarator StringBuilder switchBody = ","Class Or Interface Type StringBuilder ","Object Creation Expr StringBuilder Optional.empty Optional.empty ","Class Or Interface Type StringBuilder ","Block Stmt ","Name Expr entry ","Name Expr cache ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name len ","Name Expr len ","Name Expr len ","Variable Declarator Integer len = ","Class Or Interface Type Integer ","Method Call Expr ","Simple Name getKey ","Method Call Expr ","Simple Name append ","Binary Expr PLUS ","Simple Name lines ","Simple Name str ","Method Declaration ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Variable Declarator Map<Byte, Object> current = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name getValue ","Method Call Expr ","Simple Name addFieldDispatch ","Integer Literal Expr Zero  ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Simple Name lines ","Simple Name len ","Simple Name i ","Simple Name current ","Simple Name bytesToCompare ","Method Declaration ","Zero IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","ReturnStmt","Method Call Expr ","Simple Name toString ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","This Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name addFieldDispatch ","Parameter StringBuilder lines ","Parameter int len ","Parameter int i ","Parameter Map<Byte, Object> current ","Parameter List<Byte> bytesToCompare ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr len ","Name Expr len ","Name Expr len ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr current ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Class Or Interface Type StringBuilder ","Primitive Type int ","Primitive Type int ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Byte ","Block Stmt ","Name Expr ARRAY ","Simple Name entry ","Name Expr entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name b ","Name Expr b ","Name Expr b ","Name Expr b ","Variable Declarator Byte b = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name getKey ","Block Stmt ","EQUALS","Binary Expr MINUS ","MINUS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Method Call Expr ","Simple Name size ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Variable Declarator Binding field = ","Class Or Interface Type Binding ","Cast Expr ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name getValue ","Block Stmt ","Simple Name asExtraWhenPresent ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","Method Call Expr ","Field Access Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","'''","'''","Simple Name name ","Block Stmt ","Simple Name shouldSkip ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Method Call Expr ","Simple Name name ","Name Expr CodegenImplNative ","Simple Name genField ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Method Call Expr ","Simple Name append ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","continue;","Variable Declaration Expr ","Simple Name next ","Name Expr next ","Name Expr next ","Name Expr next ","Variable Declarator Map<Byte, Object> next = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name getValue ","Block Stmt ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name size ","Variable Declaration Expr ","Simple Name nextBytesToCompare ","Name Expr nextBytesToCompare ","Name Expr nextBytesToCompare ","Variable Declarator ArrayList<Byte> nextBytesToCompare = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name size ","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"addFieldDispatch-CodegenImplObjectStrict-StringBuilder-int-int-Map<Byte,Object>-List<Byte>","callMethodNameReferTo":{"227":"src/main/java/com/jsoniter/CodegenImplNative.java-genField-CodegenImplNative-Binding"},"num":346,"succs":[[2,1,111],[2,117,91],[3,113],[4,118],[5,127],[128,129,31,83,6],[133,7],[12,8,140,9],[146,9],[151,13,10,150,141],[154,11],[12,161],[143,153,9],[14,172],[178,15],[181,16],[196,17,19],[197,18,183,19],[198,28],[23,20,212],[23,185,213,21],[214,22],[28,217],[24,25,28],[220,25],[231,26],[188,28,27,232],[233,28],[29,241],[244,30],[247],[248,32],[262,33],[128,38,264,263,34],[266,35],[36,274],[276,37],[247],[280,39],[40,41,283,44],[41,289],[284,42,292,45,150],[294,43],[301,44],[153,41,286],[311,46],[317,47],[320,48],[1,326],[59,53,50,55,51,56,52,54,57,58],[51],[],[53],[],[61,101],[80,102],[84,103],[92,104],[94,108],[0],[136,61],[],[136,61,60],[136,61,62],[136,61,63],[136,61,64],[136,61,64],[136,61,66],[136,61,64],[136,61,68],[136,61,65,69,67],[136,70,61],[61,71],[136,61,72],[136,61,73],[136,61,74],[136,61,75],[61,76],[136,77,61],[80],[],[79,80],[80,81],[84],[],[5,84,83],[5,85,84],[84,86],[87,84],[88,84],[84,89],[92],[],[94,96],[],[94,93],[94,95],[94,96],[94,97],[98,94],[94,99],[],[],[],[107,106,105],[],[],[],[110,109],[],[],[3,4,32,38,47,45,46,31,39,48],[113],[116],[112,113],[114,113],[113],[],[123],[112],[119],[119,120],[119,121],[119,124,125],[119],[112,126],[],[14,13,29,30,16,7,15,6],[],[79,131,130],[],[132],[],[134,138,135,60],[],[137,139],[],[],[332,335,331,51,334,333],[],[10,11],[145,142],[],[142,141],[143,142],[144,142],[147,148,142],[142],[149],[],[],[152,93],[],[],[157],[144,95],[155],[158,155,159],[155],[144,160,95],[],[138,163,162,62],[],[137,166,164,156,167,165],[],[],[139],[168,145,169],[130,85,170],[],[171,96],[],[173,138,174,63],[],[137,120,177,176,175,86],[],[],[139],[138,64,180,179],[],[137,139],[190],[114],[182],[182,17,183],[182,183,17],[182,17,185,20],[182,17,20,186],[182,17,20,187],[182,188,26,17,185,184,20],[182,191,192],[182],[193,194],[],[195,114],[],[18],[],[138,199,200,65],[],[137,203,204,202,201],[],[],[206,208,207,205],[184,211],[139],[],[209],[210],[],[],[],[22,21],[],[138,216,66,215],[],[137,139],[138,218,219,67],[],[137,139],[68,138,222,221],[],[137,226,224,227,225,223],[],[],[139],[186,228],[230,229,187],[],[],[],[27],[],[235,138,234,69],[],[137,237,236,169],[239,169,238],[139],[139],[189,240],[],[70,138,242,243],[],[137,139],[138,245,246,71],[],[137,139],[],[253],[115],[249],[249,33,92,250],[251,249,92],[254,249,255],[249],[257,256],[260,258,259],[115,261],[],[],[],[],[37,36,35,34],[265,250],[132],[],[270],[97],[267],[268,94,267],[271,272,267],[267],[273,97],[],[268,275,121],[],[49,251,72,277,278,269,81],[],[279,87,169,84],[132],[138,73,281,282],[],[137,139],[42,43],[285,288],[],[284,285],[286,285],[287,285],[291,290,285],[285],[149],[293,98],[],[297],[287,99],[295],[298,295,299],[295],[287,300,99],[],[303,138,74,302],[],[137,304,296,306,305,307],[],[],[139],[308,169,288],[130,88,309],[100,310],[],[138,75,313,312],[],[315,137,316,314,122,89],[],[],[139],[138,319,318,76],[],[137,139],[82,77,321,49,252,322,323],[],[90,324,169,84],[94,325],[132],[],[138,78,327,328],[],[137,139],[330,341],[343],[332],[],[136,339],[137,340],[329,330],[136],[136,336],[137],[],[],[336,342,338],[],[345,337,344],[],[139]],"attribute":["For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name addFieldDispatch ","Parameter StringBuilder lines ","Parameter int len ","Parameter int i ","Parameter Map<Byte, Object> current ","Parameter List<Byte> bytesToCompare ","Block Stmt ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr len ","Simple Name len ","Name Expr len ","Name Expr len ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr current ","Simple Name current ","Name Expr bytesToCompare ","Simple Name bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Class Or Interface Type StringBuilder ","Primitive Type int ","Primitive Type int ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Byte ","Block Stmt ","Name Expr ARRAY ","Simple Name entry ","Name Expr entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name b ","Name Expr b ","Name Expr b ","Name Expr b ","Variable Declarator Byte b = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name getKey ","Block Stmt ","EQUALS","Binary Expr MINUS ","MINUS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Simple Name lines ","Simple Name str ","Method Declaration ","StringLiteralExpr","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Method Call Expr ","Simple Name size ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","PLUS","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Variable Declarator Binding field = ","Class Or Interface Type Binding ","Cast Expr ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name getValue ","Block Stmt ","Simple Name asExtraWhenPresent ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","Method Call Expr ","Field Access Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","'''","'''","Simple Name name ","Block Stmt ","Simple Name shouldSkip ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Method Call Expr ","Simple Name name ","Name Expr CodegenImplNative ","Simple Name genField ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Method Call Expr ","Simple Name append ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","continue;","Variable Declaration Expr ","Simple Name next ","Name Expr next ","Name Expr next ","Name Expr next ","Variable Declarator Map<Byte, Object> next = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name getValue ","Block Stmt ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name size ","Variable Declaration Expr ","Simple Name nextBytesToCompare ","Name Expr nextBytesToCompare ","Name Expr nextBytesToCompare ","Variable Declarator ArrayList<Byte> nextBytesToCompare = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name size ","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","This Expr "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"genObjectUsingSkip-CodegenImplObjectStrict-Class-ConstructorDescriptor","callMethodNameReferTo":{"53":"src/main/java/com/jsoniter/CodegenImplObjectHash.java-genNewInstCode-CodegenImplObjectHash-Class-ConstructorDescriptor"},"num":79,"succs":[[21,1],[2,32],[39,3],[42,4],[5,45],[49,6,48],[13,8,10,12,11,9,7],[8],[],[10],[],[15,19],[20,18],[5,2,1,3,4,0],[15],[],[15,14],[18],[],[],[],[28],[23,35],[],[35,23,22],[23,35,24],[35,23,25],[23,26],[23,29,30],[23],[31],[],[22,37,34,33],[],[36,38],[],[],[65,68,64,8,67,66],[],[41,24,37,40],[],[36,38],[43,37,25,44],[],[36,38],[37,26,46,47],[],[36,38],[],[51,53,52,50],[57,54,56,55],[],[38],[61,16,60,17],[27,58],[],[38],[14,59],[],[],[],[],[63,74],[76],[65],[],[35,72],[36,73],[62,63],[35],[35,69],[36],[],[],[69,75,71],[],[78,70,77],[],[38]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name genObjectUsingSkip ","Parameter Class clazz ","Parameter ConstructorDescriptor ctor ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Name Expr ctor ","Simple Name ctor ","Class Or Interface Type Class ","Class Or Interface Type ConstructorDescriptor ","Variable Declaration Expr ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Variable Declarator StringBuilder lines = ","Class Or Interface Type StringBuilder ","Object Creation Expr StringBuilder Optional.empty Optional.empty ","Class Or Interface Type StringBuilder ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Simple Name lines ","Simple Name str ","Method Declaration ","StringLiteralExpr","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","ReturnStmt","Method Call Expr ","Method Call Expr ","Simple Name replace ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Simple Name replace ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString ","Simple Name getCanonicalName ","Name Expr CodegenImplObjectHash ","Simple Name genNewInstCode ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","This Expr "]}
{"fileName":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java","version":"0.9.22","methodName":"append-CodegenImplObjectStrict-StringBuilder-String","callMethodNameReferTo":{},"num":22,"succs":[[1,16],[18],[5,8,4,3,7,6],[],[5],[],[10,14],[13,15],[0,1],[10],[],[10,9],[13],[],[],[],[9,17,12],[],[11,20,19],[],[21],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","STATIC","Void Type ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr str ","Simple Name str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","This Expr ","StringLiteralExpr"]}
