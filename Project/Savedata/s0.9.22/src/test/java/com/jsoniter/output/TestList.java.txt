{"fileName":"src/test/java/com/jsoniter/output/TestList.java","version":"0.9.22","hasMethodName":["test_indention-TestList-","test_indention_with_empty_array-TestList-"]}
{"fileName":"src/test/java/com/jsoniter/output/TestList.java","version":"0.9.22","methodName":"test_indention-TestList-","callMethodNameReferTo":{"33":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object-OutputStream","65":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object-OutputStream"},"num":79,"succs":[[1,9],[30,2],[49,3],[62],[7,8,6,5],[],[7],[],[0,1,2,3],[16],[11],[],[10],[12,10,14],[],[13],[10,18,17],[10],[20,19],[23,21,22],[],[26,25,24],[],[29],[27],[],[28,11],[],[],[],[32,31,33],[],[36,34,35],[43,12,42,44],[35,37,38],[],[41],[39,35,40],[41],[41],[41],[],[],[],[47,45,46,48],[],[],[29],[29],[50,51,13],[],[53,52],[54,55,56],[],[57,59,58],[],[29],[60],[],[61,14],[],[],[65,64,63],[],[66,67,35],[72,15,73,74],[69,35,68],[41],[35,71,70],[41],[41],[41],[],[],[78,75,77,76],[],[],[29],[29]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_indention ","Block Stmt ","Variable Declaration Expr ","Simple Name cfg ","Name Expr EncodingMode ","Name Expr cfg ","Primitive Type int ","Name Expr EncodingMode ","Name Expr cfg ","Variable Declarator Config cfg = ","Array Type 1 ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name encodingMode ","Field Access Expr ","Class Or Interface Type Builder ","Simple Name REFLECTION_MODE ","IntegerLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","PLUS","Name Expr ctx ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Simple Name jsoniter ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize ","Method Call Expr ","Primitive Type double ","Simple Name asList ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name CodegenAccess ","Integer Literal Expr Note Zero  ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Class Or Interface Type jsoniter ","Field Access Expr ","Class Or Interface Type Builder ","Simple Name DYNAMIC_MODE ","Method Call Expr ","Simple Name assertEquals ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Name Expr JsonStream ","Simple Name serialize ","Method Call Expr ","Name Expr Arrays ","Simple Name asList ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  "]}
{"fileName":"src/test/java/com/jsoniter/output/TestList.java","version":"0.9.22","methodName":"test_indention_with_empty_array-TestList-","callMethodNameReferTo":{},"num":60,"succs":[[9,1],[30,2],[3,39],[52],[8,7,6,5],[],[7],[],[3,0,1,2],[16],[11],[],[10],[10,12,14],[],[13],[10,18,17],[10],[19,20],[22,23,21],[],[25,24,26],[],[29],[27],[],[11,28],[],[],[],[31,33,32],[],[34],[37,35,12,36],[],[],[],[38],[],[40,13,41],[],[43,42],[44,46,45],[],[48,47,49],[],[29],[50],[],[14,51],[],[],[55,53,54],[],[34],[57,56,58,15],[],[],[59],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_indention_with_empty_array ","Block Stmt ","Variable Declaration Expr ","Name Expr val ","Name Expr EncodingMode ","Name Expr cfg ","Name Expr cfg ","Name Expr EncodingMode ","Name Expr cfg ","Variable Declarator Config cfg = ","Simple Name append ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name encodingMode ","Field Access Expr ","Class Or Interface Type Builder ","Simple Name REFLECTION_MODE ","IntegerLiteralExpr","Method Call Expr ","Field Access Expr ","Simple Name head ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Class Or Interface Type ClassInfo ","Object Creation Expr ArrayList<Integer> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Class Or Interface Type JsonException ","Simple Name e ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name encodingMode ","Field Access Expr ","Class Or Interface Type Builder ","Simple Name DYNAMIC_MODE ","Method Call Expr ","Expression Stmt ","Simple Name iter ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr ArrayList<Integer> Optional.empty Optional.empty ","Class Or Interface Type ArrayList "]}
