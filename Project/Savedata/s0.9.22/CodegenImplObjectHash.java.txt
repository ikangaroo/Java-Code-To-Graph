{"fileName":"CodegenImplObjectHash.java","Version":"0.9.22","callMethodName":["genObjectUsingHash","compare","calcHash","appendBindingSet","appendWrappers","appendVarDef","genNewInstCode","appendInvocation","append"]}
{"Version":"0.9.22","MethodName":"CodegenImplObjectHash_genObjectUsingHash","callMethodNameReferTo":{"432":"CodegenImplObjectStrict.java_CodegenImplObjectStrict_outer_genObjectUsingStrict","577":"CodegenImplNative.java_CodegenImplNative_outer_getTypeName","467":"CodegenImplNative.java_CodegenImplNative_outer_getTypeName","427":"CodegenImplObjectStrict.java_CodegenImplObjectStrict_outer_genObjectUsingStrict"},"num":879,"succs":[[119,1],[2,128],[179,3],[186,4],[189,5],[192,6],[195,7],[8,198],[9,201],[204,10],[11,207],[12,210],[213,13],[14,216],[219,15],[222,16],[225,17,18],[230,20,18,229],[227,19],[232,17],[21,237],[22,240],[23,243],[246,24],[249,25],[252,26],[255,27],[258,28],[29,261],[264,30],[31,267],[32,270],[273,33],[35,276,34],[40,35,107,281],[36,278],[37,282],[283,285,38,39,284],[290],[34,291],[41,42,293],[42,44,108,297],[43,295],[298,41],[300,45,46],[51,46,304,109],[302,47],[49,305,48],[309,45,49,301],[307,50],[48,310],[312,52],[53,320],[55,329,54],[55,334,60,110],[56,331],[57,58,335],[330,339,58,54],[59,337],[57,340],[61,342],[62,351],[63,404],[407,64],[410,65,66],[344,343,78,66],[67,412],[68,415],[69,425],[70,417,426,284,71],[96,427,389,71],[72,430],[73,418,431,313,74],[432,96,389,74],[435,75],[76,437],[444,77],[65,452],[455,79],[458,80],[81,461],[82,464],[83,84,471],[89,114,84,477],[473,85],[478,86],[88,87,479,480,284],[290],[83,484],[91,496,90],[91,501,93,115],[92,498],[90,502],[514,94],[95,521],[96,389,524],[102,97,99,101,98,100],[98],[],[100],[],[105,118],[25,89,64,14,33,80,2,62,8,51,23,0,31,29,40,78,3,7,60,27,94,53,15,4,5,28,95,10,11,13,82,22,16,26,61,32,81,1,6,20,24,52,63,79,9,44,21,93,12,30],[96,356,390,389],[105],[],[105,104],[105,106],[105,107],[105,108],[105,109],[105,110],[105,111],[105,112,448],[105,113],[105,114],[105,115],[105,116],[],[124],[104],[120],[120,121],[120,122,537],[120,126,125],[120],[127,104],[],[175],[182,130],[],[129,182,130],[131,182,130],[132,182,130],[182,130,133],[134,182,130],[135,182,130],[182,130,136],[137,182,130],[138,182,130],[139,182,130],[140,182,130],[182,130,141],[142,182,130],[234,143,130],[144,182,130],[145,182,130],[146,182,130],[147,182,130],[182,148,130],[149,182,130],[182,130,150],[151,182,130],[182,130,152],[153,182,130],[182,130,154],[155,182,130],[182,130,156],[234,157,130],[234,158,130],[234,159,130],[160,182,130],[182,161,130],[162,182,130],[447,163,130],[164,182,130],[182,130,165],[182,130,166],[167,182,130],[168,182,130],[169,182,130],[182,130,170],[518,130,171],[172,182,130],[130,173],[176,177,130],[130],[178],[],[180,129,184,181],[],[185,183],[],[],[547,543,544,546,98,545],[],[187,131,188,184],[],[185,183],[190,191,132,184],[],[185,183],[194,184,193,133],[],[185,183],[197,134,196,184],[],[185,183],[135,199,184,200],[],[185,183],[203,184,202,136],[],[185,183],[137,205,206,184],[],[185,183],[138,209,208,184],[],[185,183],[139,184,212,211],[],[185,183],[214,215,140,184],[],[185,183],[217,184,141,218],[],[185,183],[142,220,221,184],[],[185,183],[143,224,223,184],[],[185,183],[19],[227,235],[228],[227],[231,106],[],[],[144,236,226,233],[],[],[],[560,564,562,561,563,98],[145,239,184,238],[],[185,183],[242,146,241,184],[],[185,183],[244,147,245,184],[],[185,183],[148,247,184,248],[],[185,183],[149,250,184,251],[],[185,183],[254,184,253,150],[],[185,183],[256,257,151,184],[],[185,183],[260,259,184,152],[],[185,183],[263,262,153,184],[],[185,183],[265,266,184,154],[],[185,183],[155,268,184,269],[],[185,183],[272,271,156,184],[],[185,183],[275,157,184,274],[],[185,183],[36,39],[278],[280],[235,277,278],[278],[],[38],[287,286],[],[289],[288,277],[],[],[],[],[236,279,158,292],[],[43],[235,295],[296],[295],[],[159,236,294,299],[],[47],[302],[303],[302],[],[50],[307,235],[308],[307],[],[311,160,306,236],[],[316],[314],[],[313,314],[317,318,314],[314],[319],[],[325],[322],[],[321,322],[323,322],[327,326,322],[322],[328],[],[56],[331],[333],[330,331],[331],[],[59],[337],[338],[337],[],[332,336,321,341],[],[345],[323],[343],[347,343,346],[343],[349,348],[],[350,323],[],[344,354,352,353],[],[],[355],[],[359,357,358,97,360,361,362],[],[359],[],[367,364],[366,368],[369,370,103],[379,364],[],[379,366],[],[],[],[371],[381],[375],[363],[372],[373,372],[376,372,377],[372],[378,380,363],[],[],[601,604,97,603,602,98],[385],[365],[382],[382,383],[387,382,386],[382],[380,388,365],[],[],[391,392,393],[394],[397,396],[399],[373,395,383],[],[398],[],[],[400,402,401],[403],[289],[398],[374,384,284],[406,405,161,184],[],[185,183],[408,162,409,184],[],[185,183],[68,67,77,76,75,71,74],[379,412],[414],[411,412],[412],[421],[411],[416],[416,417],[416,418],[416,419],[423,416,422],[416],[380,424,411],[],[70],[289],[429,428,111],[],[],[73],[],[433,434,112],[],[],[315,419,436],[],[163,184,438,439],[],[440,442,183,441],[420,443,441],[],[185],[185],[164,445,113,450,446],[],[413,324,449,451],[],[],[],[632,631,630,627,628,633,629,98],[],[454,184,453,165],[],[185,183],[456,457,166,184],[],[185,183],[167,460,459,184],[],[185,183],[463,168,184,462],[],[185,183],[169,184,466,465],[],[467,183,441,468],[469,470,121],[185],[],[],[88,85],[473],[476],[472,473],[473,474],[473],[],[87],[482,481],[289],[472,483],[],[],[485,486,184,170],[],[487,490,489,491,488,183],[],[],[185],[492,493],[475,495],[474,494],[],[],[],[92],[498],[500],[498,497],[498],[],[504,503,184,171],[],[506,508,183,509,507,505],[],[],[185],[510,511],[513,499],[497,512],[],[],[],[516,515,172,519],[],[116,520,517],[],[],[659,662,661,660,663,98],[],[523,522,184,173],[],[185,183],[528,526,527,525],[532,531,529,530],[],[185],[536,123,539,535],[174,533],[],[185],[122,534],[],[],[],[540,117,538],[],[],[717,721,719,720,98,718],[],[542,553],[555],[544],[],[551,182],[552,183],[542,541],[182],[182,548],[183],[],[],[550,548,554],[],[549,556,557],[],[185],[570,559],[581],[561],[],[234,568],[235,569],[558,559],[234,182],[235],[235,566],[],[],[575],[566,572],[],[571],[573,571],[576,577,571],[571],[579,572,578],[],[566,580],[],[582,565,184,583],[],[588,573,584,585,183,586,587],[],[],[185],[567,589],[574,591,590],[],[592,593],[],[],[],[595,607],[596,616,597],[597,619,600,605],[598,617],[599,620],[596,622],[625,380,389],[602],[],[606,379],[595,594,600],[379],[],[613],[610,609],[617],[],[608],[611],[610,615,614],[610],[398],[599,598],[618],[617],[],[608,621,609],[],[611,623,624],[],[398],[612,626],[],[98],[629],[],[637,447],[448,638],[639,449],[640],[447,182],[449],[635,449],[],[],[],[641],[642,643,184,634],[],[648,645,646,644,183,647],[],[],[185],[635,649],[650,636,651],[],[],[],[653,654,672],[654,517],[655,674],[656,677],[657,680],[658,686],[653,693],[660],[],[668,517],[518,671],[652],[518],[664,518],[518,689,665],[666,518],[670,669],[],[],[],[658,655,656,657],[674],[676],[674,673],[674],[664,679,678],[],[185],[682,681,665],[],[683,684],[685,673],[],[],[691,666,687,688],[],[690,692,675],[],[],[834,835,836,627,833,98,837],[],[695,694,667],[],[185],[697,736],[749,698],[751,699,750,700],[753,700],[703,701,756],[702,757,703,758,759],[709,762],[704],[707,772,705],[707,773,774,284,706],[709,776],[708],[709,784],[710,794],[801,711],[802,803,713,712,284],[805,713],[807,714],[716,809,808,715],[811,716],[539,819,389],[718],[],[537,734],[735,538],[709,697,716,696,713,710,700],[537],[722,537],[537],[724,723,537],[725,537],[538],[538,727],[728,538,701],[728,538,729,705,701],[538,730],[731,538],[538,732],[],[],[745],[738],[],[738,737],[738,737],[738,740,739,737],[738,689,741],[738,742],[738,743],[738,746,747],[738],[748],[],[699],[752,727],[],[],[754,737,755],[],[185],[702],[728,760],[],[761],[],[],[763,739,764],[],[765,766,767,769,768],[],[],[185],[770,722],[723,771],[],[],[706],[775,729],[761],[],[740,778,777],[],[781,780,779,782],[],[],[185],[724,783],[],[786,785,741],[],[788,791,789,787,790],[],[],[185],[725,792],[730,793],[],[],[797],[731],[690,795],[799,798,795],[795],[731,800],[],[712],[732,804],[761],[],[691,806,796,742],[],[715],[733,810],[],[],[743,812,813],[],[815,816,817,814],[],[],[185],[726,818],[],[744,820],[],[846,822],[823,849],[824,825,856],[690,832,825],[826,858],[829,860,827],[851,829,850,828],[831,861],[830],[831,865],[824,868],[876],[834],[],[842,689],[690,843],[832,821,823,822],[689],[838,689],[839,689],[840,689],[],[844,845],[],[],[848,838,847],[],[185],[852],[],[850,827],[850,853,854],[850],[855],[],[831,826],[858],[859],[858],[828],[851,863,862],[],[864],[],[867,839,866],[],[185],[869,840,870],[],[874,873,872,871],[],[],[185],[875,857],[],[878,877,841],[],[185]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","For Each Stmt ","Name Expr fromNames ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name genObjectUsingHash ","Parameter ClassDescriptor desc ","Block Stmt ","Return Stmt ","Simple Name lang ","Simple Name desc ","Null Literal Expr ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Field Access Expr ","Simple Name clazz ","Variable Declaration Expr ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Boolean Literal Expr false ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Simple Name toInt ","Name Expr cache ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Simple Name toInt ","Simple Name toInt ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Variable Declarator StringBuilder lines = ","Class Or Interface Type StringBuilder ","Object Creation Expr StringBuilder Optional.empty Optional.empty ","Class Or Interface Type StringBuilder ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Simple Name lines ","Simple Name str ","Method Declaration ","StringLiteralExpr","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr System ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr System ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr System ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr System ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr parameter ","Simple Name parameter ","Class Or Interface Type Binding ","Field Access Expr ","Simple Name parameters ","Simple Name next ","Method Call Expr ","Simple Name appendVarDef ","Simple Name lines ","Simple Name parameter ","Method Declaration ","Method Call Expr ","Name Expr stream ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr stream ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr stream ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Class Or Interface Type Binding ","Simple Name fields ","Block Stmt ","Field Access Expr ","EQUALS","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Zero IntegerLiteralExpr","continue;","Method Call Expr ","Simple Name appendVarDef ","Block Stmt ","Name Expr setter ","Simple Name setter ","Class Or Interface Type Binding ","Simple Name setters ","Throw Stmt ","Class Or Interface Type DecodingMode ","Block Stmt ","Name Expr setter ","Simple Name setter ","Class Or Interface Type WrapperDescriptor ","Simple Name bindingTypeWrappers ","Block Stmt ","Name Expr param ","Simple Name param ","Class Or Interface Type Binding ","Simple Name parameters ","Method Call Expr ","Simple Name appendVarDef ","Variable Declaration Expr ","Name Expr knownHashes ","Simple Name knownHashes ","Name Expr knownHashes ","Variable Declarator HashSet<Integer> knownHashes = ","Class Or Interface Type HashSet ","Object Creation Expr HashSet<Integer> Optional.empty Optional.empty ","Class Or Interface Type HashSet ","Variable Declaration Expr ","Name Expr bindings ","Simple Name bindings ","Name Expr bindings ","Name Expr bindings ","Variable Declarator HashMap<String, Binding> bindings = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Binding> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Class Or Interface Type Binding ","Simple Name allDecoderBindings ","Block Stmt ","Name Expr fromName ","Simple Name fromName ","Class Or Interface Type String ","Simple Name fromNames ","Method Call Expr ","Simple Name put ","Variable Declaration Expr ","Simple Name fromNames ","Name Expr fromNames ","Variable Declarator ArrayList<String> fromNames = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<String> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name keySet ","Method Call Expr ","Name Expr Collections ","Simple Name sort ","Object Creation Expr Comparator<String> Optional.empty Optional.empty ","Class Or Interface Type Comparator ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name compare ","Parameter String o1 ","Parameter String o2 ","Block Stmt ","Name Expr o1 ","Simple Name o1 ","Name Expr o2 ","Simple Name o2 ","Class Or Interface Type String ","Class Or Interface Type String ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Simple Name x ","Name Expr x ","Name Expr x ","Variable Declarator int x = ","Primitive Type int ","Method Call Expr ","Simple Name calcHash ","Simple Name fromName ","Method Declaration ","Variable Declaration Expr ","Simple Name y ","Name Expr y ","Name Expr y ","Variable Declarator int y = ","Primitive Type int ","Method Call Expr ","Simple Name calcHash ","ReturnStmt","Conditional Expr (x < y) ? -1 : ((x == y) ? 0 : 1) ","Enclosed Expr ","Unary Expr - ","Enclosed Expr ","Binary Expr LESS ","LESS","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Conditional Expr (x == y) ? 0 : 1 ","Enclosed Expr ","Integer Literal Expr Zero  ","Integer Literal Expr Note Zero  ","Binary Expr EQUALS ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr fromName ","Simple Name fromName ","Name Expr fromName ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name writeTo ","Name Expr intHash ","Name Expr intHash ","Name Expr intHash ","Name Expr intHash ","Variable Declarator int intHash = ","Primitive Type int ","Method Call Expr ","Simple Name calcHash ","Block Stmt ","Integer Literal Expr Zero  ","Method Call Expr ","Name Expr CodegenImplObjectStrict ","Simple Name genObjectUsingStrict ","Block Stmt ","Simple Name contains ","Method Call Expr ","Name Expr CodegenImplObjectStrict ","Simple Name genObjectUsingStrict ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name append ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name appendBindingSet ","Method Call Expr ","Simple Name lines ","Simple Name desc ","Simple Name binding ","Method Declaration ","Simple Name get ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Return Stmt ","Simple Name append ","Simple Name fillCacheUntil ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Name Expr CodegenImplNative ","Simple Name getTypeName ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Class Or Interface Type Binding ","Simple Name fields ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name result ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Field Access Expr ","Simple Name getName ","Simple Name field ","Simple Name name ","Block Stmt ","Name Expr setter ","Simple Name setter ","Name Expr setter ","Class Or Interface Type Binding ","Simple Name setters ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Field Access Expr ","Simple Name getName ","Simple Name method ","Simple Name name ","Method Call Expr ","Simple Name appendWrappers ","Field Access Expr ","Simple Name wrappers ","Simple Name lines ","Method Declaration ","Simple Name bindingTypeWrappers ","Method Call Expr ","Class Or Interface Type Object ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Simple Name toFloat ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Simple Name replace ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString ","Simple Name getCanonicalName ","Class Or Interface Type ArrayList ","Field Access Expr ","Simple Name clazz ","Simple Name ctor ","Method Declaration ","Simple Name ctor ","Expression Stmt ","Expression Stmt ","Void Type ","Expression Stmt ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Void Type ","Return Stmt ","Parameter StringBuilder lines ","Parameter Binding parameter ","Block Stmt ","Name Expr lines ","Name Expr parameter ","Name Expr parameter ","Class Or Interface Type StringBuilder ","Class Or Interface Type Binding ","Variable Declaration Expr ","Simple Name typeName ","Name Expr CodegenImplNative ","Name Expr typeName ","Name Expr typeName ","Variable Declarator String typeName = ","Simple Name append ","Method Call Expr ","Simple Name getTypeName ","Field Access Expr ","Simple Name valueType ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Method Call Expr ","Simple Name name ","Field Access Expr ","Simple Name get ","Name Expr CodegenImplObjectStrict ","Simple Name DEFAULT_VALUES ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Primitive Type int ","Simple Name calcHash ","Parameter String fromName ","Block Stmt ","Name Expr fromName ","Simple Name decode ","Variable Declaration Expr ","Name Expr hash ","Name Expr b ","Simple Name hash ","Name Expr hash ","Null Literal Expr ","Variable Declarator long hash = ","Primitive Type long ","Integer Literal Expr Note Zero  ","Block Stmt ","Simple Name b ","Primitive Type byte ","Simple Name getBytes ","Assign Expr XOR ","XOR","Assign Expr MULTIPLY ","MULTIPLY","Integer Literal Expr Note Zero  ","Cast Expr ","Primitive Type int ","PRIVATE","Class Or Interface Type Type ","Simple Name appendBindingSet ","Parameter StringBuilder lines ","Parameter ClassDescriptor desc ","Parameter Binding binding ","Block Stmt ","Simple Name field ","Name Expr binding ","Name Expr binding ","Class Or Interface Type StringBuilder ","Class Or Interface Type ClassDescriptor ","Class Or Interface Type Binding ","Expression Stmt ","Method Call Expr ","Array Type 1 ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Method Call Expr ","Simple Name name ","Name Expr CodegenImplNative ","Simple Name genField ","For Each Stmt ","Name Expr wrappers ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name fillCacheUntil ","Parameter List<WrapperDescriptor> wrappers ","Parameter StringBuilder lines ","Block Stmt ","Name Expr cache ","Name Expr cache ","Name Expr lines ","Name Expr cache ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type WrapperDescriptor ","Class Or Interface Type StringBuilder ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Name Expr wrapper ","Class Or Interface Type WrapperDescriptor ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Field Access Expr ","Simple Name getName ","Simple Name method ","Method Call Expr ","Simple Name appendInvocation ","Field Access Expr ","Simple Name code ","Simple Name params ","Method Declaration ","Simple Name parameters ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","Class Or Interface Type String ","Simple Name genNewInstCode ","Parameter Class clazz ","Parameter ConstructorDescriptor ctor ","Block Stmt ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr ctor ","Name Expr ctor ","Name Expr ctor ","Name Expr ctor ","Name Expr ctor ","Name Expr ctor ","Name Expr ctor ","Class Or Interface Type Class ","Class Or Interface Type ConstructorDescriptor ","Variable Declaration Expr ","Name Expr code ","Simple Name code ","Name Expr code ","Name Expr code ","Name Expr code ","Name Expr code ","Name Expr code ","Boolean Literal Expr true ","Method Call Expr ","Class Or Interface Type StringBuilder ","Object Creation Expr StringBuilder Optional.empty Optional.empty ","Class Or Interface Type StringBuilder ","Block Stmt ","Field Access Expr ","Simple Name isEmpty ","Simple Name parameters ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Null Literal Expr ","Simple Name objectFactory ","NullLiteralExpr","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Name Expr target ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Simple Name getCanonicalName ","Simple Name getCanonicalName ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name staticMethodName ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getCanonicalName ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name getCanonicalName ","Simple Name staticMethodName ","Variable Declaration Expr ","Simple Name params ","Name Expr params ","Variable Declarator List<Binding> params = ","Class Or Interface Type List ","Field Access Expr ","Simple Name parameters ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name objectFactory ","Method Call Expr ","Simple Name appendInvocation ","Block Stmt ","Field Access Expr ","Simple Name isEmpty ","Simple Name parameters ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getCanonicalName ","Method Call Expr ","Simple Name toString ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr params ","Variable Declaration Expr ","If Stmt ","Name Expr isFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Simple Name next ","Simple Name appendInvocation ","Parameter StringBuilder code ","Parameter List<Binding> params ","Block Stmt ","Name Expr code ","Name Expr code ","Name Expr code ","Name Expr code ","Array Type 1 ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Name Expr keyType ","Name Expr isFirst ","Variable Declarator boolean isFirst = ","Primitive Type boolean ","Boolean Literal Expr true ","true","Block Stmt ","Name Expr ctorParam ","Simple Name ctorParam ","Class Or Interface Type Binding ","Block Stmt ","Assign Expr ASSIGN ","ASSIGN","Boolean Literal Expr false ","false","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name name ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"CodegenImplObjectHash_calcHash","callMethodNameReferTo":{},"num":39,"succs":[[1,17],[2,27,3],[3,30,6,14],[4,28],[5,31],[2,33],[37,7,36],[10,13,8,12,11,9],[9],[],[11],[],[16,15],[1,0,6],[15],[],[],[23],[20,19],[28],[],[18],[21],[20,25,24],[20],[26],[],[5,4],[29],[28],[],[18,32,19],[],[21,34,35],[],[26],[],[22,38],[]],"nodeAttribute":["Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Primitive Type int ","Simple Name calcHash ","Parameter String fromName ","Block Stmt ","Name Expr fromName ","Simple Name fromName ","Simple Name decode ","Variable Declaration Expr ","Name Expr hash ","Name Expr b ","Simple Name hash ","Name Expr hash ","Null Literal Expr ","Variable Declarator long hash = ","Primitive Type long ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Simple Name b ","Primitive Type byte ","Simple Name getBytes ","Assign Expr XOR ","XOR","Assign Expr MULTIPLY ","MULTIPLY","Integer Literal Expr Note Zero  ","ReturnStmt","Cast Expr ","Primitive Type int "]}
{"Version":"0.9.22","MethodName":"CodegenImplObjectHash_appendBindingSet","callMethodNameReferTo":{"29":"CodegenImplNative.java_CodegenImplNative_outer_genField"},"num":51,"succs":[[7,6,5,3,1,8,4,2],[2],[],[4],[],[14,10],[15,16],[17,12],[18],[10,22],[],[12],[],[11,12],[],[],[],[],[19],[20,21,24,9],[],[29,26,25,27,23,28],[],[],[40,36,37,39,2,38],[],[],[30],[11,31],[32,13,33],[],[],[],[],[35,46],[48],[37],[],[44,22],[45,23],[34,35],[22],[22,41],[23],[],[],[43,41,47],[],[42,49,50],[],[30]],"nodeAttribute":["Method Declaration ","PRIVATE","STATIC","Class Or Interface Type Type ","Simple Name appendBindingSet ","Parameter StringBuilder lines ","Parameter ClassDescriptor desc ","Parameter Binding binding ","Block Stmt ","Simple Name field ","Simple Name lines ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Class Or Interface Type StringBuilder ","Class Or Interface Type ClassDescriptor ","Simple Name desc ","Class Or Interface Type Binding ","Expression Stmt ","Method Call Expr ","Array Type 1 ","Method Call Expr ","Simple Name lines ","Simple Name str ","Method Declaration ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Method Call Expr ","StringLiteralExpr","Simple Name name ","Name Expr CodegenImplNative ","Simple Name genField ","Expression Stmt ","Expression Stmt ","Void Type ","Expression Stmt ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"CodegenImplObjectHash_appendWrappers","callMethodNameReferTo":{},"num":108,"succs":[[1,2,24],[2,14],[3,26],[4,29],[5,33],[6,39],[1,46],[12,9,11,10,13,8],[],[10],[],[20,14],[16,23],[0],[],[16],[],[15,16],[16,42,17],[18,16],[22,21],[],[],[],[6,3,4,5],[26],[28],[26,25],[26],[15,31,30],[],[32],[],[35,34,17],[],[36,37],[38,25],[],[],[44,18,40,41],[],[43,45,27],[],[],[63,64,65,61,62,8,66],[],[48,47,19],[],[32],[75,50],[51,78],[52,53,85],[43,60,53],[54,87],[57,89,55],[80,57,79,56],[59,90],[58],[59,94],[52,97],[105],[8],[63],[],[71,42],[43,72],[60,49,51,50],[42],[67,42],[68,42],[69,42],[],[73,74],[],[],[67,77,76],[],[32],[81],[],[79,55],[79,82,83],[79],[84],[],[59,54],[87],[88],[87],[56],[80,92,91],[],[93],[],[96,68,95],[],[32],[98,69,99],[],[103,102,101,100],[],[],[32],[104,86],[],[107,106,70],[],[32]],"nodeAttribute":["For Each Stmt ","Name Expr wrappers ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","STATIC","Void Type ","Simple Name fillCacheUntil ","Parameter List<WrapperDescriptor> wrappers ","Parameter StringBuilder lines ","Block Stmt ","Simple Name wrappers ","Name Expr cache ","Simple Name lines ","Name Expr cache ","Name Expr lines ","Name Expr cache ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type WrapperDescriptor ","Class Or Interface Type StringBuilder ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Name Expr wrapper ","Class Or Interface Type WrapperDescriptor ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name append ","Method Call Expr ","Field Access Expr ","Simple Name getName ","Simple Name method ","Method Call Expr ","Simple Name appendInvocation ","Field Access Expr ","Simple Name code ","Simple Name params ","Method Declaration ","Simple Name parameters ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr params ","Variable Declaration Expr ","If Stmt ","Name Expr isFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Simple Name next ","Simple Name appendInvocation ","Parameter StringBuilder code ","Parameter List<Binding> params ","Block Stmt ","Name Expr code ","Name Expr code ","Name Expr code ","Name Expr code ","Array Type 1 ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Name Expr keyType ","Name Expr isFirst ","Variable Declarator boolean isFirst = ","Primitive Type boolean ","Boolean Literal Expr true ","true","Block Stmt ","Name Expr ctorParam ","Simple Name ctorParam ","Class Or Interface Type Binding ","Block Stmt ","Assign Expr ASSIGN ","ASSIGN","Boolean Literal Expr false ","false","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name name ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"CodegenImplObjectHash_appendVarDef","callMethodNameReferTo":{"23":"CodegenImplNative.java_CodegenImplNative_outer_getTypeName"},"num":61,"succs":[[16,1],[27],[4,8,6,5,7,3],[],[5],[],[10,14],[12,15],[0,1],[10,30],[],[12],[],[12,11],[],[],[21],[11,18],[],[17],[19,17],[22,23,17],[17],[25,18,24],[],[11,26],[],[28,9,32,29],[],[37,19,33,34,31,35,36],[],[],[50,46,47,49,48,3],[],[],[38],[13,39],[20,41,40],[],[],[42,43],[],[],[],[45,56],[58],[47],[],[54,30],[55,31],[44,45],[30],[30,51],[31],[],[],[53,51,57],[],[52,59,60],[],[38]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","STATIC","Void Type ","Return Stmt ","Parameter StringBuilder lines ","Parameter Binding parameter ","Block Stmt ","Name Expr lines ","Simple Name lines ","Name Expr parameter ","Simple Name parameter ","Name Expr parameter ","Class Or Interface Type StringBuilder ","Class Or Interface Type Binding ","Variable Declaration Expr ","Simple Name typeName ","Name Expr CodegenImplNative ","Name Expr typeName ","Name Expr typeName ","Variable Declarator String typeName = ","Simple Name append ","Method Call Expr ","Simple Name getTypeName ","Field Access Expr ","Simple Name valueType ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name lines ","Simple Name str ","Method Declaration ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Method Call Expr ","StringLiteralExpr","Simple Name name ","Field Access Expr ","Simple Name get ","Name Expr CodegenImplObjectStrict ","Simple Name DEFAULT_VALUES ","Expression Stmt ","Expression Stmt ","Void Type ","Expression Stmt ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"CodegenImplObjectHash_appendInvocation","callMethodNameReferTo":{},"num":64,"succs":[[30,1],[2,34],[3,4,41],[25,11,4],[5,43],[8,45,6],[36,8,35,7],[10,46],[9],[10,50],[3,53],[61],[17,16,18,13,15,19,14],[14],[],[16],[],[26,21],[25,27],[11,0,2,1],[21],[],[20,21],[22,21],[23,21],[],[],[28,29],[],[],[32,20,31],[],[33],[],[37],[],[35,6],[35,38,39],[35],[40],[],[10,5],[43],[44],[43],[7],[36,47,48],[],[49],[],[52,22,51],[],[33],[54,23,55],[],[59,58,57,56],[],[],[33],[60,42],[],[63,62,24],[],[33]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr params ","Variable Declaration Expr ","If Stmt ","Name Expr isFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Simple Name next ","Simple Name appendInvocation ","Parameter StringBuilder code ","Parameter List<Binding> params ","Block Stmt ","Name Expr code ","Simple Name code ","Name Expr code ","Name Expr code ","Name Expr code ","Simple Name params ","Array Type 1 ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Name Expr keyType ","Name Expr isFirst ","Variable Declarator boolean isFirst = ","Primitive Type boolean ","Boolean Literal Expr true ","true","Block Stmt ","Name Expr ctorParam ","Simple Name ctorParam ","Class Or Interface Type Binding ","Block Stmt ","Assign Expr ASSIGN ","ASSIGN","Boolean Literal Expr false ","false","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name name ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"CodegenImplObjectHash_append","callMethodNameReferTo":{},"num":22,"succs":[[1,16],[18],[8,4,5,7,3,6],[],[5],[],[14,10],[15,13],[0,1],[10],[],[10,9],[13],[],[],[],[12,9,17],[],[11,19,20],[],[21],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","STATIC","Void Type ","Expression Stmt ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr str ","Simple Name str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","StringLiteralExpr"]}
