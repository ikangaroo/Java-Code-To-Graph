{"fileName":"CodegenImplEnum.java","Version":"0.9.22","callMethodName":["genEnum","buildTriTree","renderTriTree","addFieldDispatch","append"]}
{"Version":"0.9.22","MethodName":"CodegenImplEnum_genEnum","callMethodNameReferTo":{},"num":571,"succs":[[19,1],[32,2],[3,39],[4,42],[45,5],[6,62],[7,65],[76,8,75],[11,13,9,14,12,10],[10],[],[12],[],[16,18],[7,0,6,2,4,5,3,1],[16],[],[15,16],[],[28],[35,21],[],[35,21,20],[35,22,21],[35,23,21],[35,24,21],[35,25,21],[26,21],[29,30,21],[21],[31],[],[37,33,20,34],[],[38,36],[],[],[84,80,81,85,82,83,10],[],[37,41,22,40],[],[38,36],[23,37,44,43],[],[38,36],[47,37,24,46],[],[48,49,36,51],[],[55,50,53,52],[],[106,80,107,109,108,10],[],[54,56,58,57],[],[198,200,201,80,10,199],[],[],[59,60],[15,61],[],[],[37,63,25,64],[],[38,36],[66,37,26,67],[],[71,69,68,36,70],[],[],[38],[72,73],[17,74],[],[],[],[27,77],[],[91,79],[93],[10],[82],[],[35,89],[36,90],[78,79],[35],[35,86],[36],[],[],[92,86,88],[],[94,95,87],[],[38],[97,115],[98,99,125],[130,99,105,110],[127,100],[101,131],[139,102],[103,146],[104,158],[98,170],[173,75,51],[107],[],[111,50],[105,97,96],[50],[113,112,114],[],[],[],[121],[117,35],[],[117,116,162],[117,35,118],[119,117],[117,122,123],[117],[124],[],[104,100,103,101,102],[127],[129],[127,126],[127],[],[135],[126],[132],[163,132,133],[137,136,132],[132],[138,126],[],[37,140,141,116],[],[144,142,36,143],[145,133,143],[],[38],[38],[149],[128],[165,147],[151,150,147],[147],[153,152],[155,156,154],[157,128],[],[],[],[],[161,148,118,159,134,167,160],[],[168,164],[166,169],[],[],[],[],[],[360,365,80,359,362,364,358,361,363,10],[],[],[119,37,171,172],[],[38,36],[120,174],[],[208,176],[217,177,178],[197,54,178],[179,219],[180,222],[236,181],[257,182],[185,183,238,259,258],[184,261],[185,265],[269,186,195,187],[274,187],[270,277,188,278,196],[189,285],[190,292],[306,191],[194,192,307,258,294],[308,193],[194,311],[313,195],[187,272,284],[314,177],[55,75,212],[202,204,203,199],[],[54,205],[197,175,176],[],[],[],[207,206],[],[],[213],[210],[],[209,210],[210,211],[210,214,215],[210],[216],[],[185,180,179,196,181],[219],[221],[218,219],[219],[230],[218],[223],[224,223],[223,225,227],[223,226],[223,227],[223,228],[231,223,232],[223],[234,233],[218,235],[],[],[246],[224,209],[237],[238,237,182],[239,182],[239,243,240],[239,243,241],[239,244,242],[295,296],[243],[247,248,237],[237],[250,249],[252,253,251],[209,254,255],[],[],[],[],[224,256],[],[184,183],[],[260],[],[263,239,262],[],[264],[],[267,266,211,240],[],[268,225],[],[189,194,188,190],[273,271],[],[270,271],[271,272],[275,271,276],[271],[168],[],[281,280,279],[226,282],[],[283],[],[],[],[289],[273,227],[286],[287,286],[286,291,290],[286],[273,227],[297],[287,241],[293],[293,294,191],[295,191],[298,293,299],[293],[300,301],[304,303,302],[287,305,241],[],[],[],[],[193,192],[260],[295,309,262],[310],[],[312,288,296,242],[],[244,243,262],[245,315,316,220],[],[317,228],[319,318,280],[320,229],[283],[],[323,322,407],[323,389,413],[409,324],[325,414],[423,326],[382,327,424,340,258],[426,328],[330,333,329,429],[330,435],[331,277,430,334,438],[440,332],[447,333],[330,432,284],[457,335],[463,336],[337,466],[338,474],[486,339],[489],[341,490],[342,504],[506,347,505,343,258],[344,508],[345,516],[346,518],[489],[522,348],[350,349,353,525],[350,531],[354,277,534,526,351],[536,352],[543,353],[350,528,284],[553,355],[356,559],[562,357],[568,322],[359],[],[162,397],[163,398],[164,399],[165,400],[404,166],[321],[35,162],[35,366,162],[35,367,162],[35,368,162],[35,369,162],[35,370,162],[371,162],[35,372,162],[35,373,162],[35,374,162],[35,375,162],[376,162],[35,377,162],[163],[163,379],[163,380],[164],[382,164,326],[164,383,326],[384,164],[164,385],[164,386],[164,387],[165],[392,166],[166,390],[166,391],[392,166],[166,393],[394,166],[395,166],[],[],[],[402,401,403],[],[],[],[406,405],[],[],[356,354,325,347,355,341,340,357,348,324],[409],[412],[408,409],[410,409],[409],[],[419],[408],[415],[415,416],[415,417],[415,421,420],[415],[408,422],[],[338,337,327,334,336,335,328,339],[280,379,425],[283],[37,366,428,427],[],[38,36],[331,332],[434,431],[],[430,431],[432,431],[433,431],[436,431,437],[431],[168],[439,390],[],[443],[391,433],[441],[441,444,445],[441],[446,433,391],[],[448,37,367,449],[],[452,453,451,36,442,450],[],[],[38],[434,143,454],[280,455,383],[392,456],[],[37,368,458,459],[],[461,416,462,384,36,460],[],[],[38],[37,464,465,369],[],[38,36],[470],[410],[467],[468,467],[472,471,467],[467],[473,410],[],[37,475,476,370],[],[481,479,477,478,480,36],[],[],[38],[483,482],[469,485],[468,484],[],[],[],[487,37,371,488],[],[38,36],[],[495],[411],[491],[342,491,165,492],[493,491,165],[497,491,496],[491],[498,499],[502,501,500],[411,503],[],[],[],[],[345,346,344,343],[507,492],[283],[],[512],[393],[509],[509,166,510],[509,513,514],[509],[515,393],[],[517,417,510],[],[520,519,380,493,372,167,511],[],[521,164,385,143],[283],[37,523,524,373],[],[38,36],[352,351],[530,527],[],[527,526],[527,528],[527,529],[527,533,532],[527],[168],[394,535],[],[539],[395,529],[537],[537,540,541],[537],[542,395,529],[],[37,374,544,545],[],[538,548,546,549,36,547],[],[],[38],[530,143,550],[280,551,386],[552,396],[],[555,37,375,554],[],[557,556,387,558,418,36],[],[],[38],[37,561,376,560],[],[38,36],[563,564,377,565,167,381,494],[],[164,388,143,566],[567,166],[283],[],[570,37,569,378],[],[38,36]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name genEnum ","Parameter ClassInfo classInfo ","Block Stmt ","Name Expr classInfo ","Simple Name classInfo ","Name Expr classInfo ","Class Or Interface Type ClassInfo ","Variable Declaration Expr ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Variable Declarator StringBuilder lines = ","Class Or Interface Type StringBuilder ","Object Creation Expr StringBuilder Optional.empty Optional.empty ","Class Or Interface Type StringBuilder ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Simple Name lines ","Simple Name str ","Method Declaration ","StringLiteralExpr","Method Call Expr ","Name Expr mapKey ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name renderTriTree ","Method Call Expr ","Simple Name trieTree ","Method Declaration ","Simple Name buildTriTree ","Method Call Expr ","Simple Name allConsts ","Method Declaration ","Name Expr Arrays ","Simple Name asList ","Method Call Expr ","Field Access Expr ","Simple Name getEnumConstants ","Simple Name clazz ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name getName ","Simple Name clazz ","ReturnStmt","Method Call Expr ","Simple Name toString ","Return Stmt ","Expression Stmt ","PRIVATE","Simple Name size ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Binary Expr AND ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type String ","Simple Name renderTriTree ","Parameter Map<Integer, Object> trieTree ","Block Stmt ","Name Expr trieTree ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type Integer ","Class Or Interface Type Object ","Expression Stmt ","Name Expr switchBody ","Simple Name switchBody ","Name Expr switchBody ","Name Expr switchBody ","Name Expr BigInteger ","Variable Declarator StringBuilder switchBody = ","Class Or Interface Type StringBuilder ","Object Creation Expr StringBuilder Optional.empty Optional.empty ","Class Or Interface Type StringBuilder ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name len ","Name Expr len ","Name Expr len ","Variable Declarator Integer len = ","Class Or Interface Type Integer ","Method Call Expr ","Simple Name getKey ","Method Call Expr ","Simple Name append ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Variable Declarator Map<Byte, Object> current = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name getValue ","Method Call Expr ","Simple Name addFieldDispatch ","Integer Literal Expr Zero  ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Simple Name lines ","Simple Name len ","Simple Name i ","Simple Name current ","Simple Name bytesToCompare ","Method Declaration ","Zero IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString ","Expression Stmt ","For Each Stmt ","Simple Name writeNull ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Stmt ","Simple Name valueType ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Class Or Interface Type Object ","Class Or Interface Type Map ","Simple Name buildTriTree ","Parameter List<Object> allConsts ","Block Stmt ","Simple Name Map ","Class Or Interface Type Integer ","Class Or Interface Type Object ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Object ","Variable Declaration Expr ","Name Expr trieTree ","Simple Name trieTree ","Name Expr trieTree ","Name Expr trieTree ","Variable Declarator Map<Integer, Object> trieTree = ","Class Or Interface Type Map ","Object Creation Expr HashMap<Integer, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr e ","Simple Name e ","Name Expr e ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Variable Declarator byte[] fromNameBytes = ","Array Type 1 ","Method Call Expr ","Method Call Expr ","Simple Name getBytes ","Simple Name toString ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Simple Name isEmpty ","Name Expr next ","Name Expr current ","Variable Declarator Map<Byte, Object> current = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Name Expr iter ","Class Or Interface Type Object ","Simple Name get ","Field Access Expr ","Simple Name length ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<Byte, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name b ","Name Expr b ","Name Expr b ","Variable Declarator byte b = ","Primitive Type byte ","Array Access Expr i ","Variable Declaration Expr ","Simple Name next ","Name Expr next ","Name Expr next ","Name Expr next ","Variable Declarator Map<Byte, Object> next = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name get ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<Byte, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name put ","Array Access Expr fromNameBytes.length - 1 ","Binary Expr MINUS ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name addFieldDispatch ","Parameter StringBuilder lines ","Parameter int len ","Parameter int i ","Parameter Map<Byte, Object> current ","Parameter List<Byte> bytesToCompare ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr len ","Name Expr len ","Name Expr len ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr current ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Class Or Interface Type StringBuilder ","Primitive Type int ","Primitive Type int ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Byte ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name b ","Name Expr b ","Name Expr b ","Name Expr b ","Variable Declarator Byte b = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name getKey ","Block Stmt ","Binary Expr MINUS ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name size ","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name e ","Name Expr e ","Name Expr e ","Variable Declarator Object e = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name getName ","Simple Name getClass ","Simple Name toString ","Method Call Expr ","Simple Name toLong ","String Literal Expr Not Empty  ","continue;","Variable Declaration Expr ","Simple Name next ","Name Expr next ","Name Expr next ","Name Expr next ","Variable Declarator Map<Byte, Object> next = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name getValue ","Block Stmt ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name size ","Variable Declaration Expr ","Simple Name nextBytesToCompare ","Name Expr nextBytesToCompare ","Name Expr nextBytesToCompare ","Variable Declarator ArrayList<Byte> nextBytesToCompare = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name size ","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr stream ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"CodegenImplEnum_buildTriTree","callMethodNameReferTo":{},"num":152,"succs":[[37,1],[46,2,3],[22,33,3],[4,48],[5,51],[6,65],[86,7],[10,8,67,88,87],[9,90],[10,94],[98,11,20,12],[103,12],[99,107,13,108,21],[14,115],[15,122],[136,16],[19,17,137,87,124],[138,18],[19,141],[143,20],[12,101,114],[144,2],[23,151,41],[26,28,29,24,25,27],[25],[],[30,32,31,27],[],[33,34],[22,0,1],[],[],[],[],[36,35],[],[],[42],[39],[],[38,39],[39,40],[39,43,44],[39],[45],[],[10,5,4,21,6],[48],[50],[47,48],[48],[59],[47],[52],[53,52],[52,54,56],[52,55],[52,56],[52,57],[60,52,61],[52],[63,62],[47,64],[],[],[75],[53,38],[66],[67,66,7],[68,7],[68,72,69],[68,72,70],[68,73,71],[125,126],[72],[76,77,66],[66],[79,78],[81,82,80],[38,83,84],[],[],[],[],[53,85],[],[9,8],[],[89],[],[92,68,91],[],[93],[],[96,95,40,69],[],[97,54],[],[14,19,13,15],[102,100],[],[99,100],[100,101],[104,100,105],[100],[106],[],[],[111,110,109],[55,112],[],[113],[],[],[],[119],[102,56],[116],[117,116],[116,121,120],[116],[102,56],[127],[117,70],[123],[123,124,16],[125,16],[128,123,129],[123],[130,131],[134,133,132],[117,135,70],[],[],[],[],[18,17],[89],[125,139,91],[140],[],[142,118,126,71],[],[73,72,91],[74,145,146,49],[],[147,57],[149,148,110],[150,58],[113],[],[]],"nodeAttribute":["Expression Stmt ","For Each Stmt ","Simple Name writeNull ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Stmt ","Simple Name valueType ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Class Or Interface Type Object ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type Map ","Simple Name buildTriTree ","Parameter List<Object> allConsts ","Block Stmt ","Simple Name Map ","Class Or Interface Type Integer ","Class Or Interface Type Object ","Simple Name allConsts ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Object ","Variable Declaration Expr ","Name Expr trieTree ","Simple Name trieTree ","Name Expr trieTree ","Name Expr trieTree ","Variable Declarator Map<Integer, Object> trieTree = ","Class Or Interface Type Map ","Object Creation Expr HashMap<Integer, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr e ","Simple Name e ","Name Expr e ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Name Expr fromNameBytes ","Variable Declarator byte[] fromNameBytes = ","Array Type 1 ","Method Call Expr ","Method Call Expr ","Simple Name getBytes ","Simple Name toString ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Simple Name isEmpty ","Name Expr next ","Name Expr current ","Variable Declarator Map<Byte, Object> current = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Name Expr iter ","Class Or Interface Type Object ","Simple Name get ","Field Access Expr ","Simple Name length ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<Byte, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name b ","Name Expr b ","Name Expr b ","Variable Declarator byte b = ","Primitive Type byte ","Array Access Expr i ","Variable Declaration Expr ","Simple Name next ","Name Expr next ","Name Expr next ","Name Expr next ","Variable Declarator Map<Byte, Object> next = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name get ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<Byte, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name put ","Array Access Expr fromNameBytes.length - 1 ","Binary Expr MINUS ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","ReturnStmt"]}
{"Version":"0.9.22","MethodName":"CodegenImplEnum_renderTriTree","callMethodNameReferTo":{},"num":360,"succs":[[1,23],[2,3,33],[38,9,3,17],[35,4],[5,39],[47,6],[58,7],[8,70],[2,82],[86,85,10],[13,11,14,16,15,12],[12],[],[14],[],[19,18],[1,9,0],[18],[],[21,20,22],[],[],[],[29],[25,50],[],[25,24,74],[50,25,26],[27,25],[25,30,31],[25],[32],[],[8,7,4,5,6],[35],[37],[35,34],[35],[],[43],[34],[40],[75,40,41],[45,44,40],[40],[46,34],[],[52,48,49,24],[],[55,53,54,51],[],[],[93,11,90,94,91,92,12],[56,41,54],[],[57],[57],[],[61],[36],[77,59],[62,63,59],[59],[65,64],[67,68,66],[69,36],[],[],[],[],[73,60,26,71,42,79,72],[],[80,76],[78,81],[],[],[],[],[],[144,11,149,143,146,148,142,145,147,12],[],[],[27,52,83,84],[],[57,51],[],[28,87],[],[100,89],[102],[91],[],[50,98],[51,99],[88,89],[50],[50,95],[51],[],[],[101,95,97],[],[103,104,96],[],[57],[107,106,191],[107,173,197],[193,108],[109,198],[207,110],[166,209,111,124,208],[213,112],[114,117,113,216],[114,222],[115,225,217,118,226],[229,116],[236,117],[114,219,228],[246,119],[252,120],[121,255],[122,263],[275,123],[278],[125,279],[126,293],[295,131,294,127,208],[128,297],[129,305],[130,307],[278],[311,132],[134,133,137,314],[134,320],[138,225,323,315,135],[325,136],[332,137],[134,317,228],[342,139],[140,348],[351,141],[357,106],[143],[],[74,181],[75,182],[76,183],[77,184],[188,78],[105],[50,74],[50,150,74],[50,151,74],[50,152,74],[50,153,74],[50,154,74],[155,74],[50,156,74],[50,157,74],[50,158,74],[50,159,74],[160,74],[50,161,74],[75],[75,163],[75,164],[76],[166,76,110],[76,167,110],[168,76],[76,169],[76,170],[76,171],[77],[176,78],[78,174],[78,175],[176,78],[78,177],[178,78],[179,78],[],[],[],[186,185,187],[],[],[],[190,189],[],[],[140,138,109,131,139,125,124,141,132,108],[193],[196],[192,193],[194,193],[193],[],[203],[192],[199],[199,200],[199,201],[199,205,204],[199],[192,206],[],[122,121,111,118,120,119,112,123],[],[210,163,211],[],[212],[],[52,150,215,214],[],[57,51],[115,116],[221,218],[],[217,218],[219,218],[220,218],[223,218,224],[218],[80],[],[227,174],[],[],[232],[220,175],[230],[230,233,234],[230],[235,175,220],[],[237,52,151,238],[],[241,242,240,51,231,239],[],[],[57],[221,54,243],[210,244,167],[176,245],[],[52,152,247,248],[],[251,250,168,200,51,249],[],[],[57],[52,253,254,153],[],[57,51],[259],[194],[256],[257,256],[260,261,256],[256],[262,194],[],[52,264,265,154],[],[270,268,266,267,269,51],[],[],[57],[272,271],[258,274],[257,273],[],[],[],[276,52,155,277],[],[57,51],[],[284],[195],[280],[126,280,77,281],[282,280,77],[286,280,285],[280],[287,288],[291,290,289],[195,292],[],[],[],[],[129,130,128,127],[296,281],[212],[],[301],[177],[298],[298,78,299],[298,303,302],[298],[304,177],[],[306,201,299],[],[309,308,282,164,156,79,300],[],[310,76,169,54],[212],[52,312,313,157],[],[57,51],[136,135],[319,316],[],[316,315],[316,317],[316,318],[316,322,321],[316],[80],[178,324],[],[328],[179,318],[326],[326,329,330],[326],[331,179,318],[],[52,333,158,334],[],[327,337,335,338,51,336],[],[],[57],[319,54,339],[210,340,170],[341,180],[],[344,52,159,343],[],[346,345,171,347,202,51],[],[],[57],[52,350,160,349],[],[57,51],[352,353,354,161,79,165,283],[],[76,172,54,355],[356,78],[212],[],[359,52,358,162],[],[57,51]],"nodeAttribute":["Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Binary Expr AND ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type String ","Simple Name renderTriTree ","Parameter Map<Integer, Object> trieTree ","Block Stmt ","Name Expr trieTree ","Simple Name trieTree ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type Integer ","Class Or Interface Type Object ","Expression Stmt ","Name Expr switchBody ","Simple Name switchBody ","Name Expr switchBody ","Name Expr switchBody ","Name Expr BigInteger ","Variable Declarator StringBuilder switchBody = ","Class Or Interface Type StringBuilder ","Object Creation Expr StringBuilder Optional.empty Optional.empty ","Class Or Interface Type StringBuilder ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name len ","Name Expr len ","Name Expr len ","Variable Declarator Integer len = ","Class Or Interface Type Integer ","Method Call Expr ","Simple Name getKey ","Method Call Expr ","Simple Name append ","Binary Expr PLUS ","Simple Name lines ","Simple Name str ","Method Declaration ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Variable Declarator Map<Byte, Object> current = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name getValue ","Method Call Expr ","Simple Name addFieldDispatch ","Integer Literal Expr Zero  ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Simple Name lines ","Simple Name len ","Simple Name i ","Simple Name current ","Simple Name bytesToCompare ","Method Declaration ","Zero IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","ReturnStmt","Method Call Expr ","Simple Name toString ","Return Stmt ","Expression Stmt ","Simple Name size ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name addFieldDispatch ","Parameter StringBuilder lines ","Parameter int len ","Parameter int i ","Parameter Map<Byte, Object> current ","Parameter List<Byte> bytesToCompare ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr len ","Name Expr len ","Name Expr len ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr current ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Class Or Interface Type StringBuilder ","Primitive Type int ","Primitive Type int ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Byte ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name b ","Name Expr b ","Name Expr b ","Name Expr b ","Variable Declarator Byte b = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name getKey ","Block Stmt ","EQUALS","Binary Expr MINUS ","MINUS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Method Call Expr ","Simple Name size ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name e ","Name Expr e ","Name Expr e ","Variable Declarator Object e = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name getName ","Simple Name getClass ","Simple Name toString ","Method Call Expr ","Simple Name toLong ","String Literal Expr Not Empty  ","continue;","Variable Declaration Expr ","Simple Name next ","Name Expr next ","Name Expr next ","Name Expr next ","Variable Declarator Map<Byte, Object> next = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name getValue ","Block Stmt ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name size ","Variable Declaration Expr ","Simple Name nextBytesToCompare ","Name Expr nextBytesToCompare ","Name Expr nextBytesToCompare ","Variable Declarator ArrayList<Byte> nextBytesToCompare = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name size ","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr stream ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"CodegenImplEnum_addFieldDispatch","callMethodNameReferTo":{},"num":286,"succs":[[2,1,94],[2,74,100],[96,3],[4,101],[110,5],[66,6,112,19,111],[116,7],[9,12,8,123],[9,129],[10,133,124,13,134],[137,11],[12,144],[9,126,136],[155,14],[161,15],[16,164],[17,172],[184,18],[187],[20,188],[21,202],[204,26,203,22,111],[23,206],[24,214],[25,216],[187],[220,27],[29,28,32,223],[29,229],[33,133,232,224,30],[234,31],[241,32],[29,226,136],[251,34],[35,257],[260,36],[1,266],[42,47,38,41,44,40,46,43,45,39],[39],[],[41],[],[49,84],[85,63],[67,86],[75,87],[91,77],[0],[119,49],[],[119,48,49],[119,50,49],[119,51,49],[119,52,49],[119,53,49],[54,49],[119,55,49],[119,56,49],[119,57,49],[119,58,49],[59,49],[119,60,49],[63],[],[63,62],[63,64],[67],[],[67,66,5],[67,68,5],[67,69],[67,70],[67,71],[67,72],[75],[],[79,77],[],[77,76],[77,78],[79,77],[77,80],[81,77],[82,77],[],[],[],[89,88,90],[],[],[],[93,92],[],[],[35,33,4,26,34,20,19,36,27,3],[96],[99],[95,96],[97,96],[96],[],[106],[95],[102],[102,103],[102,104],[102,108,107],[102],[95,109],[],[17,16,6,13,15,14,7,18],[],[113,62,114],[],[115],[],[121,48,118,117],[],[122,120],[],[],[274,38,271,275,272,273,39],[],[10,11],[128,125],[],[124,125],[126,125],[127,125],[130,125,131],[125],[132],[],[],[135,76],[],[],[140],[127,78],[138],[138,141,142],[138],[143,127,78],[],[145,121,50,146],[],[149,150,148,120,139,147],[],[],[122],[128,152,151],[113,153,68],[],[79,154],[],[121,51,156,157],[],[159,69,103,160,120,158],[],[],[122],[121,162,163,52],[],[122,120],[168],[97],[165],[166,165],[169,170,165],[165],[171,97],[],[121,173,174,53],[],[179,177,175,176,178,120],[],[],[122],[181,180],[167,183],[166,182],[],[],[],[185,121,54,186],[],[122,120],[],[193],[98],[189],[21,189,75,190],[191,189,75],[195,189,194],[189],[196,197],[200,199,198],[98,201],[],[],[],[],[24,25,23,22],[205,190],[115],[],[210],[80],[207],[207,77,208],[211,207,212],[207],[213,80],[],[104,215,208],[],[218,217,64,191,55,37,209],[],[219,67,70,152],[115],[121,221,222,56],[],[122,120],[31,30],[228,225],[],[225,224],[225,226],[225,227],[225,231,230],[225],[132],[233,81],[],[237],[82,227],[235],[235,238,239],[235],[240,82,227],[],[121,57,242,243],[],[236,246,244,247,120,245],[],[],[122],[228,152,248],[113,249,71],[250,83],[],[253,121,58,252],[],[255,254,72,256,105,120],[],[],[122],[121,259,59,258],[],[122,120],[261,262,60,263,37,65,192],[],[67,73,152,264],[265,77],[115],[],[268,121,267,61],[],[122,120],[281,270],[283],[272],[],[119,279],[120,280],[269,270],[119],[119,276],[120],[],[],[282,276,278],[],[284,285,277],[],[122]],"nodeAttribute":["For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name addFieldDispatch ","Parameter StringBuilder lines ","Parameter int len ","Parameter int i ","Parameter Map<Byte, Object> current ","Parameter List<Byte> bytesToCompare ","Block Stmt ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr lines ","Name Expr len ","Simple Name len ","Name Expr len ","Name Expr len ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr current ","Simple Name current ","Name Expr bytesToCompare ","Simple Name bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Name Expr bytesToCompare ","Class Or Interface Type StringBuilder ","Primitive Type int ","Primitive Type int ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Byte ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name b ","Name Expr b ","Name Expr b ","Name Expr b ","Variable Declarator Byte b = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name getKey ","Block Stmt ","EQUALS","Binary Expr MINUS ","MINUS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Simple Name lines ","Simple Name str ","Method Declaration ","StringLiteralExpr","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Method Call Expr ","Simple Name size ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","PLUS","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name e ","Name Expr e ","Name Expr e ","Variable Declarator Object e = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name getName ","Simple Name getClass ","Simple Name toString ","Method Call Expr ","Simple Name toLong ","String Literal Expr Not Empty  ","continue;","Variable Declaration Expr ","Simple Name next ","Name Expr next ","Name Expr next ","Name Expr next ","Variable Declarator Map<Byte, Object> next = ","Class Or Interface Type Map ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name Map ","Class Or Interface Type Byte ","Class Or Interface Type Object ","Simple Name getValue ","Block Stmt ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name size ","Variable Declaration Expr ","Simple Name nextBytesToCompare ","Name Expr nextBytesToCompare ","Name Expr nextBytesToCompare ","Variable Declarator ArrayList<Byte> nextBytesToCompare = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name size ","Variable Declaration Expr ","Simple Name a ","Name Expr a ","Variable Declarator Byte a = ","Class Or Interface Type Byte ","Method Call Expr ","Simple Name get ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Binary Expr MINUS ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr String ","Simple Name format ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr stream ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name addFieldDispatch ","Binary Expr PLUS ","Object Creation Expr ArrayList<Byte> Optional.empty Optional.empty ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","Return Stmt ","Expression Stmt ","Simple Name size ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Name Expr lines ","Name Expr str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"CodegenImplEnum_append","callMethodNameReferTo":{},"num":23,"succs":[[17,1],[19],[8,3,5,9,6,7,4],[4],[],[6],[],[11,15],[14,16],[0,1],[11],[],[11,10],[14],[],[],[],[18,10,13],[],[20,21,12],[],[22],[]],"nodeAttribute":["Return Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Simple Name size ","Simple Name append ","Parameter StringBuilder lines ","Parameter String str ","Block Stmt ","Name Expr lines ","Simple Name lines ","Name Expr lines ","Name Expr str ","Simple Name str ","Class Or Interface Type StringBuilder ","Class Or Interface Type String ","Method Call Expr ","Simple Name append ","Method Call Expr ","Simple Name append ","String Literal Expr Not Empty  ","StringLiteralExpr"]}
