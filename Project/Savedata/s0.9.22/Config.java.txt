{"fileName":"Config.java","Version":"0.9.22","callMethodName":["configName","getDecoderCacheKey","getEncoderCacheKey","decodingMode","builder","copyBuilder","indentionStep","omitDefaultValue","escapeUnicode","encodingMode","decodingMode","encodingMode","indentionStep","omitDefaultValue","escapeUnicode","build","doBuild","equals","hashCode","copy","toString","updateClassDescriptor","detectUnwrappers","detectWrappers","getParamNames","reflectCall","detectStaticFactory","detectCtor","updateBindings","updateBindingWithJsonProperty","createOmitValue","getJsonWrapper","getJsonUnwrapper","getJsonCreator","getJsonProperty","getJsonIgnore","getAnnotation"]}
{"Version":"0.9.22","MethodName":"Config_configName","callMethodNameReferTo":{},"num":8,"succs":[[2,1,3,4],[],[3],[],[5],[0,7,6],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Class Or Interface Type Object ","Simple Name configName ","Block Stmt ","Method Call Expr ","ReturnStmt","Name Expr configName "]}
{"Version":"0.9.22","MethodName":"Config_getDecoderCacheKey","callMethodNameReferTo":{"59":"TypeLiteral.java_TypeLiteral_outer_getDecoderCacheKey","60":"TypeLiteral.java_TypeLiteral_outer_create"},"num":76,"succs":[[27,1],[45,2],[30,3,47,4,46],[15,31,4,49],[5,50],[51,6],[52,7],[8,56],[10,57,34,46,9],[10,15,35,49],[58,11],[12,63],[72,13],[74,14],[15,49,40],[19,18,17,16,20],[],[18],[],[26,22],[0,4,1],[22],[],[21,22],[23,22],[24,22],[],[41],[29,21],[],[28],[30,28,2],[33,23,28,31],[],[32],[8,32,34],[32,37,24,35,38],[],[22],[36],[36,39],[28,42,43],[28],[29,44,21],[],[3],[],[48],[],[],[12,10,11,14,7,13,6],[],[54,32,53],[],[33,55,23],[],[9],[48],[36,53,59],[60,15,38,61],[37,24,62],[],[],[68],[65],[],[64],[64,66],[64,69,70],[64],[71,65],[],[66,73,25,39],[],[75,67,53],[]],"nodeAttribute":["Method Call Expr ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","For Stmt ","This Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Name Expr JsonIteratorPool ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Object ","Simple Name getDecoderCacheKey ","Parameter Type type ","Block Stmt ","Name Expr type ","Name Expr iter ","Boolean Literal Expr true ","Name Expr type ","Name Expr type ","Name Expr iter ","Variable Declaration Expr ","Simple Name writeVal ","Name Expr decoderCacheKeys ","Binary Expr EQUALS ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr decoderCacheKeys ","Binary Expr EQUALS ","Simple Name writeVal ","Name Expr compType ","Name Expr TypeLiteral ","Name Expr configName ","String Literal Expr Not Empty  ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Simple Name append ","Method Call Expr ","Simple Name get ","Block Stmt ","NOT_EQUALS","Simple Name desc ","NullLiteralExpr","ReturnStmt","Block Stmt ","ThisExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Method Call Expr ","Simple Name getDecoderCacheKey ","Simple Name create ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoderCacheKeys ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<Type, String> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<Type, String> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Expression Stmt ","Name Expr decoderCacheKeys "]}
{"Version":"0.9.22","MethodName":"Config_getEncoderCacheKey","callMethodNameReferTo":{"59":"TypeLiteral.java_TypeLiteral_outer_getEncoderCacheKey"},"num":76,"succs":[[1,27],[2,45],[3,4,47,46,30],[4,31,49,15],[50,5],[6,51],[52,7],[8,56],[9,10,57,34,46],[35,10,49,15],[11,58],[12,63],[13,72],[14,74],[15,49,40],[18,19,16,20,17],[],[18],[],[22,26],[0,1,4],[22],[],[22,21],[23,22],[24,22],[],[41],[29,21],[],[28],[28,2,30],[23,28,33,31],[],[32],[8,32,34],[24,35,32,37,38],[],[22],[36],[39,36],[28,42,43],[28],[29,44,21],[],[3],[],[48],[],[],[13,12,11,14,10,6,7],[],[32,53,54],[],[23,33,55],[],[9],[48],[59,36,53],[15,61,60,38],[24,62,37],[],[],[68],[65],[],[64],[64,66],[64,69,70],[64],[71,65],[],[66,39,25,73],[],[75,67,53],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Binary Expr GREATER ","Synchronized Stmt ","This Expr ","Expression Stmt ","For Each Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Primitive Type double ","Simple Name getEncoderCacheKey ","Parameter Type type ","Block Stmt ","Name Expr type ","Simple Name type ","Name Expr type ","Name Expr iter ","String Literal Expr Not Empty  ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name cacheKey ","Name Expr encoderCacheKeys ","Binary Expr NOT_EQUALS ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr encoderCacheKeys ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr epilogue ","Name Expr TypeLiteral ","Name Expr configName ","Name Expr cacheKey ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Simple Name append ","Method Call Expr ","Simple Name get ","Block Stmt ","NOT_EQUALS","Name Expr iter ","NullLiteralExpr","ReturnStmt","Block Stmt ","ThisExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name get ","Block Stmt ","Primitive Type byte ","Assign Expr ASSIGN ","Method Call Expr ","Method Call Expr ","Simple Name getEncoderCacheKey ","Simple Name stream ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoderCacheKeys ","Class Or Interface Type Class ","Name Expr newCache ","Variable Declarator HashMap<Type, String> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<Type, String> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Expression Stmt "]}
{"Version":"0.9.22","MethodName":"Config_decodingMode","callMethodNameReferTo":{},"num":10,"succs":[[2,3,4,1],[],[3],[],[5],[7,6,0],[],[8,9],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Class Or Interface Type DecodingMode ","Method Call Expr ","Block Stmt ","Return Stmt ","ReturnStmt","Field Access Expr ","Name Expr Codegen ","Simple Name decodingMode "]}
{"Version":"0.9.22","MethodName":"Config_builder","callMethodNameReferTo":{},"num":8,"succs":[[2,3,4,1],[],[3],[],[5],[7,0,6],[],[]],"nodeAttribute":["Method Declaration ","PROTECTED","Class Or Interface Type Builder ","Simple Name builder ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr builder "]}
{"Version":"0.9.22","MethodName":"Config_copyBuilder","callMethodNameReferTo":{},"num":54,"succs":[[4,2,1,3],[],[3],[],[5],[7,0,6],[],[10,9,8],[],[],[18,20,1,19],[21,12],[38,13],[42,14],[45,15],[16,48],[51,17],[33,10,6],[19],[],[16,14,13,17,11,12,15],[34],[24,23],[],[],[26,22],[],[25,28],[],[30,27],[],[29,32],[],[31],[36,24,35],[24],[37],[],[39,23,40],[41,22],[],[],[26,43,40],[25,44],[],[46,28,40],[27,47],[],[30,49,40],[29,50],[],[52,32,40],[53,31],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name copyBuilder ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr builder ","Boolean Literal Expr true ","Method Declaration ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Builder ","Simple Name copy ","Block Stmt ","Variable Declaration Expr ","Name Expr decoder ","Name Expr encodingMode ","Simple Name builder ","Name Expr builder ","Name Expr decodingMode ","Name Expr builder ","Name Expr indentionStep ","Name Expr builder ","Name Expr escapeUnicode ","Name Expr decoder ","Name Expr omitDefaultValue ","Name Expr builder ","Variable Declarator Builder builder = ","Class Or Interface Type Builder ","Object Creation Expr Builder Optional.empty Optional.empty ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name encodingMode ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name decodingMode ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name indentionStep ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name escapeUnicode ","Expression Stmt ","Field Access Expr ","Simple Name omitDefaultValue "]}
{"Version":"0.9.22","MethodName":"Config_indentionStep","callMethodNameReferTo":{},"num":10,"succs":[[4,1,2,3],[],[3],[],[5],[0,7,6],[],[9,8],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Primitive Type int ","Simple Name indentionStep ","Block Stmt ","Return Stmt ","ReturnStmt","Field Access Expr ","Name Expr builder ","Simple Name indentionStep "]}
{"Version":"0.9.22","MethodName":"Config_omitDefaultValue","callMethodNameReferTo":{},"num":10,"succs":[[4,1,2,3],[],[3],[],[5],[7,0,6],[],[8,9],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Primitive Type boolean ","Method Call Expr ","Block Stmt ","Return Stmt ","ReturnStmt","Field Access Expr ","Name Expr builder ","Simple Name omitDefaultValue "]}
{"Version":"0.9.22","MethodName":"Config_escapeUnicode","callMethodNameReferTo":{},"num":10,"succs":[[2,3,1,4],[],[3],[],[5],[7,0,6],[],[9,8],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Primitive Type boolean ","Class Or Interface Type CodegenResult ","Block Stmt ","Return Stmt ","ReturnStmt","Field Access Expr ","Class Or Interface Type Builder ","Simple Name setDateFormat "]}
{"Version":"0.9.22","MethodName":"Config_encodingMode","callMethodNameReferTo":{},"num":10,"succs":[[3,2,1,4],[],[3],[],[5],[7,0,6],[],[8,9],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Class Or Interface Type EncodingMode ","Simple Name encodingMode ","Block Stmt ","Return Stmt ","ReturnStmt","Field Access Expr ","Name Expr builder ","Simple Name encodingMode "]}
{"Version":"0.9.22","MethodName":"Builder_decodingMode","callMethodNameReferTo":{},"num":19,"succs":[[11,1],[18,2,17],[4,5,3,7,6],[],[5],[],[9,10],[0,1],[9],[],[],[12,8,13],[14,15],[],[16],[],[],[],[16]],"nodeAttribute":["Expression Stmt ","Class Or Interface Type JsonIterator ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name decodingMode ","Parameter DecodingMode decodingMode ","Block Stmt ","Name Expr decodingMode ","Simple Name decodingMode ","Class Or Interface Type DecodingMode ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","This Expr ","Simple Name decodingMode ","ThisExpr","ReturnStmt","This Expr "]}
{"Version":"0.9.22","MethodName":"Builder_encodingMode","callMethodNameReferTo":{},"num":19,"succs":[[1,11],[2,18,17],[4,5,7,6,3],[],[5],[],[10,9],[0,1],[9],[],[],[8,12,13],[14,15],[],[16],[],[],[],[16]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name encodingMode ","Parameter EncodingMode encodingMode ","Block Stmt ","Name Expr encodingMode ","Simple Name encodingMode ","Class Or Interface Type EncodingMode ","Assign Expr ASSIGN ","Expression Stmt ","ASSIGN","Void Type ","Simple Name encodingMode ","ThisExpr","ReturnStmt","Name Expr type "]}
{"Version":"0.9.22","MethodName":"Builder_indentionStep","callMethodNameReferTo":{},"num":19,"succs":[[11,1],[18,2,17],[5,3,6,7,4],[],[5],[],[10,9],[0,1],[9],[],[],[12,8,13],[14,15],[],[16],[],[],[],[16]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Primitive Type boolean ","Simple Name indentionStep ","Parameter int indentionStep ","Block Stmt ","Name Expr indentionStep ","Simple Name indentionStep ","Primitive Type int ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","This Expr ","Simple Name indentionStep ","ThisExpr","ReturnStmt","This Expr "]}
{"Version":"0.9.22","MethodName":"Builder_omitDefaultValue","callMethodNameReferTo":{},"num":19,"succs":[[11,1],[2,18,17],[4,5,7,3,6],[],[5],[],[9,10],[1,0],[9],[],[],[8,12,13],[15,14],[],[16],[],[],[],[16]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name omitDefaultValue ","Parameter boolean omitDefaultValue ","Block Stmt ","Name Expr omitDefaultValue ","Simple Name omitDefaultValue ","Primitive Type boolean ","Assign Expr ASSIGN ","Variable Declarator int peekStart = ","ASSIGN","Name Expr iter ","Simple Name omitDefaultValue ","ThisExpr","ReturnStmt","This Expr "]}
{"Version":"0.9.22","MethodName":"Builder_escapeUnicode","callMethodNameReferTo":{},"num":19,"succs":[[1,11],[2,18,17],[5,4,7,3,6],[],[5],[],[9,10],[1,0],[9],[],[],[12,13,8],[14,15],[],[16],[],[],[],[16]],"nodeAttribute":["Expression Stmt ","Return Stmt ","If Stmt ","PUBLIC","Class Or Interface Type Builder ","Simple Name escapeUnicode ","Parameter boolean escapeUnicode ","Block Stmt ","Name Expr escapeUnicode ","Simple Name escapeUnicode ","Primitive Type boolean ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Name Expr left ","Simple Name escapeUnicode ","ThisExpr","ReturnStmt","Void Type "]}
{"Version":"0.9.22","MethodName":"Builder_build","callMethodNameReferTo":{"30":"JsoniterSpi.java_JsoniterSpi_outer_assignConfigName"},"num":92,"succs":[[21,1],[34,2],[50,3],[37,4,52,5,51],[38,16,54,5],[6,55],[56,7],[8,57],[9,61],[41,11,62,10,51],[42,16,11,54],[12,63],[13,68],[77,14],[79,15],[45,16,54],[18,19,17,20],[],[19],[],[0,2,1,5],[28],[23],[],[22],[24,22],[25,66,22],[26,22],[29,22,30],[22],[32,23,31],[],[33],[],[46],[24,36],[],[35],[37,35,3],[25,38,40,35],[],[39],[41,39,9],[42,39,26],[43],[43,44],[47,35,48],[35],[49,24,36],[],[4],[],[53],[],[],[12,7,8,13,15,11,14],[],[39,58,59],[],[25,40,60],[],[10],[53],[43,64,58],[26,65,67],[],[],[85,83,81,82,84],[73],[70],[],[69],[71,69],[74,75,69],[69],[70,76],[],[71,78,27,44],[],[80,72,58],[],[],[83],[],[88,66],[86],[89,54,67],[66],[],[87,90,91],[],[33]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Synchronized Stmt ","Class Expr Config.class ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Config ","Simple Name build ","Block Stmt ","Variable Declaration Expr ","Simple Name configName ","Name Expr JsoniterSpi ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Variable Declarator String configName = ","Name Expr stream ","Method Call Expr ","Simple Name assignConfigName ","This Expr ","ThisExpr","Variable Declaration Expr ","Method Call Expr ","Name Expr configs ","Simple Name append ","Name Expr config ","Simple Name append ","Name Expr configs ","Name Expr config ","Name Expr config ","Simple Name append ","Name Expr config ","Name Expr config ","Variable Declarator Config config = ","Class Or Interface Type Config ","Method Call Expr ","Simple Name get ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Block Stmt ","Class Or Interface Type Config ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name doBuild ","Simple Name configName ","Method Declaration ","Variable Declaration Expr ","Simple Name newCache ","Name Expr configs ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Config> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Config> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr configs ","PROTECTED","Class Or Interface Type String ","Simple Name toFloat ","Parameter String configName ","Block Stmt ","Return Stmt ","Name Expr configName ","Class Or Interface Type String ","Object Creation Expr Config Optional.empty Optional.empty ","Class Or Interface Type Config ","This Expr "]}
{"Version":"0.9.22","MethodName":"Builder_doBuild","callMethodNameReferTo":{},"num":15,"succs":[[5,3,1,2,4],[],[3],[],[9,8],[6],[11,10,0],[8],[],[],[],[7,12,13],[],[14],[]],"nodeAttribute":["Method Declaration ","PROTECTED","Class Or Interface Type String ","Simple Name toFloat ","Parameter String configName ","Block Stmt ","Return Stmt ","Name Expr configName ","Simple Name configName ","Class Or Interface Type String ","ReturnStmt","Object Creation Expr Config Optional.empty Optional.empty ","Class Or Interface Type Config ","This Expr ","ThisExpr"]}
{"Version":"0.9.22","MethodName":"Builder_equals","callMethodNameReferTo":{},"num":82,"succs":[[21,1],[27,2,33,34],[22,3],[41,40,39,4],[5,51],[6,23],[7,63,62,45],[8,24],[67,66,9,45],[25,10],[11,70,71,45],[26,12],[75,13,74,45],[78,14,36],[20,15,18,16,17,19],[],[],[18],[],[28,32],[7,11,13,0,2,9,5,4],[14,37,36],[49,14,36],[14,65,36],[14,69,36],[14,73,36],[77,14,36],[28],[],[28,27],[28,29],[28,30],[],[35],[],[],[],[38],[],[42,29,34],[],[46,44,45],[43],[],[47],[],[48,30],[],[],[50],[],[58],[31],[52],[53,52],[52,54],[55,52],[56,52],[60,59,52],[52],[61,31],[],[],[53,64],[],[50],[],[68,54],[],[50],[],[72,55],[],[50],[],[76,56],[],[50],[34,79,80],[],[81,57],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr OR ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name equals ","Parameter Object o ","Block Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Name Expr o ","Simple Name o ","Name Expr o ","Name Expr o ","Name Expr o ","Class Or Interface Type Object ","This Expr ","EQUALS","ThisExpr","ReturnStmt","Boolean Literal Expr true ","true","Continue Stmt ","OR","Binary Expr NOT_EQUALS ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","NOT_EQUALS","Method Call Expr ","Simple Name getClass ","Simple Name getClass ","Boolean Literal Expr false ","false","Variable Declaration Expr ","Simple Name element ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Variable Declarator Builder builder = ","Class Or Interface Type Builder ","Cast Expr ","Class Or Interface Type Builder ","Name Expr indentionStep ","Field Access Expr ","Simple Name indentionStep ","Boolean Literal Expr false ","Binary Expr EQUALS ","Field Access Expr ","Simple Name escapeUnicode ","Boolean Literal Expr false ","Return Stmt ","Field Access Expr ","Class Or Interface Type WildcardType ","Boolean Literal Expr false ","Name Expr omitDefaultValue ","Field Access Expr ","Simple Name omitDefaultValue ","Boolean Literal Expr false ","Binary Expr EQUALS ","Name Expr encodingMode ","Field Access Expr ","Simple Name encodingMode "]}
{"Version":"0.9.22","MethodName":"Builder_hashCode","callMethodNameReferTo":{},"num":77,"succs":[[1,12],[41,2],[56,3],[60,4],[5,68],[6,29,76],[11,9,10,8,7],[],[],[10],[],[1,4,0,5,2,3],[30],[14,15],[],[],[19,13,17,18],[13],[],[],[21,16,22],[16],[],[24,20,25],[20],[],[23,27,28],[23],[],[26],[32,13,31],[13],[35,34,33],[14,37,36],[39,6,15],[40],[],[38],[],[],[],[16,43,42],[],[45,44,46],[47,48,17],[],[50],[49],[],[],[51,53,52],[54,18,36],[6,55,19],[40],[38],[],[57,20,42],[22,58,45],[21,48,59],[49],[23,61,42],[62,45,63],[24,64,48],[65],[49],[67,66,25],[49],[40],[69,26,42],[71,45,70],[72,48,27],[73],[49],[74,28,75],[49],[40],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Name Expr ctx ","Simple Name hashCode ","Block Stmt ","Variable Declaration Expr ","Simple Name result ","Name Expr decodingMode ","Name Expr decodingMode ","Name Expr stream ","Name Expr result ","Name Expr encodingMode ","Name Expr encodingMode ","Name Expr result ","Name Expr result ","Name Expr indentionStep ","Name Expr result ","Name Expr result ","Name Expr escapeUnicode ","Name Expr result ","Name Expr result ","Name Expr omitDefaultValue ","Name Expr result ","Variable Declarator int result = ","Primitive Type int ","Conditional Expr decodingMode != null ? decodingMode.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Simple Name hashCode ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Binary Expr PLUS ","Binary Expr MULTIPLY ","PLUS","Enclosed Expr ","Integer Literal Expr Note Zero  ","MULTIPLY","IntegerLiteralExpr","Conditional Expr encodingMode != null ? encodingMode.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Conditional Expr escapeUnicode ? 1 : 0 ","Integer Literal Expr Note Zero  ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Conditional Expr omitDefaultValue ? 1 : 0 ","Integer Literal Expr Note Zero  ","Integer Literal Expr Zero  ","ReturnStmt"]}
{"Version":"0.9.22","MethodName":"Builder_copy","callMethodNameReferTo":{},"num":46,"succs":[[12,1],[29,2],[33,3],[36,4],[5,39],[42,6],[24,7,45],[9,11,8,10],[],[10],[],[5,3,2,6,0,4,1],[25],[15,14],[],[],[17,13],[],[16,19],[],[21,18],[],[23,20],[],[22],[27,15,26],[15],[28],[],[30,14,31],[32,13],[],[],[17,34,31],[16,35],[],[37,19,31],[18,38],[],[21,40,31],[20,41],[],[43,23,31],[44,22],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name copy ","Block Stmt ","Variable Declaration Expr ","Name Expr decoder ","Name Expr encodingMode ","Simple Name builder ","Name Expr builder ","Name Expr decodingMode ","Name Expr builder ","Name Expr indentionStep ","Name Expr builder ","Name Expr escapeUnicode ","Name Expr decoder ","Name Expr omitDefaultValue ","Name Expr builder ","Variable Declarator Builder builder = ","Class Or Interface Type Builder ","Object Creation Expr Builder Optional.empty Optional.empty ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name encodingMode ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name decodingMode ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name indentionStep ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name escapeUnicode ","Expression Stmt ","Field Access Expr ","Simple Name omitDefaultValue ","ReturnStmt"]}
{"Version":"0.9.22","MethodName":"Builder_toString","callMethodNameReferTo":{},"num":34,"succs":[[3,5,1,2,4],[],[],[4],[],[6],[8,7,0],[],[9,10,11],[12,13,10],[],[33],[14,15,10],[],[17,16,10],[32],[19,18,10],[],[21,10,20],[32],[23,10,22],[],[25,24,10],[32],[26,27,10],[],[29,28,10],[32],[31,30,10],[],[32],[32],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Config ","Simple Name toString ","Block Stmt ","Return Stmt ","ReturnStmt","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Char Literal Expr '}' ","Binary Expr PLUS ","Name Expr omitDefaultValue ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr escapeUnicode ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr indentionStep ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr encodingMode ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Class Or Interface Type JsonIterator ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","'}'"]}
{"Version":"0.9.22","MethodName":"Config_updateClassDescriptor","callMethodNameReferTo":{},"num":1882,"succs":[[58,1],[74,2],[24,3,76,75,60],[78,4],[5,61,79,6],[80,6],[86,7,8],[90,62,8,15],[88,9],[91,10],[11,109],[112,12],[121,13],[129,14],[133,7],[17,137,16],[24,63,17,141],[18,139],[19,142],[160,20],[163,21],[172,22],[23,179],[183,16],[187,25],[197,26],[27,207],[28,30,199,208,75],[209,29],[216,26],[31,219],[32,223],[33,227],[34,232],[237],[41,36,38,39,37,40],[],[],[39],[],[57,43],[34,24,32,25,26,30,31,33,0,1],[43],[],[42,43],[44],[44,45],[44,46],[44,47],[48,44],[49,44],[50,44],[221,44,51],[52,225,44],[229,44,53],[234,44,54],[44,55,239],[],[64],[42],[59],[59,2,60],[59,61,2],[59,62,2],[66,59,65],[59],[68,67],[],[69,70,71],[72,42],[],[73],[],[],[3,6,15],[],[77],[],[5],[],[83,81,82],[84,44],[],[85],[],[],[11,10,13,14,9,12],[88],[89],[88],[],[99],[45,46],[87,92],[95,93],[93],[94],[96],[97],[101,92,100],[92],[105,103,102,104],[],[45,106],[46,107],[108],[],[],[],[87,82,110],[111,93],[],[113,114,82],[115,94],[118,116,117],[],[],[],[119],[95,120],[],[123,122,82],[124,96],[126,125],[],[],[],[128],[],[131,130,82],[132,97],[85],[],[134,98,135],[136,47],[],[],[18,19,20,23,22,21],[139],[140],[139],[],[150],[49,48],[138,143],[144,146],[144],[145],[147],[148],[152,151,143],[143],[154,156,155,153],[],[48,157],[49,158],[159],[],[],[],[161,138,82],[162,144],[],[165,164,82],[145,166],[169,167,168],[],[],[],[170],[171,146],[],[174,82,173],[175,147],[176,177],[],[],[],[128],[180,181,82],[182,148],[85],[],[149,184,185],[50,186],[],[],[193],[189],[],[188,230,189],[190,189,235],[191,189,240],[194,195,189],[189],[196],[],[203],[51],[198,201],[198,201,199],[202,198],[198,201,200],[198,205,204],[198],[206,51],[],[28,29],[77],[210,188,211],[],[213,212,214],[],[],[215,200],[],[201,82,217],[202,218],[],[52,220,222],[],[],[302,304,301,305,303],[226,53,224],[],[],[301,605,603,606,604],[190,231,54,228],[],[],[],[301,817,820,816,818,819],[191,55,233,236],[],[],[],[1036,301,1038,1040,1037,1039],[238,241,56,192],[],[],[],[1268,1269,301,1271,1270,1267],[316,243],[245,244,326],[245,306,346],[246,328],[247,347],[248,359],[249,372],[361,257,373,75,250],[251,374],[252,376],[254,253,362,377],[254,378],[385,255],[256,386,363,257],[387,257],[258,394],[259,405],[263,260,406,396,75],[407,261],[409,262],[263,416],[423,264],[317,265,266],[266,424],[267,433],[268,445],[271,446,435,269,75],[270,447],[271,449],[272,454],[456,276,273,455,75],[465,274],[275,467],[276,474],[477,277],[479,281,478,75,278],[485,279],[280,487],[281,494],[282,497],[244,354,498,499,283],[284,503],[504,505,292,75,285],[287,286,507],[513,287,292,312],[509,288],[289,514],[516,522,517,290,515,286],[291,524],[286,531],[538,293],[244,294,540,539,75],[542,295,296],[244,314,548,296],[297,544],[549,298],[552,295,551,522,550,299],[557,300],[295,564],[],[303],[],[315,221],[242,243],[221],[306,221,308],[339,272],[310,307],[341,277],[309],[309,284,311],[309,312],[309,293,313],[],[319],[318],[],[321,317,320],[317],[322,323,325],[318,324],[],[],[1302,37,1300,1301],[263,247,276,246,271,248,267,257,266,258,281],[328],[345],[328,327],[329],[330],[330,331],[332],[333,335],[333],[334],[336,334,451],[337,334],[334,272,338],[339,308],[339,277,340],[341,310],[341,282,342],[341,282,343],[328],[],[355],[349],[],[348],[350],[351],[352],[353],[356,349,357],[349],[358],[],[364],[327],[360],[249,361,360],[249,362,360],[365,366,360],[360],[368,367,370],[],[371,369,327],[],[1311,1310,1308,1307,1309],[],[254,251,250],[77],[348,375,82],[85],[253],[],[380,82,379],[329,381],[382,383],[],[],[],[128],[256],[],[388,389,82],[330,390],[391,392],[],[],[],[128],[397],[331],[395],[398,399,395],[395],[400,401,403],[],[402,404,331],[],[1320,1321,1323,1307,1322],[],[260,262,261],[77],[350,82,408],[85],[411,410,82],[332,412],[414,413],[],[],[],[128],[417,418,82],[333,419],[421,420],[],[],[],[128],[265],[425,426,82],[427,334],[428,431,429],[],[],[335,430,432],[],[1337,1339,1307,1338,1340],[],[437],[336],[434],[434,452,435,268],[434,438,439],[434],[443,441,440],[],[336,442,444],[],[1359,1356,1307,1357,1358],[],[270,269],[77],[448,82,351],[85],[337,453,436,450],[],[],[],[1421,1419,301,1423,1422,1420],[275,273,274],[462,459,458,457],[77],[],[338,463,460],[461,464],[],[],[1695,1694,1696,1693,1697,1307,1692],[],[],[466,82,352],[85],[468,469,82],[339,470],[471,472],[],[],[],[128],[308,82,475],[476,307],[],[280,279,278],[482,462,480,481],[77],[],[483,460,340],[461,484],[],[],[486,353,82],[85],[489,488,82],[341,490],[492,491],[],[],[],[128],[310,495,82],[496,309],[],[292,283],[],[501,500,75],[502,342],[77],[],[285],[506,311],[77],[],[288],[509],[512],[509,289,508],[289,510],[509],[],[290,291],[519,518],[],[521,523,508],[520,343],[],[],[],[1740,1736,1738,37,1737,1739],[],[526,525,82],[527,510],[529,528],[],[],[],[128],[533,532,82],[511,534],[535,536],[],[],[],[128],[294],[541,313],[77],[],[297],[544],[547],[543,544,298],[545,298],[544],[],[300,299],[553,554],[],[543,521,556],[555,344],[],[],[],[558,559,82],[545,560],[562,561],[],[],[],[128],[566,565,82],[546,567],[569,568],[],[],[],[128],[617,572],[620,618,573,619,574],[574,622,226],[575,576,623],[576,630,631],[625,577],[633,578],[644,579],[581,580,635,619,645],[646],[582,647],[583,653],[584,658],[664,585],[586,673],[685,588,602,587],[692,588],[575,696,695,686,589],[590,699],[591,706],[592,714],[593,737],[708,595,738,594,75],[595,739],[741,596],[742,743,598,597,744],[753,598],[757,599],[766,600],[775,601],[602,778],[688,588,698],[604],[],[225,616],[571,574],[225],[225,607],[608,225],[609,611],[625,624],[610],[615,612],[613,612],[612,614],[],[573],[621,607],[],[77],[],[],[582,585,581,586,584,583,577,578],[625],[629],[625,611],[625,626,681],[625,627],[625],[608,632],[],[],[636],[624],[634],[637,638,634],[634],[639,640,642],[],[643,641,624],[],[1796,1797,1307,1794,1795],[],[580],[77],[],[648,649,82],[650,651],[77],[609,652],[],[],[654,611,82],[656,655],[610,657],[],[],[659,660,82],[662,661],[77],[612,663],[],[],[669],[626],[665],[666,665,668],[665,667],[671,665,670],[665],[672,626],[],[676],[666,627],[674],[677,674,678],[674],[680,627,679,683],[],[666,682,684],[],[],[1819,1817,301,1820,1816,1818],[],[590,595,589,600,591,601,599,598,592],[687,691],[],[687,686],[688,687],[687,689],[687,690],[687,693,694],[687],[128],[],[667,697],[],[],[703],[689,668],[442,700],[701,700],[705,704,700],[700],[689,668],[710],[701],[707],[707,452,593,708],[707,711,712],[707],[443,701,713],[],[726],[690,613,628,614],[715,451],[715,716],[715,717],[715,691,675,718,596],[719,721],[719],[720,723],[720],[702,722],[724],[715,727,728],[715],[731,729,730,732],[],[613,733],[614,734],[690,735],[],[],[736,628],[],[594],[77],[740,453,716,709],[],[597],[746,745,619],[],[749,748,619],[717,747],[77],[],[750,751],[128],[752,718],[],[],[755,754,82],[719,756],[691,675],[],[758,759,82],[720,760],[762,761,763],[],[],[],[764],[721,765],[],[767,768,82],[769,722],[772,770,771],[],[],[],[773],[723,774],[],[702,776,82],[724,777],[],[725,779,780],[781,782],[],[615,783],[],[],[785,833,786],[230,786],[835,787],[841,788],[842,843,789,790],[646],[791,848],[857,792],[850,793,619,858,794],[646],[859,795],[796,866],[797,871],[798,877],[886,799],[800,801,895,815],[801,902],[785,802,695,905,896],[907,803],[804,914],[922,805],[945,806],[807,946,916,808,75],[947,808],[949,809],[950,743,811,810,951],[811,960],[812,964],[813,973],[982,814],[985,815],[898,801,698],[817],[],[229,829],[830,230],[784],[229,822],[836,835],[821,824],[822,835],[823],[828,825],[826,825],[827,825],[],[831,832],[],[],[799,798,796,791,795,797,790,794,787],[835],[840],[834,835],[824,835],[835,837,681],[835,838],[835],[789],[846,844,845],[],[],[],[834,847],[],[851],[836],[849],[853,852,849],[849],[854,642,855],[],[836,856,641],[],[793],[77],[861,860,82],[862,863],[865,822],[821,864],[],[],[],[867,824,82],[869,868],[870,823],[],[],[873,872,82],[875,874],[77],[876,825],[],[],[882],[837],[878],[878,881,879],[878,880],[878,884,883],[878],[885,837],[],[889],[879,838],[887],[890,891,887],[887],[892,893,683,838],[],[894,682,879],[],[813,814,804,802,803,811,808,805,812],[897,901],[],[897,896],[898,897],[899,897],[900,897],[904,903,897],[897],[128],[906,880],[],[911],[899,881],[908,442],[909,908],[913,912,908],[908],[899,881],[918],[909],[915],[452,915,806,916],[919,920,915],[915],[909,443,921],[],[934],[900,827,826,839],[451,923],[924,923],[923,925],[923,926,888,809,901],[929,927],[927],[931,928],[928],[910,930],[932],[923,935,936],[923],[940,938,939,937],[],[826,941],[827,942],[900,943],[],[],[839,944],[],[807],[77],[924,453,948,917],[],[810],[953,952,619],[956,955,619],[954,925],[77],[],[958,957],[128],[959,926],[],[],[961,962,82],[963,927],[888,901],[],[966,82,965],[928,967],[970,968,969],[],[],[],[971],[929,972],[],[974,82,975],[930,976],[977,979,978],[],[],[],[980],[931,981],[],[910,82,983],[932,984],[],[986,933,987],[989,988],[],[990,828],[],[],[1050,992,993],[235,993],[1052,994],[995,1061],[1062,997,996,1064,1063],[646],[1066,998],[999,1080],[1001,1081,1000,619,1068],[646],[1002,1082],[1003,1091],[1004,1100],[1111,1005],[1112,1009,1006,1102],[1113,1007],[1114,1004,522,1115,1056,1008],[1004,1119],[1121,1010,1031],[1125,522,1123,1124,1011,1031],[1129,1012],[1013,1138],[1029,1015,1014,1141],[1015,1148],[1016,1142,695,1151,1030],[1017,1153],[1160,1018],[1183,1019],[1020,1191],[1185,1021,1022,1192,75],[1193,1022],[1195,1023],[1197,1024,1196,743,1025],[1025,1206],[1210,1026],[1219,1027],[1028,1228],[1029,1231],[1144,1015,698],[1235,992],[1034,1239,1032],[1240,1034,522,1241,1033,1242],[1245,992],[1035],[1249,992],[1037],[],[1046,234],[1047,235],[991],[1044,234,1045],[1041,234,1043],[234,1042],[234,1043],[1041,234],[],[1049,1048],[],[],[1004,1003,997,1001,1002,1009,998,994],[1052],[1060],[1051,1052],[1053,1052],[1054,681,1052],[1055,1059,1058,1052],[1056,1052],[1057,1052],[1056,1052],[1052],[996],[],[],[1051,1065],[],[1072],[1053],[1067],[1067,1068],[1010,1069,1067],[1070,1010,1069,1067,1032],[1074,1073,1067],[1067],[1076,1078,1075],[],[1079,1077,1053],[],[1873,1870,1871,1307,1872],[],[1000],[77],[1087],[1054],[1086,1083],[1084,1086,1083],[1085,1083],[1089,1088,1083],[1083],[1090,1054],[],[1094],[1093,1055,1084],[1092],[1092,1095,1096],[1092],[1055,683,1098,1097],[],[682,1099,1084],[],[1105],[1041],[1104,1101],[1101,1102],[1103,1101,1007],[1101,1106,1107],[1101],[1108,1109],[1110,1041],[],[],[1006],[],[1008],[],[1117,521,1116],[1118,1103],[],[],[1104,1120],[],[1012,1013,1011,1030],[1010],[1126,1127],[],[1128,521,1069],[],[],[],[1134],[1057,1131],[],[1130],[1130,1132],[1135,1136,1131],[1131],[1137],[],[1139,1057,82],[1130,1140],[],[1028,1016,1017,1022,1018,1026,1019,1027,1025],[1143,1147],[],[1142,1143],[1144,1143],[1145,1143],[1146,1143],[1149,1143,1150],[1143],[128],[1152,1085],[],[1157],[1145,1086],[442,1154],[1154,1155],[1159,1158,1154],[1154],[1145,1086],[1172],[1146,1042,1058,1043],[1161,451],[1161,1162],[1161,1163],[1093,1161,1164,1023,1147],[1165,1167],[1165],[1169,1166],[1166],[1168,1156],[1170],[1161,1174,1173],[1161],[1176,1177,1178,1175],[],[1179,1042],[1180,1043],[1146,1181],[],[],[1182,1058],[],[1187],[1155],[1184],[1185,452,1184,1020],[1188,1184,1189],[1184],[443,1190,1155],[],[1021],[77],[453,1162,1186,1194],[],[1024],[1199,1198,619],[1202,1201,619],[1200,1163],[77],[],[1203,1204],[128],[1164,1205],[],[],[1208,82,1207],[1165,1209],[1093,1147],[],[1212,1211,82],[1166,1213],[1214,1215,1216],[],[],[],[1217],[1218,1167],[],[1221,1220,82],[1168,1222],[1224,1223,1225],[],[],[],[1226],[1169,1227],[],[1156,1229,82],[1170,1230],[],[1171,1232,1233],[1132,1234],[],[],[1133,1237,1236],[1044,1238],[],[],[1033],[1122,1243],[],[1244,1070,521],[],[],[1246,1247,1059],[1248,1045],[],[],[1250,1251],[],[1252,1253,1254],[1255],[],[1256,1071],[],[],[1259,1258,1277],[1259,240],[1260,1279],[1283,1261],[1284,1286,1263,1262,1285],[646],[1288,1264],[1289,1290,1265,619,1266],[646],[1258,1294],[1268],[],[1273,239],[1274,240],[1257],[239],[],[1275,1276],[],[],[1260,1263,1266],[1279],[1282],[1279,1278],[1279,1280],[1279],[1262],[],[],[1287,1278],[],[1265],[1291,1292,403],[77],[],[1280,402,1293],[],[1297,1296,1295],[1298,1272],[],[1281,1299],[],[],[1301],[],[1303],[1304,325,622],[1305,1306],[],[],[1692],[1309],[],[369,1314],[1312],[370,1316,622],[369,460],[1315],[],[462,1313,1318,1317],[],[461,1319],[],[1321],[],[402,1326],[1324],[1328,403,622],[402,460],[1327],[],[1325,462,1330,1329],[],[461,1331],[],[1333,1343],[1334,1352],[1346,1336,1335,75,1353],[1336,1347,431,622],[1354,431,622],[1338],[],[1342,430],[1333,1336,1332],[430],[],[1348],[1345,1341],[],[1344],[1346,1344,1334],[1344,1349,1350],[1344],[1345,1351,1341],[],[1335],[77],[1355],[],[1357],[],[442,1362],[1360],[1364,443,622],[442,460],[1363],[],[1365,462,1361,1366],[],[461,1367],[],[1369,1470],[1370,1475],[1480,1371],[1372,1485],[1492,1373],[1374,1493,843,1375],[1375,1495],[1505,1376],[1377,1512],[1378,843,1513,1383],[1515,1379],[1516,1380,1381,1517,619],[1519,1381],[1522,1382],[1529,1383],[1384,1536],[1537,1385,1539,1538,1386],[1543,1386],[1387,1548],[1388,1538,1389,1550,1549],[1389,1554],[1390,1559],[1567,1391],[1568,1561,1402,1392,75],[1400,1572,1398,1402,1570,1571,1393],[1573,1394,1574,1402,1396],[1575,1395],[1583,1402],[1591,1592,1397],[1593,1402],[1399,1602,1601],[1603,1402],[1605,1401,1606],[1607,1402],[1403,1610],[1618,1404],[1415,1619,1405,1612,75],[1415,1621,1411,1622,1413,1406,1623],[1415,1409,1625,1624,1407],[1626,1408],[1415,1634],[1410,1643,1642],[1415,1644],[1412,1652,1653],[1654,1415],[1657,1656,1414],[1415,1658],[1416,1661],[1417,1662,1663,75],[1418,1666],[1675],[1420],[],[451,1468],[452,1469],[1372,1368,1403,1389,1375,1370,1376,1402,1383,1371,1390,1415,1369,1386],[451,1425],[452],[1427,1424],[452,1425],[1429,1426],[452,1427],[1428,1432,1431],[1428],[1487,1486,1373],[1430],[1430,1433,1379,1435],[1377,1506,1507],[1437,1434],[1377,1506,1435],[1439,1436],[1437,1377,1506],[1438,1441],[452,1384,1463],[1443,1440],[452,1387,1464],[1442,1446,1445],[1576],[1442],[1448,1444],[1560,1562,1391],[1447,1450,1451],[1627],[1447],[1453,1449],[1613,1404,1611],[1452,1457,1455,1456],[],[1452],[452,1416,1467],[1459,1454,1460],[],[1454],[452,1429],[452,1461],[452,1462],[452,1441],[452,1443],[452,1465],[452,1466],[],[],[1472,1471,82],[1424,1473],[1474,1425],[],[],[1476,1477,82],[1478,1426],[1479,1427],[],[],[1482,82,1481],[1428,1483],[1429,1484],[],[],[1488],[1461],[1486],[1489,1490,1486],[1486],[1461,1491],[],[1374],[1487,1494],[],[1497,1496,82],[1430,1498],[1499,1501,1432,1500],[],[1502,1503],[],[1504,1431],[],[],[],[1508],[1462],[1506],[1510,1509,1506],[1506],[1462,1511],[],[1378,1381,1382],[1514,1507],[],[1380],[1433,1518],[77],[],[1520,82,1435],[1521,1434],[],[1523,1524,82],[1525,1436],[1528,1526,1527],[],[],[],[1437],[1531,1530,82],[1532,1438],[1535,1533,1534],[],[],[],[1439],[1385],[1540,1541],[],[128],[1463,1542],[],[],[82,1545,1544],[1546,1440],[1547,1441],[],[],[1388],[1552,1551],[128],[1553,1464],[],[],[1555,1556,82],[1442,1557],[1443,1558],[],[],[1563],[1465],[1560],[1560,1561,1391],[1564,1560,1565],[1560],[1465,1566],[],[1392],[1569],[],[1393],[1398,1600],[1604,1400],[1394,1395],[1590,1396],[1577],[1562],[1578,1576,1579],[1576],[1581,1562,1580],[],[1582],[],[1585,1584,82],[1444,1586],[1587,1588],[],[],[1589,1446,1445],[],[1397],[],[],[1594,82,1595],[1596,1447],[1597,1598],[],[],[1448,1599],[],[1399],[],[],[],[1401],[],[],[1608,1609],[],[],[1614],[1466],[1611],[1404,1612,1611],[1616,1615,1611],[1611],[1617,1466],[],[1405],[1620],[],[1406],[1411,1651],[1413,1655],[1408,1407],[1409,1641],[1628],[1613],[1627,1630,1629],[1627],[1632,1631,1613],[],[1633],[],[1635,82,1636],[1449,1637],[1639,1638],[],[],[1640,1450,1451],[],[1410],[],[],[1645,1646,82],[1452,1647],[1649,1648],[],[],[1453,1650],[],[1412],[],[],[],[1414],[],[],[1660,1659],[],[],[1418,1417],[1664,1467],[1665],[],[],[82,1668,1667],[1669,1454],[1670,1671,1672,1455],[],[],[1673,1456],[1674,1457],[],[],[1676,1677,82],[1458,1678],[1459,1680,1679],[],[],[1460,1681],[],[1705,1683],[1698,1684,1685,1706,619],[1707,462,1685,622],[1687,1708,1686],[1698,1687,1691,460],[1688,1710],[1689,1713],[1690,1699,1715,1686,1714],[462,622,1686,1717],[462,1719,622],[],[1694],[],[1700,460],[461,1702],[1682,1685,1691],[460],[461],[1701],[],[1703,1704],[],[],[1684],[77],[77],[1688],[1710],[1712],[1689,1710,1709],[1710],[1690],[],[1716,1709],[],[1711,1718],[],[77],[],[],[1741,1723],[1747,1724,619,1752],[1742,1725],[1756,743,1755,1726],[1727,1763],[1728,1743],[1729,1775,1774,75],[1730,1744],[1779,1778,1731,75],[1745,1732],[1733,1782,1783,75],[1746,1734],[1787,1735,1786,75],[522,1790,622],[],[1738],[],[521,1751],[1729,1733,1735,1722,1724,1727,1731,1726],[522,1754,622],[1762,522,622],[522,1777,622],[522,1781,622],[522,1785,622],[1789,522,622],[521],[521,1747],[1748,521],[521,1749],[],[1753],[],[85],[1757,1748,619],[1759,1758,75],[77],[1760],[1761,1749],[],[],[358],[1770],[1750],[1764],[1765,1764],[1764,1766],[1767,1764],[1768,1764],[1772,1771,1764],[1764],[1773,1750],[],[],[1765,1776],[],[358],[],[1780,1766],[],[358],[],[1784,1767],[],[358],[],[1788,1768],[],[358],[619,1791,1792],[],[1793,1769],[],[1795],[],[1800,641],[1798],[1802,642,622],[641,460],[1801],[],[462,1804,1799,1803],[],[461,1805],[],[1826,1807],[1815,1808,1814,1840,1839],[1841,1809],[1810,1848,1813,1811],[1853,1811],[1815,1812,1856,695,1849],[1813,1858],[1851,698,1811],[1815,1868,1869],[683,1833,622],[1817,1821],[],[1824,681],[1825,682],[1815,1807,1806],[],[681],[682],[],[],[1834],[1823],[1829,1827],[1831,1830,1827,1832,1828],[],[1842],[1850,1852,1851],[1829],[1835,1827,1836],[1827],[1837,1838],[],[],[1808,1809],[1814,1867],[1843],[1822],[1844,1845,1842],[1842],[1846,1847,1822],[],[1255],[1812],[1850,1852],[],[1850,1849,1852],[1850,1831,1830,1832],[1850,1854,1855],[1850],[128],[1857,1828],[],[1860,1859,82],[1829,1852],[1862,1861],[],[1863,1865,1864],[],[1866,1831,1830,1832],[1255],[],[],[],[],[1871],[],[1077,1876],[1874],[1878,1078,622],[1077,460],[1877],[],[1879,462,1880,1875],[],[461,1881],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Method Call Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Void Type ","Simple Name updateClassDescriptor ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr desc ","Simple Name desc ","Name Expr desc ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Parameter Object key ","Name Expr jsonObject ","Name Expr jsonObject ","Name Expr jsonObject ","Name Expr jsonObject ","Variable Declarator JsonObject jsonObject = ","Class Or Interface Type JsonObject ","Cast Expr ","Class Or Interface Type JsonObject ","Method Call Expr ","Field Access Expr ","Simple Name getAnnotation ","Class Expr JsonObject.class ","Simple Name clazz ","Class Or Interface Type JsonObject ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Block Stmt ","Simple Name asExtraForUnknownProperties ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Boolean Literal Expr true ","Simple Name asExtraForUnknownProperties ","true","Block Stmt ","Name Expr fieldName ","Simple Name fieldName ","Class Or Interface Type String ","Simple Name unknownPropertiesWhitelist ","Variable Declaration Expr ","Simple Name binding ","Unary Expr ++ ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Field Access Expr ","Field Access Expr ","Class Expr Object.class ","Simple Name classInfo ","Simple Name lookup ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Name Expr tracker ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Boolean Literal Expr true ","Simple Name shouldSkip ","Method Call Expr ","Name Expr typeLiteral ","Simple Name add ","Simple Name fields ","Block Stmt ","Name Expr fieldName ","Simple Name fieldName ","Class Or Interface Type String ","Simple Name unknownPropertiesBlacklist ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Simple Name writeTo ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Name Expr tracker ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Field Access Expr ","Field Access Expr ","Class Expr Object.class ","Simple Name classInfo ","Simple Name lookup ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Boolean Literal Expr true ","Simple Name asExtraWhenPresent ","Method Call Expr ","Field Access Expr ","Simple Name add ","Simple Name fields ","Variable Declaration Expr ","Expression Stmt ","Simple Name allMethods ","Name Expr allMethods ","Name Expr allMethods ","Name Expr allMethods ","Variable Declarator List<Method> allMethods = ","Class Or Interface Type List ","Object Creation Expr ArrayList<Method> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Return Stmt ","Name Expr current ","Variable Declarator Class current = ","Class Or Interface Type Class ","Field Access Expr ","Simple Name clazz ","Block Stmt ","Name Expr type ","Method Call Expr ","Simple Name addAll ","Method Call Expr ","Name Expr Arrays ","Simple Name asList ","Method Call Expr ","Simple Name getDeclaredMethods ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getSuperclass ","Return Stmt ","Simple Name updateBindings ","Simple Name desc ","Method Declaration ","Method Call Expr ","Simple Name detectCtor ","Simple Name desc ","Method Declaration ","Method Call Expr ","Simple Name detectStaticFactory ","Simple Name desc ","Simple Name allMethods ","Method Declaration ","Method Call Expr ","Simple Name detectWrappers ","Simple Name desc ","Simple Name allMethods ","Method Declaration ","Method Call Expr ","Simple Name detectUnwrappers ","Simple Name desc ","Simple Name allMethods ","Method Declaration ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr globalOmitDefault ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","If Stmt ","Binary Expr NOT_EQUALS ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name updateBindings ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr desc ","Simple Name ind6 ","Name Expr binding ","Name Expr ind7 ","Name Expr binding ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Simple Name globalOmitDefault ","Name Expr JsoniterSpi ","Variable Declarator boolean globalOmitDefault = ","Primitive Type boolean ","Method Call Expr ","Method Call Expr ","Simple Name omitDefaultValue ","Simple Name getCurrentConfig ","Method Declaration ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Simple Name allBindings ","Variable Declaration Expr ","Marker Annotation Expr @Override ","Simple Name annotated ","Name Expr annotated ","Name Expr annotated ","Field Access Expr ","Name Expr annotated ","Name Expr annotated ","Variable Declarator boolean annotated = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Variable Declaration Expr ","Simple Name jsonIgnore ","Name Expr jsonIgnore ","Name Expr jsonIgnore ","Name Expr jsonIgnore ","Variable Declarator JsonIgnore jsonIgnore = ","Class Or Interface Type JsonIgnore ","Method Call Expr ","Simple Name getJsonIgnore ","Field Access Expr ","Simple Name annotations ","Method Declaration ","Simple Name annotations ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Block Stmt ","Simple Name ignoreDecoding ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Method Call Expr ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Simple Name jsonUnwrapper ","Name Expr jsonUnwrapper ","Variable Declarator JsonUnwrapper jsonUnwrapper = ","Class Or Interface Type JsonUnwrapper ","Method Call Expr ","Simple Name getJsonUnwrapper ","Field Access Expr ","Simple Name annotations ","Method Declaration ","Simple Name annotations ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name defaultValueToOmit ","Simple Name createOmitValue ","Field Access Expr ","Simple Name valueType ","Method Declaration ","Simple Name valueType ","Variable Declaration Expr ","Simple Name jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Variable Declarator JsonProperty jsonProperty = ","Class Or Interface Type JsonProperty ","Method Call Expr ","Simple Name getJsonProperty ","Field Access Expr ","Simple Name annotations ","Method Declaration ","Simple Name annotations ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Method Call Expr ","Simple Name updateBindingWithJsonProperty ","Simple Name binding ","Simple Name jsonProperty ","Method Declaration ","Block Stmt ","Method Call Expr ","Null Literal Expr ","Simple Name getAnnotation ","Field Access Expr ","Class Expr JsonMissingProperties.class ","Simple Name annotations ","Simple Name annotationClass ","Method Declaration ","Simple Name annotations ","Class Or Interface Type JsonMissingProperties ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name onMissingProperties ","Block Stmt ","Method Call Expr ","Null Literal Expr ","Assign Expr ASSIGN ","Field Access Expr ","Class Expr JsonExtraProperties.class ","Simple Name annotations ","Class Or Interface Type JsonExtraProperties ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name onExtraProperties ","Block Stmt ","AND","Binary Expr NOT_EQUALS ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name setters ","Block Stmt ","Name Expr setter ","Simple Name setter ","Name Expr setter ","Name Expr setter ","Class Or Interface Type Binding ","Simple Name setters ","Block Stmt ","Method Call Expr ","Simple Name equals ","Field Access Expr ","Field Access Expr ","Simple Name getName ","Simple Name field ","Simple Name o ","Method Declaration ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name getters ","Block Stmt ","Name Expr getter ","Simple Name getter ","Name Expr getter ","Name Expr getter ","Class Or Interface Type Binding ","Simple Name getters ","Block Stmt ","Method Call Expr ","Simple Name equals ","Field Access Expr ","Field Access Expr ","Simple Name getName ","Simple Name field ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name detectCtor ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr ctor ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Block Stmt ","Field Access Expr ","EQUALS","Null Literal Expr ","Simple Name ctor ","ReturnStmt","Block Stmt ","Name Expr ctor ","Simple Name ctor ","Name Expr ctor ","Name Expr ctor ","Name Expr ctor ","Class Or Interface Type Constructor ","Field Access Expr ","Simple Name getDeclaredConstructors ","Simple Name clazz ","Variable Declaration Expr ","Simple Name jsonCreator ","Name Expr jsonCreator ","Variable Declarator JsonCreator jsonCreator = ","Method Call Expr ","Method Call Expr ","Simple Name getJsonCreator ","Method Call Expr ","Simple Name annotations ","Method Declaration ","Simple Name getAnnotations ","Block Stmt ","Null Literal Expr ","continue;","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name staticMethodName ","Simple Name ctor ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name ctor ","Simple Name ctor ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name staticFactory ","Simple Name head ","Variable Declaration Expr ","Simple Name annotations ","Name Expr annotations ","Name Expr annotations ","Name Expr annotations ","Variable Declarator Annotation[][] annotations = ","Array Type 2 ","Method Call Expr ","Simple Name getParameterAnnotations ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Method Call Expr ","Simple Name getParamNames ","Field Access Expr ","Simple Name obj ","Simple Name paramCount ","Method Declaration ","Simple Name length ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Field Access Expr ","Simple Name length ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name paramAnnotations ","Name Expr paramAnnotations ","Name Expr paramAnnotations ","Variable Declarator Annotation[] paramAnnotations = ","Array Type 1 ","Array Access Expr i ","Variable Declaration Expr ","Simple Name jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Variable Declarator JsonProperty jsonProperty = ","Class Or Interface Type JsonProperty ","Method Call Expr ","Simple Name getJsonProperty ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Field Access Expr ","Field Access Expr ","Array Access Expr i ","Simple Name classInfo ","Simple Name lookup ","Method Call Expr ","Simple Name getGenericParameterTypes ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name updateBindingWithJsonProperty ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr EQUALS ","Field Access Expr ","Null Literal Expr ","Simple Name name ","Method Call Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Access Expr i ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Variable Declarator int bc = ","Simple Name annotations ","Method Call Expr ","Field Access Expr ","Simple Name add ","Binary Expr EQUALS ","Simple Name parameters ","Simple Name ctor ","For Each Stmt ","Name Expr allMethods ","Variable Declaration Expr ","If Stmt ","Unary Expr ! ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Assign Expr ASSIGN ","Unary Expr ++ ","Void Type ","Simple Name detectStaticFactory ","Parameter ClassDescriptor desc ","Parameter List<Method> allMethods ","Block Stmt ","This Expr ","Name Expr method ","Name Expr desc ","Name Expr method ","Name Expr iter ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Method ","Block Stmt ","Name Expr method ","Simple Name append ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Class Or Interface Type Method ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","Variable Declaration Expr ","Simple Name jsonCreator ","Name Expr jsonCreator ","Variable Declarator JsonCreator jsonCreator = ","Class Or Interface Type JsonCreator ","Method Call Expr ","Simple Name getJsonCreator ","Method Call Expr ","Simple Name getAnnotations ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Field Access Expr ","Simple Name writeObjectField ","Void Type ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name staticFactory ","Simple Name ctor ","Binary Expr MINUS ","Field Access Expr ","Simple Name head ","Field Access Expr ","Simple Name ctor ","Simple Name tail ","Variable Declaration Expr ","Simple Name annotations ","Name Expr annotations ","Name Expr annotations ","Name Expr annotations ","Variable Declarator Annotation[][] annotations = ","Array Type 2 ","Method Call Expr ","Simple Name getParameterAnnotations ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Method Call Expr ","Simple Name getParamNames ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Variable Declaration Expr ","Simple Name paramAnnotations ","Name Expr paramAnnotations ","Name Expr paramAnnotations ","Variable Declarator Annotation[] paramAnnotations = ","Array Type 1 ","Array Access Expr i ","Variable Declaration Expr ","Simple Name jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Variable Declarator JsonProperty jsonProperty = ","Return Stmt ","Method Call Expr ","Simple Name getJsonProperty ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Field Access Expr ","Field Access Expr ","Array Access Expr i ","Simple Name classInfo ","Simple Name lookup ","Method Call Expr ","Simple Name getGenericParameterTypes ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name updateBindingWithJsonProperty ","Block Stmt ","Binary Expr EQUALS ","Binary Expr EQUALS ","Field Access Expr ","Null Literal Expr ","Simple Name name ","Method Call Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Access Expr i ","Simple Name name ","Variable Declarator int ind4 = ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Name Expr valueType ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name annotations ","Method Call Expr ","Field Access Expr ","Simple Name add ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","For Each Stmt ","Name Expr allMethods ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Method Call Expr ","If Stmt ","Method Call Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Block Stmt ","Throw Stmt ","Void Type ","Simple Name detectWrappers ","Parameter ClassDescriptor desc ","Parameter List<Method> allMethods ","Block Stmt ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Method ","Block Stmt ","Name Expr method ","Simple Name method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Class Or Interface Type Method ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","Variable Declaration Expr ","Simple Name jsonWrapper ","Name Expr jsonWrapper ","Class Or Interface Type IOException ","Name Expr jsonWrapper ","Name Expr jsonWrapper ","Variable Declarator JsonWrapper jsonWrapper = ","Return Stmt ","Method Call Expr ","Simple Name getJsonWrapper ","Method Call Expr ","Simple Name annotations ","Method Declaration ","Simple Name getAnnotations ","Block Stmt ","Null Literal Expr ","Variable Declaration Expr ","Simple Name annotations ","Name Expr annotations ","Name Expr annotations ","Name Expr annotations ","Variable Declarator Annotation[][] annotations = ","Array Type 2 ","Method Call Expr ","Simple Name getParameterAnnotations ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Method Call Expr ","Simple Name getParamNames ","Field Access Expr ","Simple Name length ","Variable Declaration Expr ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator Iterator<Binding> iter = ","Class Or Interface Type Iterator ","Method Call Expr ","Field Access Expr ","Simple Name iterator ","Simple Name setters ","Block Stmt ","Simple Name hasNext ","Block Stmt ","Simple Name equals ","Field Access Expr ","Enclosed Expr ","Simple Name method ","Name Expr iter ","Method Call Expr ","Simple Name remove ","Block Stmt ","Name Expr JsonWrapperType ","Field Access Expr ","Simple Name equals ","Method Call Expr ","Name Expr JsonWrapperType ","Simple Name BINDING ","Simple Name value ","Variable Declaration Expr ","Field Access Expr ","Simple Name wrapper ","Name Expr wrapper ","Name Expr wrapper ","Variable Declarator WrapperDescriptor wrapper = ","Class Or Interface Type WrapperDescriptor ","Object Creation Expr WrapperDescriptor Optional.empty Optional.empty ","Class Or Interface Type WrapperDescriptor ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name method ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Variable Declaration Expr ","Simple Name paramAnnotations ","Name Expr paramAnnotations ","Name Expr paramAnnotations ","Variable Declarator Annotation[] paramAnnotations = ","Array Type 1 ","Array Access Expr i ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Field Access Expr ","Field Access Expr ","Array Access Expr i ","Simple Name classInfo ","Simple Name lookup ","Method Call Expr ","Simple Name getGenericParameterTypes ","Variable Declaration Expr ","Simple Name jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Variable Declarator JsonProperty jsonProperty = ","Class Or Interface Type JsonProperty ","Method Call Expr ","Simple Name getJsonProperty ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name updateBindingWithJsonProperty ","Block Stmt ","Field Access Expr ","Binary Expr EQUALS ","Field Access Expr ","Null Literal Expr ","Simple Name name ","Method Call Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Access Expr i ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Name Expr iter ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Name Expr doubleNumber ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name annotations ","Method Call Expr ","Field Access Expr ","Simple Name add ","Name Expr longNumber ","Method Call Expr ","Field Access Expr ","Name Expr len ","Simple Name bindingTypeWrappers ","Block Stmt ","Field Access Expr ","Simple Name equals ","Method Call Expr ","Simple Name KEY_VALUE ","Simple Name value ","Expression Stmt ","Field Access Expr ","Simple Name add ","Simple Name keyValueTypeWrappers ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Method Call Expr ","StringLiteralExpr","Simple Name value ","For Each Stmt ","Name Expr allMethods ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Continue Stmt ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","Void Type ","Simple Name detectUnwrappers ","Parameter ClassDescriptor desc ","Parameter List<Method> allMethods ","Block Stmt ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Method ","Block Stmt ","Name Expr method ","Simple Name method ","Name Expr method ","Name Expr method ","Class Or Interface Type Method ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","Block Stmt ","Method Call Expr ","Null Literal Expr ","Simple Name getJsonUnwrapper ","Method Call Expr ","Simple Name getAnnotations ","Method Call Expr ","Expression Stmt ","Simple Name add ","Object Creation Expr UnwrapperDescriptor Optional.empty Optional.empty ","Simple Name unwrappers ","Class Or Interface Type UnwrapperDescriptor ","Primitive Type boolean ","Method Call Expr ","Block Stmt ","Return Stmt ","Field Access Expr ","Name Expr builder ","Simple Name omitDefaultValue ","PROTECTED","Class Or Interface Type JsonIgnore ","Simple Name getJsonIgnore ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonIgnore.class ","Class Or Interface Type JsonIgnore ","Class Or Interface Type JsonUnwrapper ","Simple Name getJsonUnwrapper ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonUnwrapper.class ","Class Or Interface Type JsonUnwrapper ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Return Stmt ","Class Or Interface Type OmitValue ","Simple Name createOmitValue ","Parameter Type valueType ","Block Stmt ","Name Expr valueType ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name omitValue ","Name Expr primitiveOmitValues ","Name Expr omitValue ","Name Expr omitValue ","Variable Declarator OmitValue omitValue = ","Class Or Interface Type OmitValue ","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Object Creation Expr OmitValue.Null Optional.empty Optional.empty ","Class Or Interface Type Null ","Class Or Interface Type JsonProperty ","Simple Name getJsonProperty ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonProperty.class ","Class Or Interface Type JsonProperty ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NoSuchMethodException e ","Expression Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NoSuchMethodException e ","Expression Stmt ","Parameter JsonException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name updateBindingWithJsonProperty ","Parameter Binding binding ","Parameter JsonProperty jsonProperty ","Block Stmt ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr binding ","Name Expr defaultValueToOmit ","Name Expr binding ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr decoderCtor ","Name Expr binding ","Name Expr binding ","Name Expr decoderClass ","Name Expr binding ","Name Expr encoderCtor ","Name Expr binding ","Name Expr binding ","Name Expr encoderClass ","Name Expr binding ","Name Expr GenericsHelper ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr TypeLiteral ","Name Expr binding ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Class Or Interface Type Binding ","Class Or Interface Type JsonProperty ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name asMissingWhenNotPresent ","Simple Name required ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name isNullable ","Simple Name nullable ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name isCollectionValueNullable ","Simple Name collectionValueNullable ","Variable Declaration Expr ","Simple Name defaultValueToOmit ","Name Expr defaultValueToOmit ","Variable Declarator String defaultValueToOmit = ","Class Or Interface Type String ","Method Call Expr ","Simple Name defaultValueToOmit ","Block Stmt ","Method Call Expr ","Simple Name isEmpty ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name defaultValueToOmit ","Field Access Expr ","Simple Name parse ","Field Access Expr ","Name Expr OmitValue ","Simple Name length ","Simple Name valueType ","Variable Declaration Expr ","Simple Name altName ","Name Expr altName ","Variable Declarator String altName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name value ","Block Stmt ","Method Call Expr ","Simple Name isEmpty ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Name Expr iter ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Simple Name from ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Continue Stmt ","Simple Name from ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Simple Name to ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Name Expr binding ","Simple Name to ","Variable Declaration Expr ","Simple Name decoderClass ","Name Expr decoderClass ","Name Expr decoderClass ","Variable Declarator Class decoderClass = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name decoder ","Block Stmt ","Class Expr Decoder.class ","Class Or Interface Type Decoder ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name decoderCtor ","Variable Declarator Constructor decoderCtor = ","Class Or Interface Type Constructor ","Method Call Expr ","Simple Name getConstructor ","Class Expr Binding.class ","Class Or Interface Type Binding ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name decoder ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type NoSuchMethodException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name decoder ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Variable Declaration Expr ","Class Or Interface Type JsonProperty ","Name Expr encoderClass ","Name Expr encoderClass ","Variable Declarator Class encoderClass = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name encoder ","Block Stmt ","Class Expr Encoder.class ","Class Or Interface Type Encoder ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name encoderCtor ","Variable Declarator Constructor encoderCtor = ","Class Or Interface Type Constructor ","Method Call Expr ","Simple Name getConstructor ","Class Expr Binding.class ","Class Or Interface Type Binding ","Assign Expr ASSIGN ","Binary Expr LESS ","Cast Expr ","Name Expr multmin ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type NoSuchMethodException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name encoder ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Block Stmt ","Method Call Expr ","Class Expr Object.class ","Simple Name implementation ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name valueType ","Simple Name useImpl ","Field Access Expr ","Method Call Expr ","Simple Name valueType ","Simple Name implementation ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name setDefaultConfig ","Simple Name create ","Field Access Expr ","Simple Name valueType ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Name Expr annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","Null Literal Expr ","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr OR ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name equals ","Parameter Object o ","Block Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Name Expr o ","Name Expr o ","Name Expr o ","Name Expr o ","Class Or Interface Type Object ","This Expr ","ThisExpr","Boolean Literal Expr true ","Continue Stmt ","Binary Expr NOT_EQUALS ","Null Literal Expr ","Method Call Expr ","Method Call Expr ","Simple Name getClass ","Simple Name getClass ","Boolean Literal Expr false ","Variable Declaration Expr ","Simple Name element ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Variable Declarator Builder builder = ","Class Or Interface Type Builder ","Cast Expr ","Class Or Interface Type Builder ","Name Expr indentionStep ","Field Access Expr ","Simple Name indentionStep ","Boolean Literal Expr false ","Binary Expr EQUALS ","Field Access Expr ","Simple Name escapeUnicode ","Boolean Literal Expr false ","Return Stmt ","Field Access Expr ","Class Or Interface Type WildcardType ","Boolean Literal Expr false ","Name Expr omitDefaultValue ","Field Access Expr ","Simple Name omitDefaultValue ","Boolean Literal Expr false ","Binary Expr EQUALS ","Name Expr encodingMode ","Field Access Expr ","Simple Name encodingMode ","Class Or Interface Type JsonCreator ","Simple Name getJsonCreator ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonCreator.class ","Class Or Interface Type JsonCreator ","Expression Stmt ","Try Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Unary Expr ++ ","Parameter Exception e ","Return Stmt ","Array Type 1 ","Simple Name getParamNames ","Parameter Object obj ","Parameter int paramCount ","Block Stmt ","Class Or Interface Type String ","Name Expr obj ","Name Expr paramCount ","Class Or Interface Type Object ","Primitive Type int ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Name Expr paramNames ","Name Expr Array ","Name Expr params ","Name Expr i ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Array Creation Expr String Array Creation Level Not Empty ","Name Expr Arrays ","Array Creation Level Dimension NotEmpty ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name params ","Variable Declarator Object params = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name reflectCall ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Simple Name a ","Field Access Expr ","Simple Name length ","Assign Expr ASSIGN ","Array Access Expr i ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Simple Name reflectCall ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name get ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Class Or Interface Type JsonWrapper ","Simple Name getJsonWrapper ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonWrapper.class ","Class Or Interface Type JsonWrapper "]}
{"Version":"0.9.22","MethodName":"Config_detectUnwrappers","callMethodNameReferTo":{},"num":109,"succs":[[2,1,24],[2,19],[3,26],[30,4],[31,33,6,5,32],[35],[36,7],[37,39,8,38,9],[35],[1,46],[13,14,11,16,15,12],[],[13],[],[20,18],[21,19],[0],[18],[],[],[],[22,23],[],[],[3,6,9],[26],[29],[26,25],[26,27],[26],[5],[],[],[34,25],[],[],[8],[40,41,43],[],[45],[],[27,42,44],[],[53,54,56,52,55],[],[],[49,48,47],[50,17],[],[28,51],[],[],[79],[54],[],[42,59],[57],[62,43,61],[42,65],[60],[],[],[58,67,64,63],[],[66,68],[],[],[82,81,83,80,84,52,79],[],[92,70],[85,71,72,93,38],[94,67,72,61],[74,95,73],[85,74,78,65],[75,97],[76,100],[77,86,73,102,101],[67,61,73,104],[67,106,61],[],[81],[],[87,65],[66,89],[69,72,78],[65],[66],[88],[],[90,91],[],[],[71],[45],[45],[75],[97],[99],[76,97,96],[97],[77],[],[103,96],[],[98,105],[],[45],[],[]],"nodeAttribute":["For Each Stmt ","Name Expr allMethods ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Continue Stmt ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","Void Type ","Simple Name detectUnwrappers ","Parameter ClassDescriptor desc ","Parameter List<Method> allMethods ","Block Stmt ","Name Expr desc ","Simple Name desc ","Simple Name allMethods ","Class Or Interface Type ClassDescriptor ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Method ","Block Stmt ","Name Expr method ","Simple Name method ","Name Expr method ","Name Expr method ","Class Or Interface Type Method ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","continue;","Block Stmt ","Method Call Expr ","EQUALS","Null Literal Expr ","Simple Name getJsonUnwrapper ","Method Call Expr ","Simple Name annotations ","Method Declaration ","Simple Name getAnnotations ","NullLiteralExpr","Method Call Expr ","Expression Stmt ","Simple Name add ","Object Creation Expr UnwrapperDescriptor Optional.empty Optional.empty ","Simple Name unwrappers ","Class Or Interface Type UnwrapperDescriptor ","PROTECTED","Class Or Interface Type JsonUnwrapper ","Simple Name getJsonUnwrapper ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","ReturnStmt","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonUnwrapper.class ","Simple Name annotations ","Simple Name annotationClass ","Method Declaration ","Class Or Interface Type JsonUnwrapper ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Name Expr annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","Null Literal Expr ","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
{"Version":"0.9.22","MethodName":"Config_detectWrappers","callMethodNameReferTo":{},"num":812,"succs":[[63,1,2],[58,2],[3,65],[4,74],[75,6,5,77,76],[79],[80,7],[8,94],[10,96,9,95,82],[79],[98,11],[12,107],[13,119],[14,130],[131,18,15,121],[132,16],[133,13,136,134,69,17],[13,140],[142,19,40],[146,136,144,145,20,40],[150,21],[159,22],[38,24,23,163],[24,170],[25,164,174,175,39],[26,178],[185,27],[208,28],[29,218],[210,30,31,220,219],[221,31],[226,32],[229,33,227,228,34],[34,238],[242,35],[251,36],[37,260],[263,38],[166,24,177],[267,1],[43,271,41],[272,43,136,274,42,273],[277,1],[44],[1,281],[47,46,49,51,48,50],[],[48],[],[59,53],[60,58],[0],[56,53,57],[],[52,53,55],[53,54],[53,55],[52,53],[],[],[62,61],[],[],[13,12,6,10,11,18,7,3],[65],[73],[64,65],[66,65],[67,115,65],[68,65,71,72],[69,65],[70,65],[69,65],[65],[5],[],[],[64,78],[],[],[86],[66],[81],[81,82],[19,81,83],[84,19,81,83,41],[88,87,81],[81],[90,92,89],[],[93,66,91],[],[293,290,289,291,292],[],[9],[],[97],[],[103],[67],[102,99],[100,102,99],[101,99],[105,104,99],[99],[106,67],[],[110],[109,68,100],[108],[108,111,112],[108],[68,114,117,113],[],[116,118,100],[],[],[319,317,46,320,316,318],[],[124],[52],[123,120],[120,121],[122,120,16],[120,125,126],[120],[127,128],[129,52],[],[],[15],[],[17],[],[138,135,137],[],[389,384,387,385,386,388],[139,122],[],[],[123,141],[],[21,22,20,39],[19],[147,148],[],[149,135,83],[],[],[],[155],[70,152],[],[151],[151,153],[156,157,152],[152],[158],[],[160,70,161],[151,162],[],[],[37,25,26,31,27,35,28,36,34],[165,169],[],[164,165],[166,165],[167,165],[168,165],[171,165,172],[165],[173],[],[],[176,101],[],[],[182],[167,102],[216,179],[179,180],[184,183,179],[179],[167,102],[197],[168,54,71,55],[186,223],[186,187],[186,188],[109,186,189,32,169],[190,192],[190],[194,191],[191],[193,181],[195],[186,199,198],[186],[201,202,203,200],[],[204,54],[205,55],[168,206],[],[],[207,71],[],[212],[180],[209],[224,210,209,29],[213,209,214],[209],[217,215,180],[],[],[448,445,289,446,447],[30],[],[97],[225,187,211,222],[],[],[],[510,508,46,512,511,509],[33],[231,95,230],[],[234,233,95],[232,188],[97],[],[235,236],[173],[189,237],[],[],[240,161,239],[190,241],[109,169],[],[244,243,161],[191,245],[246,247,248],[],[],[],[249],[250,192],[],[253,252,161],[193,254],[256,255,257],[],[],[],[258],[194,259],[],[181,261,161],[195,262],[],[196,264,265],[153,266],[],[],[154,269,268],[56,270],[],[],[42],[143,275],[],[276,84,135],[],[],[278,279,72],[280,57],[],[],[282,283],[],[284,285,286],[287],[],[288,85],[],[],[782],[291],[],[91,296],[294],[299,92,298],[91,302],[297],[],[],[300,304,295,301],[],[303,305],[],[],[785,784,786,783,787,289,782],[],[326,307],[315,314,340,308,339],[341,309],[310,348,313,311],[353,311],[315,312,356,174,349],[313,358],[351,177,311],[315,368,369],[117,333,298],[317,321],[],[324,115],[325,116],[315,307,306],[],[115],[116],[],[],[334],[323],[329,327],[331,330,327,332,328],[],[342],[350,352,351],[329],[335,327,336],[327],[337,338],[],[],[308,309],[314,367],[343],[322],[344,345,342],[342],[346,347,322],[],[287],[312],[350,352],[],[350,349,352],[350,331,330,332],[350,354,355],[350],[173],[357,328],[],[360,359,161],[329,352],[362,361],[],[363,365,364],[],[366,331,330,332],[287],[],[],[],[],[390,371],[396,372,95,401],[373,391],[406,228,405,374],[375,414],[376,392],[377,426,425,219],[378,393],[430,429,379,219],[394,380],[381,433,434,219],[395,382],[438,383,437,219],[136,441,298],[],[],[387],[],[135,400],[381,377,383,370,372,375,379,374],[136,403,298],[412,136,298],[136,428,298],[136,432,298],[136,436,298],[440,136,298],[135],[135,396],[397,135],[135,398],[],[402],[],[404],[],[407,397,95],[409,408,219],[97],[410],[411,398],[],[],[413],[],[421],[399],[415],[416,415],[415,417],[418,415],[419,415],[423,422,415],[415],[424,399],[],[],[416,427],[],[413],[],[431,417],[],[413],[],[435,418],[],[413],[],[439,419],[],[413],[95,442,443],[],[444,420],[],[446],[],[216,451],[449],[453,217,298],[216,302],[452],[],[454,304,450,455],[],[303,456],[],[458,559],[459,564],[569,460],[461,574],[581,462],[463,582,583,464],[464,585],[595,465],[466,602],[467,603,583,472],[605,468],[606,469,470,607,95],[609,470],[612,471],[619,472],[473,626],[627,474,628,629,475],[633,475],[476,638],[477,628,478,640,639],[478,644],[479,649],[657,480],[658,651,491,219,481],[489,662,487,491,660,661,482],[663,483,664,491,485],[665,484],[673,491],[681,682,486],[683,491],[488,692,691],[693,491],[695,490,696],[697,491],[492,700],[708,493],[504,709,494,702,219],[504,711,500,712,502,495,713],[504,498,715,714,496],[716,497],[504,724],[499,733,732],[504,734],[501,742,743],[504,744],[747,746,503],[504,748],[505,751],[506,752,753,219],[507,756],[765],[509],[],[223,557],[224,558],[461,457,492,478,459,464,465,491,472,460,479,504,458,475],[223,514],[224],[516,513],[224,514],[518,515],[224,516],[517,521,520],[517],[576,575,462],[519],[519,522,468,524],[466,596,597],[526,523],[466,596,524],[528,525],[526,466,596],[527,530],[224,473,552],[532,529],[224,476,553],[531,535,534],[666],[531],[537,533],[650,652,480],[536,539,540],[717],[536],[542,538],[703,493,701],[541,546,544,545],[],[541],[224,505,556],[548,543,549],[],[543],[224,518],[224,550],[224,551],[224,530],[224,532],[224,554],[224,555],[],[],[561,560,161],[513,562],[563,514],[],[],[565,566,161],[567,515],[568,516],[],[],[571,161,570],[517,572],[518,573],[],[],[577],[550],[575],[578,579,575],[575],[550,580],[],[463],[576,584],[],[],[587,586,161],[519,588],[589,591,521,590],[],[592,593],[],[594,520],[],[],[],[598],[551],[596],[600,599,596],[596],[551,601],[],[467,470,471],[604,597],[],[469],[522,608],[97],[],[610,161,524],[611,523],[],[613,614,161],[615,525],[618,616,617],[],[],[],[526],[621,620,161],[622,527],[623,625,624],[],[],[],[528],[474],[630,631],[],[173],[552,632],[],[],[161,635,634],[636,529],[637,530],[],[],[477],[642,641],[173],[643,553],[],[],[645,646,161],[531,647],[532,648],[],[],[653],[554],[650],[650,651,480],[654,650,655],[650],[554,656],[],[481],[659],[],[482],[487,690],[694,489],[483,484],[680,485],[667],[652],[668,666,669],[666],[671,652,670],[],[672],[],[675,674,161],[533,676],[677,678],[],[],[679,535,534],[],[486],[],[],[684,161,685],[686,536],[687,688],[],[],[537,689],[],[488],[],[],[],[490],[],[],[698,699],[],[],[704],[555],[701],[493,702,701],[706,705,701],[701],[707,555],[],[494],[710],[],[495],[500,741],[502,745],[497,496],[498,731],[718],[703],[717,720,719],[717],[722,721,703],[],[723],[],[725,161,726],[538,727],[729,728],[],[],[730,539,540],[],[499],[],[],[735,736,161],[541,737],[739,738],[],[],[542,740],[],[501],[],[],[],[503],[],[],[750,749],[],[],[507,506],[754,556],[755],[],[],[161,758,757],[759,543],[760,761,762,544],[],[],[763,545],[764,546],[],[],[766,767,161],[547,768],[548,770,769],[],[],[549,771],[],[795,773],[788,774,775,796,95],[797,304,775,298],[777,798,776],[788,777,781,302],[778,800],[779,803],[780,789,804,805,776],[304,298,776,807],[304,809,298],[],[784],[],[790,302],[303,792],[772,775,781],[302],[303],[791],[],[793,794],[],[],[774],[97],[97],[778],[800],[802],[779,800,799],[800],[780],[],[806,799],[],[801,808],[],[97],[],[]],"nodeAttribute":["For Each Stmt ","Name Expr allMethods ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Method Call Expr ","If Stmt ","Method Call Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Block Stmt ","Throw Stmt ","Method Declaration ","PRIVATE","Void Type ","Simple Name detectWrappers ","Parameter ClassDescriptor desc ","Parameter List<Method> allMethods ","Block Stmt ","Name Expr iter ","Simple Name desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Simple Name allMethods ","Class Or Interface Type ClassDescriptor ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Method ","Block Stmt ","Name Expr method ","Simple Name method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Class Or Interface Type Method ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","continue;","Variable Declaration Expr ","Simple Name jsonWrapper ","Name Expr jsonWrapper ","Class Or Interface Type IOException ","Name Expr jsonWrapper ","Name Expr jsonWrapper ","Variable Declarator JsonWrapper jsonWrapper = ","Return Stmt ","Method Call Expr ","Simple Name getJsonWrapper ","Method Call Expr ","Simple Name annotations ","Method Declaration ","Simple Name getAnnotations ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","Simple Name annotations ","Name Expr annotations ","Name Expr annotations ","Name Expr annotations ","Variable Declarator Annotation[][] annotations = ","Array Type 2 ","Method Call Expr ","Simple Name getParameterAnnotations ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Method Call Expr ","Simple Name getParamNames ","Field Access Expr ","Simple Name obj ","Simple Name paramCount ","Method Declaration ","Simple Name length ","Variable Declaration Expr ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator Iterator<Binding> iter = ","Class Or Interface Type Iterator ","Method Call Expr ","Field Access Expr ","Simple Name iterator ","Simple Name setters ","Block Stmt ","Simple Name hasNext ","Block Stmt ","Simple Name equals ","Field Access Expr ","Simple Name o ","Method Declaration ","Enclosed Expr ","Simple Name method ","Name Expr iter ","Method Call Expr ","Simple Name remove ","Block Stmt ","Name Expr JsonWrapperType ","Field Access Expr ","Simple Name equals ","Method Call Expr ","Name Expr JsonWrapperType ","Simple Name BINDING ","Simple Name value ","Variable Declaration Expr ","Field Access Expr ","Simple Name wrapper ","Name Expr wrapper ","Name Expr wrapper ","Variable Declarator WrapperDescriptor wrapper = ","Class Or Interface Type WrapperDescriptor ","Object Creation Expr WrapperDescriptor Optional.empty Optional.empty ","Class Or Interface Type WrapperDescriptor ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name method ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Field Access Expr ","Simple Name length ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name paramAnnotations ","Name Expr paramAnnotations ","Name Expr paramAnnotations ","Variable Declarator Annotation[] paramAnnotations = ","Array Type 1 ","Array Access Expr i ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Field Access Expr ","Field Access Expr ","Array Access Expr i ","Simple Name classInfo ","Simple Name lookup ","Method Call Expr ","Simple Name getGenericParameterTypes ","Variable Declaration Expr ","Simple Name jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Variable Declarator JsonProperty jsonProperty = ","Class Or Interface Type JsonProperty ","Method Call Expr ","Simple Name getJsonProperty ","Simple Name annotations ","Method Declaration ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","Method Call Expr ","Simple Name updateBindingWithJsonProperty ","Simple Name binding ","Simple Name jsonProperty ","Method Declaration ","Block Stmt ","Field Access Expr ","OR","Binary Expr EQUALS ","Field Access Expr ","Null Literal Expr ","Simple Name name ","Method Call Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Access Expr i ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Name Expr iter ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Name Expr doubleNumber ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name annotations ","Method Call Expr ","Field Access Expr ","Simple Name add ","Name Expr longNumber ","Method Call Expr ","Field Access Expr ","Name Expr len ","Simple Name bindingTypeWrappers ","Block Stmt ","Field Access Expr ","Simple Name equals ","Method Call Expr ","Simple Name KEY_VALUE ","Simple Name value ","Expression Stmt ","Field Access Expr ","Simple Name add ","Simple Name keyValueTypeWrappers ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Method Call Expr ","StringLiteralExpr","Simple Name value ","PROTECTED","Class Or Interface Type JsonWrapper ","Simple Name getJsonWrapper ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","ReturnStmt","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonWrapper.class ","Simple Name annotations ","Simple Name annotationClass ","Method Declaration ","Class Or Interface Type JsonWrapper ","Expression Stmt ","Try Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Unary Expr ++ ","Parameter Exception e ","Return Stmt ","Array Type 1 ","Simple Name getParamNames ","Parameter Object obj ","Parameter int paramCount ","Block Stmt ","Class Or Interface Type String ","Name Expr obj ","Name Expr paramCount ","Class Or Interface Type Object ","Primitive Type int ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Name Expr paramNames ","Name Expr Array ","Name Expr params ","Name Expr i ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Array Creation Expr String Array Creation Level Not Empty ","Name Expr Arrays ","Array Creation Level Dimension NotEmpty ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name params ","Variable Declarator Object params = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name reflectCall ","String Literal Expr Not Empty  ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Simple Name a ","Field Access Expr ","Simple Name length ","Assign Expr ASSIGN ","Array Access Expr i ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Simple Name reflectCall ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name get ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr OR ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name equals ","Parameter Object o ","Block Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Name Expr o ","Name Expr o ","Name Expr o ","Name Expr o ","Class Or Interface Type Object ","This Expr ","ThisExpr","Boolean Literal Expr true ","true","Continue Stmt ","Binary Expr NOT_EQUALS ","Null Literal Expr ","Method Call Expr ","Method Call Expr ","Simple Name getClass ","Simple Name getClass ","Boolean Literal Expr false ","false","Variable Declaration Expr ","Simple Name element ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Variable Declarator Builder builder = ","Class Or Interface Type Builder ","Cast Expr ","Class Or Interface Type Builder ","Name Expr indentionStep ","Field Access Expr ","Simple Name indentionStep ","Boolean Literal Expr false ","Binary Expr EQUALS ","Field Access Expr ","Simple Name escapeUnicode ","Boolean Literal Expr false ","Return Stmt ","Field Access Expr ","Class Or Interface Type WildcardType ","Boolean Literal Expr false ","Name Expr omitDefaultValue ","Field Access Expr ","Simple Name omitDefaultValue ","Boolean Literal Expr false ","Binary Expr EQUALS ","Name Expr encodingMode ","Field Access Expr ","Simple Name encodingMode ","Class Or Interface Type JsonProperty ","Simple Name getJsonProperty ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonProperty.class ","Class Or Interface Type JsonProperty ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NoSuchMethodException e ","Expression Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NoSuchMethodException e ","Expression Stmt ","Parameter JsonException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name updateBindingWithJsonProperty ","Parameter Binding binding ","Parameter JsonProperty jsonProperty ","Block Stmt ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr binding ","Name Expr defaultValueToOmit ","Name Expr binding ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr decoderCtor ","Name Expr binding ","Name Expr binding ","Name Expr decoderClass ","Name Expr binding ","Name Expr encoderCtor ","Name Expr binding ","Name Expr binding ","Name Expr encoderClass ","Name Expr binding ","Name Expr GenericsHelper ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr TypeLiteral ","Name Expr binding ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Class Or Interface Type Binding ","Class Or Interface Type JsonProperty ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name asMissingWhenNotPresent ","Simple Name required ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name isNullable ","Simple Name nullable ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name isCollectionValueNullable ","Simple Name collectionValueNullable ","Variable Declaration Expr ","Simple Name defaultValueToOmit ","Name Expr defaultValueToOmit ","Variable Declarator String defaultValueToOmit = ","Class Or Interface Type String ","Method Call Expr ","Simple Name defaultValueToOmit ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name isEmpty ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name defaultValueToOmit ","Field Access Expr ","Simple Name parse ","Field Access Expr ","Name Expr OmitValue ","Simple Name length ","Simple Name valueType ","Variable Declaration Expr ","Simple Name altName ","Name Expr altName ","Variable Declarator String altName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name value ","Block Stmt ","Method Call Expr ","Simple Name isEmpty ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Name Expr iter ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Simple Name from ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Continue Stmt ","Simple Name from ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Simple Name to ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Name Expr binding ","Simple Name to ","Variable Declaration Expr ","Simple Name decoderClass ","Name Expr decoderClass ","Name Expr decoderClass ","Variable Declarator Class decoderClass = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name decoder ","Block Stmt ","Class Expr Decoder.class ","Class Or Interface Type Decoder ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name decoderCtor ","Variable Declarator Constructor decoderCtor = ","Class Or Interface Type Constructor ","Method Call Expr ","Simple Name getConstructor ","Class Expr Binding.class ","Class Or Interface Type Binding ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name decoder ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type NoSuchMethodException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name decoder ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Variable Declaration Expr ","Class Or Interface Type JsonProperty ","Name Expr encoderClass ","Name Expr encoderClass ","Variable Declarator Class encoderClass = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name encoder ","Block Stmt ","Class Expr Encoder.class ","Class Or Interface Type Encoder ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name encoderCtor ","Variable Declarator Constructor encoderCtor = ","Class Or Interface Type Constructor ","Method Call Expr ","Simple Name getConstructor ","Class Expr Binding.class ","Class Or Interface Type Binding ","Assign Expr ASSIGN ","Binary Expr LESS ","Cast Expr ","Name Expr multmin ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type NoSuchMethodException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name encoder ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Block Stmt ","Method Call Expr ","Class Expr Object.class ","Simple Name implementation ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name valueType ","Simple Name useImpl ","Field Access Expr ","Method Call Expr ","Simple Name valueType ","Simple Name implementation ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name setDefaultConfig ","Simple Name create ","Field Access Expr ","Simple Name valueType ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Name Expr annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","Null Literal Expr ","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
{"Version":"0.9.22","MethodName":"Config_getParamNames","callMethodNameReferTo":{},"num":74,"succs":[[24,1],[9,2,38,8,37],[39,3],[4,47,7,5],[52,5],[9,6,57,56,48],[7,60],[50,59,5],[9,71,72],[10,31,73],[15,13,11,16,12,14],[],[13,17],[],[22,19],[23,21],[9,1,0],[],[19],[],[21],[],[],[],[32],[20],[27,25],[29,28,25,30,26],[],[40],[49,51,50],[27],[33,25,34],[25],[35,36],[],[],[2,3],[8,70],[41],[18],[42,43,40],[40],[44,45,18],[],[46],[],[6],[49,51],[],[49,48,51],[49,29,28,30],[49,53,54],[49],[55],[],[],[58,26],[],[],[63,61,62],[27,51],[],[65,64],[],[66,68,67],[],[69,29,28,30],[46],[],[],[],[],[]],"nodeAttribute":["Expression Stmt ","Try Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Unary Expr ++ ","Parameter Exception e ","Return Stmt ","Method Declaration ","PRIVATE","Array Type 1 ","Simple Name getParamNames ","Parameter Object obj ","Parameter int paramCount ","Block Stmt ","Class Or Interface Type String ","Name Expr obj ","Simple Name obj ","Name Expr paramCount ","Simple Name paramCount ","Class Or Interface Type Object ","Primitive Type int ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Name Expr paramNames ","Name Expr Array ","Name Expr params ","Name Expr i ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Array Creation Expr String Array Creation Level Not Empty ","Name Expr Arrays ","Array Creation Level Dimension NotEmpty ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name params ","Variable Declarator Object params = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name reflectCall ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Simple Name a ","Zero IntegerLiteralExpr","LESS","Field Access Expr ","Simple Name length ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr i ","ASSIGN","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Simple Name reflectCall ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name get ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","ReturnStmt"]}
{"Version":"0.9.22","MethodName":"Config_reflectCall","callMethodNameReferTo":{},"num":35,"succs":[[1,23],[2,32,33],[3,7,10,8,4,6,9,12,5],[],[5],[],[14,20],[21,17],[19,22],[11],[],[],[0,1],[14],[],[14,13],[17],[],[19],[],[],[],[],[26],[13,16],[24],[28,27,24],[24],[16,29,30],[31,13],[],[],[],[34,25,18,15],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration Throws ","PRIVATE","Class Or Interface Type Object ","Simple Name reflectCall ","Parameter Object obj ","Parameter String methodName ","Parameter Object... args ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr methodName ","Simple Name methodName ","Name Expr args ","Simple Name args ","Class Or Interface Type Object ","Class Or Interface Type String ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name method ","Name Expr method ","Variable Declarator Method method = ","Array Type 1 ","Method Call Expr ","Method Call Expr ","Simple Name getMethod ","Simple Name getClass ","ReturnStmt","Method Call Expr ","Simple Name invoke "]}
{"Version":"0.9.22","MethodName":"Config_detectStaticFactory","callMethodNameReferTo":{},"num":678,"succs":[[1,53,2],[48,2],[55,3],[61,4],[62,63,5,6],[68],[7,69],[8,80],[71,9,81,82,10],[68],[84,11],[12,92],[13,97],[14,103],[112,15],[16,17,124,31],[17,131],[1,18,135,136,125],[139,19],[20,146],[156,21],[179,22],[23,181,148,24,180],[182,24],[187,25],[188,189,26,27,190],[27,199],[28,203],[29,212],[221,30],[224,31],[127,17,138],[33,38,35,34,36,37],[],[35],[],[41,49],[50,48],[0],[41,40],[56,55],[],[39,43],[40,55],[42],[47,44],[45,44],[46,44],[],[],[51,52],[],[],[15,12,14,7,11,13,6,10,3],[55],[60],[54,55],[43,55],[55,57,120],[55,58],[55],[5],[66,64,65],[],[],[],[54,67],[],[],[72],[56],[70],[74,73,70],[70],[75,78,76],[],[56,79,77],[],[233,234,230,231,232],[],[9],[],[83],[],[87,85,86],[88,89],[],[91,40],[39,90],[],[],[],[93,43,86],[95,94],[96,42],[],[],[99,98,86],[101,100],[83],[102,44],[],[],[108],[57],[104],[104,107,105],[104,106],[104,110,109],[104],[111,57],[],[115],[105,58],[113],[116,113,117],[113],[118,119,122,58],[],[123,121,105],[],[],[260,258,33,261,257,259],[],[30,29,20,18,19,27,24,21,28],[126,130],[],[126,125],[127,126],[128,126],[129,126],[133,132,126],[126],[134],[],[],[137,106],[],[],[143],[128,107],[140,154],[141,140],[145,144,140],[140],[128,107],[150],[141],[147],[185,147,22,148],[151,152,147],[147],[141,155,153],[],[],[315,312,313,230,314],[168],[129,46,45,59],[184,157],[158,157],[157,159],[157,160,114,25,130],[163,161],[161],[165,162],[162],[142,164],[166],[157,170,169],[157],[174,172,171,173],[],[45,175],[46,176],[129,177],[],[],[59,178],[],[23],[],[83],[158,186,183,149],[],[],[],[377,375,33,379,378,376],[26],[192,191,81],[],[195,194,81],[193,159],[83],[],[197,196],[134],[198,160],[],[],[200,201,86],[202,161],[114,130],[],[205,86,204],[162,206],[209,208,207],[],[],[],[210],[163,211],[],[213,86,214],[164,215],[216,217,218],[],[],[],[219],[165,220],[],[142,86,222],[166,223],[],[225,167,226],[228,227],[],[229,47],[],[],[648],[232],[],[237,77],[235],[240,78,239],[77,243],[238],[],[],[245,242,236,241],[],[244,246],[],[],[651,650,652,653,649,230,648],[],[267,248],[256,249,255,281,280],[282,250],[251,290,254,252],[295,252],[256,253,298,135,291],[254,300],[293,138,252],[256,310,311],[122,274,239],[258,262],[],[265,120],[266,121],[256,248,247],[],[120],[121],[],[],[275],[264],[270,268],[272,271,268,273,269],[],[283],[292,294,293],[270],[276,268,277],[268],[279,278],[],[],[249,250],[255,309],[284],[263],[285,286,283],[283],[287,288,263],[],[289],[],[253],[292,294],[],[292,291,294],[292,272,271,273],[292,296,297],[292],[134],[299,269],[],[302,301,86],[270,294],[304,303],[],[305,307,306],[],[308,272,271,273],[289],[],[],[],[],[313],[],[154,318],[316],[320,155,239],[154,243],[319],[],[321,245,317,322],[],[244,323],[],[325,426],[326,431],[436,327],[328,441],[448,329],[330,449,63,331],[331,451],[461,332],[333,468],[334,469,63,339],[471,335],[472,336,337,473,81],[475,337],[478,338],[485,339],[492,340],[493,341,495,494,342],[499,342],[343,504],[344,494,345,506,505],[345,510],[346,515],[523,347],[524,517,358,348,180],[356,528,354,358,526,349,527],[529,350,530,358,352],[531,351],[539,358],[547,548,353],[549,358],[355,558,557],[559,358],[561,357,562],[563,358],[359,566],[574,360],[371,575,361,568,180],[371,577,367,578,369,362,579],[371,365,581,580,363],[582,364],[371,590],[366,599,598],[371,600],[368,608,609],[610,371],[613,612,370],[371,614],[372,617],[373,618,619,180],[374,622],[631],[376],[],[184,424],[185,425],[328,324,359,345,326,331,332,358,327,339,346,371,325,342],[184,381],[185],[383,380],[185,381],[385,382],[185,383],[384,388,387],[384],[443,442,329],[386],[389,386,335,391],[333,462,463],[393,390],[333,462,391],[395,392],[393,333,462],[394,397],[185,340,419],[399,396],[185,343,420],[398,402,401],[532],[398],[404,400],[516,518,347],[403,406,407],[583],[403],[409,405],[569,360,567],[408,413,411,412],[],[408],[185,372,423],[415,410,416],[],[410],[185,385],[185,417],[185,418],[185,397],[185,399],[185,421],[185,422],[],[],[428,427,86],[380,429],[430,381],[],[],[432,433,86],[434,382],[435,383],[],[],[438,86,437],[384,439],[385,440],[],[],[444],[417],[442],[445,446,442],[442],[417,447],[],[330],[450,443],[],[453,452,86],[386,454],[455,457,388,456],[],[458,459],[],[460,387],[],[],[],[464],[418],[462],[466,465,462],[462],[418,467],[],[334,337,338],[470,463],[],[336],[389,474],[83],[],[476,86,391],[477,390],[],[479,480,86],[481,392],[484,482,483],[],[],[],[393],[487,486,86],[488,394],[491,489,490],[],[],[],[395],[341],[496,497],[],[134],[419,498],[],[],[86,501,500],[502,396],[503,397],[],[],[344],[508,507],[134],[509,420],[],[],[511,512,86],[398,513],[399,514],[],[],[519],[421],[516],[516,517,347],[520,516,521],[516],[421,522],[],[348],[525],[],[349],[354,556],[560,356],[350,351],[546,352],[533],[518],[534,532,535],[532],[537,518,536],[],[538],[],[541,540,86],[400,542],[543,544],[],[],[545,402,401],[],[353],[],[],[550,86,551],[552,403],[553,554],[],[],[404,555],[],[355],[],[],[],[357],[],[],[564,565],[],[],[570],[422],[567],[360,568,567],[572,571,567],[567],[573,422],[],[361],[576],[],[362],[367,607],[369,611],[363,364],[365,597],[584],[569],[583,586,585],[583],[588,587,569],[],[589],[],[591,86,592],[405,593],[595,594],[],[],[596,406,407],[],[366],[],[],[601,602,86],[408,603],[605,604],[],[],[409,606],[],[368],[],[],[],[370],[],[],[616,615],[],[],[374,373],[620,423],[621],[],[],[86,624,623],[625,410],[626,627,628,411],[],[],[629,412],[630,413],[],[],[632,633,86],[414,634],[415,636,635],[],[],[416,637],[],[661,639],[654,640,641,662,81],[663,245,641,239],[643,664,642],[654,643,647,243],[644,666],[645,669],[646,655,671,642,670],[245,239,642,673],[245,675,239],[],[650],[],[656,243],[244,658],[638,641,647],[243],[244],[657],[],[659,660],[],[],[640],[83],[83],[644],[666],[668],[645,666,665],[666],[646],[],[672,665],[],[667,674],[],[83],[],[]],"nodeAttribute":["For Each Stmt ","Name Expr allMethods ","Variable Declaration Expr ","If Stmt ","Unary Expr ! ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Assign Expr ASSIGN ","Unary Expr ++ ","Method Declaration ","PRIVATE","Void Type ","Simple Name detectStaticFactory ","Parameter ClassDescriptor desc ","Parameter List<Method> allMethods ","Block Stmt ","This Expr ","Name Expr method ","Simple Name desc ","Name Expr desc ","Name Expr method ","Name Expr iter ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Simple Name allMethods ","Class Or Interface Type ClassDescriptor ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Method ","Block Stmt ","Name Expr method ","Simple Name append ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Class Or Interface Type Method ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","continue;","Variable Declaration Expr ","Simple Name jsonCreator ","Name Expr jsonCreator ","Variable Declarator JsonCreator jsonCreator = ","Class Or Interface Type JsonCreator ","Method Call Expr ","Simple Name getJsonCreator ","Method Call Expr ","Simple Name annotations ","Method Declaration ","Simple Name getAnnotations ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name writeObjectField ","Void Type ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name staticFactory ","Simple Name ctor ","Binary Expr MINUS ","Field Access Expr ","Simple Name head ","Field Access Expr ","Simple Name ctor ","Simple Name tail ","Variable Declaration Expr ","Simple Name annotations ","Name Expr annotations ","Name Expr annotations ","Name Expr annotations ","Variable Declarator Annotation[][] annotations = ","Array Type 2 ","Method Call Expr ","Simple Name getParameterAnnotations ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Method Call Expr ","Simple Name getParamNames ","Field Access Expr ","Simple Name obj ","Simple Name paramCount ","Method Declaration ","Simple Name length ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Field Access Expr ","Simple Name length ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name paramAnnotations ","Name Expr paramAnnotations ","Name Expr paramAnnotations ","Variable Declarator Annotation[] paramAnnotations = ","Array Type 1 ","Array Access Expr i ","Variable Declaration Expr ","Simple Name jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Variable Declarator JsonProperty jsonProperty = ","Return Stmt ","Method Call Expr ","Simple Name getJsonProperty ","Simple Name annotations ","Method Declaration ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Field Access Expr ","Field Access Expr ","Array Access Expr i ","Simple Name classInfo ","Simple Name lookup ","Method Call Expr ","Simple Name getGenericParameterTypes ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","Method Call Expr ","Simple Name updateBindingWithJsonProperty ","Simple Name binding ","Simple Name jsonProperty ","Method Declaration ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr EQUALS ","Field Access Expr ","Null Literal Expr ","Simple Name name ","Method Call Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Access Expr i ","Simple Name name ","Variable Declarator int ind4 = ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Name Expr valueType ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name annotations ","Method Call Expr ","Field Access Expr ","Simple Name add ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","PROTECTED","Class Or Interface Type JsonCreator ","Simple Name getJsonCreator ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","ReturnStmt","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonCreator.class ","Simple Name annotations ","Simple Name annotationClass ","Method Declaration ","Class Or Interface Type JsonCreator ","Expression Stmt ","Try Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Unary Expr ++ ","Parameter Exception e ","Return Stmt ","Array Type 1 ","Simple Name getParamNames ","Parameter Object obj ","Parameter int paramCount ","Block Stmt ","Class Or Interface Type String ","Name Expr obj ","Name Expr paramCount ","Class Or Interface Type Object ","Primitive Type int ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Name Expr paramNames ","Name Expr Array ","Name Expr params ","Name Expr i ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Array Creation Expr String Array Creation Level Not Empty ","Name Expr Arrays ","Array Creation Level Dimension NotEmpty ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name params ","Variable Declarator Object params = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name reflectCall ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Simple Name a ","Field Access Expr ","Simple Name length ","Assign Expr ASSIGN ","Array Access Expr i ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Simple Name reflectCall ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name get ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Class Or Interface Type JsonProperty ","Simple Name getJsonProperty ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonProperty.class ","Class Or Interface Type JsonProperty ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NoSuchMethodException e ","Expression Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NoSuchMethodException e ","Expression Stmt ","Parameter JsonException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name updateBindingWithJsonProperty ","Parameter Binding binding ","Parameter JsonProperty jsonProperty ","Block Stmt ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr binding ","Name Expr defaultValueToOmit ","Name Expr binding ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr decoderCtor ","Name Expr binding ","Name Expr binding ","Name Expr decoderClass ","Name Expr binding ","Name Expr encoderCtor ","Name Expr binding ","Name Expr binding ","Name Expr encoderClass ","Name Expr binding ","Name Expr GenericsHelper ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr TypeLiteral ","Name Expr binding ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Class Or Interface Type Binding ","Class Or Interface Type JsonProperty ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name asMissingWhenNotPresent ","Simple Name required ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name isNullable ","Simple Name nullable ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name isCollectionValueNullable ","Simple Name collectionValueNullable ","Variable Declaration Expr ","Simple Name defaultValueToOmit ","Name Expr defaultValueToOmit ","Variable Declarator String defaultValueToOmit = ","Class Or Interface Type String ","Method Call Expr ","Simple Name defaultValueToOmit ","Block Stmt ","Method Call Expr ","Simple Name isEmpty ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name defaultValueToOmit ","Field Access Expr ","Simple Name parse ","Field Access Expr ","Name Expr OmitValue ","Simple Name length ","Simple Name valueType ","Variable Declaration Expr ","Simple Name altName ","Name Expr altName ","Variable Declarator String altName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name value ","Block Stmt ","Method Call Expr ","Simple Name isEmpty ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Name Expr iter ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Simple Name from ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Continue Stmt ","Simple Name from ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Simple Name to ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Name Expr binding ","Simple Name to ","Variable Declaration Expr ","Simple Name decoderClass ","Name Expr decoderClass ","Name Expr decoderClass ","Variable Declarator Class decoderClass = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name decoder ","Block Stmt ","Class Expr Decoder.class ","Class Or Interface Type Decoder ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name decoderCtor ","Variable Declarator Constructor decoderCtor = ","Class Or Interface Type Constructor ","Method Call Expr ","Simple Name getConstructor ","Class Expr Binding.class ","Class Or Interface Type Binding ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name decoder ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type NoSuchMethodException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name decoder ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Variable Declaration Expr ","Class Or Interface Type JsonProperty ","Name Expr encoderClass ","Name Expr encoderClass ","Variable Declarator Class encoderClass = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name encoder ","Block Stmt ","Class Expr Encoder.class ","Class Or Interface Type Encoder ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name encoderCtor ","Variable Declarator Constructor encoderCtor = ","Class Or Interface Type Constructor ","Method Call Expr ","Simple Name getConstructor ","Class Expr Binding.class ","Class Or Interface Type Binding ","Assign Expr ASSIGN ","Binary Expr LESS ","Cast Expr ","Name Expr multmin ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type NoSuchMethodException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name encoder ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Block Stmt ","Method Call Expr ","Class Expr Object.class ","Simple Name implementation ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name valueType ","Simple Name useImpl ","Field Access Expr ","Method Call Expr ","Simple Name valueType ","Simple Name implementation ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name setDefaultConfig ","Simple Name create ","Field Access Expr ","Simple Name valueType ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Name Expr annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","Null Literal Expr ","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
{"Version":"0.9.22","MethodName":"Config_detectCtor","callMethodNameReferTo":{},"num":673,"succs":[[49,1],[52,50,2,3,51],[3,55,32],[4,5,56],[5,63,64],[58,6],[66,7],[77,8],[10,9,68,78,51],[79],[11,80],[12,87],[13,92],[98,14],[15,107],[119,31,17,16],[126,17],[4,131,120,130,18],[19,134],[20,141],[21,151],[22,174],[24,143,176,23,175],[24,177],[182,25],[183,184,27,26,185],[194,27],[198,28],[207,29],[216,30],[31,219],[122,17,133],[36,33,34,37,35],[],[35],[],[39,48],[0,3],[39],[],[39,38],[40,39],[41,43],[58,57],[42],[47,44],[45,44],[44,46],[],[2],[53,38],[],[54],[],[],[],[11,14,10,15,13,12,6,7],[58],[62],[58,43],[58,59,115],[58,60],[58],[40,65],[],[],[69],[57],[67],[70,71,67],[67],[72,73,75],[],[76,74,57],[],[228,229,225,226,227],[],[9],[54],[],[81,83,82],[84,85],[],[54],[41,86],[],[],[88,43,82],[90,89],[42,91],[],[],[93,94,82],[96,95],[54],[44,97],[],[],[103],[59],[99],[100,99,102],[99,101],[105,99,104],[99],[106,59],[],[110],[100,60],[108],[111,108,112],[108],[114,60,113,117],[],[100,116,118],[],[],[254,252,33,255,251,253],[],[19,24,18,20,29,28,30,21,27],[121,125],[],[121,120],[122,121],[121,123],[121,124],[121,127,128],[121],[129],[],[],[101,132],[],[],[138],[123,102],[149,135],[136,135],[140,139,135],[135],[123,102],[145],[136],[142],[142,22,180,143],[146,142,147],[142],[150,136,148],[],[],[306,309,307,225,308],[163],[45,124,61,46],[152,179],[152,153],[152,154],[152,125,109,155,25],[156,158],[156],[157,160],[157],[137,159],[161],[152,164,165],[152],[168,166,167,169],[],[45,170],[46,171],[124,172],[],[],[173,61],[],[23],[],[54],[181,178,153,144],[],[],[],[371,369,33,373,372,370],[26],[187,186,51],[],[190,51,189],[154,188],[54],[],[191,192],[129],[193,155],[],[],[196,195,82],[156,197],[125,109],[],[199,200,82],[157,201],[203,202,204],[],[],[],[205],[158,206],[],[208,209,82],[210,159],[213,211,212],[],[],[],[214],[160,215],[],[137,217,82],[161,218],[],[162,220,221],[222,223],[],[47,224],[],[],[643],[227],[],[232,74],[230],[234,75,55],[74,237],[233],[],[239,231,236,235],[],[238,240],[],[],[646,645,647,648,644,225,643],[],[261,242],[250,243,249,275,274],[276,244],[245,284,248,246],[289,246],[250,247,292,130,285],[248,294],[287,133,246],[250,304,305],[117,268,55],[252,256],[],[259,115],[260,116],[250,242,241],[],[115],[116],[],[],[269],[258],[264,262],[266,265,262,263,267],[],[277],[286,288,287],[264],[270,262,271],[262],[273,272],[],[],[243,244],[249,303],[278],[257],[280,279,277],[277],[281,282,257],[],[283],[],[247],[286,288],[],[286,285,288],[286,266,265,267],[286,290,291],[286],[129],[293,263],[],[296,295,82],[264,288],[298,297],[],[299,301,300],[],[302,266,265,267],[283],[],[],[],[],[307],[],[149,312],[310],[314,150,55],[149,237],[313],[],[315,239,311,316],[],[238,317],[],[319,420],[320,425],[430,321],[322,435],[442,323],[324,443,444,325],[325,446],[456,326],[327,463],[328,444,464,333],[466,329],[467,330,331,468,51],[470,331],[473,332],[480,333],[334,487],[488,335,489,490,336],[494,336],[337,499],[338,489,339,501,500],[339,505],[340,510],[518,341],[519,512,352,342,175],[350,523,348,352,521,522,343],[524,344,525,352,346],[526,345],[534,352],[542,543,347],[544,352],[349,553,552],[554,352],[556,557,351],[558,352],[353,561],[569,354],[365,570,355,563,175],[365,572,361,573,363,356,574],[365,359,576,575,357],[577,358],[365,585],[360,594,593],[365,595],[362,603,604],[365,605],[608,607,364],[365,609],[366,612],[367,613,614,175],[368,617],[626],[370],[],[179,418],[180,419],[322,318,353,339,325,320,326,352,321,333,340,365,319,336],[179,375],[180],[377,374],[180,375],[376,379],[180,377],[378,382,381],[378],[437,436,323],[380],[383,380,329,385],[327,457,458],[387,384],[327,457,385],[389,386],[387,327,457],[388,391],[180,334,413],[393,390],[180,337,414],[392,396,395],[527],[392],[398,394],[511,513,341],[397,400,401],[578],[397],[403,399],[564,354,562],[402,407,405,406],[],[402],[180,366,417],[409,404,410],[],[404],[180,379],[180,411],[180,412],[180,391],[180,393],[180,415],[180,416],[],[],[422,421,82],[423,374],[424,375],[],[],[426,427,82],[428,376],[429,377],[],[],[432,82,431],[378,433],[379,434],[],[],[438],[411],[436],[439,440,436],[436],[411,441],[],[324],[437,445],[],[],[448,447,82],[380,449],[450,452,382,451],[],[453,454],[],[455,381],[],[],[],[459],[412],[457],[461,460,457],[457],[412,462],[],[328,331,332],[465,458],[],[330],[383,469],[54],[],[471,82,385],[472,384],[],[474,475,82],[476,386],[479,477,478],[],[],[],[387],[482,481,82],[483,388],[486,484,485],[],[],[],[389],[335],[491,492],[],[129],[413,493],[],[],[82,496,495],[497,390],[498,391],[],[],[338],[503,502],[129],[504,414],[],[],[506,507,82],[392,508],[393,509],[],[],[514],[415],[511],[511,512,341],[515,511,516],[511],[415,517],[],[342],[520],[],[343],[348,551],[555,350],[344,345],[541,346],[528],[513],[529,527,530],[527],[532,513,531],[],[533],[],[536,535,82],[394,537],[538,539],[],[],[540,396,395],[],[347],[],[],[545,82,546],[547,397],[548,549],[],[],[398,550],[],[349],[],[],[],[351],[],[],[559,560],[],[],[565],[416],[562],[354,563,562],[567,566,562],[562],[568,416],[],[355],[571],[],[356],[602,361],[363,606],[358,357],[359,592],[579],[564],[578,581,580],[578],[583,582,564],[],[584],[],[586,82,587],[399,588],[590,589],[],[],[591,400,401],[],[360],[],[],[596,597,82],[402,598],[600,599],[],[],[403,601],[],[362],[],[],[],[364],[],[],[611,610],[],[],[368,367],[615,417],[616],[],[],[619,82,618],[620,404],[621,622,623,405],[],[],[624,406],[625,407],[],[],[627,628,82],[408,629],[409,631,630],[],[],[410,632],[],[656,634],[649,635,636,657,51],[658,239,636,55],[638,659,637],[649,638,642,237],[639,661],[640,664],[641,650,665,637,666],[239,55,668,637],[239,670,55],[],[645],[],[651,237],[238,653],[633,636,642],[237],[238],[652],[],[654,655],[],[],[635],[54],[54],[639],[661],[663],[640,661,660],[661],[641],[],[667,660],[],[662,669],[],[54],[],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Method Declaration ","PRIVATE","Void Type ","Simple Name detectCtor ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr desc ","Simple Name desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr ctor ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Block Stmt ","Field Access Expr ","EQUALS","Null Literal Expr ","Simple Name ctor ","NullLiteralExpr","ReturnStmt","Block Stmt ","Name Expr ctor ","Simple Name ctor ","Name Expr ctor ","Name Expr ctor ","Name Expr ctor ","Class Or Interface Type Constructor ","Field Access Expr ","Simple Name getDeclaredConstructors ","Simple Name clazz ","Variable Declaration Expr ","Simple Name jsonCreator ","Name Expr jsonCreator ","Variable Declarator JsonCreator jsonCreator = ","Method Call Expr ","Method Call Expr ","Simple Name getJsonCreator ","Method Call Expr ","Simple Name annotations ","Method Declaration ","Simple Name getAnnotations ","Block Stmt ","Null Literal Expr ","continue;","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Null Literal Expr ","Field Access Expr ","Simple Name staticMethodName ","Simple Name ctor ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name ctor ","Simple Name ctor ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name staticFactory ","Simple Name head ","Variable Declaration Expr ","Simple Name annotations ","Name Expr annotations ","Name Expr annotations ","Name Expr annotations ","Variable Declarator Annotation[][] annotations = ","Array Type 2 ","Method Call Expr ","Simple Name getParameterAnnotations ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Method Call Expr ","Simple Name getParamNames ","Field Access Expr ","Simple Name obj ","Simple Name paramCount ","Method Declaration ","Simple Name length ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Field Access Expr ","Simple Name length ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name paramAnnotations ","Name Expr paramAnnotations ","Name Expr paramAnnotations ","Variable Declarator Annotation[] paramAnnotations = ","Array Type 1 ","Array Access Expr i ","Variable Declaration Expr ","Simple Name jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Variable Declarator JsonProperty jsonProperty = ","Class Or Interface Type JsonProperty ","Method Call Expr ","Simple Name getJsonProperty ","Simple Name annotations ","Method Declaration ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Field Access Expr ","Field Access Expr ","Array Access Expr i ","Simple Name classInfo ","Simple Name lookup ","Method Call Expr ","Simple Name getGenericParameterTypes ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","Method Call Expr ","Simple Name updateBindingWithJsonProperty ","Simple Name binding ","Simple Name jsonProperty ","Method Declaration ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr EQUALS ","Field Access Expr ","Null Literal Expr ","Simple Name name ","Method Call Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Access Expr i ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Variable Declarator int bc = ","Simple Name annotations ","Method Call Expr ","Field Access Expr ","Simple Name add ","Binary Expr EQUALS ","Simple Name parameters ","Simple Name ctor ","PROTECTED","Class Or Interface Type JsonCreator ","Simple Name getJsonCreator ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonCreator.class ","Simple Name annotations ","Simple Name annotationClass ","Method Declaration ","Class Or Interface Type JsonCreator ","Expression Stmt ","Try Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Unary Expr ++ ","Parameter Exception e ","Return Stmt ","Array Type 1 ","Simple Name getParamNames ","Parameter Object obj ","Parameter int paramCount ","Block Stmt ","Class Or Interface Type String ","Name Expr obj ","Name Expr paramCount ","Class Or Interface Type Object ","Primitive Type int ","Variable Declaration Expr ","Simple Name paramNames ","Name Expr paramNames ","Name Expr paramNames ","Name Expr Array ","Name Expr params ","Name Expr i ","Name Expr paramNames ","Variable Declarator String[] paramNames = ","Array Type 1 ","Array Creation Expr String Array Creation Level Not Empty ","Name Expr Arrays ","Array Creation Level Dimension NotEmpty ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name params ","Variable Declarator Object params = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name reflectCall ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Simple Name a ","Field Access Expr ","Simple Name length ","Assign Expr ASSIGN ","Array Access Expr i ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Simple Name reflectCall ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name get ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Class Or Interface Type JsonProperty ","Simple Name getJsonProperty ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonProperty.class ","Class Or Interface Type JsonProperty ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NoSuchMethodException e ","Expression Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NoSuchMethodException e ","Expression Stmt ","Parameter JsonException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name updateBindingWithJsonProperty ","Parameter Binding binding ","Parameter JsonProperty jsonProperty ","Block Stmt ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr binding ","Name Expr defaultValueToOmit ","Name Expr binding ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr decoderCtor ","Name Expr binding ","Name Expr binding ","Name Expr decoderClass ","Name Expr binding ","Name Expr encoderCtor ","Name Expr binding ","Name Expr binding ","Name Expr encoderClass ","Name Expr binding ","Name Expr GenericsHelper ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr TypeLiteral ","Name Expr binding ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Class Or Interface Type Binding ","Class Or Interface Type JsonProperty ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name asMissingWhenNotPresent ","Simple Name required ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name isNullable ","Simple Name nullable ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name isCollectionValueNullable ","Simple Name collectionValueNullable ","Variable Declaration Expr ","Simple Name defaultValueToOmit ","Name Expr defaultValueToOmit ","Variable Declarator String defaultValueToOmit = ","Class Or Interface Type String ","Method Call Expr ","Simple Name defaultValueToOmit ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name isEmpty ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name defaultValueToOmit ","Field Access Expr ","Simple Name parse ","Field Access Expr ","Name Expr OmitValue ","Simple Name length ","Simple Name valueType ","Variable Declaration Expr ","Simple Name altName ","Name Expr altName ","Variable Declarator String altName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name value ","Block Stmt ","Method Call Expr ","Simple Name isEmpty ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Name Expr iter ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Simple Name from ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Continue Stmt ","Simple Name from ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Simple Name to ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Name Expr binding ","Simple Name to ","Variable Declaration Expr ","Simple Name decoderClass ","Name Expr decoderClass ","Name Expr decoderClass ","Variable Declarator Class decoderClass = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name decoder ","Block Stmt ","Class Expr Decoder.class ","Class Or Interface Type Decoder ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name decoderCtor ","Variable Declarator Constructor decoderCtor = ","Class Or Interface Type Constructor ","Method Call Expr ","Simple Name getConstructor ","Class Expr Binding.class ","Class Or Interface Type Binding ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name decoder ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type NoSuchMethodException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name decoder ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Variable Declaration Expr ","Class Or Interface Type JsonProperty ","Name Expr encoderClass ","Name Expr encoderClass ","Variable Declarator Class encoderClass = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name encoder ","Block Stmt ","Class Expr Encoder.class ","Class Or Interface Type Encoder ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name encoderCtor ","Variable Declarator Constructor encoderCtor = ","Class Or Interface Type Constructor ","Method Call Expr ","Simple Name getConstructor ","Class Expr Binding.class ","Class Or Interface Type Binding ","Assign Expr ASSIGN ","Binary Expr LESS ","Cast Expr ","Name Expr multmin ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type NoSuchMethodException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name encoder ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Block Stmt ","Method Call Expr ","Class Expr Object.class ","Simple Name implementation ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name valueType ","Simple Name useImpl ","Field Access Expr ","Method Call Expr ","Simple Name valueType ","Simple Name implementation ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name setDefaultConfig ","Simple Name create ","Field Access Expr ","Simple Name valueType ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Name Expr annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","Null Literal Expr ","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
{"Version":"0.9.22","MethodName":"Config_updateBindingWithJsonProperty","callMethodNameReferTo":{"310":"GenericsHelper.java_GenericsHelper_outer_useImpl","319":"TypeLiteral.java_TypeLiteral_outer_create"},"num":324,"succs":[[1,106],[2,112],[117,3],[4,122],[129,5],[6,130,131,7],[7,133],[143,8],[9,150],[10,151,131,15],[153,11],[154,12,13,156,155],[159,13],[162,14],[169,15],[16,176],[177,17,178,179,18],[184,18],[19,189],[20,178,21,191,190],[21,195],[22,200],[208,23],[210,202,34,209,24],[32,214,30,34,212,213,25],[215,26,216,34,28],[217,27],[225,34],[233,234,29],[235,34],[31,244,243],[245,34],[247,248,33],[249,34],[35,252],[260,36],[47,261,37,254,209],[47,263,43,264,45,38,265],[41,47,267,266,39],[268,40],[47,276],[42,285,284],[47,286],[44,294,295],[47,296],[299,298,46],[47,300],[48,303],[49,304,305,209],[50,308],[317],[55,53,52,57,56,54],[],[54],[],[60,104],[96,105],[4,0,35,21,7,2,8,34,15,3,22,47,1,18],[60,59],[96],[],[62,58],[96,59],[64,61],[96,62],[63,67,66],[63],[124,123,5],[65],[68,65,11,70],[9,144,145],[72,69],[9,144,70],[74,71],[72,9,144],[73,76],[96,16,99],[78,75],[96,19,100],[77,81,80],[218],[77],[83,79],[201,203,23],[82,85,86],[269],[82],[88,84],[255,36,253],[87,92,90,91],[],[87],[96,48,103],[94,89,95],[],[89],[],[96,64],[96,97],[96,98],[96,76],[96,78],[96,101],[96,102],[],[],[109,107,108],[110,58],[],[111,59],[],[],[113,114,108],[115,61],[116,62],[],[],[119,108,118],[63,120],[64,121],[],[],[125],[97],[123],[126,127,123],[123],[97,128],[],[6],[132,124],[],[],[135,134,108],[65,136],[137,139,67,138],[],[140,141],[],[142,66],[],[],[],[146],[98],[144],[148,147,144],[144],[98,149],[],[10,13,14],[152,145],[],[12],[68,157],[],[158],[],[],[160,108,70],[161,69],[],[163,164,108],[165,71],[168,166,167],[],[],[],[72],[171,170,108],[172,73],[175,173,174],[],[],[],[74],[17],[180,181],[],[183],[99,182],[],[],[],[108,186,185],[187,75],[188,76],[],[],[20],[193,192],[183],[194,100],[],[],[196,197,108],[77,198],[78,199],[],[],[204],[101],[201],[201,202,23],[205,201,206],[201],[101,207],[],[24],[],[211],[],[25],[30,242],[246,32],[26,27],[232,28],[219],[203],[220,218,221],[218],[223,203,222],[],[224],[],[227,226,108],[79,228],[229,230],[],[],[231,81,80],[],[29],[],[],[236,108,237],[238,82],[240,239],[],[],[83,241],[],[31],[],[],[],[33],[],[],[250,251],[],[],[256],[102],[253],[36,254,253],[258,257,253],[253],[259,102],[],[37],[262],[],[38],[43,293],[45,297],[40,39],[41,283],[270],[255],[269,272,271],[269],[274,273,255],[],[275],[],[277,108,278],[84,279],[281,280],[],[],[282,85,86],[],[42],[],[],[287,288,108],[87,289],[291,290],[],[],[88,292],[],[44],[],[],[],[46],[],[],[302,301],[],[],[50,49],[306,103],[307],[],[],[310,108,309],[311,89],[312,313,314,90],[],[],[315,91],[316,92],[],[],[318,319,108],[93,320],[94,322,321],[],[],[95,323],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NoSuchMethodException e ","Expression Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NoSuchMethodException e ","Expression Stmt ","Parameter JsonException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","Void Type ","Simple Name updateBindingWithJsonProperty ","Parameter Binding binding ","Parameter JsonProperty jsonProperty ","Block Stmt ","Name Expr binding ","Name Expr jsonProperty ","Simple Name binding ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr binding ","Name Expr defaultValueToOmit ","Name Expr binding ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr altName ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr decoderCtor ","Name Expr binding ","Name Expr binding ","Name Expr decoderClass ","Name Expr binding ","Name Expr encoderCtor ","Name Expr binding ","Name Expr binding ","Name Expr encoderClass ","Name Expr binding ","Name Expr GenericsHelper ","Name Expr binding ","Name Expr jsonProperty ","Name Expr binding ","Name Expr TypeLiteral ","Name Expr binding ","Simple Name jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Name Expr jsonProperty ","Class Or Interface Type Binding ","Class Or Interface Type JsonProperty ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Method Call Expr ","Simple Name asMissingWhenNotPresent ","Simple Name required ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name isNullable ","Simple Name nullable ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name isCollectionValueNullable ","Simple Name collectionValueNullable ","Variable Declaration Expr ","Simple Name defaultValueToOmit ","Name Expr defaultValueToOmit ","Variable Declarator String defaultValueToOmit = ","Class Or Interface Type String ","Method Call Expr ","Simple Name defaultValueToOmit ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name isEmpty ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name defaultValueToOmit ","Field Access Expr ","Simple Name parse ","Field Access Expr ","Name Expr OmitValue ","Simple Name length ","Simple Name valueType ","Variable Declaration Expr ","Simple Name altName ","Name Expr altName ","Variable Declarator String altName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name value ","Block Stmt ","Method Call Expr ","Simple Name isEmpty ","Block Stmt ","Field Access Expr ","EQUALS","Null Literal Expr ","Name Expr iter ","NullLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Simple Name from ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Continue Stmt ","Simple Name from ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Simple Name to ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Name Expr binding ","Simple Name to ","Variable Declaration Expr ","Simple Name decoderClass ","Name Expr decoderClass ","Name Expr decoderClass ","Variable Declarator Class decoderClass = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name decoder ","Block Stmt ","NOT_EQUALS","Class Expr Decoder.class ","Class Or Interface Type Decoder ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name decoderCtor ","Variable Declarator Constructor decoderCtor = ","Class Or Interface Type Constructor ","Method Call Expr ","Simple Name getConstructor ","Class Expr Binding.class ","Class Or Interface Type Binding ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name decoder ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type NoSuchMethodException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name decoder ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Variable Declaration Expr ","Class Or Interface Type JsonProperty ","Name Expr encoderClass ","Name Expr encoderClass ","Variable Declarator Class encoderClass = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name encoder ","Block Stmt ","Class Expr Encoder.class ","Class Or Interface Type Encoder ","Block Stmt ","Catch Clause ","Catch Clause ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name encoderCtor ","Variable Declarator Constructor encoderCtor = ","Class Or Interface Type Constructor ","Method Call Expr ","Simple Name getConstructor ","Class Expr Binding.class ","Class Or Interface Type Binding ","Assign Expr ASSIGN ","Binary Expr LESS ","Cast Expr ","Name Expr multmin ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type NoSuchMethodException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Cast Expr ","Simple Name encoder ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name newInstance ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Block Stmt ","Method Call Expr ","Class Expr Object.class ","Simple Name implementation ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name valueType ","Simple Name useImpl ","Field Access Expr ","Method Call Expr ","Simple Name valueType ","Simple Name implementation ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name setDefaultConfig ","Simple Name create ","Field Access Expr ","Simple Name valueType "]}
{"Version":"0.9.22","MethodName":"Config_createOmitValue","callMethodNameReferTo":{},"num":30,"succs":[[1,14],[2,23],[17,4,3,24,25],[4,18,5,27],[28,5,27],[7,9,6,10,8],[],[8],[],[13,12],[1,4,0],[12],[],[],[19],[16,11],[],[15],[17,15,2],[15,20,21],[15],[16,22,11],[],[3],[],[26],[],[],[29],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Return Stmt ","Method Declaration ","PROTECTED","Class Or Interface Type OmitValue ","Simple Name createOmitValue ","Parameter Type valueType ","Block Stmt ","Name Expr valueType ","Simple Name valueType ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name omitValue ","Name Expr primitiveOmitValues ","Name Expr omitValue ","Name Expr omitValue ","Variable Declarator OmitValue omitValue = ","Class Or Interface Type OmitValue ","Method Call Expr ","Simple Name get ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Object Creation Expr OmitValue.Null Optional.empty Optional.empty ","Class Or Interface Type Null "]}
{"Version":"0.9.22","MethodName":"Config_getJsonWrapper","callMethodNameReferTo":{},"num":61,"succs":[[5,2,3,1,4],[29],[3],[],[8,9],[6],[12,0,11],[8,15],[],[10],[],[],[13,17,7,14],[],[16,18],[],[],[32,31,33,34,30,1,29],[],[42,20],[35,21,22,44,43],[46,17,22,11],[24,47,23],[35,24,28,15],[25,49],[26,52],[27,36,23,54,53],[17,11,23,56],[17,58,11],[],[31],[],[37,15],[16,39],[19,22,28],[15],[16],[38],[],[40,41],[],[],[21],[],[45],[],[45],[25],[49],[51],[26,49,48],[49],[27],[],[55,48],[],[50,57],[],[45],[],[]],"nodeAttribute":["Method Declaration ","PROTECTED","Class Or Interface Type JsonWrapper ","Simple Name getJsonWrapper ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Simple Name annotations ","Array Type 1 ","Class Or Interface Type Annotation ","ReturnStmt","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonWrapper.class ","Simple Name annotations ","Simple Name annotationClass ","Method Declaration ","Class Or Interface Type JsonWrapper ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Name Expr annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
{"Version":"0.9.22","MethodName":"Config_getJsonUnwrapper","callMethodNameReferTo":{},"num":61,"succs":[[2,3,5,1,4],[29],[3],[],[8,9],[6],[12,0,11],[8,15],[],[10],[],[],[7,17,14,13],[],[16,18],[],[],[32,31,33,34,30,1,29],[],[42,20],[35,21,22,44,43],[46,17,22,11],[24,47,23],[35,24,28,15],[25,49],[26,52],[27,36,23,54,53],[17,11,23,56],[17,58,11],[],[31],[],[37,15],[16,39],[19,22,28],[15],[16],[38],[],[40,41],[],[],[21],[],[45],[],[45],[25],[49],[51],[26,49,48],[49],[27],[],[55,48],[],[50,57],[],[45],[],[]],"nodeAttribute":["Method Declaration ","PROTECTED","Class Or Interface Type JsonUnwrapper ","Simple Name getJsonUnwrapper ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Simple Name annotations ","Array Type 1 ","Class Or Interface Type Annotation ","ReturnStmt","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonUnwrapper.class ","Simple Name annotations ","Simple Name annotationClass ","Method Declaration ","Class Or Interface Type JsonUnwrapper ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Name Expr annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
{"Version":"0.9.22","MethodName":"Config_getJsonCreator","callMethodNameReferTo":{},"num":61,"succs":[[4,5,1,2,3],[29],[3],[],[9,8],[6],[12,0,11],[8,15],[],[10],[],[],[17,7,14,13],[],[16,18],[],[],[32,31,33,34,30,1,29],[],[42,20],[35,21,22,44,43],[46,17,22,11],[24,47,23],[35,24,28,15],[25,49],[26,52],[27,36,23,54,53],[17,11,23,56],[17,58,11],[],[31],[],[37,15],[16,39],[19,22,28],[15],[16],[38],[],[40,41],[],[],[21],[],[45],[],[45],[25],[49],[51],[26,49,48],[49],[27],[],[55,48],[],[50,57],[],[45],[],[]],"nodeAttribute":["Method Declaration ","PROTECTED","Class Or Interface Type JsonCreator ","Simple Name getJsonCreator ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Simple Name annotations ","Array Type 1 ","Class Or Interface Type Annotation ","ReturnStmt","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonCreator.class ","Simple Name annotations ","Simple Name annotationClass ","Method Declaration ","Class Or Interface Type JsonCreator ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Name Expr annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
{"Version":"0.9.22","MethodName":"Config_getJsonProperty","callMethodNameReferTo":{},"num":61,"succs":[[2,5,3,1,4],[29],[3],[],[8,9],[6],[12,0,11],[8,15],[],[10],[],[],[13,17,7,14],[],[16,18],[],[],[32,31,33,34,30,1,29],[],[42,20],[35,21,22,44,43],[46,17,22,11],[24,47,23],[35,24,28,15],[25,49],[26,52],[27,36,23,54,53],[17,11,23,56],[17,58,11],[],[31],[],[37,15],[16,39],[19,22,28],[15],[16],[38],[],[40,41],[],[],[21],[],[45],[],[45],[25],[49],[51],[26,49,48],[49],[27],[],[55,48],[],[50,57],[],[45],[],[]],"nodeAttribute":["Method Declaration ","PROTECTED","Class Or Interface Type JsonProperty ","Simple Name getJsonProperty ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Simple Name annotations ","Array Type 1 ","Class Or Interface Type Annotation ","ReturnStmt","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonProperty.class ","Simple Name annotations ","Simple Name annotationClass ","Method Declaration ","Class Or Interface Type JsonProperty ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Name Expr annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
{"Version":"0.9.22","MethodName":"Config_getJsonIgnore","callMethodNameReferTo":{},"num":61,"succs":[[5,4,2,3,1],[29],[3],[],[8,9],[6],[0,11,12],[8,15],[],[10],[],[],[17,7,14,13],[],[16,18],[],[],[32,31,33,34,30,1,29],[],[42,20],[35,21,22,44,43],[46,17,22,11],[24,47,23],[35,24,28,15],[25,49],[26,52],[27,36,23,54,53],[17,11,23,56],[17,58,11],[],[31],[],[37,15],[16,39],[19,22,28],[15],[16],[38],[],[40,41],[],[],[21],[],[45],[],[45],[25],[49],[51],[26,49,48],[49],[27],[],[55,48],[],[50,57],[],[45],[],[]],"nodeAttribute":["Method Declaration ","PROTECTED","Class Or Interface Type JsonIgnore ","Simple Name getJsonIgnore ","Parameter Annotation[] annotations ","Block Stmt ","Return Stmt ","Name Expr annotations ","Simple Name annotations ","Array Type 1 ","Class Or Interface Type Annotation ","ReturnStmt","Method Call Expr ","Simple Name getAnnotation ","Class Expr JsonIgnore.class ","Simple Name annotations ","Simple Name annotationClass ","Method Declaration ","Class Or Interface Type JsonIgnore ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Name Expr annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
{"Version":"0.9.22","MethodName":"Config_getAnnotation","callMethodNameReferTo":{},"num":47,"succs":[[27,1],[18,2,3,29,28],[32,10,3,31],[5,33,4],[18,5,9,19],[6,35],[7,38],[8,20,39,4,40],[10,31,4,42],[10,44,31],[15,14,16,17,13,11,12],[12],[],[14],[],[22,19],[21,24],[0,3,9],[19],[],[21],[],[23],[],[25,26],[],[],[2],[],[30],[],[],[30],[6],[35],[37],[7,35,34],[35],[8],[],[41,34],[],[36,43],[],[30],[],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Method Declaration ","PROTECTED","STATIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Annotation[] annotations ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotations ","Simple Name annotations ","Name Expr annotationClass ","Simple Name annotationClass ","Array Type 1 ","Class Or Interface Type Annotation ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
