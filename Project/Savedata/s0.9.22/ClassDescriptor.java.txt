{"fileName":"ClassDescriptor.java","Version":"0.9.22","callMethodName":["getDecodingClassDescriptor","getEncodingClassDescriptor","decodingDeduplicate","deduplicateByFromName","encodingDeduplicate","getCtor","getFields","createBindingFromField","getAllFields","getSetters","getAllMethods","translateSetterName","getGetters","collectTypeVariableLookup","allBindings","allDecoderBindings","allEncoderBindings","encodeTos","collectEncodeTo"]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_getDecodingClassDescriptor","callMethodNameReferTo":{"327":"JsoniterSpi.java_JsoniterSpi_outer_addNewDecoder","14":"JsoniterSpi.java_JsoniterSpi_outer_getExtensions"},"num":1417,"succs":[[78,1],[2,86],[99,3],[4,125],[5,129],[6,132],[7,135],[142,8],[151,9],[156,10],[11,165],[12,170],[13,175],[14,180,15],[17,185,15,184],[16,182],[14,186],[19,188,18],[19,112,196,28],[20,190],[197,21],[198,27,22,199,200],[203,23],[24,212],[25,213,205,27],[26,214],[219],[18,220],[29,231],[235,30],[41,72,31,73],[32,236],[33,34,237,239,238],[34,243],[251,35],[253,36,252,238,37],[257,37],[38,264,39],[41,118,268,39],[266,40],[269,38],[43,274,42],[288,119,287,43,56],[44,276],[45,289],[290,47,225,46,291],[293,47],[302,48],[74,50,303,304,49],[50,308],[313,51],[314,53,75,52,304],[53,318],[323,54],[324,325,42,55,238],[42,327],[120,57,334],[62,58,64,63,61,60,59],[59],[],[61],[],[76,66],[77,72],[41,5,29,11,12,2,6,4,56,10,28,1,17,0,13,8,7,9,3],[66],[],[66,65],[67,66],[148,68,66],[162,66,69],[72,149],[],[163,72,71],[72,30],[72,74],[],[],[82],[65],[79],[79,140,80],[79,83,84],[79],[85,65],[],[91],[67],[87],[147,87,88],[89,161,87],[92,87,93],[87],[95,94,97],[],[67,98,96],[],[364,362,361,363,365,59],[],[121],[68,101],[],[100,80],[102,88],[81,103],[89,71,104,69],[105],[70,90,106,73],[107],[108],[109],[110],[111,110],[233,112,110],[113,110],[32,114,110],[115,110],[116,110,35],[117,110],[118,110],[119,110],[122,123,101],[101],[124],[],[126,68,127],[100,128],[],[],[80,127,130],[102,131],[],[88,133,127],[103,134],[],[137,136,127],[138,104],[81,141,139],[],[],[],[497,361,496,499,498,59],[144,127,143],[145,105],[89,146,150,71,69],[],[],[],[],[],[586,587,588,361,584,583,585,59],[152,153,127],[154,106],[155],[],[],[157,158,127],[107,159],[70,90,164,160,73],[],[],[],[],[],[799,801,361,798,796,797,800,59],[127,166,167],[168,108],[169],[],[],[172,171,127],[173,109],[174],[],[],[177,176,127],[110,178],[179],[],[],[16],[182],[183],[182],[],[],[111,181,187],[],[20,27],[190],[195],[189,21,190],[191,21,190],[194,192],[192],[190],[],[22,23],[202,189],[201,481,394],[],[],[],[206],[191],[204],[204,207,208],[204],[209,210],[],[191,211],[],[25,26],[],[215,127,216],[217,192],[218],[],[],[],[222,127,221],[193,223],[225,226,224],[],[228,227],[],[230],[194,229],[],[],[],[234,113,232],[],[],[951,950,361,953,952,59],[34,31,37],[33],[241,240],[],[230],[114,242],[],[],[244,245,246],[248,247],[],[250],[115,249],[],[],[],[36],[255,254],[230],[116,256],[],[],[258,259,260],[262,261],[],[250],[263,117],[],[],[40],[266],[267],[266],[],[270,271,272],[273,265],[],[250],[],[53,50,44,47],[276],[286],[45,276,278],[45,275,276],[277],[279,277,48],[277,280],[281,277,51],[282,277],[277,283,54],[277,54,284],[276],[],[1086,58,1085,1087],[46],[292,275],[230],[],[294,127,295],[277,296],[298,297,299],[],[],[],[300],[301,278],[],[49],[306,305,238],[],[307,279],[230],[],[310,309,311],[312,280],[],[250],[],[52],[315,316,238],[281,317],[230],[],[321,319,320],[322,282],[],[250],[],[55],[326,283],[230],[],[328,331,330,329],[],[],[332,284],[285,333],[],[],[],[377,336],[390,337],[339,369,225,338,391],[339,378,97,334],[392,340],[341,352,393,199,370],[395,342],[343,403],[410,344],[345,346,422,349],[346,428],[347,350,432,433,423],[348,438],[446,349],[346,425,437],[458,351],[97,352,382,334],[353,464],[357,354,465,199,372],[355,466],[473,356],[357,97,384,334],[479,358],[374,480,359,360,199],[385,360,97,334],[482],[59],[363,366,368,367],[],[376,96],[339,357,360,352,336,335],[],[],[],[96],[369,96],[96,340,370],[371,96],[353,96,372],[96,373],[374,96],[],[386],[379],[],[378,379],[380,379],[381,379],[379,382],[379,383],[379,384],[387,388,379],[379],[389],[],[338],[230],[341,343,344,350,342,351],[],[],[399],[371],[396],[397,396],[401,400,396],[396],[371,402],[],[406],[397],[404],[407,404,408],[404],[397,409],[],[416],[398],[414,411],[412,411],[413,411],[414,411],[417,418,411],[411],[419,420],[],[398,421],[],[348,347],[424,427],[],[424,423],[424,425],[424,426],[424,430,429],[424],[431],[],[],[434,435],[412,436],[],[],[],[441],[413,426],[439],[442,443,439],[439],[444,426],[445,413],[],[449,447,380,448],[],[450,452,451],[405,427],[453,454,451],[],[457,414],[455,440],[456],[],[],[],[381,459,460],[],[462,461,97],[],[463,415,96],[],[355,356,354],[],[469],[373],[467],[471,470,467],[467],[472,373],[],[474,475,383],[],[477,97,476],[],[478,468,96],[],[359],[],[],[484,483],[],[375,485,451],[456],[487,504],[516,488],[489,517,518,500,491],[519,490],[508,141,334,491],[493,524,525,495,492],[526,495],[494,533,532],[534,495],[141,511,334],[497],[],[140,503],[487,495,486,491],[140],[140,488,500],[501,140],[],[512],[501,506,507],[488],[],[505],[508,502,505],[509],[510],[514,513,507],[507],[515],[],[489,490],[],[],[521,520,127],[522,505],[523,501,506],[],[],[492],[493,531],[528,127,527],[509,529],[502,530],[],[],[494],[],[],[536,535,127],[537,510],[230],[],[602,539],[610,540,541],[622,594,623,626,582,541],[612,542],[628,543],[629,545,544,630,631],[219],[546,633],[642,547],[644,643,432,549,548],[219],[647,550],[648,649,551,552],[219],[652,553],[660,554],[555,662,661,238,556],[219],[664,557],[665,666,304,558,559],[219],[560,676],[562,561,149,595],[562,677],[578,680,682,681,563,580,540],[564,683],[694,565],[702,566,703,567,568],[704,574,568],[710,574,711,568],[569,712],[726,570,572],[728,571,304,572,727],[574,733],[573],[740,574],[747,575],[576,750],[577,753],[758,540],[762,579,761],[540,763],[581,766,765],[767,540],[605,150,334],[590,589,584],[],[596,147],[148,600],[601,149],[539,538,582],[],[],[147],[148],[592,148],[625,149],[594,149],[599,597,598],[],[],[],[],[],[606],[604],[],[604,603],[604,607,608],[604],[609],[],[545,562,549,546,542,553,559,552,556],[612],[621],[611,612],[612,613],[612,614],[612,615],[612,616],[612,617],[618,612],[612,619],[612],[],[592,627,624],[],[],[1134,1136,361,1138,1137,1135,59],[],[544],[],[],[611,632],[],[638],[613],[634],[634,635],[636,634,692],[639,634,640],[634],[641,613],[],[548],[645,635],[646],[],[],[551],[636,650,651],[],[],[456],[656],[614],[653],[654,653],[658,657,653],[653],[659,614],[],[555],[654,663],[646],[],[558],[649,595],[667,649],[669,670,668],[],[],[672,671],[674,673],[],[615,675],[431],[],[561],[616,678,679],[],[250],[564,576,563,569,577,574,565,575,568],[578,760],[580,764],[688],[637],[684],[685,684],[686,684],[689,690,684],[684],[693,691,637],[],[],[1190,361,1189,1192,1191,59],[699],[685,617,696],[],[695],[695,697],[700,696,701],[696],[230],[566],[709,567],[695,705,127],[706,685,707],[617,708],[],[],[],[],[],[720],[593,655,591],[713],[714,713,686],[687,715],[618,716],[619,717],[718],[721,713,722],[713],[593,724,723,591],[],[725,655],[431],[571],[697,729,238],[731,730],[230],[],[732,698],[],[734,127,735],[714,736],[737,738],[],[],[],[431],[741,127,742],[743,715],[746,745,744],[],[],[],[686],[748,687,127],[749,716],[],[618,751,127],[752,717],[],[755,754,127],[756,718],[757,619],[],[],[759,603,719],[],[579],[],[],[],[581],[],[],[768,770,769],[],[451,771,620],[],[456],[815,773],[774,775,823],[835,832,775,833,795],[825,776],[837,777],[838,778,840,839,779],[219],[842,780],[163,782,781],[782,843],[846,783],[784,848,847,785],[219],[786,850],[787,865],[790,304,867,866,788],[789,873],[790,880],[791,887],[889,888,794,304,792],[897,793],[794,904],[774,911],[818,164,334],[803,802,797],[],[161,809],[162,813],[163,814],[773,795,772],[],[],[161,861],[162],[162,862,805],[163,780],[163,807],[810,812,811],[],[],[],[],[],[819],[817],[],[817,816],[821,820,817],[817],[822],[],[786,790,782,785,776,794,779],[825],[831],[825,824],[825,826],[825,827,863],[825,828],[829,825],[825],[],[836,834,805],[],[1242,361,1243,1241,1240,59],[],[778],[],[],[841,824],[],[781],[844,826,845],[],[250],[784],[],[827,849],[],[857],[806,828,804],[851],[852],[853],[854],[855],[859,858,851],[851],[806,828,864,860,804],[],[],[],[],[361,1292,1291,1289,1288,1293,1290,59],[789,788],[807,649],[649,868],[869,870,871],[],[],[829,872],[],[874,875,127],[852,876],[877,878],[],[],[],[431],[882,881,127],[853,883],[884,885],[],[],[],[431],[793,792],[649,808],[649,890],[892,893,891],[],[],[894,895],[896,830],[],[],[899,127,898],[900,854],[901,902],[],[],[],[431],[906,127,905],[907,855],[908,909],[],[],[],[431],[856,816,912],[],[914,959],[915,970],[978,916,917],[954,917,985,926],[980,918],[920,919,986],[920,992,979,925],[921,988],[922,993],[987,960,994,923,924],[995,924],[999,919],[1001,916],[1005,927],[1014,928],[930,1017,929],[930,939,1007,1006],[1019,931],[932,1023],[1025,1024,934,933,225],[219],[1029,935],[1039,936],[937,1040,938,1031,238],[938,1041],[1048,929],[940,941,1053],[941,946,1057,956],[942,1055],[1058,944,943],[940,1054,1062,944],[945,1060],[943,1063],[1065,947,948],[1069,948,1070],[1067,949],[947,1072],[951],[],[233,958],[939,915,914,946,913,927,928,926],[233],[954,233],[233,955],[233,956],[],[966],[961],[],[960,961],[1050,962,961],[1050,963,961],[1050,964,961],[967,968,961],[961],[969],[],[974],[972],[],[971,972],[975,976,972],[972],[977],[],[925,918],[980],[984],[980,979],[981,980],[980,982],[980],[],[921,924],[988],[991],[987,922,988],[989,988],[988],[],[923],[],[996,997],[],[989,451,998],[456],[990,981,962,1000],[],[1002,971,983,1003],[],[1004,982],[],[1008],[955],[1006],[1009,1010,1006],[1006],[1011,1012],[],[955,1013],[],[1016,1007,1015],[],[],[938,934,931,935],[1019],[1022],[1019,1018],[1019,1051,1020],[1019],[933],[1027,1026],[431],[1018,1028],[],[],[1033],[1020,973],[1030],[1031,936,1030],[1034,1035,1030],[1030],[1037,1036,973],[],[1038,1020],[],[937],[230],[1043,1042,127],[1032,1044],[1045,1046],[],[],[],[431],[963,1052,1021,1049],[],[],[],[1381,1380,361,1382,1378,1379,59],[942],[1055],[1056],[1055],[],[945],[1051,1060],[1061],[1060],[],[1064,1059,1052,964],[],[949],[1067,1051],[1068],[1067],[1071,957],[],[],[965,1052,1073,1066],[],[1075,1090],[1102,1076],[1077,1105],[1108,1078],[1080,1079,1111,1110,238],[1080,1112],[1081,1116,1082],[1084,1082],[1083,1118],[1081,1120],[288,1096,334],[1088,1086,1089],[],[1074,1084,1075,1076,1077,1080],[],[],[1097],[1092],[],[1092,1091],[1093,1092],[1094,1092],[1095,1092],[1098,1099,1092],[1092],[1100,1101],[],[646],[1103,1091,1104],[],[],[1106,1093,1107],[],[],[1079],[1078],[],[230],[1094,1114,1113],[],[1115,1109],[],[1083],[1118],[1119],[1118],[1121,1122,1095],[],[1123,1117],[],[1125,1145],[1157,1126],[625,1127,1133],[1158,1128],[1161,1129],[1169,1130],[1131,1133,1163,1170,238],[1171,1132],[1129,1178],[1150,626,334],[1139,1140,1135],[],[624,1143],[625,1144],[1125,1133,1124],[],[],[624],[624,1141],[],[],[1151],[1147,1141],[],[1146],[1148],[1149,1148],[1146,1153,1152],[1146],[1147,1154,1155],[],[1156,1141],[],[1127,1129,1128],[1148,1159,127],[1160],[],[1167],[1142],[1162,1165],[1162,1165,1163],[1162,1166],[1162,1165,1164],[1168,1162,1142],[1162],[1131,1132],[230],[1149,1172,1173],[],[1174,1176,1175],[],[],[1177,1164],[],[1179,1165,127],[1180,1166],[],[1182,1196],[1197,1184,649,1183],[693,1200,1184,334],[1201,1185],[1214,1186],[1187,1223],[1230,1188],[693,1206,334],[1190],[],[1195,692],[1187,1184,1186,1181,1188,1185],[692],[1193,692],[],[1183],[1198,1193,1199],[],[456],[230],[1207],[1194],[1202],[1205,1202,1203],[1216],[1204],[1209,1202,1208],[1202],[1210,1194,1211],[],[1212,1213],[456],[],[1219],[1203],[1215,1218,1217],[],[1215],[1221,1220,1215],[1215],[1222,1203],[],[1224,127,1225],[1226,1216],[1228,1227,1217],[431],[],[1218,1229],[431],[1204,1231,127],[1205,1232],[],[1248,1234],[1256,1235],[1236,1264],[1258,1237,1239,1265,238],[1266,1238],[1273,1235],[835,1251,334],[1244,1245,1241],[],[1247,834],[1233,1239,1234,1235],[],[],[834],[],[1252],[1250],[],[1249,1250],[1250,1253,1254],[1250],[1255],[],[1262],[1246],[1257,1260],[1258,1257,1260],[1257,1261],[1257,1259,1260],[1257,1246,1263],[1257],[1237,1238],[230],[1249,1268,1267],[],[1270,1269,1271],[],[],[1272,1259],[],[1274,127,1260],[1261,1275],[],[1310,1309,1284,1277,1286,1311],[1312,1278],[1279,1326],[1335,1280],[1344,1281],[1349,1282],[1283,1354],[1319,864,334],[1285,1358,1359],[1360],[1362,1287,1363],[1364],[1289],[],[861,1303],[862,1307],[863,1308],[1276],[861],[862],[863],[1296,863],[863,1297],[863,1298],[1299,863],[1300,863],[1301,863],[1306,1305,1304],[],[],[],[],[],[1279,1278,1277,1283,1281,1280,1282],[1284,1357],[1361,1286],[1320],[1295,1296,1294],[1313,1297],[1314,1298],[1299,1315],[1300,1316],[1301,1317],[1318],[1313,1321,1322],[1313],[1295,1323,1324,1294],[],[1325,1296],[],[1328,1327,127],[1314,1329],[1330,1331,1332],[],[],[],[1333],[1297,1334],[],[1337,1336,127],[1338,1315],[1341,1339,1340],[],[],[],[1342],[1343,1298],[],[1346,1345,127],[1347,1316],[1299,1348],[],[],[1351,1350,127],[1352,1317],[1353,1300],[],[],[1301,1355,127],[1356,1318],[],[1285],[],[],[],[1287],[],[],[1365,1366,1367],[],[1302,1368,451],[],[456],[1392,1370,1371],[1397,1385,1371],[1372,1394],[1373,1398],[1374,1406],[1377,1375,1400,1407,225],[1376,1408],[219],[1410,1370],[1379],[],[1050,1387],[1391,1051],[1369],[1050],[1050,1383],[1051],[1051,1385],[1389,1390,1388],[],[],[],[],[1373,1377,1372],[1394],[1396],[1393,1394],[1394],[],[1402],[1383,1393],[1399],[1400,1399],[1404,1403,1399],[1399],[1383,1393,1405],[],[1375,1376],[230],[1395,1386,1384,1409],[],[1411,1412,127],[1413,1401],[1415,1414],[],[],[],[431]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Instance Of Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Continue Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Name Expr JsonIteratorPool ","For Each Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Binary Expr PLUS ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","For Each Stmt ","Assign Expr ASSIGN ","Expression Stmt ","Array Access Expr count++ ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type ClassDescriptor ","Simple Name getDecodingClassDescriptor ","Parameter ClassInfo classInfo ","Parameter boolean includingPrivate ","Block Stmt ","Name Expr classInfo ","Simple Name classInfo ","Name Expr classInfo ","Simple Name nextToken ","Name Expr classInfo ","Name Expr classInfo ","Name Expr includingPrivate ","Simple Name includingPrivate ","Name Expr includingPrivate ","Name Expr includingPrivate ","Name Expr includingPrivate ","Class Or Interface Type ClassInfo ","Primitive Type boolean ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Field Access Expr ","Simple Name clazz ","Variable Declaration Expr ","Simple Name newVal ","Name Expr lookup ","Name Expr lookup ","Name Expr lookup ","Variable Declarator Map<String, Type> lookup = ","Class Or Interface Type Map ","Method Call Expr ","Simple Name collectTypeVariableLookup ","Field Access Expr ","Simple Name type ","Method Declaration ","Simple Name type ","Variable Declaration Expr ","Name Expr desc ","Simple Name desc ","Name Expr desc ","Name Expr iter ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Name Expr type ","Primitive Type byte ","Class Or Interface Type java ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Name Expr args ","Simple Name next ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Variable Declarator ClassDescriptor desc = ","Class Or Interface Type ClassDescriptor ","Object Creation Expr ClassDescriptor Optional.empty Optional.empty ","Class Or Interface Type ClassDescriptor ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name classInfo ","Expression Stmt ","Field Access Expr ","Simple Name clazz ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name lookup ","Field Access Expr ","Simple Name fillCache ","Method Call Expr ","Simple Name ctor ","Simple Name getCtor ","Simple Name clazz ","Method Declaration ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name setters ","Parameter Object obj ","Simple Name lookup ","Simple Name classInfo ","Simple Name includingPrivate ","Method Declaration ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Simple Name example ","Class Or Interface Type ArrayList ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name fields ","Simple Name getFields ","Simple Name lookup ","Simple Name classInfo ","Simple Name includingPrivate ","Method Declaration ","Method Call Expr ","Expression Stmt ","Object Creation Expr ArrayList<WrapperDescriptor> Optional.empty Optional.empty ","Variable Declaration Expr ","Class Or Interface Type ArrayList ","Assign Expr ASSIGN ","Method Call Expr ","Object Creation Expr ArrayList<Method> Optional.empty Optional.empty ","Simple Name keyValueTypeWrappers ","Class Or Interface Type ArrayList ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr ArrayList<UnwrapperDescriptor> Optional.empty Optional.empty ","Simple Name unwrappers ","Class Or Interface Type ArrayList ","Block Stmt ","Marker Annotation Expr @Override ","Name Expr classInfo ","Class Or Interface Type Extension ","Parameter int minimal ","Simple Name getExtensions ","Method Call Expr ","Simple Name updateClassDescriptor ","Block Stmt ","Primitive Type float ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Binding ","Simple Name fields ","Block Stmt ","Field Access Expr ","InstanceOfExpr","Class Or Interface Type Class ","Class","Simple Name valueType ","Variable Declaration Expr ","Simple Name valueClazz ","Parameter Object obj ","Variable Declarator Class valueClazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Field Access Expr ","Simple Name valueType ","Block Stmt ","Simple Name isArray ","Assign Expr ASSIGN ","Field Access Expr ","Boolean Literal Expr false ","Simple Name valueCanReuse ","false","continue;","Assign Expr ASSIGN ","Expression Stmt ","Binary Expr EQUALS ","Simple Name valueCanReuse ","Field Access Expr ","EQUALS","Class Or Interface Type java ","Field Access Expr ","Simple Name nativeType ","Simple Name valueTypeLiteral ","NullLiteralExpr","Method Call Expr ","Simple Name decodingDeduplicate ","Simple Name desc ","Method Declaration ","Block Stmt ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Null Literal Expr ","Field Access Expr ","Simple Name ZERO ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name setAccessible ","Boolean Literal Expr true ","Field Access Expr ","Simple Name ctor ","Simple Name ctor ","true","Block Stmt ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name staticFactory ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name setAccessible ","Boolean Literal Expr true ","Field Access Expr ","Simple Name staticFactory ","Simple Name iter ","Block Stmt ","Simple Name append ","Simple Name setter ","Class Or Interface Type WrapperDescriptor ","Simple Name bindingTypeWrappers ","Method Call Expr ","Field Access Expr ","Simple Name setAccessible ","Boolean Literal Expr true ","Simple Name method ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Simple Name encoder ","Name Expr binding ","Name Expr binding ","Simple Name writeTo ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Simple Name allDecoderBindings ","Method Declaration ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Expression Stmt ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Primitive Type double ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Block Stmt ","Binary Expr NOT_EQUALS ","AND","Field Access Expr ","Name Expr desc ","Name Expr Array ","Method Call Expr ","Field Access Expr ","Simple Name setAccessible ","Boolean Literal Expr true ","Simple Name field ","Block Stmt ","Binary Expr NOT_EQUALS ","Field Access Expr ","Null Literal Expr ","Break Stmt ","Method Call Expr ","Field Access Expr ","Simple Name setAccessible ","Boolean Literal Expr true ","Simple Name method ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name decoder ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewDecoder ","Method Call Expr ","Field Access Expr ","Simple Name decoderCacheKey ","Simple Name decoder ","ReturnStmt","Expression Stmt ","If Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Throw Stmt ","PRIVATE","Class Or Interface Type Map ","Simple Name collectTypeVariableLookup ","Parameter Type type ","Block Stmt ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Class Or Interface Type Type ","Variable Declaration Expr ","Name Expr vars ","Simple Name vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Variable Declarator HashMap<String, Type> vars = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Type> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Null Literal Expr ","Block Stmt ","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Name Expr pType ","Name Expr pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Variable Declaration Expr ","Simple Name actualTypeArguments ","Name Expr actualTypeArguments ","Variable Declarator Type[] actualTypeArguments = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name getActualTypeArguments ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getRawType ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Field Access Expr ","Method Call Expr ","Simple Name length ","Simple Name getTypeParameters ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name variable ","Name Expr variable ","Variable Declarator TypeVariable variable = ","Class Or Interface Type TypeVariable ","Array Access Expr i ","Method Call Expr ","Simple Name getTypeParameters ","Method Call Expr ","Simple Name put ","Binary Expr PLUS ","Array Access Expr i ","Binary Expr PLUS ","PLUS","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name getName ","StringLiteralExpr","Simple Name getCanonicalName ","Method Call Expr ","Simple Name putAll ","Method Call Expr ","Simple Name collectTypeVariableLookup ","Method Call Expr ","Simple Name getGenericSuperclass ","Block Stmt ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name putAll ","Method Call Expr ","Simple Name collectTypeVariableLookup ","Method Call Expr ","Simple Name getGenericSuperclass ","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Expression Stmt ","Parameter Exception e ","Expression Stmt ","Return Stmt ","Class Or Interface Type ConstructorDescriptor ","Simple Name getCtor ","Parameter Class clazz ","Block Stmt ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Variable Declaration Expr ","Name Expr cctor ","Name Expr packageName ","Simple Name cctor ","Simple Name write ","Name Expr cctor ","Name Expr cctor ","Name Expr cctor ","Variable Declarator ConstructorDescriptor cctor = ","Class Or Interface Type ConstructorDescriptor ","Object Creation Expr ConstructorDescriptor Optional.empty Optional.empty ","Class Or Interface Type ConstructorDescriptor ","Block Stmt ","Method Call Expr ","Simple Name canCreate ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name objectFactory ","Simple Name getObjectFactory ","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Array Access Expr pos++ ","Method Call Expr ","Simple Name ctor ","Simple Name getDeclaredConstructor ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","Name Expr iter ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Marker Annotation Expr @Override ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Continue Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Continue Stmt ","If Stmt ","Binary Expr AND ","Continue Stmt ","If Stmt ","Name Expr includingPrivate ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter NoSuchFieldException e ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter JsonException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name getSetters ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter boolean includingPrivate ","Block Stmt ","Simple Name List ","Class Or Interface Type Binding ","Name Expr lookup ","Name Expr classInfo ","Name Expr classInfo ","Name Expr includingPrivate ","Name Expr includingPrivate ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Primitive Type boolean ","Variable Declaration Expr ","Name Expr setters ","Simple Name setters ","Name Expr setters ","Variable Declarator ArrayList<Binding> setters = ","Expression Stmt ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr method ","Simple Name method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Class Or Interface Type Method ","Simple Name getAllMethods ","Field Access Expr ","Simple Name clazz ","Simple Name includingPrivate ","Method Declaration ","Simple Name clazz ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","Variable Declaration Expr ","Simple Name methodName ","Simple Name hasBinding ","Name Expr methodName ","Name Expr methodName ","Variable Declarator String methodName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getName ","Block Stmt ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name startsWith ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name paramTypes ","Name Expr paramTypes ","Name Expr paramTypes ","Variable Declarator Type[] paramTypes = ","Array Type 1 ","Method Call Expr ","Simple Name getGenericParameterTypes ","Block Stmt ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","Block Stmt ","Unary Expr ! ","Unary Expr ! ","Method Call Expr ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Array Access Expr 0 ","Simple Name getModifiers ","Method Call Expr ","Integer Literal Expr Zero  ","Simple Name getParameterTypes ","Block Stmt ","Method Call Expr ","Simple Name setAccessible ","Boolean Literal Expr true ","Block Stmt ","Catch Clause ","Catch Clause ","Variable Declaration Expr ","Simple Name fromName ","Name Expr fromName ","Name Expr fromName ","Name Expr fromName ","Variable Declarator String fromName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name translateSetterName ","Simple Name methodName ","Method Declaration ","Variable Declaration Expr ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Variable Declarator Field field = ","Class Or Interface Type Field ","Null Literal Expr ","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Method Call Expr ","Method Call Expr ","Simple Name getDeclaredField ","Simple Name getDeclaringClass ","Block Stmt ","Class Or Interface Type NoSuchFieldException ","Simple Name e ","Variable Declaration Expr ","Simple Name setter ","Name Expr setter ","Name Expr setter ","Name Expr setter ","Name Expr setter ","Name Expr setter ","Name Expr setter ","Variable Declarator Binding setter = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Block Stmt ","Binary Expr NOT_EQUALS ","Method Call Expr ","Null Literal Expr ","Simple Name isTransient ","Method Call Expr ","Simple Name getModifiers ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Parameter float val ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name method ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name annotations ","Simple Name getAnnotations ","Method Call Expr ","Simple Name add ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Name Expr e ","String Literal Expr Not Empty  ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Continue Stmt ","If Stmt ","Name Expr includingPrivate ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Name Expr StreamImplNumber ","Class Or Interface Type List ","Simple Name getFields ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter boolean includingPrivate ","Block Stmt ","Simple Name part ","Class Or Interface Type Binding ","Name Expr lookup ","Name Expr classInfo ","Name Expr classInfo ","Name Expr includingPrivate ","Name Expr includingPrivate ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Primitive Type boolean ","Variable Declaration Expr ","Name Expr bindings ","Simple Name bindings ","Name Expr bindings ","Variable Declarator ArrayList<Binding> bindings = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Field ","Simple Name getAllFields ","Field Access Expr ","Simple Name clazz ","Method Declaration ","Simple Name clazz ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","Block Stmt ","Method Call Expr ","Simple Name setAccessible ","Char Literal Expr '\\\\' ","Block Stmt ","Simple Name isTransient ","Method Call Expr ","Simple Name getModifiers ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name createBindingFromField ","Simple Name lookup ","Simple Name classInfo ","Simple Name field ","Method Declaration ","Block Stmt ","Unary Expr ! ","Unary Expr ! ","Method Call Expr ","Method Call Expr ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Unary Expr ! ","Unary Expr ! ","Method Call Expr ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Method Call Expr ","Simple Name getModifiers ","Simple Name getType ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name add ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Throw Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr iteratingSetters ","Variable Declaration Expr ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","This Expr ","Simple Name decodingDeduplicate ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr desc ","Name Expr desc ","Integer Literal Expr Note Zero  ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Name Expr byFromName ","Simple Name byFromName ","Name Expr byFromName ","Name Expr byFromName ","Name Expr byFromName ","Name Expr byFromName ","Variable Declarator HashMap<String, Binding> byFromName = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Binding> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Name Expr byFieldName ","Simple Name byFieldName ","Name Expr byFieldName ","Variable Declarator HashMap<String, Binding> byFieldName = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Binding> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Binding ","Simple Name fields ","Block Stmt ","Name Expr fromName ","Simple Name fromName ","Name Expr fromName ","Name Expr fromName ","Class Or Interface Type String ","Simple Name fromNames ","Block Stmt ","Simple Name containsKey ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name put ","Field Access Expr ","Boolean Literal Expr true ","Variable Declaration Expr ","Simple Name iteratingSetters ","Name Expr iteratingSetters ","Variable Declarator ArrayList<Binding> iteratingSetters = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Field Access Expr ","Simple Name setters ","Method Call Expr ","Method Call Expr ","Simple Name reverse ","Block Stmt ","Name Expr setter ","Simple Name setter ","Name Expr setter ","Name Expr setter ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name method ","Simple Name fromNames ","Variable Declaration Expr ","Simple Name existing ","Name Expr existing ","Name Expr existing ","Variable Declarator Binding existing = ","Return Stmt ","Method Call Expr ","Simple Name get ","Field Access Expr ","Simple Name name ","Block Stmt ","Name Expr eLen ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Simple Name deduplicateByFromName ","Simple Name byFromName ","Simple Name setter ","Method Declaration ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type WrapperDescriptor ","Simple Name bindingTypeWrappers ","Block Stmt ","Name Expr param ","Simple Name param ","Class Or Interface Type Binding ","Simple Name parameters ","Method Call Expr ","Simple Name deduplicateByFromName ","Block Stmt ","Name Expr param ","Simple Name param ","Class Or Interface Type Binding ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Expression Stmt ","Simple Name deduplicateByFromName ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","For Each Stmt ","Name Expr bindingTypeWrappers ","Variable Declaration Expr ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name allDecoderBindings ","Block Stmt ","Simple Name List ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr bindings ","Simple Name bindings ","Name Expr bindings ","Name Expr bindings ","Name Expr bindings ","Name Expr bindings ","Variable Declarator ArrayList<Binding> bindings = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name addAll ","Name Expr fields ","Method Call Expr ","Simple Name addAll ","Name Expr setters ","Block Stmt ","Name Expr ctor ","Name Expr ctor ","Null Literal Expr ","Method Call Expr ","Simple Name addAll ","Field Access Expr ","Simple Name parameters ","Block Stmt ","Name Expr setter ","Simple Name setter ","Class Or Interface Type WrapperDescriptor ","Method Call Expr ","Simple Name addAll ","Field Access Expr ","Simple Name parameters ","Expression Stmt ","If Stmt ","Name Expr includingPrivate ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name getAllMethods ","Parameter Class clazz ","Parameter boolean includingPrivate ","Block Stmt ","Null Literal Expr ","Class Or Interface Type Method ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Primitive Type boolean ","Variable Declaration Expr ","Simple Name allMethods ","Name Expr Arrays ","Name Expr allMethods ","Name Expr allMethods ","Name Expr allMethods ","Variable Declarator List<Method> allMethods = ","Class Or Interface Type List ","Method Call Expr ","Simple Name asList ","Method Call Expr ","Simple Name getMethods ","Block Stmt ","Assign Expr ASSIGN ","Object Creation Expr ArrayList<Method> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Variable Declarator Class current = ","Class Or Interface Type Class ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name addAll ","Method Call Expr ","Name Expr Arrays ","Simple Name asList ","Method Call Expr ","Simple Name getDeclaredMethods ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getSuperclass ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type String ","Simple Name translateSetterName ","Parameter String methodName ","Block Stmt ","Name Expr methodName ","Name Expr methodName ","Class Or Interface Type String ","Block Stmt ","Method Call Expr ","Simple Name startsWith ","String Literal Expr Not Empty  ","Null Literal Expr ","Variable Declaration Expr ","Simple Name fromName ","Name Expr fromName ","Name Expr fromName ","Name Expr fromNameChars ","Name Expr fromName ","Variable Declarator String fromName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name length ","Variable Declaration Expr ","Simple Name fromNameChars ","Name Expr fromNameChars ","Name Expr Character ","Name Expr fromNameChars ","Variable Declarator char[] fromNameChars = ","Array Type 1 ","Method Call Expr ","Simple Name toCharArray ","Assign Expr ASSIGN ","Array Access Expr 0 ","Method Call Expr ","Integer Literal Expr Zero  ","Simple Name toLowerCase ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Object Creation Expr String Optional.empty Optional.empty ","Class Or Interface Type String ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name getAllFields ","Parameter Class clazz ","Block Stmt ","Simple Name List ","Class Or Interface Type Field ","Name Expr clazz ","Class Or Interface Type Class ","Variable Declaration Expr ","Name Expr valueType ","Simple Name allFields ","Name Expr allFields ","Variable Declarator ArrayList<Field> allFields = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Field> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Variable Declarator Class current = ","Class Or Interface Type Class ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name addAll ","Method Call Expr ","Name Expr Arrays ","Binary Expr SIGNED_RIGHT_SHIFT ","Method Call Expr ","Simple Name getDeclaredFields ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getSuperclass ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Class Or Interface Type Binding ","Simple Name createBindingFromField ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter Field field ","Block Stmt ","Name Expr lookup ","Name Expr classInfo ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Class Or Interface Type Field ","Block Stmt ","Catch Clause ","Catch Clause ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Expression Stmt ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name getGenericType ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name name ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name annotations ","Simple Name getAnnotations ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name field ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Integer Literal Expr Zero  ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Name Expr e ","String Literal Expr Not Empty  ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","Name Expr keys ","Simple Name deduplicateByFromName ","Parameter Map<String, Binding> byFromName ","Parameter Binding setter ","Block Stmt ","Name Expr byFromName ","Name Expr byFromName ","Name Expr setter ","Name Expr setter ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Binding ","Class Or Interface Type Binding ","Block Stmt ","Name Expr fromName ","Simple Name fromName ","Name Expr fromName ","Class Or Interface Type String ","Simple Name fromNames ","Variable Declaration Expr ","Simple Name existing ","Name Expr existing ","Name Expr existing ","Variable Declarator Binding existing = ","Class Or Interface Type Binding ","Method Call Expr ","Name Expr pos ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name put ","Name Expr deserializationExclusionStrategies ","Method Call Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  "]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_getEncodingClassDescriptor","callMethodNameReferTo":{"12":"JsoniterSpi.java_JsoniterSpi_outer_getExtensions"},"num":1081,"succs":[[1,53],[2,60],[73,3],[4,91],[95,5],[6,98],[101,7],[8,110],[119,9],[124,10],[129,11],[12,13,134],[139,15,13,138],[14,136],[140,12],[16,142],[18,146,17],[18,160,31,159,85],[19,148],[20,161],[22,21,163,164,162],[22,167],[176,23],[25,24,49,178,177],[25,183],[26,189],[50,27,28,190,178],[28,194],[29,199],[30,200,201,180,17],[203,17],[32,86,210],[38,39,37,33,35,36,34],[34],[],[36],[],[51,41],[47,52],[2,6,4,1,3,0,7,16,9,15,8,31,5,11,10],[41],[],[40,41],[42,41],[107,43,41],[44,116,41],[108,47],[],[117,47,46],[47,48],[47,49],[],[],[56],[40],[54],[57,54,58],[54],[59,40],[],[65],[42],[61],[106,62,61],[115,63,61],[67,66,61],[61],[69,71,68],[],[42,72,70],[],[240,238,237,239,241,34],[],[87],[43,75],[],[74,55],[62,76],[44,46,77,63],[78,64,45,48],[79],[80],[81],[82],[83,82,144],[82,84],[85,82],[88,89,75],[75],[90],[],[92,93,43],[74,94],[],[],[96,55,93],[97,76],[],[62,99,93],[100,77],[],[102,93,103],[104,78],[44,46,63,109,105],[],[],[],[],[],[391,393,237,390,388,389,392,34],[111,112,93],[113,79],[64,118,45,114,48],[],[],[],[],[],[550,547,548,551,549,237,546,34],[120,121,93],[122,80],[123],[],[],[126,125,93],[127,81],[128],[],[],[131,130,93],[132,82],[133],[],[],[14],[136],[137],[136],[],[],[83,141,135],[],[143,145,84],[],[],[753,756,237,754,755,34],[22,25,28,19],[148],[158],[20,148,150],[20,147,148],[149],[151,23,149],[152,149],[26,153,149],[154,149],[29,149,155],[29,156,149],[148],[],[869,867,33,868],[21],[147,165],[],[166],[],[],[169,93,168],[170,149],[171,172,173],[],[],[],[174],[175,150],[],[24],[179,180,181],[],[151,182],[],[166],[],[184,186,185],[187,152],[],[188],[],[],[27],[192,191,180],[193,153],[166],[],[195,197,196],[154,198],[],[188],[],[30],[202,155],[166],[],[205,204,206,207],[],[],[156,208],[157,209],[],[],[],[253,212],[266,213],[215,245,163,214,267],[215,254,71,210],[268,216],[217,228,270,269,246],[272,218],[219,280],[287,220],[221,222,299,225],[222,305],[223,226,309,310,300],[224,315],[323,225],[222,302,314],[227,335],[71,228,258,210],[229,341],[233,230,342,269,248],[231,344],[351,232],[233,71,260,210],[357,234],[250,358,235,236,269],[261,71,236,210],[360],[34],[239,242,244,243],[],[252,70],[215,233,236,228,212,211],[],[],[],[70],[245,70],[70,216,246],[247,70],[229,70,248],[70,249],[250,70],[],[262],[255],[],[254,255],[256,255],[257,255],[255,258],[255,259],[255,260],[263,264,255],[255],[265],[],[214],[166],[217,219,220,226,227,218],[343,359,271],[],[],[276],[247],[273],[274,273],[278,277,273],[273],[247,279],[],[283],[274],[281],[284,281,285],[281],[274,286],[],[293],[275],[291,288],[289,288],[290,288],[291,288],[294,295,288],[288],[296,297],[],[275,298],[],[224,223],[301,304],[],[301,300],[301,302],[301,303],[301,307,306],[301],[308],[],[],[311,312],[289,313],[],[],[],[318],[290,303],[316],[319,320,316],[316],[321,303],[322,290],[],[324,326,256,325],[],[327,329,328],[304,282],[330,331,328],[],[334,291],[332,317],[333],[],[],[],[257,336,337],[],[339,338,71],[],[340,292,70],[],[231,232,230],[],[],[347],[249],[345],[349,348,345],[345],[350,249],[],[352,353,259],[],[355,71,354],[],[356,346,70],[],[235],[],[],[362,361],[],[251,363,328],[333],[407,365],[366,367,415],[427,425,424,367,387],[417,368],[429,369],[430,370,432,431,371],[434],[435,372],[108,374,373],[374,436],[439,375],[376,377,440,441],[434],[378,443],[379,458],[382,178,460,459,380],[381,467],[382,474],[383,481],[483,482,386,178,384],[491,385],[386,498],[366,505],[410,109,210],[395,394,389],[],[106,401],[107,405],[108,406],[365,387,364],[],[],[106,454],[107],[107,455,397],[108,372],[108,399],[402,404,403],[],[],[],[],[],[411],[409],[],[409,408],[413,412,409],[409],[414],[],[378,382,374,377,368,386,371],[417],[423],[417,416],[417,418],[417,419,456],[417,420],[421,417],[417],[],[428,426,397],[],[897,237,898,896,895,34],[],[370],[],[],[433,416],[],[],[373],[437,418,438],[],[188],[376],[],[419,442],[],[450],[398,420,396],[444],[445],[446],[447],[448],[452,451,444],[444],[398,420,457,453,396],[],[],[],[],[237,947,946,944,943,948,945,34],[381,380],[399,461],[461,462],[],[463,465,464],[],[],[421,466],[],[468,469,93],[445,470],[471,472],[],[],[],[308],[476,475,93],[446,477],[478,479],[],[],[],[308],[385,384],[461,400],[461,484],[486,487,485],[],[],[488,489],[490,422],[],[],[493,93,492],[494,447],[495,496],[],[],[],[308],[500,93,499],[501,448],[502,503],[],[],[],[308],[449,408,506],[],[508,564],[572,510,509],[583,582,545,510,586,557],[574,511],[512,588],[513,591,590,514,589],[434],[593,515],[516,603],[517,604,595,605,518],[434],[519,606],[521,520,608,309,607],[434],[522,611],[524,461,612,523],[434],[525,615],[527,617,526,180,616],[434],[621,528],[529,636],[645,530],[531,652],[655,532],[533,669],[535,534,677,678,536],[541,679,536],[686,541,685,536],[687,537,539],[688,538,539,178,689],[541,694],[540],[541,701],[708,542],[711,543],[544,714],[509,719],[118,567,210],[553,547,552],[],[115,558],[116,562],[117,563],[508,545,507],[],[],[115],[116],[116,555],[117,585],[559,560,561],[],[],[],[],[],[568],[566],[],[566,565],[566,569,570],[566],[571],[],[527,521,511,529,524,531,528,542,515,514,530,532,541,544,533,543,518,536],[574],[581],[574,573],[575,574],[576,574],[574,577],[574,578],[574,579],[574],[],[587,584,555],[],[],[1034,1036,237,1037,1038,1035,34],[],[513],[],[],[592,573],[],[599],[575],[594],[595,594],[594,596],[597,594],[601,594,600],[594],[575,602],[],[517],[333],[],[520],[609,596],[610],[],[],[523],[597,613,614],[],[333],[526],[619,618],[308],[576,620],[],[],[629],[598],[622],[623,625,622],[638],[624],[624,626],[624,627],[630,631,622],[622],[633,598,632],[],[634,635],[333],[],[641],[623],[637,639,640],[],[637],[637,643,642],[637],[623,644],[],[646,647,93],[648,638],[639,649,650],[308],[],[651,640],[308],[624,653,93],[654,625],[],[663],[554,556,577],[656],[627,657,656],[658,628],[659,579],[580,660],[661],[665,664,656],[656],[666,554,556,667],[],[668,577],[],[674],[626,578,671],[],[670],[670,672],[675,676,671],[671],[166],[534],[535,684],[670,93,680],[682,626,681],[578,683],[],[],[],[],[],[538],[672,180,690],[691,692],[166],[],[673,693],[],[695,696,93],[657,697],[698,699],[],[],[],[308],[702,93,703],[658,704],[707,705,706],[],[],[],[627],[709,628,93],[710,659],[],[712,93,579],[713,660],[],[715,716,93],[661,717],[580,718],[],[],[662,565,720],[],[760,722],[770,723],[725,724,778],[725,785,734,757],[726,780],[786,728,727],[733,779,728,792],[729,788],[793,730],[787,732,731,794,761],[795,732],[799,727],[801,724],[736,805,735],[812,736,813],[737,807],[815,738],[740,817,739,163,816],[434],[741,821],[835,742],[836,744,743,823,180],[837,744],[746,844,745],[848,746,809,735],[747,845],[849,748],[749,852],[827,752,163,853,750],[854,751],[434],[856,745],[754],[],[759,144],[723,722,734,721],[144],[757,144],[],[766],[762],[],[762,761],[762,763],[764,762],[767,762,768],[762],[769],[],[774],[772],[],[772,771],[775,772,776],[772],[777],[],[733,726],[780],[784],[779,780],[781,780],[782,780],[780],[],[729,732],[788],[791],[787,788,730],[789,788],[788],[],[731],[],[796,797],[],[798,789,328],[333],[800,790,781,763],[],[803,802,783,771],[],[782,804],[],[741,740,737,744],[807],[811],[806,807],[808,807],[807,809],[807],[],[758,814],[],[739],[819,818],[308],[806,820],[],[],[829],[808,773],[822],[742,823,822],[826,764,824],[845],[825],[827,825],[831,830,822],[822],[833,832,773],[],[808,834],[],[743],[166],[839,93,838],[824,840],[842,841],[],[],[],[308],[752,747,748],[847],[826,845],[845],[],[850,825,93],[826,764,851],[],[751,750],[166],[846,855,810,765],[],[857,858,93],[859,828],[860,861],[],[],[],[308],[872,864],[882,865],[885,866],[876,160,210],[868,870,871],[],[865,863,864,866],[],[],[877],[874],[],[874,873],[874,875],[878,874,879],[874],[881,880],[],[610],[884,883,873],[],[],[886,887,875],[],[],[903,889],[911,890],[891,919],[913,920,892,894,180],[921,893],[928,890],[427,906,210],[899,900,896],[],[902,426],[888,894,889,890],[],[],[426],[],[907],[905],[],[904,905],[905,908,909],[905],[910],[],[917],[901],[912,915],[913,912,915],[916,912],[912,914,915],[912,901,918],[912],[892,893],[166],[904,923,922],[],[925,924,926],[],[],[927,914],[],[929,93,915],[916,930],[],[965,964,939,932,941,966],[967,933],[934,981],[990,935],[999,936],[1004,937],[938,1009],[974,457,210],[940,1013,1014],[1015],[1017,942,1018],[1019],[944],[],[454,958],[455,962],[456,963],[931],[454],[455],[456],[951,456],[456,952],[456,953],[954,456],[955,456],[956,456],[960,961,959],[],[],[],[],[],[933,934,932,938,935,936,937],[939,1012],[1016,941],[975],[950,951,949],[968,952],[969,953],[954,970],[971,955],[956,972],[973],[968,976,977],[968],[950,978,979,949],[],[951,980],[],[983,982,93],[969,984],[985,986,987],[],[],[],[988],[952,989],[],[992,991,93],[993,970],[996,994,995],[],[],[],[997],[998,953],[],[1001,1000,93],[1002,971],[954,1003],[],[],[1006,1005,93],[1007,972],[1008,955],[],[],[956,1010,93],[1011,973],[],[940],[],[],[],[942],[],[],[1020,1021,1022],[],[957,1023,328],[],[333],[1025,1045],[1057,1026],[585,1027,1033],[1058,1028],[1061,1029],[1069,1030],[1031,1033,1063,180,1070],[1071,1032],[1029,1078],[1050,586,210],[1039,1040,1035],[],[584,1043],[585,1044],[1025,1033,1024],[],[],[584],[584,1041],[],[],[1051],[1047,1041],[],[1046],[1048],[1049,1048],[1046,1053,1052],[1046],[1047,1054,1055],[],[1056,1041],[],[1027,1029,1028],[1048,1059,93],[1060],[],[1067],[1042],[1062,1065],[1062,1065,1063],[1062,1066],[1062,1065,1064],[1068,1062,1042],[1062],[1031,1032],[166],[1049,1072,1073],[],[1074,1076,1075],[],[],[1077,1064],[],[1079,1065,93],[1080,1066],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Assign Expr PLUS ","Method Declaration ","PUBLIC","STATIC","Variable Declarator int v2 = ","Simple Name getEncodingClassDescriptor ","Parameter ClassInfo classInfo ","Parameter boolean includingPrivate ","Block Stmt ","Name Expr classInfo ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr includingPrivate ","Simple Name includingPrivate ","Name Expr includingPrivate ","Name Expr includingPrivate ","Name Expr includingPrivate ","Class Or Interface Type ClassInfo ","Primitive Type boolean ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Field Access Expr ","Simple Name clazz ","Variable Declaration Expr ","Simple Name lookup ","Name Expr lookup ","Name Expr lookup ","Name Expr lookup ","Variable Declarator Map<String, Type> lookup = ","Class Or Interface Type Map ","Method Call Expr ","Simple Name collectTypeVariableLookup ","Field Access Expr ","Simple Name type ","Method Declaration ","Simple Name type ","Variable Declaration Expr ","Name Expr desc ","Simple Name desc ","Name Expr desc ","This Expr ","This Expr ","Primitive Type byte ","Primitive Type byte ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Variable Declarator ClassDescriptor desc = ","Class Or Interface Type ClassDescriptor ","Object Creation Expr ClassDescriptor Optional.empty Optional.empty ","Parameter String cacheKey ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name classInfo ","Expression Stmt ","Field Access Expr ","Simple Name clazz ","Assign Expr ASSIGN ","Name Expr JsoniterSpi ","Simple Name lookup ","Assign Expr ASSIGN ","Method Call Expr ","Method Call Expr ","Simple Name fields ","Simple Name getFields ","Simple Name lookup ","Simple Name classInfo ","Simple Name includingPrivate ","Method Declaration ","Assign Expr ASSIGN ","Array Access Expr count++ ","Method Call Expr ","Simple Name getters ","Simple Name getGetters ","Simple Name lookup ","Simple Name classInfo ","Simple Name includingPrivate ","Method Declaration ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr ArrayList<WrapperDescriptor> Optional.empty Optional.empty ","Simple Name bindingTypeWrappers ","Class Or Interface Type ArrayList ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr ArrayList<Method> Optional.empty Optional.empty ","Simple Name keyValueTypeWrappers ","Class Or Interface Type ArrayList ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr ArrayList<UnwrapperDescriptor> Optional.empty Optional.empty ","Class Or Interface Type Annotation ","Method Call Expr ","Block Stmt ","Name Expr extension ","Simple Name extension ","Class Or Interface Type Extension ","Name Expr JsoniterSpi ","Simple Name getExtensions ","Variable Declaration Expr ","Simple Name updateClassDescriptor ","Variable Declaration Expr [FINAL] ","Simple Name encodingDeduplicate ","Simple Name desc ","Method Declaration ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Simple Name allEncoderBindings ","Method Declaration ","Block Stmt ","Field Access Expr ","EQUALS","Null Literal Expr ","Name Expr decoder ","NullLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Field Access Expr ","Simple Name name ","Block Stmt ","Binary Expr NOT_EQUALS ","AND","Name Expr CodegenAccess ","NOT_EQUALS","Integer Literal Expr Note Zero  ","Parameter T obj ","Method Call Expr ","Field Access Expr ","Simple Name setAccessible ","Boolean Literal Expr true ","Simple Name field ","true","Block Stmt ","Binary Expr NOT_EQUALS ","Field Access Expr ","Null Literal Expr ","Simple Name length ","Binary Expr GREATER ","Field Access Expr ","Simple Name setAccessible ","Boolean Literal Expr true ","Simple Name method ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name encoder ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Method Call Expr ","Field Access Expr ","Simple Name encoderCacheKey ","Simple Name encoder ","ReturnStmt","Expression Stmt ","If Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Throw Stmt ","PRIVATE","Class Or Interface Type Map ","Simple Name collectTypeVariableLookup ","Parameter Type type ","Block Stmt ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Class Or Interface Type Type ","Variable Declaration Expr ","Name Expr vars ","Simple Name vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Variable Declarator HashMap<String, Type> vars = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Type> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Null Literal Expr ","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Name Expr pType ","Name Expr pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Variable Declaration Expr ","Simple Name actualTypeArguments ","Name Expr actualTypeArguments ","Variable Declarator Type[] actualTypeArguments = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name getActualTypeArguments ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getRawType ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Field Access Expr ","Method Call Expr ","Simple Name length ","Simple Name getTypeParameters ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name variable ","Name Expr variable ","Variable Declarator TypeVariable variable = ","Class Or Interface Type TypeVariable ","Array Access Expr i ","Method Call Expr ","Simple Name getTypeParameters ","Method Call Expr ","Simple Name put ","Binary Expr PLUS ","Array Access Expr i ","Binary Expr PLUS ","PLUS","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name getName ","StringLiteralExpr","Simple Name getCanonicalName ","Method Call Expr ","Simple Name putAll ","Method Call Expr ","Simple Name collectTypeVariableLookup ","Method Call Expr ","Simple Name getGenericSuperclass ","Block Stmt ","Class Or Interface Type Class ","Class","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name putAll ","Method Call Expr ","Simple Name collectTypeVariableLookup ","Method Call Expr ","Simple Name getGenericSuperclass ","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Continue Stmt ","If Stmt ","Name Expr includingPrivate ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Name Expr StreamImplNumber ","Class Or Interface Type List ","Simple Name getFields ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter boolean includingPrivate ","Block Stmt ","Simple Name part ","Class Or Interface Type Binding ","Name Expr lookup ","Name Expr classInfo ","Name Expr classInfo ","Name Expr includingPrivate ","Name Expr includingPrivate ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Primitive Type boolean ","Variable Declaration Expr ","Name Expr bindings ","Simple Name bindings ","Name Expr bindings ","Variable Declarator ArrayList<Binding> bindings = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Field ","Simple Name getAllFields ","Field Access Expr ","Simple Name clazz ","Method Declaration ","Simple Name clazz ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","continue;","Block Stmt ","Method Call Expr ","Simple Name setAccessible ","Char Literal Expr '\\\\' ","Block Stmt ","Simple Name isTransient ","Method Call Expr ","Simple Name getModifiers ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name createBindingFromField ","Simple Name lookup ","Simple Name classInfo ","Simple Name field ","Method Declaration ","Block Stmt ","Unary Expr ! ","Unary Expr ! ","LOGICAL_COMPLEMENT","Method Call Expr ","Method Call Expr ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Unary Expr ! ","Unary Expr ! ","Method Call Expr ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Method Call Expr ","Simple Name getModifiers ","Simple Name getType ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name add ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","If Stmt ","Binary Expr LESS ","Continue Stmt ","If Stmt ","Unary Expr ! ","Continue Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Continue Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter NoSuchFieldException e ","If Stmt ","Binary Expr AND ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type MapWrapperAny ","Simple Name getGetters ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter boolean includingPrivate ","Block Stmt ","Simple Name List ","Class Or Interface Type Binding ","Name Expr lookup ","Name Expr classInfo ","Name Expr classInfo ","Name Expr includingPrivate ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Primitive Type boolean ","Variable Declaration Expr ","Name Expr getters ","Simple Name getters ","Name Expr getters ","Variable Declarator ArrayList<Binding> getters = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr method ","Simple Name method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Class Or Interface Type Method ","Simple Name getAllMethods ","Field Access Expr ","Simple Name clazz ","Simple Name includingPrivate ","Method Declaration ","Simple Name clazz ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","Variable Declaration Expr ","Simple Name methodName ","Name Expr methodName ","Name Expr methodName ","Name Expr methodName ","Name Expr methodName ","Variable Declarator String methodName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getName ","Block Stmt ","Simple Name skipObject ","Simple Name equals ","Block Stmt ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","Block Stmt ","Method Call Expr ","Simple Name startsWith ","String Literal Expr Not Empty  ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Field Access Expr ","Variable Declaration Expr ","Simple Name toName ","Simple Name format ","Name Expr toName ","Name Expr toNameChars ","Name Expr toName ","Name Expr toName ","Name Expr toName ","Variable Declarator String toName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name length ","Variable Declaration Expr ","Simple Name toNameChars ","Name Expr toNameChars ","Name Expr Character ","Name Expr toNameChars ","Variable Declarator char[] toNameChars = ","Simple Name append ","Method Call Expr ","Simple Name toCharArray ","Assign Expr ASSIGN ","Array Access Expr 0 ","Method Call Expr ","Integer Literal Expr Zero  ","Simple Name toLowerCase ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Object Creation Expr String Optional.empty Optional.empty ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name getter ","Name Expr getter ","Name Expr getter ","Class Or Interface Type String ","Name Expr getter ","Class Or Interface Type Config ","Name Expr getter ","Variable Declarator Binding getter = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name getGenericReturnType ","Variable Declaration Expr ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Variable Declarator Field field = ","Class Or Interface Type Field ","Null Literal Expr ","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Method Call Expr ","Method Call Expr ","Simple Name getDeclaredField ","Simple Name getDeclaringClass ","Block Stmt ","Class Or Interface Type NoSuchFieldException ","Simple Name e ","Block Stmt ","Assign Expr ASSIGN ","Method Call Expr ","Null Literal Expr ","Simple Name isTransient ","Method Call Expr ","Simple Name getModifiers ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name method ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name annotations ","Simple Name getAnnotations ","Method Call Expr ","Simple Name add ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Parameter IOException e ","If Stmt ","Method Call Expr ","Throw Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Variable Declaration Expr ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","If Stmt ","Variable Declarator boolean dotFound = ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","Void Type ","Simple Name encodingDeduplicate ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Simple Name toString ","Simple Name byToName ","Name Expr byToName ","Name Expr byToName ","Name Expr byToName ","Variable Declarator HashMap<String, Binding> byToName = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Binding> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Name Expr byFieldName ","Simple Name byFieldName ","Name Expr byFieldName ","Variable Declarator HashMap<String, Binding> byFieldName = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Binding> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Binding ","Simple Name fields ","Block Stmt ","Name Expr toName ","Simple Name toName ","Name Expr toName ","Name Expr toName ","Class Or Interface Type String ","Simple Name toNames ","Block Stmt ","Simple Name containsKey ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name put ","Field Access Expr ","Simple Name name ","Block Stmt ","Simple Name append ","Simple Name getter ","Name Expr getter ","Name Expr getter ","Name Expr getter ","Class Or Interface Type Binding ","Class Or Interface Type ArrayList ","Field Access Expr ","Simple Name getters ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name toNames ","Variable Declaration Expr ","Simple Name existing ","Name Expr typeArgs ","Name Expr existing ","Name Expr existing ","Name Expr toName ","Name Expr dotFound ","Name Expr existing ","Variable Declarator Binding existing = ","Class Or Interface Type Builder ","Method Call Expr ","Simple Name get ","Field Access Expr ","Simple Name name ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Simple Name toName ","Name Expr toName ","Class Or Interface Type String ","Simple Name toNames ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name allEncoderBindings ","Block Stmt ","Simple Name List ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr bindings ","Simple Name bindings ","Name Expr bindings ","Name Expr bindings ","Variable Declarator ArrayList<Binding> bindings = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name addAll ","Name Expr fields ","Method Call Expr ","Simple Name addAll ","Name Expr getters ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name getAllFields ","Parameter Class clazz ","Block Stmt ","Simple Name List ","Class Or Interface Type Field ","Name Expr clazz ","Class Or Interface Type Class ","Variable Declaration Expr ","Name Expr valueType ","Simple Name allFields ","Name Expr allFields ","Variable Declarator ArrayList<Field> allFields = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Field> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Variable Declarator Class current = ","Class Or Interface Type Class ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name addAll ","Method Call Expr ","Name Expr Arrays ","Binary Expr SIGNED_RIGHT_SHIFT ","Method Call Expr ","Simple Name getDeclaredFields ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getSuperclass ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Class Or Interface Type Binding ","Simple Name createBindingFromField ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter Field field ","Block Stmt ","Name Expr lookup ","Name Expr classInfo ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Class Or Interface Type Field ","Block Stmt ","Catch Clause ","Catch Clause ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Expression Stmt ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name getGenericType ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name name ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name annotations ","Simple Name getAnnotations ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name field ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Integer Literal Expr Zero  ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Name Expr e ","String Literal Expr Not Empty  ","Expression Stmt ","If Stmt ","Name Expr includingPrivate ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name getAllMethods ","Parameter Class clazz ","Parameter boolean includingPrivate ","Block Stmt ","Null Literal Expr ","Class Or Interface Type Method ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Primitive Type boolean ","Variable Declaration Expr ","Simple Name allMethods ","Name Expr Arrays ","Name Expr allMethods ","Name Expr allMethods ","Name Expr allMethods ","Variable Declarator List<Method> allMethods = ","Class Or Interface Type List ","Method Call Expr ","Simple Name asList ","Method Call Expr ","Simple Name getMethods ","Block Stmt ","Assign Expr ASSIGN ","Object Creation Expr ArrayList<Method> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Variable Declarator Class current = ","Class Or Interface Type Class ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name addAll ","Method Call Expr ","Name Expr Arrays ","Simple Name asList ","Method Call Expr ","Simple Name getDeclaredMethods ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getSuperclass "]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_decodingDeduplicate","callMethodNameReferTo":{},"num":221,"succs":[[1,50],[2,61],[3,69,4],[44,76,4,13],[71,5],[7,6,77],[7,83,70,12],[8,79],[9,84],[78,51,85,10,11],[86,11],[92,6],[94,3],[98,14],[107,15],[17,110,16],[26,17,100,99],[112,18],[19,116],[119,117,21,20,118],[124],[125,22],[135,23],[24,137,25,127,136],[25,139],[147,16],[27,28,152],[28,33,156,47],[29,154],[157,30,31],[27,153,161,31],[32,159],[30,162],[164,34,35],[168,35,169],[166,36],[34,171],[40,41,38,43,42,39],[39],[],[41],[],[45,49],[26,2,1,33,0,14,13,15],[45],[],[44,45],[45,46],[45,47],[],[57],[52],[],[51,52],[149,53,52],[149,54,52],[149,55,52],[58,59,52],[52],[60],[],[65],[63],[],[62,63],[66,67,63],[63],[68],[],[5,12],[71],[75],[71,70],[72,71],[71,73],[71],[],[8,11],[79],[82],[78,9,79],[80,79],[79],[],[10],[],[87,88],[],[80,90,89],[91],[],[],[81,72,53,93],[],[95,62,74,96],[],[97,73],[],[101],[46],[99],[102,103,99],[99],[104,105],[],[46,106],[],[109,100,108],[],[],[25,21,18,22],[112],[115],[112,111],[112,150,113],[112],[20],[121,120],[],[123],[111,122],[],[],[],[],[129],[113,64],[126],[127,23,126],[130,131,126],[126],[133,132,64],[],[134,113],[],[24],[],[138],[],[142,140,141],[128,143],[],[144,145],[],[],[],[123],[54,151,114,148],[],[],[],[185,184,38,186,182,183,39],[29],[154],[155],[154],[],[32],[150,159],[160],[159],[],[163,158,151,55],[],[36],[166,150],[167],[166],[170,48],[],[],[56,151,172,165],[],[196,174,175],[201,189,175],[176,198],[177,202],[178,210],[181,179,204,211,118],[180,212],[124],[214,174],[183],[],[149,191],[195,150],[173],[149],[187,149],[150],[150,189],[193,194,192],[],[],[],[],[177,181,176],[198],[200],[197,198],[198],[],[206],[187,197],[203],[204,203],[208,207,203],[203],[187,197,209],[],[179,180],[138],[199,190,188,213],[],[215,216,141],[217,205],[219,218],[],[],[],[123]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Throw Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr iteratingSetters ","Variable Declaration Expr ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","This Expr ","Simple Name decodingDeduplicate ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr desc ","Simple Name desc ","Name Expr desc ","Integer Literal Expr Note Zero  ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Name Expr byFromName ","Simple Name byFromName ","Name Expr byFromName ","Name Expr byFromName ","Name Expr byFromName ","Name Expr byFromName ","Variable Declarator HashMap<String, Binding> byFromName = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Binding> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Name Expr byFieldName ","Simple Name byFieldName ","Name Expr byFieldName ","Variable Declarator HashMap<String, Binding> byFieldName = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Binding> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Binding ","Simple Name fields ","Block Stmt ","Name Expr fromName ","Simple Name fromName ","Name Expr fromName ","Name Expr fromName ","Class Or Interface Type String ","Simple Name fromNames ","Block Stmt ","Simple Name containsKey ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name put ","Field Access Expr ","Boolean Literal Expr true ","Variable Declaration Expr ","Simple Name iteratingSetters ","Name Expr iteratingSetters ","Variable Declarator ArrayList<Binding> iteratingSetters = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Field Access Expr ","Simple Name setters ","Method Call Expr ","Method Call Expr ","Simple Name reverse ","Block Stmt ","Name Expr setter ","Simple Name setter ","Name Expr setter ","Name Expr setter ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","EQUALS","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name method ","Simple Name fromNames ","Zero IntegerLiteralExpr","continue;","Variable Declaration Expr ","Simple Name existing ","Name Expr existing ","Name Expr existing ","Variable Declarator Binding existing = ","Return Stmt ","Method Call Expr ","Simple Name get ","Field Access Expr ","Simple Name name ","Block Stmt ","NOT_EQUALS","Name Expr eLen ","NullLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Simple Name deduplicateByFromName ","Simple Name byFromName ","Simple Name setter ","Method Declaration ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type WrapperDescriptor ","Simple Name bindingTypeWrappers ","Block Stmt ","Name Expr param ","Simple Name param ","Class Or Interface Type Binding ","Simple Name parameters ","Method Call Expr ","Simple Name deduplicateByFromName ","Block Stmt ","Name Expr param ","Simple Name param ","Class Or Interface Type Binding ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Expression Stmt ","Simple Name deduplicateByFromName ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","Name Expr keys ","Simple Name deduplicateByFromName ","Parameter Map<String, Binding> byFromName ","Parameter Binding setter ","Block Stmt ","Name Expr byFromName ","Name Expr byFromName ","Name Expr setter ","Name Expr setter ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Binding ","Class Or Interface Type Binding ","Block Stmt ","Name Expr fromName ","Simple Name fromName ","Name Expr fromName ","Class Or Interface Type String ","Simple Name fromNames ","Variable Declaration Expr ","Simple Name existing ","Name Expr existing ","Name Expr existing ","Variable Declarator Binding existing = ","Class Or Interface Type Binding ","Method Call Expr ","Name Expr pos ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name put ","Name Expr deserializationExclusionStrategies ","Method Call Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  "]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_deduplicateByFromName","callMethodNameReferTo":{},"num":58,"succs":[[1,28,2],[33,20,2],[3,30],[4,34],[5,42],[8,6,36,43,44],[7,46],[48],[49,1],[15,14,10,16,12,13,11],[11],[],[13],[],[18,23],[27,21],[0],[18],[],[18,17],[21],[],[21,20],[25,26,24],[],[],[],[],[4,8,3],[30],[32],[29,30],[30],[],[38],[17,29],[35],[36,35],[40,39,35],[35],[17,29,41],[],[6,7],[],[45],[],[31,22,19,47],[],[],[50,52,51],[53,37],[],[55,54],[],[],[],[57],[]],"nodeAttribute":["For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Name Expr keys ","Simple Name deduplicateByFromName ","Parameter Map<String, Binding> byFromName ","Parameter Binding setter ","Block Stmt ","Name Expr byFromName ","Simple Name byFromName ","Name Expr byFromName ","Name Expr setter ","Simple Name setter ","Name Expr setter ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Binding ","Class Or Interface Type Binding ","Block Stmt ","Name Expr fromName ","Simple Name fromName ","Name Expr fromName ","Class Or Interface Type String ","Simple Name fromNames ","Variable Declaration Expr ","Simple Name existing ","Name Expr existing ","Name Expr existing ","Variable Declarator Binding existing = ","Class Or Interface Type Binding ","Method Call Expr ","Name Expr pos ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name put ","continue;","Name Expr deserializationExclusionStrategies ","Method Call Expr ","ASSIGN","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr"]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_encodingDeduplicate","callMethodNameReferTo":{},"num":154,"succs":[[43,1],[53,2],[4,3,61],[4,68,13,39],[63,5],[69,7,6],[12,62,7,75],[8,71],[76,9],[70,10,11,77,44],[78,11],[84,6],[86,3],[15,90,14],[97,15,98],[16,92],[100,17],[19,103,18,102,101],[108],[20,109],[123,21],[125,23,22,111,124],[23,127],[25,135,24],[139,25,94,14],[26,136],[140,27],[28,143],[115,31,102,144,29],[145,30],[108],[147,24],[38,35,33,36,37,34],[34],[],[36],[],[42,40],[2,13,1,0],[40],[],[39,40],[],[49],[45],[],[45,44],[45,46],[47,45],[50,45,51],[45],[52],[],[57],[55],[],[55,54],[58,55,59],[55],[60],[],[12,5],[63],[67],[62,63],[64,63],[65,63],[63],[],[8,11],[71],[74],[70,71,9],[72,71],[71],[],[10],[],[80,79],[],[81,72,82],[83],[],[],[85,73,64,46],[],[88,87,66,54],[],[65,89],[],[20,19,16,23],[92],[96],[91,92],[93,92],[92,94],[92],[],[41,99],[],[18],[105,104],[],[107],[91,106],[],[],[],[],[117],[93,56],[110],[21,111,110],[114,47,112],[136],[113],[115,113],[119,118,110],[110],[121,120,56],[],[93,122],[],[22],[],[126],[],[130,129,128],[112,131],[],[133,132],[],[],[],[107],[31,26,27],[138],[114,136],[136],[],[141,113,129],[114,47,142],[],[30,29],[126],[137,146,95,48],[],[148,149,129],[150,116],[151,152],[],[],[],[107]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Parameter IOException e ","If Stmt ","Method Call Expr ","Throw Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Variable Declaration Expr ","If Stmt ","Binary Expr EQUALS ","Continue Stmt ","Expression Stmt ","If Stmt ","Variable Declarator boolean dotFound = ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name encodingDeduplicate ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr desc ","Simple Name desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Simple Name toString ","Simple Name byToName ","Name Expr byToName ","Name Expr byToName ","Name Expr byToName ","Variable Declarator HashMap<String, Binding> byToName = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Binding> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Name Expr byFieldName ","Simple Name byFieldName ","Name Expr byFieldName ","Variable Declarator HashMap<String, Binding> byFieldName = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Binding> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Binding ","Simple Name fields ","Block Stmt ","Name Expr toName ","Simple Name toName ","Name Expr toName ","Name Expr toName ","Class Or Interface Type String ","Simple Name toNames ","Block Stmt ","Simple Name containsKey ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name put ","Field Access Expr ","Simple Name name ","Block Stmt ","Simple Name append ","Simple Name getter ","Name Expr getter ","Name Expr getter ","Name Expr getter ","Class Or Interface Type Binding ","Class Or Interface Type ArrayList ","Field Access Expr ","Simple Name getters ","Block Stmt ","Field Access Expr ","EQUALS","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name toNames ","Zero IntegerLiteralExpr","continue;","Variable Declaration Expr ","Simple Name existing ","Name Expr typeArgs ","Name Expr existing ","Name Expr existing ","Name Expr toName ","Name Expr dotFound ","Name Expr existing ","Variable Declarator Binding existing = ","Class Or Interface Type Builder ","Method Call Expr ","Simple Name get ","Field Access Expr ","Simple Name name ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Simple Name toName ","Name Expr toName ","Class Or Interface Type String ","Simple Name toNames ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  "]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_getCtor","callMethodNameReferTo":{"2":"JsoniterSpi.java_JsoniterSpi_outer_canCreate","40":"JsoniterSpi.java_JsoniterSpi_outer_getObjectFactory"},"num":59,"succs":[[1,22],[34,2],[3,35,17,36,5],[37,4],[26,10,43,5],[7,44,45,9,6],[46,9],[8,53,52],[54,9],[10,29,43],[14,11,13,16,15,12],[12],[],[14],[],[18,21],[1,9,0,5],[18],[],[18,2,17],[19,18],[],[30],[19,24,25],[2],[],[23],[26,20,23],[27],[28],[32,31,25],[25],[33],[],[3,4],[],[],[40,38,39],[41,23],[],[42,19,24],[],[],[],[6],[7,51],[48,39,47],[27,49],[20,50],[],[],[8],[],[],[56,55,39],[57,28],[58],[],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Expression Stmt ","Parameter Exception e ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type ConstructorDescriptor ","Simple Name getCtor ","Parameter Class clazz ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Variable Declaration Expr ","Name Expr cctor ","Name Expr packageName ","Simple Name cctor ","Simple Name write ","Name Expr cctor ","Name Expr cctor ","Name Expr cctor ","Variable Declarator ConstructorDescriptor cctor = ","Class Or Interface Type ConstructorDescriptor ","Object Creation Expr ConstructorDescriptor Optional.empty Optional.empty ","Class Or Interface Type ConstructorDescriptor ","Block Stmt ","Method Call Expr ","Simple Name canCreate ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Method Call Expr ","Simple Name objectFactory ","Simple Name getObjectFactory ","ReturnStmt","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Array Access Expr pos++ ","Method Call Expr ","Simple Name ctor ","Simple Name getDeclaredConstructor ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","Name Expr iter ","NullLiteralExpr"]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_getFields","callMethodNameReferTo":{},"num":294,"succs":[[49,1],[2,3,57],[69,67,66,3,23],[59,4],[71,5],[72,6,74,73,7],[76],[77,8],[40,10,9],[10,78],[82,11],[12,13,83,84],[76],[14,86],[15,101],[18,104,102,103,16],[17,111],[18,120],[19,127],[129,128,22,103,20],[137,21],[22,144],[151,2],[52,24,153],[30,32,25,29,27,28,31,26],[26],[],[34,33,28],[],[36,43],[38,47],[40,48],[1,23,0],[],[],[36,97],[],[38],[],[38,98,37],[],[40,8],[40,41],[44,46,45],[],[],[],[],[],[53],[51],[],[51,50],[55,54,51],[51],[56],[],[14,18,13,10,4,22,7],[59],[65],[59,58],[59,60],[59,61,99],[59,62],[63,59],[59],[],[70,68,37],[],[163,25,164,162,161,26],[],[6],[],[],[75,58],[],[],[9],[79,60,80],[],[81],[],[12],[],[61,85],[],[93],[39,62,35],[87],[88],[89],[90],[91],[95,94,87],[87],[39,62,100,96,35],[],[],[],[],[25,215,214,212,211,216,26,213],[17,16],[105,41],[],[105,106],[],[107,108,109],[],[],[63,110],[],[112,114,113],[88,115],[],[116,117],[],[],[],[119],[],[122,121,113],[89,123],[124,125],[],[],[],[119],[21,20],[105,42],[105,130],[132,133,131],[],[],[134,135],[136,64],[],[],[139,113,138],[140,90],[141,142],[],[],[],[119],[146,113,145],[147,91],[148,149],[],[],[],[119],[92,152,50],[],[],[169,155],[177,156],[157,185],[179,158,160,187,186],[189,159],[196,156],[69,172,153],[165,166,162],[],[168,68],[154,160,155,156],[],[],[68],[],[173],[171],[],[170,171],[171,174,175],[171],[176],[],[183],[167],[178,181],[179,178,181],[182,178],[178,180,181],[178,167,184],[178],[158,159],[],[188],[],[170,191,190],[],[193,192,194],[],[],[195,180],[],[197,113,181],[182,198],[],[233,232,207,200,209,234],[235,201],[202,249],[258,203],[267,204],[272,205],[206,277],[242,100,153],[208,281,282],[283],[285,210,286],[287],[212],[],[97,226],[98,230],[99,231],[199],[97],[98],[99],[219,99],[99,220],[99,221],[222,99],[223,99],[224,99],[229,228,227],[],[],[],[],[],[202,201,200,206,204,203,205],[280,207],[284,209],[243],[218,219,217],[236,220],[237,221],[222,238],[223,239],[224,240],[241],[236,244,245],[236],[218,246,247,217],[],[219,248],[],[251,250,113],[237,252],[253,254,255],[],[],[],[256],[220,257],[],[260,259,113],[261,238],[264,262,263],[],[],[],[265],[266,221],[],[269,268,113],[270,239],[222,271],[],[],[274,273,113],[275,240],[276,223],[],[],[224,278,113],[279,241],[],[208],[],[],[],[210],[],[],[288,289,290],[],[225,291,292],[],[293],[],[]],"nodeAttribute":["Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Continue Stmt ","If Stmt ","Name Expr includingPrivate ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Name Expr StreamImplNumber ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type List ","Simple Name getFields ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter boolean includingPrivate ","Block Stmt ","Simple Name part ","Class Or Interface Type Binding ","Name Expr lookup ","Simple Name lookup ","Name Expr classInfo ","Simple Name classInfo ","Name Expr classInfo ","Simple Name includingPrivate ","Name Expr includingPrivate ","Name Expr includingPrivate ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Primitive Type boolean ","Variable Declaration Expr ","Name Expr bindings ","Simple Name bindings ","Name Expr bindings ","Variable Declarator ArrayList<Binding> bindings = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Field ","Simple Name getAllFields ","Field Access Expr ","Simple Name clazz ","Method Declaration ","Simple Name clazz ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","continue;","Block Stmt ","Method Call Expr ","Simple Name setAccessible ","Char Literal Expr '\\\\' ","true","Block Stmt ","Simple Name isTransient ","Method Call Expr ","Simple Name getModifiers ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name createBindingFromField ","Simple Name lookup ","Simple Name classInfo ","Simple Name field ","Method Declaration ","Block Stmt ","Unary Expr ! ","AND","Unary Expr ! ","LOGICAL_COMPLEMENT","Method Call Expr ","Method Call Expr ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Unary Expr ! ","Unary Expr ! ","Method Call Expr ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Method Call Expr ","Simple Name getModifiers ","Simple Name getType ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name add ","ReturnStmt","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name getAllFields ","Parameter Class clazz ","Block Stmt ","Simple Name List ","Class Or Interface Type Field ","Name Expr clazz ","Class Or Interface Type Class ","Variable Declaration Expr ","Name Expr valueType ","Simple Name allFields ","Name Expr allFields ","Variable Declarator ArrayList<Field> allFields = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Field> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Variable Declarator Class current = ","Class Or Interface Type Class ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name addAll ","Method Call Expr ","Name Expr Arrays ","Binary Expr SIGNED_RIGHT_SHIFT ","Method Call Expr ","Simple Name getDeclaredFields ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getSuperclass ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Class Or Interface Type Binding ","Simple Name createBindingFromField ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter Field field ","Block Stmt ","Name Expr lookup ","Name Expr classInfo ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Class Or Interface Type Field ","Block Stmt ","Catch Clause ","Catch Clause ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Expression Stmt ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name getGenericType ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name name ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name annotations ","Simple Name getAnnotations ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name field ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Integer Literal Expr Zero  ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Name Expr e ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr"]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_createBindingFromField","callMethodNameReferTo":{},"num":103,"succs":[[40,39,8,1,10,41],[42,2],[3,56],[66,4],[75,5],[80,6],[7,85],[49,12,88],[9,90,91],[92],[94,11,95],[96],[13,19,18,16,15,20,14,17],[14],[],[16],[],[22,33],[24,37],[26,38],[0],[22],[],[24],[],[26],[],[25,26],[26,27],[26,28],[29,26],[30,26],[31,26],[35,36,34],[],[],[],[],[],[2,3,1,7,5,4,6],[8,89],[93,10],[50],[23,25,21],[43,27],[44,28],[29,45],[46,30],[31,47],[48],[43,51,52],[43],[23,53,54,21],[],[25,55],[],[59,57,58],[44,60],[],[61,62,63],[],[],[],[64],[27,65],[],[68,67,58],[69,45],[72,70,71],[],[],[],[73],[74,28],[],[77,76,58],[78,46],[29,79],[],[],[82,81,58],[83,47],[84,30],[],[],[31,86,58],[87,48],[],[],[9],[],[],[],[11],[],[],[97,98,99],[],[32,100,101],[],[102],[],[]],"nodeAttribute":["Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type Binding ","Simple Name createBindingFromField ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter Field field ","Block Stmt ","Name Expr lookup ","Simple Name lookup ","Name Expr classInfo ","Simple Name classInfo ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Class Or Interface Type Field ","Block Stmt ","Catch Clause ","Catch Clause ","Variable Declaration Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Expression Stmt ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name getGenericType ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name name ","Simple Name getName ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name annotations ","Simple Name getAnnotations ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name field ","ReturnStmt","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Integer Literal Expr Zero  ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Name Expr e ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr"]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_getAllFields","callMethodNameReferTo":{},"num":51,"succs":[[19,1],[27,2],[3,35],[29,6,4,37,36],[39,5],[46,2],[7,22,50],[12,8,13,11,10,9],[9],[],[14,15,11],[],[18,17],[0,6,1,2],[],[],[17],[],[],[23],[21],[],[20,21],[21,24,25],[21],[26],[],[33],[16],[28,31],[29,28,31],[28,32],[28,30,31],[28,16,34],[28],[4,5],[],[38],[],[20,41,40],[],[43,42,44],[],[],[45,30],[],[48,47,31],[],[32,49],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type List ","Simple Name getAllFields ","Parameter Class clazz ","Block Stmt ","Simple Name List ","Class Or Interface Type Field ","Name Expr clazz ","Simple Name clazz ","Class Or Interface Type Class ","Variable Declaration Expr ","Name Expr valueType ","Simple Name allFields ","Name Expr allFields ","Variable Declarator ArrayList<Field> allFields = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Field> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Variable Declarator Class current = ","Class Or Interface Type Class ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name addAll ","Method Call Expr ","Name Expr Arrays ","Binary Expr SIGNED_RIGHT_SHIFT ","Method Call Expr ","Simple Name getDeclaredFields ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name getSuperclass ","ReturnStmt"]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_getSetters","callMethodNameReferTo":{},"num":360,"succs":[[70,1],[78,2,3],[90,61,91,94,44,3],[80,4],[96,5],[97,7,6,98,99],[101],[8,102],[111,9],[114,112,113,11,10],[101],[117,12],[118,119,13,14],[101],[123,15],[131,16],[17,134,132,18,133],[101],[136,19],[137,139,138,20,21],[101],[22,150],[24,23,62,63],[24,151],[40,157,155,156,25,42,2],[26,158],[169,27],[178,28,179,29,30],[36,180,30],[187,36,188,30],[31,189],[203,32,34],[205,33,138,204,34],[36,210],[35],[217,36],[224,37],[38,227],[39,230],[235,2],[239,41,238],[2,240],[43,243,242],[244,2],[73,45,250],[51,52,53,46,49,48,50,47],[47],[],[55,49,54],[],[64,57],[59,68],[69,62],[0,1,44],[],[],[57],[],[59],[],[58,59],[93,62],[],[61,62],[67,65,66],[],[],[],[],[],[74],[72],[],[72,71],[72,75,76],[72],[77],[],[7,24,11,8,4,15,14,21,18],[80],[89],[79,80],[80,81],[80,82],[80,83],[80,84],[80,85],[86,80],[80,87],[80],[],[58,95,92],[],[],[263,261,46,265,264,262,47],[],[6],[],[],[79,100],[],[],[107],[81],[103],[103,104],[105,103,167],[108,103,109],[103],[110,81],[],[10],[115,104],[],[116],[],[],[13],[105,120,121],[],[],[122],[],[127],[82],[124],[125,124],[129,128,124],[124],[130,82],[],[17],[125,135],[],[116],[],[20],[119,63],[],[140,119],[142,143,141],[],[],[145,144],[147,146],[],[83,148],[149],[],[],[23],[84,152,153],[],[154],[],[26,38,25,31,39,36,27,37,30],[40,237],[42,241],[163],[106],[159],[160,159],[161,159],[164,165,159],[159],[168,166,106],[],[],[317,46,316,319,318,47],[174],[160,171,85],[],[170],[170,172],[175,171,176],[171],[177],[],[28],[186,29],[170,182,181],[],[183,160,184],[85,185],[],[],[],[],[],[197],[60,126,56],[190],[191,190,161],[162,192],[86,193],[87,194],[195],[198,199,190],[190],[60,201,200,56],[],[202,126],[149],[33],[172,206,133],[208,207],[177],[],[209,173],[],[211,181,212],[191,213],[214,215],[],[],[],[149],[218,181,219],[220,192],[222,223,221],[],[],[],[161],[225,162,181],[226,193],[],[86,228,181],[229,194],[],[232,231,181],[233,195],[234,87],[],[],[236,71,196],[],[41],[],[],[],[43],[],[],[245,247,246],[],[249,248,88],[],[122],[],[],[252,272],[284,253],[93,254,260],[285,255],[288,256],[296,257],[258,260,290,297,133],[298,259],[256,305],[277,94,250],[266,267,262],[],[92,270],[93,271],[252,260,251],[],[],[92],[92,268],[],[],[278],[274,268],[],[273],[275],[276,275],[273,280,279],[273],[274,281,282],[],[283,268],[],[254,256,255],[275,286,181],[287],[],[294],[269],[289,292],[289,292,290],[289,293],[292,289,291],[295,289,269],[289],[258,259],[177],[276,299,300],[],[301,303,302],[],[],[304,291],[],[306,292,181],[307,293],[],[323,309],[324,311,119,310],[168,327,311,250],[328,312],[341,313],[314,350],[357,315],[168,333,250],[317],[],[322,167],[314,311,308,313,312,315],[167],[320,167],[],[310],[325,320,326],[],[122],[177],[334],[321],[329],[332,330,329],[343],[331],[336,329,335],[329],[337,321,338],[],[339,340],[122],[],[346],[330],[345,342,344],[],[342],[348,342,347],[342],[349,330],[],[351,181,352],[353,343],[355,354,344],[149],[],[345,356],[149],[331,358,181],[332,359],[]],"nodeAttribute":["Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Marker Annotation Expr @Override ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Continue Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Continue Stmt ","If Stmt ","Binary Expr AND ","Continue Stmt ","If Stmt ","Name Expr includingPrivate ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter NoSuchFieldException e ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter JsonException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type List ","Simple Name getSetters ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter boolean includingPrivate ","Block Stmt ","Simple Name List ","Class Or Interface Type Binding ","Name Expr lookup ","Simple Name lookup ","Name Expr classInfo ","Simple Name classInfo ","Name Expr classInfo ","Name Expr includingPrivate ","Simple Name includingPrivate ","Name Expr includingPrivate ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Primitive Type boolean ","Variable Declaration Expr ","Name Expr setters ","Simple Name setters ","Name Expr setters ","Variable Declarator ArrayList<Binding> setters = ","Expression Stmt ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr method ","Simple Name method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Class Or Interface Type Method ","Simple Name getAllMethods ","Field Access Expr ","Simple Name clazz ","Simple Name includingPrivate ","Method Declaration ","Simple Name clazz ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","continue;","Variable Declaration Expr ","Simple Name methodName ","Simple Name hasBinding ","Name Expr methodName ","Name Expr methodName ","Variable Declarator String methodName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getName ","Block Stmt ","Method Call Expr ","LESS","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name startsWith ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name paramTypes ","Name Expr paramTypes ","Name Expr paramTypes ","Variable Declarator Type[] paramTypes = ","Array Type 1 ","Method Call Expr ","Simple Name getGenericParameterTypes ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Integer Literal Expr Note Zero  ","Simple Name length ","Block Stmt ","Unary Expr ! ","AND","Unary Expr ! ","Method Call Expr ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Array Access Expr 0 ","Simple Name getModifiers ","Method Call Expr ","Integer Literal Expr Zero  ","Simple Name getParameterTypes ","Zero IntegerLiteralExpr","Block Stmt ","Method Call Expr ","Simple Name setAccessible ","Boolean Literal Expr true ","true","Block Stmt ","Catch Clause ","Catch Clause ","Variable Declaration Expr ","Simple Name fromName ","Name Expr fromName ","Name Expr fromName ","Name Expr fromName ","Variable Declarator String fromName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name translateSetterName ","Simple Name methodName ","Method Declaration ","Variable Declaration Expr ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Variable Declarator Field field = ","Class Or Interface Type Field ","Null Literal Expr ","NullLiteralExpr","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name getDeclaredField ","Simple Name getDeclaringClass ","Block Stmt ","Class Or Interface Type NoSuchFieldException ","Simple Name e ","Variable Declaration Expr ","Simple Name setter ","Name Expr setter ","Name Expr setter ","Name Expr setter ","Name Expr setter ","Name Expr setter ","Name Expr setter ","Variable Declarator Binding setter = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Block Stmt ","Binary Expr NOT_EQUALS ","Method Call Expr ","Null Literal Expr ","Simple Name isTransient ","Method Call Expr ","Simple Name getModifiers ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Parameter float val ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name method ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name annotations ","Simple Name getAnnotations ","Method Call Expr ","Simple Name add ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Name Expr e ","String Literal Expr Not Empty  ","PLUS","ReturnStmt","Expression Stmt ","If Stmt ","Name Expr includingPrivate ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name getAllMethods ","Parameter Class clazz ","Parameter boolean includingPrivate ","Block Stmt ","Null Literal Expr ","Class Or Interface Type Method ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Primitive Type boolean ","Variable Declaration Expr ","Simple Name allMethods ","Name Expr Arrays ","Name Expr allMethods ","Name Expr allMethods ","Name Expr allMethods ","Variable Declarator List<Method> allMethods = ","Class Or Interface Type List ","Method Call Expr ","Simple Name asList ","Method Call Expr ","Simple Name getMethods ","Block Stmt ","Assign Expr ASSIGN ","Object Creation Expr ArrayList<Method> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Variable Declarator Class current = ","Class Or Interface Type Class ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name addAll ","Method Call Expr ","Name Expr Arrays ","Simple Name asList ","Method Call Expr ","Simple Name getDeclaredMethods ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getSuperclass ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type String ","Simple Name translateSetterName ","Parameter String methodName ","Block Stmt ","Name Expr methodName ","Name Expr methodName ","Class Or Interface Type String ","Block Stmt ","Method Call Expr ","Simple Name startsWith ","String Literal Expr Not Empty  ","Null Literal Expr ","Variable Declaration Expr ","Simple Name fromName ","Name Expr fromName ","Name Expr fromName ","Name Expr fromNameChars ","Name Expr fromName ","Variable Declarator String fromName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name length ","Variable Declaration Expr ","Simple Name fromNameChars ","Name Expr fromNameChars ","Name Expr Character ","Name Expr fromNameChars ","Variable Declarator char[] fromNameChars = ","Array Type 1 ","Method Call Expr ","Simple Name toCharArray ","Assign Expr ASSIGN ","Array Access Expr 0 ","Method Call Expr ","Integer Literal Expr Zero  ","Simple Name toLowerCase ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Object Creation Expr String Optional.empty Optional.empty ","Class Or Interface Type String "]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_getAllMethods","callMethodNameReferTo":{},"num":66,"succs":[[1,26],[38,2],[23,3,9],[39,4],[43,5],[51,6],[7,9,45,52,53],[55,8],[5,62],[31,10,65],[15,13,11,17,16,14,12],[12],[],[19,18,14],[],[21,24],[23,25],[1,9,0],[],[],[21],[],[21,20],[],[],[],[32],[28,20],[],[27],[29],[29,30],[27,34,33],[27],[28,35,36],[],[37,20],[],[5,3,4],[29,41,40],[],[42],[],[49],[22],[47,44],[44,47,45],[44,48],[44,47,46],[50,44,22],[44],[7,8],[],[54],[],[30,56,57],[],[58,60,59],[],[],[61,46],[],[63,47,40],[64,48],[],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Name Expr includingPrivate ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type List ","Simple Name getAllMethods ","Parameter Class clazz ","Parameter boolean includingPrivate ","Block Stmt ","Null Literal Expr ","Class Or Interface Type Method ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Simple Name includingPrivate ","Class Or Interface Type Class ","Primitive Type boolean ","Variable Declaration Expr ","Simple Name allMethods ","Name Expr Arrays ","Name Expr allMethods ","Name Expr allMethods ","Name Expr allMethods ","Variable Declarator List<Method> allMethods = ","Class Or Interface Type List ","Method Call Expr ","Simple Name asList ","Method Call Expr ","Simple Name getMethods ","Block Stmt ","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr ArrayList<Method> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Variable Declarator Class current = ","Class Or Interface Type Class ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name addAll ","Method Call Expr ","Name Expr Arrays ","Simple Name asList ","Method Call Expr ","Simple Name getDeclaredMethods ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getSuperclass ","ReturnStmt"]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_translateSetterName","callMethodNameReferTo":{},"num":62,"succs":[[19,1],[20,3,21,2],[8,26,3,25],[28,4],[41,5],[6,50],[59,7],[8,33,25],[12,9,11,14,13,10],[10],[],[12],[],[18,16],[6,3,5,0,4,7],[16],[],[15,16],[],[2],[22,15,23],[],[],[24],[],[],[27],[],[34],[17],[29],[32,29,30],[43],[31],[36,35,29],[29],[37,17,38],[],[39,40],[24],[],[46],[30],[45,42,44],[],[42],[48,47,42],[42],[49,30],[],[51,52,53],[54,43],[],[57,56,44],[55],[],[],[45,58],[55],[31,60,52],[32,61],[]],"nodeAttribute":["If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type String ","Simple Name translateSetterName ","Parameter String methodName ","Block Stmt ","Name Expr methodName ","Simple Name methodName ","Name Expr methodName ","Class Or Interface Type String ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name startsWith ","String Literal Expr Not Empty  ","StringLiteralExpr","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","Simple Name fromName ","Name Expr fromName ","Name Expr fromName ","Name Expr fromNameChars ","Name Expr fromName ","Variable Declarator String fromName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name length ","Variable Declaration Expr ","Simple Name fromNameChars ","Name Expr fromNameChars ","Name Expr Character ","Name Expr fromNameChars ","Variable Declarator char[] fromNameChars = ","Array Type 1 ","Method Call Expr ","Simple Name toCharArray ","Assign Expr ASSIGN ","Array Access Expr 0 ","ASSIGN","Method Call Expr ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Simple Name toLowerCase ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Object Creation Expr String Optional.empty Optional.empty ","Class Or Interface Type String "]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_getGetters","callMethodNameReferTo":{},"num":287,"succs":[[1,63],[71,3,2],[82,81,38,85,3,55],[73,4],[5,87],[6,90,89,7,88],[92],[93,8],[9,103],[10,104,95,105,11],[92],[12,107],[14,13,110,109,108],[92],[15,113],[17,115,114,16],[92],[18,118],[20,121,19,120,119],[92],[126,21],[22,141],[150,23],[24,158],[161,25],[26,175],[28,27,184,185,29],[34,186,29],[34,193,192,29],[194,30,32],[195,32,31,196,197],[34,202],[33],[34,209],[216,35],[219,36],[37,222],[2,227],[39,66,229],[46,43,44,47,45,40,42,41],[41],[],[49,43,48],[],[57,51],[53,61],[56,62],[1,38,0],[],[],[51],[],[53],[],[53,52],[56,84],[],[58,59,60],[],[],[],[],[],[67],[65],[],[65,64],[65,68,69],[65],[70],[],[20,14,4,22,24,17,21,35,8,7,23,25,34,37,26,36,11,29],[73],[80],[73,72],[74,73],[75,73],[73,76],[73,77],[73,78],[73],[],[86,83,52],[],[],[240,242,40,243,244,241,41],[],[6],[],[],[91,72],[],[],[99],[74],[94],[95,94],[94,96],[97,94],[101,94,100],[94],[74,102],[],[10],[106],[],[],[13],[111,96],[],[112],[],[],[16],[97,116,117],[],[],[106],[19],[123,122],[],[125],[75,124],[],[],[],[134],[98],[127],[128,130,127],[143],[129],[129,131],[129,132],[135,127,136],[127],[138,98,137],[],[139,140],[106],[],[146],[128],[142,144,145],[],[142],[142,148,147],[142],[128,149],[],[151,153,152],[154,143],[],[144,155,156],[125],[],[157,145],[125],[129,159,152],[160,130],[],[169],[50,54,76],[162],[132,163,162],[164,133],[165,78],[79,166],[167],[171,170,162],[162],[172,50,54,173],[],[174,76],[],[180],[131,77,177],[],[176],[176,178],[181,182,177],[177],[183],[],[27],[28,191],[176,152,187],[189,131,188],[77,190],[],[],[],[],[],[31],[178,120,198],[],[199,200],[183],[],[179,201],[],[203,204,152],[163,205],[206,207],[],[],[],[125],[210,152,211],[164,212],[215,213,214],[],[],[],[132],[217,133,152],[218,165],[],[220,152,78],[221,166],[],[223,224,152],[167,225],[79,226],[],[],[168,64,228],[],[],[231,251],[263,232],[84,233,239],[264,234],[267,235],[275,236],[237,239,269,276,120],[277,238],[235,284],[256,85,229],[245,246,241],[],[83,249],[84,250],[231,239,230],[],[],[83],[83,247],[],[],[257],[253,247],[],[252],[254],[255,254],[252,259,258],[252],[253,260,261],[],[262,247],[],[233,235,234],[254,265,152],[266],[],[273],[248],[268,271],[268,271,269],[268,272],[271,268,270],[274,268,248],[268],[237,238],[183],[255,278,279],[],[280,282,281],[],[],[283,270],[],[285,271,152],[286,272],[]],"nodeAttribute":["Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Continue Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Continue Stmt ","If Stmt ","Binary Expr LESS ","Continue Stmt ","If Stmt ","Unary Expr ! ","Continue Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Continue Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter NoSuchFieldException e ","If Stmt ","Binary Expr AND ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type MapWrapperAny ","Simple Name getGetters ","Parameter Map<String, Type> lookup ","Parameter ClassInfo classInfo ","Parameter boolean includingPrivate ","Block Stmt ","Simple Name List ","Class Or Interface Type Binding ","Name Expr lookup ","Simple Name lookup ","Name Expr classInfo ","Simple Name classInfo ","Name Expr classInfo ","Name Expr includingPrivate ","Simple Name includingPrivate ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type ClassInfo ","Primitive Type boolean ","Variable Declaration Expr ","Name Expr getters ","Simple Name getters ","Name Expr getters ","Variable Declarator ArrayList<Binding> getters = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr method ","Simple Name method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Name Expr method ","Class Or Interface Type Method ","Simple Name getAllMethods ","Field Access Expr ","Simple Name clazz ","Simple Name includingPrivate ","Method Declaration ","Simple Name clazz ","Block Stmt ","Name Expr Modifier ","Simple Name isStatic ","Method Call Expr ","Simple Name getModifiers ","continue;","Variable Declaration Expr ","Simple Name methodName ","Name Expr methodName ","Name Expr methodName ","Name Expr methodName ","Name Expr methodName ","Variable Declarator String methodName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getName ","Block Stmt ","Simple Name skipObject ","Simple Name equals ","StringLiteralExpr","Block Stmt ","Method Call Expr ","LESS","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name startsWith ","String Literal Expr Not Empty  ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name length ","Field Access Expr ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Simple Name toName ","Simple Name format ","Name Expr toName ","Name Expr toNameChars ","Name Expr toName ","Name Expr toName ","Name Expr toName ","Variable Declarator String toName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name length ","Variable Declaration Expr ","Simple Name toNameChars ","Name Expr toNameChars ","Name Expr Character ","Name Expr toNameChars ","Variable Declarator char[] toNameChars = ","Simple Name append ","Method Call Expr ","Simple Name toCharArray ","Assign Expr ASSIGN ","Array Access Expr 0 ","ASSIGN","Method Call Expr ","Integer Literal Expr Zero  ","Simple Name toLowerCase ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Object Creation Expr String Optional.empty Optional.empty ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name getter ","Name Expr getter ","Name Expr getter ","Class Or Interface Type String ","Name Expr getter ","Class Or Interface Type Config ","Name Expr getter ","Variable Declarator Binding getter = ","Class Or Interface Type Binding ","Object Creation Expr Binding Optional.empty Optional.empty ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name getGenericReturnType ","Variable Declaration Expr ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Variable Declarator Field field = ","Class Or Interface Type Field ","Null Literal Expr ","NullLiteralExpr","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Method Call Expr ","Method Call Expr ","Simple Name getDeclaredField ","Simple Name getDeclaringClass ","Block Stmt ","Class Or Interface Type NoSuchFieldException ","Simple Name e ","Block Stmt ","Assign Expr ASSIGN ","AND","Method Call Expr ","Null Literal Expr ","Simple Name isTransient ","Method Call Expr ","Simple Name getModifiers ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name name ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name method ","Assign Expr ASSIGN ","Field Access Expr ","Method Call Expr ","Simple Name annotations ","Simple Name getAnnotations ","Method Call Expr ","Simple Name add ","ReturnStmt","Expression Stmt ","If Stmt ","Name Expr includingPrivate ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name getAllMethods ","Parameter Class clazz ","Parameter boolean includingPrivate ","Block Stmt ","Null Literal Expr ","Class Or Interface Type Method ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Primitive Type boolean ","Variable Declaration Expr ","Simple Name allMethods ","Name Expr Arrays ","Name Expr allMethods ","Name Expr allMethods ","Name Expr allMethods ","Variable Declarator List<Method> allMethods = ","Class Or Interface Type List ","Method Call Expr ","Simple Name asList ","Method Call Expr ","Simple Name getMethods ","Block Stmt ","Assign Expr ASSIGN ","Object Creation Expr ArrayList<Method> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Name Expr current ","Name Expr current ","Name Expr current ","Variable Declarator Class current = ","Class Or Interface Type Class ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name addAll ","Method Call Expr ","Name Expr Arrays ","Simple Name asList ","Method Call Expr ","Simple Name getDeclaredMethods ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getSuperclass "]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_collectTypeVariableLookup","callMethodNameReferTo":{},"num":159,"succs":[[45,1],[58,2],[4,36,60,3,59],[4,46,26,62],[63,5],[6,17,65,64,38],[67,7],[8,75],[82,9],[10,11,94,14],[11,100],[12,15,105,104,95],[13,110],[118,14],[11,97,109],[16,130],[17,26,50,62],[18,136],[22,19,137,64,40],[20,139],[146,21],[22,26,52,62],[152,23],[42,153,24,25,64],[53,26,25,62],[155],[31,29,30,27,32,28],[28],[],[30,33,35,34],[],[44,37],[4,22,17,25,1,0],[],[],[],[37],[],[36,37],[37,5,38],[39,37],[18,37,40],[37,41],[42,37],[],[54],[47],[],[46,47],[48,47],[49,47],[47,50],[47,51],[47,52],[55,56,47],[47],[57],[],[3],[61],[],[],[],[6,9,8,15,16,7],[138,154,66],[],[],[71],[39],[68],[69,68],[73,72,68],[68],[39,74],[],[78],[69],[76],[79,76,80],[76],[69,81],[],[88],[70],[86,83],[84,83],[85,83],[86,83],[89,90,83],[83],[91,92],[],[70,93],[],[13,12],[96,99],[],[96,95],[96,97],[96,98],[96,102,101],[96],[103],[],[],[106,107],[84,108],[],[],[],[113],[85,98],[111],[114,115,111],[111],[116,98],[117,85],[],[119,121,48,120],[],[122,124,123],[77,99],[125,126,123],[],[129,86],[127,112],[128],[],[],[],[49,131,132],[],[134,133,26],[],[135,87,37],[],[20,21,19],[],[],[142],[41],[140],[144,143,140],[140],[145,41],[],[147,148,51],[],[150,26,149],[],[151,141,37],[],[24],[],[],[157,156],[],[43,158,123],[128]],"nodeAttribute":["Expression Stmt ","If Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Throw Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type Map ","Simple Name collectTypeVariableLookup ","Parameter Type type ","Block Stmt ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Name Expr type ","Simple Name type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Class Or Interface Type Type ","Variable Declaration Expr ","Name Expr vars ","Simple Name vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Name Expr vars ","Variable Declarator HashMap<String, Type> vars = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Type> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Null Literal Expr ","EQUALS","NullLiteralExpr","ReturnStmt","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Name Expr pType ","Name Expr pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Variable Declaration Expr ","Simple Name actualTypeArguments ","Name Expr actualTypeArguments ","Variable Declarator Type[] actualTypeArguments = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name getActualTypeArguments ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getRawType ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Field Access Expr ","Method Call Expr ","Simple Name length ","Simple Name getTypeParameters ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name variable ","Name Expr variable ","Variable Declarator TypeVariable variable = ","Class Or Interface Type TypeVariable ","Array Access Expr i ","Method Call Expr ","Simple Name getTypeParameters ","Method Call Expr ","Simple Name put ","Binary Expr PLUS ","Array Access Expr i ","Binary Expr PLUS ","PLUS","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name getName ","StringLiteralExpr","Simple Name getCanonicalName ","Method Call Expr ","Simple Name putAll ","Method Call Expr ","Simple Name collectTypeVariableLookup ","Method Call Expr ","Simple Name getGenericSuperclass ","Block Stmt ","Class Or Interface Type Class ","Class","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name putAll ","Method Call Expr ","Simple Name collectTypeVariableLookup ","Method Call Expr ","Simple Name getGenericSuperclass ","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_allBindings","callMethodNameReferTo":{},"num":76,"succs":[[25,1],[2,39],[3,42],[5,46,4,44,45],[5,48],[6,50],[52,7,8,53,45],[54,8],[9,56],[10,11,58,59,45],[11,60],[64,12],[13,17,65,66,45],[15,67,14],[15,17,12],[16,69],[71,14],[18,75,32],[22,19,20,21],[],[24,21,23],[],[17,2,11,5,0,8,1],[],[],[33],[27],[],[27,26],[27,28],[27,29],[30,27],[31,27],[27,34,35],[27],[36,37],[],[38],[],[26,40,41],[],[],[4],[3],[],[],[47],[],[43,49,28],[],[7],[6],[],[47],[29,55,51],[],[10],[9],[],[47],[30,61,62],[],[57,63],[],[13],[],[47],[16],[69],[70],[69],[31,73,72],[],[68,74],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","For Each Stmt ","Name Expr bindingTypeWrappers ","Variable Declaration Expr ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type List ","Simple Name allBindings ","Block Stmt ","Simple Name List ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr bindings ","Simple Name bindings ","Name Expr bindings ","Name Expr bindings ","Name Expr bindings ","Name Expr bindings ","Name Expr bindings ","Variable Declarator ArrayList<Binding> bindings = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name addAll ","Name Expr fields ","Block Stmt ","Name Expr setters ","Name Expr setters ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name addAll ","Block Stmt ","Name Expr getters ","Name Expr getters ","Unary Expr - ","Method Call Expr ","Simple Name addAll ","Block Stmt ","Name Expr ctor ","Name Expr ctor ","Null Literal Expr ","Method Call Expr ","Simple Name addAll ","Field Access Expr ","Simple Name parameters ","Block Stmt ","Name Expr bindingTypeWrappers ","Null Literal Expr ","Block Stmt ","Class Or Interface Type Object ","Simple Name setter ","Class Or Interface Type WrapperDescriptor ","Method Call Expr ","Simple Name addAll ","Field Access Expr ","Simple Name parameters ","ReturnStmt"]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_allDecoderBindings","callMethodNameReferTo":{},"num":56,"succs":[[1,18],[31,2],[3,34],[37,4],[6,5,41,39,40],[43,6],[7,47,8],[10,8],[9,49],[7,51],[11,24,55],[12,14,13,15],[],[16,14,17],[],[0,1,10,2,3,6],[],[],[25],[20],[],[20,19],[21,20],[22,20],[23,20],[26,27,20],[20],[28,29],[],[30],[],[32,19,33],[],[],[35,21,36],[],[],[5],[4],[],[],[42],[],[22,45,44],[],[46,38],[],[9],[49],[50],[49],[52,53,23],[],[54,48],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","For Each Stmt ","Name Expr bindingTypeWrappers ","Variable Declaration Expr ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type List ","Simple Name allDecoderBindings ","Block Stmt ","Simple Name List ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr bindings ","Simple Name bindings ","Name Expr bindings ","Name Expr bindings ","Name Expr bindings ","Name Expr bindings ","Variable Declarator ArrayList<Binding> bindings = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name addAll ","Name Expr fields ","Method Call Expr ","Simple Name addAll ","Name Expr setters ","Block Stmt ","Name Expr ctor ","Name Expr ctor ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name addAll ","Field Access Expr ","Simple Name parameters ","Block Stmt ","Name Expr setter ","Simple Name setter ","Class Or Interface Type WrapperDescriptor ","Method Call Expr ","Simple Name addAll ","Field Access Expr ","Simple Name parameters ","ReturnStmt"]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_allEncoderBindings","callMethodNameReferTo":{},"num":29,"succs":[[11,1],[22,2],[25,3],[15,4,28],[8,6,5,7],[],[7,9,10],[],[2,0,3,1],[],[],[16],[13],[],[13,12],[13,14],[17,13,18],[13],[20,19],[],[21],[],[24,23,12],[],[],[26,27,14],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type List ","Simple Name allEncoderBindings ","Block Stmt ","Simple Name List ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr bindings ","Simple Name bindings ","Name Expr bindings ","Name Expr bindings ","Variable Declarator ArrayList<Binding> bindings = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Binding> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name addAll ","Name Expr fields ","Method Call Expr ","Simple Name addAll ","Name Expr getters ","ReturnStmt"]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_encodeTos","callMethodNameReferTo":{},"num":149,"succs":[[19,1],[27,2],[3,38],[4,45],[48,5],[6,7,58],[11,29,7,31],[8,60],[9,63],[65,6,59,10,64],[6,67],[51,69,12],[16,13,14,15],[],[17,18,15],[],[4,11,3,1,0,5,2],[],[],[23],[21,43],[],[21,20,43],[24,25,21],[21],[26],[],[32],[29,41],[],[29,28,41],[29,30],[33,29,34],[29],[35,36],[],[37],[],[44,39,40,28,20],[],[42],[],[],[],[90,87,84,86,88,89,85],[44,47,46,30,22],[],[42],[52],[31],[49],[50,49],[53,49,54],[49],[56,55],[],[57,31],[],[8],[60],[62],[9,60,59],[60],[10],[],[66],[],[50,61,68],[],[],[71,72,107],[72,42],[73,109],[74,75,112],[71,119,108,75],[76,114],[120,77],[79,78,94,113,121],[122,79],[127,80],[131,81],[140,82],[83,144],[147,74],[],[86],[],[97,41],[100,42],[103,43],[70],[41],[91,41],[92,41],[43],[94,77,43],[95,43],[99,98],[],[],[102,101],[],[],[106,105,104],[],[],[],[73],[109],[111],[108,109],[109],[79,80,83,76,82,81],[114],[118],[113,77,114],[115,114],[116,114],[114],[],[78],[],[124,91,123,125],[],[115,126,95],[66],[],[129,116,96,128],[],[130,92],[],[136],[133,110],[],[117,132],[134],[133,138,137],[133],[139],[],[110,142,141],[132,143],[],[],[117,145,142],[146,134],[],[93,148,135],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr encodeTos ","Variable Declaration Expr ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type List ","Simple Name encodeTos ","Block Stmt ","Simple Name List ","Class Or Interface Type EncodeTo ","Variable Declaration Expr ","Name Expr previousAppearance ","Simple Name previousAppearance ","Name Expr previousAppearance ","Variable Declarator HashMap<String, Integer> previousAppearance = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Integer> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Name Expr encodeTos ","Simple Name encodeTos ","Name Expr encodeTos ","Name Expr encodeTos ","Variable Declarator ArrayList<EncodeTo> encodeTos = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<EncodeTo> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name collectEncodeTo ","Class Or Interface Type Object ","Simple Name encodeTos ","Simple Name fields ","Simple Name previousAppearance ","Method Declaration ","Method Call Expr ","Simple Name collectEncodeTo ","Name Expr getters ","Variable Declaration Expr ","Simple Name removedNulls ","Name Expr removedNulls ","Name Expr removedNulls ","Variable Declarator ArrayList<EncodeTo> removedNulls = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<EncodeTo> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name size ","Block Stmt ","Name Expr encodeTo ","Simple Name encodeTo ","Name Expr encodeTo ","Class Or Interface Type EncodeTo ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name add ","ReturnStmt","For Each Stmt ","Name Expr fields ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name collectEncodeTo ","Parameter ArrayList<EncodeTo> encodeTos ","Parameter List<Binding> fields ","Parameter HashMap<String, Integer> previousAppearance ","Block Stmt ","Field Access Expr ","Name Expr encodeTos ","Name Expr encodeTos ","Name Expr previousAppearance ","Name Expr previousAppearance ","Name Expr previousAppearance ","Class Or Interface Type ArrayList ","Simple Name ArrayList ","Class Or Interface Type EncodeTo ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Class Or Interface Type HashMap ","Simple Name HashMap ","Class Or Interface Type String ","Class Or Interface Type Integer ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Class Or Interface Type Binding ","Block Stmt ","Name Expr toName ","Simple Name toName ","Name Expr toName ","Name Expr toName ","Name Expr toName ","Class Or Interface Type String ","Simple Name toNames ","Block Stmt ","Simple Name containsKey ","Method Call Expr ","Simple Name set ","Method Call Expr ","Null Literal Expr ","Simple Name get ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name size ","Variable Declaration Expr ","Name Expr encodeTo ","Field Access Expr ","Name Expr encodeTo ","Name Expr encodeTo ","Variable Declarator EncodeTo encodeTo = ","Class Or Interface Type EncodeTo ","Object Creation Expr EncodeTo Optional.empty Optional.empty ","Class Or Interface Type EncodeTo ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name binding ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name toName ","Method Call Expr ","Simple Name add "]}
{"Version":"0.9.22","MethodName":"ClassDescriptor_collectEncodeTo","callMethodNameReferTo":{},"num":84,"succs":[[1,2,41],[2,26],[3,43],[4,5,46],[1,53,42,5],[6,48],[54,7],[9,27,8,47,55],[56,9],[10,62],[66,11],[75,12],[13,79],[82,4],[21,18,15,17,20,19,16],[],[17],[],[31,23],[34,26],[37,28],[0],[23],[],[22,23],[24,23],[],[28],[],[27,7,28],[29,28],[33,32],[],[],[36,35],[],[],[40,39,38],[],[],[],[3],[43],[45],[42,43],[43],[9,10,13,6,12,11],[48],[52],[47,7,48],[49,48],[50,48],[48],[],[8],[],[58,22,57,59],[],[49,60,29],[61],[],[],[64,50,30,63],[],[65,24],[],[71],[68,44],[],[51,67],[69],[68,73,72],[68],[74],[],[44,77,76],[67,78],[],[],[51,80,77],[81,69],[],[25,83,70],[]],"nodeAttribute":["For Each Stmt ","Name Expr fields ","Variable Declaration Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","Void Type ","Simple Name collectEncodeTo ","Parameter ArrayList<EncodeTo> encodeTos ","Parameter List<Binding> fields ","Parameter HashMap<String, Integer> previousAppearance ","Block Stmt ","Field Access Expr ","Simple Name encodeTos ","Name Expr encodeTos ","Name Expr encodeTos ","Simple Name fields ","Name Expr previousAppearance ","Simple Name previousAppearance ","Name Expr previousAppearance ","Name Expr previousAppearance ","Class Or Interface Type ArrayList ","Simple Name ArrayList ","Class Or Interface Type EncodeTo ","Class Or Interface Type List ","Simple Name List ","Class Or Interface Type Binding ","Class Or Interface Type HashMap ","Simple Name HashMap ","Class Or Interface Type String ","Class Or Interface Type Integer ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Class Or Interface Type Binding ","Block Stmt ","Name Expr toName ","Simple Name toName ","Name Expr toName ","Name Expr toName ","Name Expr toName ","Class Or Interface Type String ","Simple Name toNames ","Block Stmt ","Simple Name containsKey ","Method Call Expr ","Simple Name set ","Method Call Expr ","Null Literal Expr ","Simple Name get ","NullLiteralExpr","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name size ","Variable Declaration Expr ","Name Expr encodeTo ","Field Access Expr ","Name Expr encodeTo ","Name Expr encodeTo ","Variable Declarator EncodeTo encodeTo = ","Class Or Interface Type EncodeTo ","Object Creation Expr EncodeTo Optional.empty Optional.empty ","Class Or Interface Type EncodeTo ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name binding ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name toName ","Method Call Expr ","Simple Name add "]}
