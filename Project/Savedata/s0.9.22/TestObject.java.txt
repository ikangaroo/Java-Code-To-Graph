{"fileName":"TestObject.java","Version":"0.9.22","callMethodName":["setUp","test_field","getField1","test_null","test_empty_object","test_null_field","test_enum","test_array_field","test_array_field_is_null","getField1","test_array_field_is_null_via_getter","test_not_nullable","test_collection_value_not_nullable","test_not_omit_null","test_omit_null","getField1","test_name_conflict","test_private_class","test_indention","test_indention_with_empty_object","test_missing_notFirst","test_omit_default","test_omit_selft_defined","getHello","test_transient_field_getter"]}
{"Version":"0.9.22","MethodName":"TestObject_setUp","callMethodNameReferTo":{},"num":19,"succs":[[1,7],[12],[4,5,3,6],[],[5],[],[1,0],[10,8,9],[],[],[11],[],[13,14,9],[],[17,16,15],[],[],[18],[]],"nodeAttribute":["Assign Expr ASSIGN ","Method Call Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name setUp ","Block Stmt ","Expression Stmt ","Class Or Interface Type Gson ","ASSIGN","Object Creation Expr ByteArrayOutputStream Optional.empty Optional.empty ","Class Or Interface Type ByteArrayOutputStream ","Variable Declaration Expr ","Simple Name append ","Object Creation Expr JsonStream Optional.empty Optional.empty ","Name Expr JsonStream ","Name Expr baos ","Name Expr iter ","IntegerLiteralExpr"]}
{"Version":"0.9.22","MethodName":"TestObject_test_field","callMethodNameReferTo":{},"num":45,"succs":[[1,13],[21,2],[3,27],[30,4],[33],[10,7,6,8,9,12],[],[8],[],[11],[],[],[1,4,3,2,0],[17],[15],[],[14],[19,15,18],[15],[20],[],[24,23,22],[25,14],[],[26],[],[],[29,16,28],[],[],[32,31],[],[],[35,36,34],[],[37,39,40,38],[44,43],[26],[],[41],[42],[],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_field ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr com ","Name Expr ctx ","Name Expr val ","Variable Declarator TestObject2 obj = ","Method Call Expr ","Object Creation Expr TestObject2 Optional.empty Optional.empty ","Class Or Interface Type TestObject2 ","Assign Expr ASSIGN ","Name Expr JsonStream ","ASSIGN","String Literal Expr Not Empty  ","Name Expr stream ","StringLiteralExpr","Method Call Expr ","Name Expr stream ","Simple Name writeVal ","Marker Annotation Expr @JsonUnwrapper ","Simple Name append ","Name Expr lines ","Expression Stmt ","Class Or Interface Type JsonIterator ","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","'\\''","'\"'","Name Expr baos ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"TestObject2_getField1","callMethodNameReferTo":{},"num":8,"succs":[[3,2,1,4],[],[3],[],[5],[7,0,6],[],[]],"nodeAttribute":["If Stmt ","PUBLIC","Method Call Expr ","Simple Name valueType ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr field1 "]}
{"Version":"0.9.22","MethodName":"TestObject_test_null","callMethodNameReferTo":{},"num":34,"succs":[[11,1],[2,18],[21],[5,8,10,6,4,7],[],[6],[],[9],[],[],[2,0,1],[13,15,12,14],[],[],[16],[17],[],[],[20,19],[],[],[22,24,23],[],[27,28,25,26],[33,32],[29],[],[30],[31],[],[],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Switch Entry Stmt ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Object Creation Expr TypeLiteral<TestObject2> Optional.empty Optional.empty ","Void Type ","Class Or Interface Type TypeLiteral ","NullLiteralExpr","Simple Name enableDecoders ","Simple Name append ","Name Expr cache ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","StringLiteralExpr","'\\''","'\"'","Name Expr baos ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"TestObject_test_empty_object","callMethodNameReferTo":{},"num":32,"succs":[[1,11],[2,16],[19],[5,6,4,7,10,8],[],[6],[],[9],[],[],[2,1,0],[14,13,12],[],[],[15],[],[17,18],[],[],[22,20,21],[],[23,24,26,25],[31,30],[27],[],[28],[29],[],[],[],[],[]],"nodeAttribute":["Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_empty_object ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Return Stmt ","Name Expr stream ","Simple Name writeVal ","Object Creation Expr TestObject3 Optional.empty Optional.empty ","Class Or Interface Type TestObject3 ","Return Stmt ","Class Or Interface Type String ","Name Expr lines ","Method Call Expr ","Simple Name assertEquals ","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Simple Name get ","StringLiteralExpr","'\\''","'\"'","Name Expr baos ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"TestObject_test_null_field","callMethodNameReferTo":{},"num":38,"succs":[[1,12],[2,19],[22,3],[25],[7,9,5,11,8,6],[],[7],[],[10],[],[],[2,0,1,3],[15],[14],[],[16,17,14],[14],[18],[],[13,21,20],[],[],[23,24],[],[],[27,28,26],[],[30,31,32,29],[36,37],[33],[],[34],[35],[],[],[],[],[]],"nodeAttribute":["Expression Stmt ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Primitive Type long ","Simple Name test_null_field ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Name Expr obj ","Simple Name obj ","Variable Declarator TestObject4 obj = ","Class Or Interface Type TestObject4 ","Object Creation Expr TestObject4 Optional.empty Optional.empty ","Class Or Interface Type TestObject4 ","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Expression Stmt ","Class Or Interface Type String ","Simple Name close ","Method Call Expr ","Array Access Expr count++ ","Method Call Expr ","Method Call Expr ","Variable Declarator Type originalType = ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","StringLiteralExpr","'\\''","'\"'","Simple Name wrap ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"TestObject_test_enum","callMethodNameReferTo":{"71":"JsonStream.java_JsonStream_outer_serialize"},"num":79,"succs":[[15,1],[24,2],[31,3],[4,34],[37,5],[50,6],[68],[9,10,14,8,11,12],[],[10],[],[13],[],[],[4,5,0,6,3,2,1],[20],[17],[],[16],[16,18],[17,22,21],[17],[23],[],[25,27,26],[28,16],[],[29,30],[],[],[],[32,33,18],[],[],[35,36],[],[],[39,40,38],[],[44,42,41,43],[49,48],[45],[],[46],[47],[],[],[],[],[],[53],[52],[],[52,54,55],[52],[56,57],[59,60,58],[],[63,62,61],[],[67],[64],[],[65,66],[],[],[],[],[70,69,71],[],[72,74,73],[78,19,51,77],[76,75,73],[],[45],[45],[45],[],[]],"nodeAttribute":["Expression Stmt ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_enum ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Variable Declarator TestObject5 obj = ","Class Or Interface Type TestObject5 ","Object Creation Expr TestObject5 Optional.empty Optional.empty ","Class Or Interface Type TestObject5 ","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Field Access Expr ","Simple Name append ","Name Expr MyEnum ","Simple Name HELLO ","Method Call Expr ","Name Expr stream ","Simple Name writeVal ","Assign Expr ASSIGN ","Simple Name append ","Name Expr lines ","Method Call Expr ","Expression Stmt ","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","StringLiteralExpr","'\\''","'\"'","Name Expr baos ","Simple Name toString ","Variable Declaration Expr ","Name Expr cfg ","Name Expr val ","Variable Declarator Config dynamicCfg = ","Simple Name append ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name encodingMode ","Field Access Expr ","Class Or Interface Type Builder ","Name Expr EncodingMode ","Simple Name DYNAMIC_MODE ","IntegerLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","PLUS","Name Expr val ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Name Expr JsonStream ","Simple Name serialize "]}
{"Version":"0.9.22","MethodName":"TestObject_test_array_field","callMethodNameReferTo":{},"num":46,"succs":[[1,13],[21,2],[33,3],[4,36],[39],[12,10,6,9,8,7],[],[8],[],[11],[],[],[4,1,3,2,0],[17],[15],[],[14],[15,19,18],[15],[20],[],[24,22,23],[14,25],[],[26,27,28],[],[],[],[29,30,31],[32],[32],[32],[],[34,16,35],[],[],[38,37],[],[],[41,40,42],[],[43],[44,45],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_array_field ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Name Expr end ","Variable Declarator TestObject6 obj = ","Class Or Interface Type TestObject6 ","Object Creation Expr TestObject6 Optional.empty Optional.empty ","Class Or Interface Type TestObject6 ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Simple Name append ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Name Expr globalMapKeyEncoders ","Simple Name append ","Simple Name writeVal ","Simple Name appendWrappers ","Class Or Interface Type Object ","Name Expr lines ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr baos ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"TestObject_test_array_field_is_null","callMethodNameReferTo":{},"num":32,"succs":[[12,1],[2,19],[22,3],[25],[5,7,6,8,11,9],[],[7],[],[10],[],[],[3,2,1,0],[15],[14],[],[16,17,14],[14],[18],[],[13,21,20],[],[],[24,23],[],[],[27,26,28],[],[29],[31,30],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_array_field_is_null ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Variable Declarator TestObject6 obj = ","Class Or Interface Type TestObject6 ","Object Creation Expr TestObject6 Optional.empty Optional.empty ","Class Or Interface Type TestObject6 ","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Method Call Expr ","Simple Name append ","Name Expr lines ","Expression Stmt ","Simple Name assertEquals ","Enclosed Expr ","Method Call Expr ","StringLiteralExpr","Name Expr baos ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"TestObject7_getField1","callMethodNameReferTo":{},"num":14,"succs":[[4,5,2,3,1],[],[],[11,4],[],[6],[0,12,13],[9,8],[],[10],[],[],[],[]],"nodeAttribute":["Method Declaration ","Normal Annotation Expr @JsonProperty(defaultValueToOmit = \"void\") ","PUBLIC","Name Expr lines ","String Literal Expr Not Empty  ","Block Stmt ","Return Stmt ","Member Value Pair ","Simple Name defaultValueToOmit ","String Literal Expr Not Empty  ","StringLiteralExpr","Primitive Type int ","ReturnStmt","Name Expr field1 "]}
{"Version":"0.9.22","MethodName":"TestObject_test_array_field_is_null_via_getter","callMethodNameReferTo":{},"num":32,"succs":[[1,12],[19,2],[3,22],[25],[6,7,9,5,8,11],[],[7],[],[10],[],[],[0,3,1,2],[15],[14],[],[14,16,17],[14],[18],[],[21,13,20],[],[],[23,24],[],[],[27,28,26],[],[29],[30,31],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_array_field_is_null_via_getter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Variable Declarator TestObject7 obj = ","Method Call Expr ","Object Creation Expr TestObject7 Optional.empty Optional.empty ","Name Expr JsoniterSpi ","Method Call Expr ","Name Expr stream ","Simple Name writeVal ","Method Call Expr ","Name Expr stream ","Simple Name close ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr baos ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"TestObject_test_not_nullable","callMethodNameReferTo":{"49":"JsonStream.java_JsonStream_outer_serialize","54":"JsonStream.java_JsonStream_outer_serialize"},"num":64,"succs":[[13,1],[2,21],[3,31],[4,46],[7,5,53,52],[6,54],[59],[63,62],[11,9,10,12],[],[11],[],[0,3,4,1,2],[17],[15],[],[14],[18,19,15],[15],[20],[],[24,22,23],[25,14],[],[28,26,27],[],[],[],[29],[30],[],[35],[33],[],[33,32],[36,33,37],[33],[39,38],[41,40,42],[],[43],[],[45,44],[],[],[],[49,47,48],[],[30],[16,50,32,51],[],[],[6,5],[7,61],[57,55,56,34],[],[],[58],[],[60],[],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NullPointerException ignore ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_not_nullable ","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Variable Declarator TestObject8 obj = ","Class Or Interface Type TestObject8 ","Object Creation Expr TestObject8 Optional.empty Optional.empty ","Class Or Interface Type TestObject8 ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name field1 ","Simple Name setter ","Array Creation Level Dimension Empty ","Array Initializer Expr ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Name Expr config ","Class Or Interface Type String ","Simple Name equals ","Variable Declarator Config config = ","Simple Name append ","Method Call Expr ","Method Call Expr ","Simple Name build ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Variable Declarator long tracker = ","Field Access Expr ","Class Or Interface Type Builder ","Name Expr EncodingMode ","Simple Name DYNAMIC_MODE ","Method Call Expr ","Expression Stmt ","Method Call Expr ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr JsonStream ","Class Expr int.class ","Object Creation Expr TestObject8 Optional.empty Optional.empty ","Class Or Interface Type TestObject8 ","Name Expr stream ","Name Expr type ","Block Stmt ","Class Or Interface Type NullPointerException ","Simple Name ignore "]}
{"Version":"0.9.22","MethodName":"TestObject_test_collection_value_not_nullable","callMethodNameReferTo":{"176":"JsonStream.java_JsonStream_outer_serialize","129":"JsonStream.java_JsonStream_outer_serialize","72":"JsonStream.java_JsonStream_outer_serialize","152":"JsonStream.java_JsonStream_outer_serialize","106":"JsonStream.java_JsonStream_outer_serialize"},"num":184,"succs":[[36,1],[59,2],[69,3],[75,4],[5,92],[95,6],[10,9,104,105,7],[8,106],[10,17,109,24],[113,10,112,17,24],[11,114],[117,12],[122,13],[128,17,127,16,14],[129,15],[132,17,24],[17,136,24,135],[137,18],[140,19],[20,145],[23,21,151,24,150],[22,152],[24,155],[158,159,24],[160,25],[26,163],[168,27],[30,175,28,174],[176,29],[179],[182,183],[33,34,32,35],[],[34],[],[5,26,1,25,6,12,24,20,10,17,13,19,4,11,18,2,0,3,27],[55],[38],[],[37],[37,39],[40],[41],[41,42],[43],[44],[44,45],[46,44],[47],[48],[48,49],[50,48],[51],[52],[53,52],[38,56,57],[38],[58],[],[62,61,60],[37,63],[],[64,66,65],[],[],[],[67],[68],[],[70,72,71],[],[68],[39,73,74],[],[],[81],[77],[],[77,76],[77,78],[77,79],[77,82,83],[77],[85,84],[88,87,86],[],[89],[],[91,90],[],[],[],[93,40,61],[94],[],[96,97,61],[98,41],[101,100,99],[],[],[],[102],[103],[],[8,7],[9,111],[76,108,42,107],[],[],[110],[],[],[],[],[115,43,61],[116],[],[119,118,61],[44,120],[121],[],[],[124,123,125],[126,45],[],[103],[],[14,15],[16,134],[46,130,78,131],[],[],[133],[],[],[],[],[61,47,138],[139],[],[142,61,141],[48,143],[144],[],[],[148,146,147],[149,49],[],[103],[],[22,21],[23,157],[50,154,79,153],[],[],[156],[],[],[],[],[161,51,61],[162],[],[164,61,165],[166,52],[167],[],[],[171,170,172,169],[53,173],[],[68],[103],[],[29,28],[30,181],[80,177,54,178],[],[],[180],[],[],[],[]],"nodeAttribute":["Expression Stmt ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NullPointerException ignore ","Expression Stmt ","Variable Declaration Expr ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NullPointerException ignore ","Expression Stmt ","Expression Stmt ","Class Or Interface Type ConstructorDescriptor ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter NullPointerException ignore ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","Parameter NullPointerException ignore ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_collection_value_not_nullable ","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator TestObject9 obj = ","Class Or Interface Type TestObject9 ","Object Creation Expr TestObject9 Optional.empty Optional.empty ","Class Or Interface Type TestObject9 ","Expression Stmt ","Field Access Expr ","ASSIGN","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name field1 ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Class Or Interface Type JsonIterator ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr JsonStream ","Name Expr implClazz ","Variable Declaration Expr ","Name Expr config ","Simple Name config ","Simple Name breaks ","Name Expr config ","Name Expr config ","Variable Declarator Config config = ","Simple Name append ","Method Call Expr ","Method Call Expr ","Simple Name build ","Object Creation Expr ArrayList<Any> Optional.empty Optional.empty ","Simple Name encodingMode ","Field Access Expr ","Class Or Interface Type ArrayList ","Name Expr EncodingMode ","Simple Name DYNAMIC_MODE ","Assign Expr ASSIGN ","Object Creation Expr TestObject9 Optional.empty Optional.empty ","Class Or Interface Type TestObject9 ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name field1 ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Primitive Type byte ","NullLiteralExpr","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Method Call Expr ","Name Expr code ","Block Stmt ","Class Or Interface Type NullPointerException ","Simple Name ignore ","Assign Expr ASSIGN ","Object Creation Expr TestObject9 Optional.empty Optional.empty ","Class Or Interface Type TestObject9 ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr ArrayList Optional.empty Optional.empty ","Simple Name field2 ","Class Or Interface Type ArrayList ","Method Call Expr ","Field Access Expr ","Simple Name add ","Null Literal Expr ","Simple Name field2 ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Method Call Expr ","Name Expr bits ","Block Stmt ","Class Or Interface Type NullPointerException ","Simple Name ignore ","Assign Expr ASSIGN ","Object Creation Expr TestObject9 Optional.empty Optional.empty ","Class Or Interface Type TestObject9 ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr HashSet<String> Optional.empty Optional.empty ","Name Expr result ","Class Or Interface Type HashSet ","Method Call Expr ","Field Access Expr ","Simple Name add ","Null Literal Expr ","Simple Name field3 ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Name Expr stream ","Simple Name fail ","Block Stmt ","Class Or Interface Type NullPointerException ","Simple Name ignore ","Assign Expr ASSIGN ","Object Creation Expr TestObject9 Optional.empty Optional.empty ","Class Or Interface Type TestObject9 ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr HashMap<String, String> Optional.empty Optional.empty ","Name Expr result ","Class Or Interface Type HashMap ","Method Call Expr ","Field Access Expr ","Simple Name put ","String Literal Expr Not Empty  ","Null Literal Expr ","Name Expr result ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Name Expr stream ","Simple Name sLen ","Block Stmt ","Class Or Interface Type NullPointerException ","Simple Name ignore "]}
{"Version":"0.9.22","MethodName":"TestObject_test_not_omit_null","callMethodNameReferTo":{},"num":15,"succs":[[3,1,4,2],[],[3],[],[5],[6],[8,7,9],[],[10],[11,13,12],[],[],[],[14],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Void Type ","Simple Name test_not_omit_null ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Cast Expr ","Simple Name serialize ","Object Creation Expr TestObject10 Optional.empty Optional.empty ","Class Or Interface Type TestObject10 "]}
{"Version":"0.9.22","MethodName":"TestObject_test_omit_null","callMethodNameReferTo":{"18":"JsonStream.java_JsonStream_outer_serialize","73":"JsonStream.java_JsonStream_outer_serialize","59":"JsonStream.java_JsonStream_outer_serialize","46":"JsonStream.java_JsonStream_outer_serialize"},"num":76,"succs":[[15,1],[24,2],[38,3],[4,43],[5,49],[6,52],[56,7],[62,8],[65,9],[70],[11,14,12,13],[],[13],[],[4,9,6,0,8,7,5,2,3,1],[17,16,18],[],[19],[21,22,20],[],[],[],[23],[],[34],[26],[],[25],[27,25],[28],[29],[29,30],[31],[32],[35,36,26],[26],[37],[],[41,39,40],[42,25],[],[19],[],[45,46,44],[],[19],[27,47,48],[],[],[28,50,40],[51],[],[53,54,40],[29,55],[19],[],[59,58,57],[],[19],[60,61,30],[],[],[31,63,40],[64],[],[66,67,40],[68,32],[69],[],[],[71,72,73],[],[19],[75,33,74],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_omit_null ","Block Stmt ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TestObject11 Optional.empty Optional.empty ","Class Or Interface Type TestObject11 ","Variable Declaration Expr ","Name Expr obj ","Char Literal Expr '.' ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator TestObject11 obj = ","Class Or Interface Type TestObject11 ","Object Creation Expr TestObject11 Optional.empty Optional.empty ","Class Or Interface Type TestObject11 ","Name Expr isDoingStaticCodegen ","Field Access Expr ","ASSIGN","String Literal Expr Not Empty  ","Simple Name field1 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Assign Expr ASSIGN ","Object Creation Expr TestObject11 Optional.empty Optional.empty ","Class Or Interface Type TestObject11 ","Assign Expr ASSIGN ","Field Access Expr ","String Literal Expr Not Empty  ","Simple Name field2 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Assign Expr ASSIGN ","Object Creation Expr TestObject11 Optional.empty Optional.empty ","Class Or Interface Type TestObject11 ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name c ","Method Call Expr ","IntegerLiteralExpr","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize "]}
{"Version":"0.9.22","MethodName":"TestObject12_getField1","callMethodNameReferTo":{},"num":8,"succs":[[4,3,1,2],[],[3],[],[5],[0,7,6],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Simple Name set ","Simple Name getField1 ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr field1 "]}
{"Version":"0.9.22","MethodName":"TestObject_test_name_conflict","callMethodNameReferTo":{},"num":32,"succs":[[1,12],[2,19],[3,22],[25],[6,5,11,8,7,9],[],[7],[],[10],[],[],[2,0,3,1],[15],[14],[],[17,14,16],[14],[18],[],[21,20,13],[],[],[23,24],[],[],[28,27,26],[],[29],[30,31],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_name_conflict ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Variable Declarator TestObject12 obj = ","Class Or Interface Type TestObject12 ","Object Creation Expr TestObject12 Optional.empty Optional.empty ","Class Or Interface Type TestObject12 ","Method Call Expr ","Name Expr stream ","Simple Name writeVal ","Simple Name detectWrappers ","Name Expr stream ","Simple Name close ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr baos ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"TestObject_test_private_class","callMethodNameReferTo":{"20":"JsoniterSpi.java_JsoniterSpi_outer_getCurrentConfig"},"num":43,"succs":[[13,1],[23,2],[16,3,4,25,24],[4,8,28],[29,5,7,30],[31,6],[36],[41,42],[9,10,11,12],[],[11],[],[4,1,0],[17],[15],[],[14],[19,18,14],[14],[20,21],[15,22],[],[],[3],[26,27],[],[],[],[],[5,6],[7,40],[32,33,34],[],[],[35],[],[38,37],[],[39],[],[],[],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Parameter JsonException ignore ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_private_class ","Block Stmt ","Variable Declaration Expr ","Simple Name encodingMode ","Name Expr JsoniterSpi ","Name Expr encodingMode ","Variable Declarator EncodingMode encodingMode = ","Class Or Interface Type EncodingMode ","Method Call Expr ","Method Call Expr ","Simple Name encodingMode ","Simple Name getCurrentConfig ","Block Stmt ","Expression Stmt ","Simple Name equals ","Name Expr EncodingMode ","Simple Name REFLECTION_MODE ","ReturnStmt","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TestObject13 Optional.empty Optional.empty ","Class Or Interface Type TestObject13 ","Method Call Expr ","Simple Name fail ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Class Or Interface Type JsonException ","Simple Name ignore "]}
{"Version":"0.9.22","MethodName":"TestObject_test_indention","callMethodNameReferTo":{"60":"JsonStream.java_JsonStream_outer_serialize","92":"JsonStream.java_JsonStream_outer_serialize"},"num":106,"succs":[[14,1],[2,32],[3,42],[4,48],[5,52],[63,6],[75,7],[91,8],[95],[12,13,10,11],[],[12],[],[4,8,5,3,1,2,6,7,0],[17],[16],[],[16,19,18],[16],[20,21],[22,24,23],[],[27,25,26],[],[30,31],[28],[],[29],[],[],[],[],[38],[34],[],[33],[35],[35,36],[39,40,34],[34],[41],[],[43,45,44],[33,46],[],[47],[],[],[49,50,44],[51,35],[47],[],[58],[36,15],[53],[54,53,37,56],[76],[55],[59,60,53],[53],[62,15,61,36],[],[],[54,65,64],[],[66,68,67],[70,67,69],[],[47],[72,67,71],[47],[74,73,67],[47],[47],[47],[77],[],[79,76,78],[76],[81,80],[84,82,83],[],[87,86,85],[],[89,90],[88],[],[29],[],[],[],[92,55,44],[37,94,93,56],[],[],[97,57,96],[],[99,98,67],[100,67,101],[47],[67,102,103],[47],[105,104,67],[47],[47],[47]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_indention ","Block Stmt ","Variable Declaration Expr ","Name Expr dynamicCfg ","Simple Name dynamicCfg ","Variable Declarator Config dynamicCfg = ","Class Or Interface Type Config ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Class Or Interface Type Builder ","IntegerLiteralExpr","Name Expr EncodingMode ","Simple Name DYNAMIC_MODE ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator TestObject14 obj = ","Class Or Interface Type TestObject14 ","Object Creation Expr TestObject14 Optional.empty Optional.empty ","Class Or Interface Type TestObject14 ","Assign Expr ASSIGN ","Method Call Expr ","ASSIGN","String Literal Expr Not Empty  ","Simple Name field1 ","StringLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Primitive Type int ","Simple Name field2 ","Variable Declaration Expr ","Simple Name output ","Name Expr output ","Name Expr output ","Name Expr reflectionCfg ","Name Expr output ","Variable Declarator String output = ","Class Or Interface Type String ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Method Call Expr ","Simple Name assertEquals ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name reflectionCfg ","Variable Declarator Config reflectionCfg = ","Class Or Interface Type Config ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Class Or Interface Type Builder ","Name Expr EncodingMode ","Simple Name REFLECTION_MODE ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Method Call Expr ","Return Stmt ","Binary Expr PLUS ","Binary Expr PLUS ","Name Expr ctx ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"TestObject_test_indention_with_empty_object","callMethodNameReferTo":{"53":"JsoniterSpi.java_JsoniterSpi_outer_getCurrentConfig","27":"JsoniterSpi.java_JsoniterSpi_outer_getCurrentConfig"},"num":66,"succs":[[1,9],[33,2],[3,42],[58],[5,8,7,6],[],[7],[],[1,3,2,0],[16],[11],[],[10],[10,14,12],[],[13],[18,10,17],[10],[19,20],[22,23,21],[],[25,26,24],[],[31,32],[27,28],[],[30],[11,29],[],[],[],[],[],[35,36,34],[],[37],[39,40,12,38],[],[],[],[41],[],[13,43,44],[],[46,45],[47,48,49],[],[52,50,51],[],[56,57],[54,53],[],[30],[14,55],[],[],[],[],[59,61,60],[],[37],[15,64,63,62],[],[],[65],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_indention_with_empty_object ","Block Stmt ","Variable Declaration Expr ","Simple Name config ","Name Expr JsoniterSpi ","Name Expr config ","Name Expr config ","Name Expr JsoniterSpi ","Name Expr config ","Variable Declarator Config config = ","Class Or Interface Type Config ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Method Call Expr ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name copyBuilder ","Simple Name getCurrentConfig ","IntegerLiteralExpr","Name Expr EncodingMode ","Simple Name REFLECTION_MODE ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TestObject15 Optional.empty Optional.empty ","Class Or Interface Type TestObject15 ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Method Call Expr ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name copyBuilder ","Simple Name getCurrentConfig ","Name Expr EncodingMode ","Simple Name DYNAMIC_MODE ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TestObject15 Optional.empty Optional.empty ","Class Or Interface Type TestObject15 "]}
{"Version":"0.9.22","MethodName":"TestObject_test_missing_notFirst","callMethodNameReferTo":{"22":"JsoniterSpi.java_JsoniterSpi_outer_getCurrentConfig"},"num":42,"succs":[[1,7],[28],[4,5,3,6],[],[5],[],[1,0],[11],[9],[],[8],[8,12,13],[8],[14,15],[18,17,16],[],[19,21,20],[],[26,27],[23,22],[],[25],[24,9],[],[],[],[],[],[31,30,29],[],[32,34,33],[38,10,40,39],[35,33,36],[],[37],[37],[37],[],[],[],[41],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_missing_notFirst ","Block Stmt ","Variable Declaration Expr ","Simple Name cfg ","Name Expr JsoniterSpi ","Name Expr cfg ","Variable Declarator Config cfg = ","Class Or Interface Type Config ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Method Call Expr ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name copyBuilder ","Simple Name getCurrentConfig ","IntegerLiteralExpr","Name Expr EncodingMode ","Simple Name DYNAMIC_MODE ","Method Call Expr ","Simple Name assertEquals ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Expression Stmt ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TestObject16 Optional.empty Optional.empty ","Class Or Interface Type TestObject16 "]}
{"Version":"0.9.22","MethodName":"TestObject_test_omit_default","callMethodNameReferTo":{},"num":55,"succs":[[9,1],[2,24],[33,3],[47],[8,6,5,7],[],[7],[],[2,3,1,0],[14],[11],[],[10,11],[12],[15,11,16],[11],[18,17],[20,21,19],[],[22],[],[23],[],[],[26,25,27],[],[28],[31,30,10,29],[],[],[],[32],[],[34,35,12],[],[37,36],[40,38,39],[],[41,43,42],[],[45,46],[44],[],[23],[],[],[],[50,48,49],[],[28],[52,51,13,53],[],[],[54],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Field Access Expr ","Block Stmt ","Variable Declaration Expr ","Name Expr cfg ","Simple Name cfg ","Name Expr cfg ","Name Expr cfg ","Variable Declarator Config cfg = ","Class Or Interface Type Config ","Method Call Expr ","Method Call Expr ","Simple Name build ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name omitDefaultValue ","Boolean Literal Expr true ","Class Or Interface Type Builder ","true","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TestObject17 Optional.empty Optional.empty ","Class Or Interface Type TestObject17 ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name omitDefaultValue ","Boolean Literal Expr true ","Class Or Interface Type Builder ","Name Expr EncodingMode ","Simple Name DYNAMIC_MODE ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TestObject17 Optional.empty Optional.empty ","Class Or Interface Type TestObject17 "]}
{"Version":"0.9.22","MethodName":"TestObject_test_omit_selft_defined","callMethodNameReferTo":{},"num":55,"succs":[[1,9],[24,2],[33,3],[47],[7,5,8,6],[],[7],[],[0,1,3,2],[14],[11],[],[11,10],[12],[11,16,15],[11],[17,18],[20,21,19],[],[22],[],[23],[],[],[25,27,26],[],[28],[29,31,30,10],[],[],[],[32],[],[35,12,34],[],[36,37],[39,38,40],[],[41,43,42],[],[46,45],[44],[],[23],[],[],[],[48,50,49],[],[28],[13,53,52,51],[],[],[54],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_omit_selft_defined ","Block Stmt ","Variable Declaration Expr ","Array Creation Level Dimension NotEmpty ","Simple Name cfg ","Name Expr cfg ","Name Expr cfg ","Variable Declarator Config cfg = ","Class Or Interface Type Config ","Method Call Expr ","Method Call Expr ","Simple Name build ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name omitDefaultValue ","Boolean Literal Expr true ","Class Or Interface Type Builder ","true","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Simple Name intDigits ","Object Creation Expr TestObject18 Optional.empty Optional.empty ","Class Or Interface Type TestObject18 ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name omitDefaultValue ","Boolean Literal Expr true ","Class Or Interface Type Builder ","Name Expr EncodingMode ","Simple Name DYNAMIC_MODE ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr JsonStream ","Simple Name intDigits ","Object Creation Expr TestObject18 Optional.empty Optional.empty ","Class Or Interface Type TestObject18 "]}
{"Version":"0.9.22","MethodName":"TestObject19_getHello","callMethodNameReferTo":{},"num":8,"succs":[[3,1,4,2],[],[3],[],[5],[0,7,6],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Primitive Type int ","Simple Name getHello ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr hello "]}
{"Version":"0.9.22","MethodName":"TestObject_test_transient_field_getter","callMethodNameReferTo":{},"num":21,"succs":[[1,7],[17],[3,5,6,4],[],[5],[],[1,0],[10],[9],[],[9,11,12],[9],[15,13,14],[],[],[16],[],[18,8,19],[],[20],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_transient_field_getter ","Block Stmt ","Variable Declaration Expr ","Simple Name invoke ","Simple Name output ","Variable Declarator String output = ","Class Or Interface Type String ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TestObject19 Optional.empty Optional.empty ","Class Or Interface Type TestObject19 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"TestObject.java","Version":"0.9.22","callMethodName":["test_empty_class","test_empty_object","test_one_field","test_two_fields","handle","test_read_null","test_native_field","test_inheritance","test_incomplete_field_name","getSomeService","getSomeService","test_object_creation","canCreate","create","test_enum","test_maybe_empty_array_field","test_iterator","setFieldXXX","test_private_ref","setField1","test_setter_is_preferred","skip_object_lazy_any_to_string","test_non_ascii_field"]}
{"Version":"0.9.22","MethodName":"TestObject_test_empty_class","callMethodNameReferTo":{"15":"JsonIterator.java_JsonIterator_outer_parse"},"num":26,"succs":[[1,10],[20],[4,9,5,3,7,6],[],[5],[],[8],[],[],[0,1],[13],[12],[],[14,15,12],[12],[17,18,16],[],[],[19],[],[21,22],[],[24,11,23],[],[25],[]],"nodeAttribute":["Expression Stmt ","Method Call Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_long_double ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr head ","Simple Name iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Name Expr JsonIterator ","Name Expr slice ","Simple Name data ","StringLiteralExpr","Method Call Expr ","Simple Name assertNotNull ","Method Call Expr ","Name Expr iter ","Class Expr EmptyClass.class ","Class Or Interface Type EmptyClass "]}
{"Version":"0.9.22","MethodName":"TestObject_test_empty_object","callMethodNameReferTo":{"33":"JsonIterator.java_JsonIterator_outer_parse"},"num":97,"succs":[[19,1],[2,38],[3,42],[46,4],[5,55],[6,59],[63,7],[8,72],[81,9],[10,85],[92],[16,12,13,15,14,18],[],[14],[],[17],[],[],[5,3,8,6,2,9,0,10,7,4,1],[31],[21],[],[20,21],[21,22],[21,23],[24,21],[25,21],[26,21],[27,21],[21,28],[29,21],[32,33,21],[21],[34,36,35],[],[],[37],[],[39,40],[],[41,20],[],[43,22,44],[],[45,23],[],[49],[24],[47],[47,51,50],[47],[24,52,53],[],[54],[],[57,56],[],[48,58],[],[60,61,25],[],[26,62],[],[66],[27],[64],[68,64,67],[64],[27,70,69],[],[71],[],[75,74,73],[],[76],[77,78],[],[79],[],[65,80],[],[83,82,28],[],[84,29],[],[88],[30],[86],[90,86,89],[86],[30,91],[],[94,95,93],[],[76],[96,87],[]],"nodeAttribute":["Method Call Expr ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Call Expr ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Return Stmt ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Boolean Literal Expr true ","Name Expr iter ","Void Type ","Name Expr iter ","Name Expr type ","Void Type ","Simple Name iter ","Name Expr desc ","Simple Name lang ","Void Type ","Variable Declarator JsonIterator iter = ","Return Stmt ","Method Call Expr ","Name Expr JsonIterator ","Name Expr Array ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Name Expr jsonStream ","Method Call Expr ","Simple Name extensions ","Method Call Expr ","Simple Name reset ","Field Access Expr ","Simple Name buf ","Method Call Expr ","String Literal Expr Not Empty  ","Name Expr simpleObj ","Variable Declarator SimpleObject simpleObj = ","Field Access Expr ","Method Call Expr ","Simple Name read ","Class Expr SimpleObject.class ","Class Or Interface Type SimpleObject ","Method Call Expr ","Name Expr JsonStream ","Field Access Expr ","Simple Name field1 ","Method Call Expr ","Simple Name reset ","Field Access Expr ","Simple Name put ","Variable Declaration Expr ","Simple Name Map ","Name Expr obj ","Variable Declarator Object obj = ","Simple Name append ","Method Call Expr ","Name Expr iter ","Class Expr Object.class ","Name Expr String ","Variable Declaration Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","Zero IntegerLiteralExpr","Enclosed Expr ","Simple Name size ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name reset ","Name Expr cacheKey ","Simple Name buf ","Variable Declaration Expr ","Simple Name len ","Name Expr any ","Variable Declarator Any any = ","Primitive Type int ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Zero  ","Class Or Interface Type JsonStream ","Class Or Interface Type Long "]}
{"Version":"0.9.22","MethodName":"TestObject_test_one_field","callMethodNameReferTo":{"38":"JsonIterator.java_JsonIterator_outer_parse"},"num":129,"succs":[[22,1],[49,2],[54,3],[59,4],[63,5],[6,67],[77,7],[8,82],[9,86],[10,90],[98,11],[12,104],[13,114],[118],[16,15,17,18,19,21],[],[17],[],[20],[],[],[7,13,10,3,2,9,1,12,8,11,6,5,0,4],[36],[24],[],[23,24],[24,25],[26,24],[27,24],[28,24],[24,29],[24,30],[31,24],[32,24],[33,24],[34,24],[38,24,37],[24],[41,39,40],[],[],[44,43,42,45],[46],[],[47],[48],[],[],[],[50,51,52],[],[46],[23,53],[],[56,55,57],[],[46],[58,25],[],[61,60],[],[26,62],[],[65,27,64],[],[66,28],[],[71],[29],[68],[68,69],[68,73,72],[68],[74,75,29],[],[76],[],[79,78,80],[],[46],[81,69],[],[84,83],[],[85,70],[],[87,88,30],[],[89,31],[],[94],[32],[91],[91,92],[96,91,95],[91],[32,97],[],[101,99,100],[],[46],[103,102,92],[],[46],[106,105,107],[],[108,109],[111,110],[],[],[113,93,112],[],[],[46],[33,115,116],[],[34,117],[],[121,120,119],[],[46],[123,122,124],[125],[],[46],[126,127],[],[128,35],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Primitive Type long ","Simple Name test_one_field ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Name Expr iter ","Char Literal Expr '\\n' ","Name Expr iter ","Simple Name size ","Name Expr list ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Void Type ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Expression Stmt ","Method Call Expr ","Name Expr JsonIterator ","Simple Name field ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","StringLiteralExpr","'\\''","'\"'","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name readObject ","Method Call Expr ","Return Stmt ","String Literal Expr Not Empty  ","Method Call Expr ","Class Expr User.class ","Method Call Expr ","Name Expr JsonStream ","Method Call Expr ","Simple Name readObject ","Assign Expr ASSIGN ","Simple Name reset ","Field Access Expr ","Integer Literal Expr Note Zero  ","Expression Stmt ","Simple Name simpleObj ","Name Expr simpleObj ","Name Expr simpleObj ","Variable Declarator SimpleObject simpleObj = ","Simple Name assertEquals ","Method Call Expr ","Simple Name read ","Class Expr SimpleObject.class ","Class Or Interface Type SimpleObject ","Method Call Expr ","Expression Stmt ","Simple Name readInt ","Field Access Expr ","Simple Name field1 ","Expression Stmt ","Name Expr jsonStream ","Field Access Expr ","Name Expr result ","Method Call Expr ","Simple Name reset ","Simple Name iterator ","Simple Name buf ","Assign Expr ASSIGN ","Name Expr ctx ","Name Expr any ","Name Expr any ","Variable Declarator Any any = ","Name Expr ctx ","Method Call Expr ","Simple Name readAny ","Expression Stmt ","Simple Name assertEquals ","Name Expr Integer ","Method Call Expr ","Simple Name toString ","String Literal Expr Not Empty  ","Method Call Expr ","Expression Stmt ","Field Access Expr ","Method Call Expr ","Name Expr ValueType ","Simple Name INVALID ","Method Call Expr ","Simple Name valueType ","Simple Name get ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name reset ","Name Expr cacheKey ","Simple Name buf ","Method Call Expr ","Array Access Expr count++ ","String Literal Expr Not Empty  ","Method Call Expr ","Enclosed Expr ","Simple Name get ","String Literal Expr Not Empty  ","Cast Expr ","Class Or Interface Type Map ","Method Call Expr ","Simple Name read "]}
{"Version":"0.9.22","MethodName":"TestObject_test_two_fields","callMethodNameReferTo":{"46":"JsonIterator.java_JsonIterator_outer_parse","142":"JsonIterator.java_JsonIterator_outer_readObjectCB"},"num":180,"succs":[[1,27],[2,57],[3,62],[4,67],[5,72],[6,77],[81,7],[85,8],[9,95],[10,100],[11,105],[12,109],[13,117],[14,123],[15,129],[133,16],[17,142],[173],[23,20,19,21,25,22],[],[21],[],[24],[],[],[3,5,11,4,6,7,1,10,13,17,15,12,14,0,8,2,16,9],[18,147,170,169],[44],[29],[],[29,28],[29,30],[31,29],[32,29],[33,29],[29,34],[29,35],[29,36],[37,29],[38,29],[39,29],[40,29],[41,29],[42,156,29],[46,29,45],[29],[47,48,49],[],[],[53,52,50,51],[54],[],[55],[56],[],[],[],[58,59,60],[],[54],[28,61],[],[65,63,64],[],[54],[66,30],[],[70,68,69],[],[54],[71,31],[],[73,74,75],[],[54],[76,32],[],[78,79],[],[33,80],[],[82,83,34],[],[35,84],[],[89],[36],[86],[87,86],[91,90,86],[86],[92,93,36],[],[94],[],[97,98,96],[],[54],[99,87],[],[101,103,102],[],[54],[88,104],[],[106,37,107],[],[38,108],[],[113],[39],[110],[110,111],[110,115,114],[110],[39,116],[],[119,120,118],[],[54],[111,121,122],[],[54],[124,126,125],[],[54],[127,112,128],[],[54],[131,40,130],[],[41,132],[],[137,138],[135],[],[134,135],[],[139,140,135],[135],[141],[],[42,143,145,144],[],[146],[172],[],[155,150,148,151,19,149,152,153,154,22],[],[150],[],[159,156],[158,160],[162,161],[],[163,164,26],[],[158],[],[],[],[],[],[165],[167],[166,134,157],[],[43,168],[],[],[171],[],[],[136,174,175],[],[176,179,178,177],[],[],[54],[54]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Return Stmt ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Return Stmt ","Variable Declaration Expr ","Name Expr iter ","String Literal Expr Not Empty  ","Name Expr iter ","Name Expr iter ","Name Expr iter ","This Expr ","This Expr ","Void Type ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Void Type ","Class Or Interface Type Type ","Name Expr Long ","Name Expr iter ","Name Expr mode ","Variable Declarator JsonIterator iter = ","Method Declaration ","Method Call Expr ","Name Expr JsonIterator ","Simple Name parse ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","StringLiteralExpr","'\\''","'\"'","Method Call Expr ","Class Or Interface Type JsonProperty ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name readObject ","Expression Stmt ","Array Access Expr count++ ","Simple Name binding ","Method Call Expr ","Simple Name readString ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name readObject ","Method Call Expr ","Return Stmt ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name readString ","Method Call Expr ","Simple Name assertNull ","Method Call Expr ","Simple Name readObject ","Method Call Expr ","Simple Name reset ","Name Expr IterImpl ","Primitive Type int ","Variable Declaration Expr ","Array Access Expr idx ","Simple Name serialize ","Name Expr simpleObj ","Variable Declarator SimpleObject simpleObj = ","Return Stmt ","Method Call Expr ","Name Expr tail ","Class Expr SimpleObject.class ","Class Or Interface Type SimpleObject ","Method Call Expr ","Array Access Expr count++ ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name field1 ","Method Call Expr ","Array Access Expr count++ ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name field2 ","Assign Expr ASSIGN ","Simple Name reset ","Field Access Expr ","Unary Expr -- ","Variable Declaration Expr ","Primitive Type int ","Name Expr pos ","Name Expr any ","Return Stmt ","Name Expr ctx ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString ","String Literal Expr Not Empty  ","Method Call Expr ","Return Stmt ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name reset ","Field Access Expr ","Primitive Type int ","Variable Declaration Expr [FINAL] ","Break Stmt ","Simple Name fields ","Class Or Interface Type Object ","FINAL","Variable Declarator ArrayList<String> fields = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<String> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name readObjectCB ","Object Creation Expr JsonIterator.ReadObjectCallback Optional.empty Optional.empty ","Void Type ","Class Or Interface Type ReadObjectCallback ","Method Declaration Throws ","Marker Annotation Expr @Override ","Primitive Type boolean ","Class Or Interface Type String ","Parameter JsonIterator iter ","Parameter String field ","Parameter Object attachment ","Class Or Interface Type IOException ","Block Stmt ","Simple Name iter ","Name Expr field ","Simple Name field ","Class Or Interface Type JsonIterator ","Class Or Interface Type String ","Class Or Interface Type Object ","Simple Name attachment ","Expression Stmt ","Expression Stmt ","Simple Name test_null_as_Long ","Simple Name get ","Method Call Expr ","Simple Name iter ","ReturnStmt","Boolean Literal Expr true ","true","NullLiteralExpr","Variable Declaration Expr ","Array Access Expr count++ ","Method Call Expr ","Name Expr Arrays ","Array Type 1 ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"TestObject_test_read_null","callMethodNameReferTo":{"27":"JsonIterator.java_JsonIterator_outer_parse"},"num":77,"succs":[[16,1],[38,2],[3,42],[4,46],[55,5],[6,57],[7,61],[68],[13,10,15,9,11,12],[],[11],[],[14],[],[],[0,4,7,3,6,1,2,5],[25],[18],[],[17,18],[19,18],[20,18],[21,18],[22,18],[18,23],[27,26,18],[18],[28,29,30],[],[],[33,31,32,34],[35],[],[36],[37],[],[],[],[39,40],[],[41,17],[],[44,43,19],[],[45,20],[],[49],[21],[47],[50,51,47],[47],[21,52,53],[],[54],[],[56,48],[],[59,22,58],[],[60,23],[],[64],[24],[62],[65,66,62],[62],[67,24],[],[70,71,69],[],[72,73],[75,74],[],[],[76,63],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr [FINAL] ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_read_null ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Void Type ","String Literal Expr Not Empty  ","Name Expr desc ","Name Expr iter ","Name Expr iter ","This Expr ","Null Literal Expr ","Simple Name dLen ","Variable Declarator JsonIterator iter = ","Array Access Expr count++ ","Method Call Expr ","Name Expr JsonIterator ","Simple Name parse ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","StringLiteralExpr","'\\''","'\"'","Expression Stmt ","Simple Name assertTrue ","Method Call Expr ","Simple Name readNull ","Method Call Expr ","Simple Name reset ","Name Expr IterImpl ","Simple Name buf ","Expression Stmt ","Simple Name simpleObj ","Parameter int index ","Variable Declarator SimpleObject simpleObj = ","Simple Name assertEquals ","Method Call Expr ","Simple Name read ","Class Expr SimpleObject.class ","Class Or Interface Type SimpleObject ","Method Call Expr ","Simple Name assertTrue ","Method Call Expr ","Simple Name reset ","Array Type 1 ","Simple Name buf ","Variable Declaration Expr ","Name Expr idx ","Name Expr any ","Method Call Expr ","Primitive Type int ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Return Stmt ","Field Access Expr ","Method Call Expr ","Name Expr ValueType ","Name Expr desc ","Method Call Expr ","Simple Name dateStyle ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"TestObject_test_native_field","callMethodNameReferTo":{"22":"JsonIterator.java_JsonIterator_outer_parse"},"num":65,"succs":[[1,14],[2,33],[3,42],[48,4],[52,5],[59],[9,13,7,10,11,8],[],[9],[],[12],[],[],[3,0,1,4,2,5],[20],[16],[],[16,15],[16,17],[16,18],[21,16,22],[16],[25,24,23],[],[],[28,26,29,27],[30],[],[31],[32],[],[],[],[36],[15],[34],[37,34,38],[34],[40,39,15],[],[41],[],[45,43,44],[],[46],[35,47],[],[],[50,49,17],[],[51,18],[],[55],[19],[53],[56,57,53],[53],[19,58],[],[62,60,61],[],[46],[54,64,63],[],[30]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_native_field ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Name Expr keys ","Name Expr iter ","Name Expr keys ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Simple Name assertEquals ","Method Call Expr ","Name Expr JsonIterator ","Simple Name count ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","StringLiteralExpr","'\\''","'\"'","Variable Declaration Expr ","Simple Name complexObject ","Name Expr complexObject ","Variable Declarator ComplexObject complexObject = ","Simple Name assertNotNull ","Method Call Expr ","Simple Name read ","Class Expr ComplexObject.class ","Class Or Interface Type ComplexObject ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Field Access Expr ","IntegerLiteralExpr","Simple Name field1 ","Method Call Expr ","Simple Name reset ","Field Access Expr ","Simple Name buf ","Variable Declaration Expr ","Name Expr ctx ","Name Expr idx ","Class Or Interface Type HashMap ","Class Or Interface Type Any ","Method Call Expr ","Class Or Interface Type Encoder ","Method Call Expr ","Assign Expr ASSIGN ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name toInt ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"TestObject_test_inheritance","callMethodNameReferTo":{"16":"JsonIterator.java_JsonIterator_outer_parse"},"num":41,"succs":[[1,11],[27,2],[36],[6,10,5,4,8,7],[],[6],[],[9],[],[],[0,1,2],[14],[13],[],[16,13,15],[13],[18,19,17],[],[],[20,23,22,21],[24],[],[25],[26],[],[],[],[30],[12],[28],[28,32,31],[28],[34,12,33],[],[35],[],[39,37,38],[],[24],[29,40],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Expression Stmt ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name iter ","Simple Name head ","Variable Declarator JsonIterator iter = ","Simple Name assertEquals ","Method Call Expr ","Name Expr JsonIterator ","Simple Name parse ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '\\'' ","Char Literal Expr '\"' ","StringLiteralExpr","'\\''","'\"'","Variable Declaration Expr ","Simple Name inheritedObject ","Name Expr inheritedObject ","Variable Declarator InheritedObject inheritedObject = ","Class Or Interface Type InheritedObject ","Method Call Expr ","Simple Name read ","Class Expr InheritedObject.class ","Class Or Interface Type InheritedObject ","Method Call Expr ","Expression Stmt ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name inheritedField "]}
{"Version":"0.9.22","MethodName":"TestObject_test_incomplete_field_name","callMethodNameReferTo":{"14":"JsonIterator.java_JsonIterator_outer_read","15":"JsonIterator.java_JsonIterator_outer_parse"},"num":28,"succs":[[1,12,13,3],[2,14],[23],[26,27],[9,7,5,8,6,11],[],[7],[],[10],[],[],[0],[2,1],[25,3],[15,17,16],[20,19,18],[],[22],[],[],[21],[],[],[24],[],[],[],[]],"nodeAttribute":["Try Stmt ","Expression Stmt ","Return Stmt ","Parameter JsonException e ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_incomplete_field_name ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Block Stmt ","Catch Clause ","Method Call Expr ","Method Call Expr ","Simple Name read ","Class Expr InheritedObject.class ","Simple Name assertEquals ","Simple Name parse ","String Literal Expr Not Empty  ","StringLiteralExpr","Class Or Interface Type InheritedObject ","Simple Name append ","Void Type ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e "]}
{"Version":"0.9.22","MethodName":"IDependenceInjectedObject_getSomeService","callMethodNameReferTo":{},"num":3,"succs":[[1,2],[2],[]],"nodeAttribute":["Method Declaration ","Name Expr stream ","Simple Name getSomeService "]}
{"Version":"0.9.22","MethodName":"DependenceInjectedObject_getSomeService","callMethodNameReferTo":{},"num":8,"succs":[[3,1,2,4],[],[3],[],[5],[0,7,6],[],[]],"nodeAttribute":["If Stmt ","PUBLIC","Class Or Interface Type String ","Simple Name getSomeService ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr someService "]}
{"Version":"0.9.22","MethodName":"TestObject_test_object_creation","callMethodNameReferTo":{"56":"JsonIterator.java_JsonIterator_outer_deserialize"},"num":70,"succs":[[1,13],[51,2],[62],[5,10,6,4,7,8],[],[6],[],[9],[],[],[2,0,1],[18,29,3,28],[39,3,28,47],[15,14,16],[],[],[17],[],[23,19,20,4,21,22],[],[21],[],[27,25],[11],[25],[],[24,25],[],[],[32,31,30],[33,34,24],[],[36,26,37],[],[35],[],[],[38],[],[43,40,44,41,4,42],[],[42],[],[46,45],[12],[],[],[48,49],[],[50],[],[54],[53],[],[56,55,53],[53],[59,60,58,57],[],[],[50],[61],[],[64,65,63],[],[50],[66,52,67],[],[68,69],[69],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_object_creation ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Return Stmt ","Return Stmt ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name registerExtension ","Object Creation Expr EmptyExtension Optional.empty Optional.empty ","Class Or Interface Type EmptyExtension ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name canCreate ","Parameter Class clazz ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Class Or Interface Type Class ","ReturnStmt","Binary Expr OR ","Method Call Expr ","OR","Method Call Expr ","Simple Name equals ","Class Expr DependenceInjectedObject.class ","Method Call Expr ","Simple Name equals ","Class Expr IDependenceInjectedObject.class ","Class Or Interface Type IDependenceInjectedObject ","If Stmt ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Class Or Interface Type Class ","Simple Name clazz ","Object Creation Expr DependenceInjectedObject Optional.empty Optional.empty ","Class Or Interface Type DependenceInjectedObject ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Variable Declarator IDependenceInjectedObject obj = ","Class Or Interface Type IDependenceInjectedObject ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr IDependenceInjectedObject.class ","Class Or Interface Type IDependenceInjectedObject ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getSomeService ","Method Declaration ","Name Expr stream ","Simple Name getSomeService "]}
{"Version":"0.9.22","MethodName":"TestObject_test_enum","callMethodNameReferTo":{"69":"JsonIterator.java_JsonIterator_outer_deserialize","58":"JsonIterator.java_JsonIterator_outer_deserialize","27":"JsonIterator.java_JsonIterator_outer_deserialize","45":"JsonIterator.java_JsonIterator_outer_deserialize"},"num":84,"succs":[[1,18],[2,34],[3,44,5,43,6],[4,45],[51,6],[55,54,6],[7,56],[8,64],[9,68],[75],[13,15,12,11,17,14],[],[13],[],[16],[],[],[7,2,8,9,1,0,6],[25],[20],[],[19,20],[21],[22,21],[23],[26,20,27],[20],[28,30,29,31],[],[],[32],[33],[],[],[36,35,37],[],[38,39],[19,42],[41,40],[],[],[],[],[3,4],[53,5],[48,49,47,46],[],[],[32],[50],[],[52],[],[],[],[],[58,21,57],[],[62,61,59,60],[],[],[32],[63],[],[65,66],[],[22,67],[],[69,23,57],[70,71,72,73],[],[],[32],[74],[],[77,76,78],[],[80,79],[83,24],[82,81],[],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Enclosed Expr ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name buf ","Name Expr obj ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Variable Declarator TestObject5 obj = ","Class Or Interface Type TestObject5 ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject5.class ","StringLiteralExpr","Class Or Interface Type TestObject5 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Field Access Expr ","Field Access Expr ","Simple Name clazz ","Name Expr TestObject5 ","Simple Name MyEnum ","Simple Name field1 ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject5.class ","Class Or Interface Type TestObject5 ","Method Call Expr ","Name Expr bits ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject5.class ","Class Or Interface Type TestObject5 ","Method Call Expr ","Field Access Expr ","Field Access Expr ","Simple Name field1 ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject5.class ","Class Or Interface Type TestObject5 ","Method Call Expr ","Simple Name assertEquals ","Field Access Expr ","Field Access Expr ","Parameter RuntimeException e ","Simple Name WOW ","Name Expr TestObject5 ","Simple Name MyEnum ","Simple Name field1 "]}
{"Version":"0.9.22","MethodName":"TestObject_test_maybe_empty_array_field","callMethodNameReferTo":{"16":"JsonIterator.java_JsonIterator_outer_deserialize","29":"JsonIterator.java_JsonIterator_outer_deserialize"},"num":43,"succs":[[1,9],[23,2],[27,3],[35],[8,6,7,5],[],[7],[],[3,1,0,2],[14],[11],[],[11,10],[12],[15,16,11],[11],[19,17,18,20],[],[],[21],[22],[],[],[25,24],[],[26,10],[],[29,12,28],[],[32,33,30,31],[],[],[21],[34],[],[37,36,38],[],[39],[41,40],[],[13,42],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_maybe_empty_array_field ","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Variable Declarator TestObject6 obj = ","Class Or Interface Type TestObject6 ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject6.class ","StringLiteralExpr","Class Or Interface Type TestObject6 ","Method Call Expr ","Class Or Interface Type BigInteger ","Field Access Expr ","Simple Name field1 ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject6.class ","Class Or Interface Type TestObject6 ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Field Access Expr ","IntegerLiteralExpr","Field Access Expr ","Simple Name a ","Simple Name field1 "]}
{"Version":"0.9.22","MethodName":"TestObject_test_iterator","callMethodNameReferTo":{"27":"JsonIterator.java_JsonIterator_outer_deserialize"},"num":125,"succs":[[1,21],[32,2],[52,3],[56,4],[5,61],[69,6],[7,73],[8,77],[82,9],[89,10],[93,11],[12,98],[13,105],[14,109],[114,15],[121],[18,20,17,19],[],[19],[],[14,6,15,10,11,8,4,7,5,0,12,1,2,13,9,3],[25],[23],[],[23,22],[26,23,27],[23],[30,28,29],[],[],[31],[],[48],[22],[33],[34,33],[35,33],[24,36,33],[37],[37,38],[37,39],[37,40],[37,41],[42,37],[37,43],[37,44],[45,37],[37,46],[50,33,49],[33],[51,22],[],[54,53],[],[34,55],[],[59,57,58],[],[31],[35,60],[],[62,64,63],[],[65],[66,67],[],[68,36],[],[],[71,37,70],[],[24,72],[],[75,74],[],[76,38],[],[79,80,78],[],[31],[81,39],[],[84,85,83],[],[65],[86,87],[88,40],[],[],[91,90],[],[92,41],[],[94,96,95],[],[31],[97,42],[],[101,99,100],[],[65],[102,103],[43,104],[],[],[106,107],[],[108,44],[],[110,111,112],[],[31],[45,113],[],[115,116,117],[],[65],[119,118],[120,46],[],[],[122,123],[],[47,124],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Expression Stmt ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_iterator ","Block Stmt ","Variable Declaration Expr ","Name Expr any ","Simple Name any ","Name Expr any ","Variable Declarator Any any = ","Primitive Type int ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type Gson ","Primitive Type byte ","Name Expr iter ","Name Expr sArr ","Void Type ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Variable Declarator Any.EntryIterator iter = ","Class Or Interface Type EntryIterator ","Method Call Expr ","Simple Name entries ","Method Call Expr ","Simple Name assertTrue ","Name Expr EMPTY_ARRAY ","Simple Name next ","Method Call Expr ","Field Access Expr ","String Literal Expr Not Empty  ","Name Expr nativeRead ","Simple Name key ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","IntegerLiteralExpr","Name Expr JsonIterator ","Simple Name toInt ","Simple Name value ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name entries ","Expression Stmt ","Simple Name assertTrue ","Method Call Expr ","Simple Name next ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr sIx ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name toInt ","Simple Name value ","Expression Stmt ","Simple Name assertTrue ","Method Call Expr ","Simple Name next ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name key ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Zero  ","Method Call Expr ","Method Call Expr ","Simple Name toInt ","Simple Name value ","Method Call Expr ","Simple Name assertTrue ","Method Call Expr ","Simple Name next ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name key ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name toInt ","Simple Name value ","Class Or Interface Type HashMap ","Simple Name assertFalse ","Method Call Expr ","Name Expr iter "]}
{"Version":"0.9.22","MethodName":"TestObject7_setFieldXXX","callMethodNameReferTo":{},"num":8,"succs":[[5,1,3,4,2],[],[3],[],[6,7],[],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Void Type ","Simple Name setFieldXXX ","Parameter PrivateSub obj ","Block Stmt ","Class Or Interface Type PrivateSub ","Simple Name obj "]}
{"Version":"0.9.22","MethodName":"TestObject_test_private_ref","callMethodNameReferTo":{"15":"JsonIterator.java_JsonIterator_outer_deserialize"},"num":26,"succs":[[10,1],[22],[9,5,3,7,4,6],[],[5],[],[8],[],[],[0,1],[13],[12],[],[15,14,12],[12],[18,17,16,19],[],[],[20],[21],[],[],[24,23],[],[11,25],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_private_ref ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name obj ","Simple Name obj ","Variable Declarator TestObject7 obj = ","Class Or Interface Type TestObject7 ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject7.class ","StringLiteralExpr","Class Or Interface Type TestObject7 ","Method Call Expr ","Simple Name assertNull ","Field Access Expr ","Simple Name field1 "]}
{"Version":"0.9.22","MethodName":"TestObject8_setField1","callMethodNameReferTo":{},"num":22,"succs":[[3,6,2,5,4,1],[],[],[4],[],[13,14],[15],[8,9],[],[10],[11],[],[13],[],[],[16],[17,18,19],[],[],[20,12,21],[11],[]],"nodeAttribute":["Method Declaration ","Normal Annotation Expr @JsonProperty(from = { \"field-1\" }) ","PUBLIC","Simple Name wrap ","Simple Name setField1 ","Parameter String obj ","Block Stmt ","Member Value Pair ","Simple Name from ","Array Initializer Expr ","String Literal Expr Not Empty  ","StringLiteralExpr","Name Expr obj ","Simple Name val ","Class Or Interface Type String ","Expression Stmt ","Assign Expr ASSIGN ","Name Expr stream ","ASSIGN","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS"]}
{"Version":"0.9.22","MethodName":"TestObject_test_setter_is_preferred","callMethodNameReferTo":{"15":"JsonIterator.java_JsonIterator_outer_deserialize"},"num":27,"succs":[[1,10],[22],[7,5,4,3,6,9],[],[5],[],[8],[],[],[1,0],[13],[12],[],[15,12,14],[12],[16,18,19,17],[],[],[20],[21],[],[],[25,23,24],[],[20],[11,26],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_setter_is_preferred ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Variable Declarator TestObject8 obj = ","Class Or Interface Type TestObject8 ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject8.class ","StringLiteralExpr","Class Or Interface Type TestObject8 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name format "]}
{"Version":"0.9.22","MethodName":"TestObject_skip_object_lazy_any_to_string","callMethodNameReferTo":{"23":"Any.java_Any_outer_wrap","14":"JsonIterator.java_JsonIterator_outer_deserialize"},"num":34,"succs":[[8,1],[19,2],[29],[7,6,4,5],[],[6],[],[0,1,2],[12],[10],[],[9,10],[13,10,14],[10],[17,16,15],[],[],[18],[],[22,21,20,23],[9,24],[],[18],[25,27,26],[],[],[],[28],[],[32,31,30],[],[18],[33,11],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name skip_object_lazy_any_to_string ","Block Stmt ","Variable Declaration Expr ","Name Expr any ","Simple Name any ","Name Expr any ","Variable Declarator Any any = ","Class Or Interface Type Any ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Method Call Expr ","Simple Name put ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name asMap ","Name Expr Any ","Simple Name wrap ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString "]}
{"Version":"0.9.22","MethodName":"TestObject_test_non_ascii_field","callMethodNameReferTo":{"12":"JsonIterator.java_JsonIterator_outer_deserialize"},"num":25,"succs":[[7,1],[19],[4,3,5,6],[],[5],[],[1,0],[10],[9],[],[12,9,11],[9],[13,14,15,16],[],[],[17],[18],[],[],[20,22,21],[],[23],[8,24],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_non_ascii_field ","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Variable Declarator TestObject9 obj = ","Class Or Interface Type TestObject9 ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject9.class ","StringLiteralExpr","Class Or Interface Type TestObject9 ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Simple Name format ","IntegerLiteralExpr","Simple Name 字段 "]}
