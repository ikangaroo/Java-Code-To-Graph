{"fileName":"User.java","Version":"0.9.22","callMethodName":[]}
{"fileName":"User.java","Version":"0.9.22","callMethodName":["decode_","decode"]}
{"Version":"0.9.22","MethodName":"User_decode_","callMethodNameReferTo":{},"num":340,"succs":[[1,93],[110,2],[3,130],[4,132,112,131,14],[8,5,134],[8,6,135,113,136],[138,7],[53,148,147,14],[10,9],[150,10],[159,11],[115,12,135,160,14],[13,161],[53,169,147,14],[170,15],[178,27,16],[17,117,27,179,131],[18,181,20],[118,19,182,135,20],[53,184,147,29],[21,22],[198,22],[23,25,206],[25,24,207,135,120],[53,208,147,29],[26],[222,29],[28],[229,29],[236,30],[31,243],[32,250],[34,38,42,33],[34,38,296,42,295,77],[36,259,37,35],[260,261],[37,262],[271],[39,40,259,41],[261,272],[41,273],[271],[45,44,259,43],[261,282],[283,45],[271],[47,301],[32,82,304,48,303],[49,309],[331,50],[334,51],[52,337],[314,53,147],[58,60,56,62,54,59,57,55],[55],[],[64,57,63],[],[83,68],[61],[89,88],[],[31,52,49,15,50,14,30,92,1,48,0,51,29,2],[66,65],[],[],[],[68],[],[67,68],[69,68],[69,68],[70,68,71],[72,68],[73,68],[74,73,68],[75,73,68],[82,76,68],[68,77],[78,68],[79,68],[68,80],[81,68],[85,84],[87,86],[],[],[],[90,91],[],[],[],[47,258],[101],[67,96,98],[94],[95,94],[94],[94,97],[94],[94,99],[103,94,102],[94],[104,67,105],[106,107],[],[109,108],[],[],[],[121],[69],[111],[3,111,112],[3,111,5,113,71],[3,114,5,113],[73,114,115],[116,120],[117,16,116],[74,18,118,16,116],[119,18,118,16],[111,123,122],[111],[69,125,124],[126,127],[],[128,129],[],[],[],[4],[],[133],[],[6,7],[],[137],[],[139,70,140,141],[142,143],[],[146],[145,144],[],[],[],[],[],[149],[],[152,114,151],[],[153,71,154],[155,156],[],[157,158],[],[],[],[13,12],[137],[164,162,72,163],[166,165],[],[146],[168,167],[],[],[],[149],[171,116,151],[173,73,172],[175,174],[],[177,176],[],[],[],[17],[180],[],[19],[183],[],[185],[188,186,187],[189,95,135],[190],[191,96],[149],[],[193,192],[194,195],[],[197,196],[],[],[],[119,199,151],[74,200,201],[202,203],[],[204,205],[],[],[],[24],[183],[209],[211,212,210],[213,135,97],[214],[215,98],[149],[],[217,216],[219,218],[],[221,220],[],[],[],[75,224,223],[226,225],[],[227,228],[],[],[],[231,76,230],[232,233],[],[234,235],[],[],[],[240],[238,79],[],[237],[241,238,242],[238],[149],[247],[78,245],[],[244],[248,249,245],[245],[149],[254],[252,80],[],[251],[255,252,256],[252],[257],[],[32,46],[],[146],[],[263,151,244],[264,265],[267,266],[78,270],[268,269],[],[],[],[],[],[146],[237,151,274],[275,276],[277,278],[281,79],[280,279],[],[],[],[],[146],[284,151,251],[286,285],[],[289,80,288,287],[290,291],[],[294],[293,292],[],[],[],[],[298,297],[],[300,299],[],[],[],[302,81],[],[306,305],[],[308,307],[],[],[],[315],[100,99],[310,239],[246,311],[253,312],[313],[316,317,310],[310],[318],[319,321,320],[322,99,135],[323],[324,100],[149],[],[326,325],[328,327],[],[329,330],[],[],[],[239,332,151],[333,311],[],[246,335,151],[336,312],[],[253,338,151],[313,339],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Switch Stmt ","Method Call Expr ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Do Stmt ","Variable Declaration Expr ","Simple Name existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Variable Declarator java.lang.Object existingObj = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Marker Annotation Expr @Override ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Variable Declarator byte nextToken = ","Primitive Type byte ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","NOT_EQUALS","Char Literal Expr '{' ","'{'","Block Stmt ","EQUALS","Char Literal Expr 'n' ","'n'","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","IntegerLiteralExpr","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr 'n' ","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr '\"' ","'\"'","Block Stmt ","Char Literal Expr '}' ","'}'","Enclosed Expr ","Conditional Expr existingObj == null ? new com.example.myapplication.User() : (com.example.myapplication.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.example.myapplication.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr '}' ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.example.myapplication.User() : (com.example.myapplication.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.example.myapplication.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Name Expr _firstName_ ","Simple Name _firstName_ ","Name Expr _firstName_ ","Variable Declarator java.lang.String _firstName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _lastName_ ","Simple Name _lastName_ ","Name Expr _lastName_ ","Variable Declarator java.lang.String _lastName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _score_ ","Simple Name _score_ ","Name Expr _score_ ","Variable Declarator int _score_ = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Block Stmt ","SwitchEntryStmt","Integer Literal Expr Note Zero  ","MINUS","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","continue;","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name readInt ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","StringLiteralExpr","Field Access Expr ","Simple Name readObjectFieldAsHash ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name skip ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator com.example.myapplication.User obj = ","Class Or Interface Type User ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.example.myapplication.User() : (com.example.myapplication.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.example.myapplication.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name firstName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name lastName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name score "]}
{"Version":"0.9.22","MethodName":"User_decode","callMethodNameReferTo":{},"num":364,"succs":[[2,3,4,6,1,8,5],[83],[3,11,10],[],[15,16],[7],[21,22],[],[9],[25,26,0],[13,12],[],[],[],[15,28],[],[17,18],[20,19],[],[],[],[24,23],[],[],[],[],[29,27,14],[],[],[87,86,84,88,1,5,85,83],[31,118],[135,32],[33,155],[34,157,137,156,44],[38,35,159],[38,36,160,138,161],[163,37],[29,172,25,44],[40,39],[174,40],[183,41],[140,42,160,184,44],[43,185],[29,193,25,44],[194,45],[57,46,202],[47,142,57,203,156],[48,205,50],[143,49,206,160,50],[29,208,25,59],[52,51],[222,52],[53,55,230],[55,54,231,145,160],[29,232,25,59],[56],[246,59],[58],[253,59],[260,60],[61,267],[62,274],[64,68,72,63],[64,68,320,72,319,102],[66,283,67,65],[284,285],[67,286],[295],[69,70,283,71],[285,296],[71,297],[295],[75,74,283,73],[285,306],[307,75],[295],[77,325],[62,107,328,78,327],[79,333],[355,80],[358,81],[82,361],[338,29,25],[],[90,85,89],[],[108,28],[114,113],[61,82,79,45,44,60,80,117,31,78,30,81,59,32],[92,91],[],[],[],[28],[93,28],[94,28],[94,28],[95,28,96],[97,28],[98,28],[99,98,28],[100,98,28],[107,101,28],[28,102],[103,28],[104,28],[28,105],[106,28],[110,109],[112,111],[],[],[],[115,116],[],[],[],[77,282],[126],[93,121,123],[119],[120,119],[119],[119,122],[119],[119,124],[128,119,127],[119],[129,93,130],[132,131],[],[134,133],[],[],[],[146],[94],[136],[33,136,137],[33,136,35,138,96],[33,139,35,138],[98,139,140],[141,145],[142,46,141],[99,48,143,46,141],[144,48,143,46],[136,148,147],[136],[94,150,149],[151,152],[],[153,154],[],[],[],[34],[],[158],[],[36,37],[],[162],[],[164,95,165,166],[167,168],[],[171],[170,169],[],[],[],[],[173],[],[176,139,175],[],[177,96,178],[179,180],[],[181,182],[],[],[],[43,42],[162],[188,186,97,187],[190,189],[],[171],[192,191],[],[],[],[173],[195,141,175],[197,98,196],[199,198],[],[201,200],[],[],[],[47],[204],[],[49],[207],[],[209],[212,210,211],[213,120,160],[214],[215,121],[173],[],[217,216],[218,219],[],[221,220],[],[],[],[144,223,175],[99,224,225],[226,227],[],[228,229],[],[],[],[54],[207],[233],[235,234,236],[237,160,122],[238],[239,123],[173],[],[241,240],[243,242],[],[245,244],[],[],[],[100,248,247],[250,249],[],[252,251],[],[],[],[255,101,254],[256,257],[],[259,258],[],[],[],[264],[262,104],[],[261],[265,262,266],[262],[173],[271],[103,269],[],[268],[272,273,269],[269],[173],[278],[276,105],[],[275],[279,276,280],[276],[281],[],[62,76],[],[171],[],[287,175,268],[288,289],[291,290],[103,294],[292,293],[],[],[],[],[],[171],[261,175,298],[299,300],[301,302],[305,104],[304,303],[],[],[],[],[171],[308,275,175],[310,309],[],[313,105,312,311],[314,315],[],[318],[317,316],[],[],[],[],[322,321],[],[324,323],[],[],[],[326,106],[],[330,329],[],[332,331],[],[],[],[339],[125,124],[334,263],[270,335],[277,336],[337],[340,341,334],[334],[342],[343,344,345],[346,124,160],[347],[348,125],[173],[],[350,349],[352,351],[],[353,354],[],[],[],[263,356,175],[357,335],[],[270,359,175],[360,336],[],[277,362,175],[337,363],[]],"nodeAttribute":["Method Declaration Throws ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Return Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","ReturnStmt","Method Call Expr ","Simple Name decode_ ","Simple Name iter ","Method Declaration Throws ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Switch Stmt ","Method Call Expr ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Do Stmt ","Variable Declaration Expr ","Simple Name existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Variable Declarator java.lang.Object existingObj = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Marker Annotation Expr @Override ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Variable Declarator byte nextToken = ","Primitive Type byte ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","NOT_EQUALS","Char Literal Expr '{' ","'{'","Block Stmt ","EQUALS","Char Literal Expr 'n' ","'n'","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","IntegerLiteralExpr","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr 'n' ","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr '\"' ","'\"'","Block Stmt ","Char Literal Expr '}' ","'}'","Enclosed Expr ","Conditional Expr existingObj == null ? new com.example.myapplication.User() : (com.example.myapplication.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.example.myapplication.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr '}' ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.example.myapplication.User() : (com.example.myapplication.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.example.myapplication.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Name Expr _firstName_ ","Simple Name _firstName_ ","Name Expr _firstName_ ","Variable Declarator java.lang.String _firstName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _lastName_ ","Simple Name _lastName_ ","Name Expr _lastName_ ","Variable Declarator java.lang.String _lastName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _score_ ","Simple Name _score_ ","Name Expr _score_ ","Variable Declarator int _score_ = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Block Stmt ","SwitchEntryStmt","Integer Literal Expr Note Zero  ","MINUS","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","continue;","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name readInt ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","StringLiteralExpr","Field Access Expr ","Simple Name readObjectFieldAsHash ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name skip ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator com.example.myapplication.User obj = ","Class Or Interface Type User ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.example.myapplication.User() : (com.example.myapplication.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.example.myapplication.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name firstName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name lastName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name score "]}
{"fileName":"User.java","Version":"0.9.22","callMethodName":["decode_","decode"]}
{"Version":"0.9.22","MethodName":"User_decode_","callMethodNameReferTo":{},"num":454,"succs":[[76,1],[103,2],[104,3,5,55],[4,105],[113,5,112,39],[115,6],[116,7,117,8],[124,8,39,112],[145,9],[10,176],[14,177,11,179,178],[12,187],[213,13],[14,190,39,112],[215,15],[245,16],[21,246,247,17,178],[18,254],[19,280],[20,282],[258,21,112,39],[22,284],[313,23],[315,314,24,29,178],[25,322],[26,349],[27,351],[353,28],[327,112,39,29],[355,30],[31,383],[412,32],[414,33],[34,416],[418,35],[36,420],[421,38,422,128,37],[429,35],[39,112,390],[46,44,42,48,40,45,43,41],[41],[],[50,43,49],[],[67,54],[47],[73,72],[],[31,5,32,33,35,14,21,34,15,8,22,38,30,9,0,1,29],[52,51],[],[],[],[54],[],[53,54],[2,54,55],[56,54],[57,54],[58,54],[59,54],[60,54],[61,54],[54,62],[63,54],[66,64,54],[65,54],[69,68],[71,70],[],[],[],[74,75],[],[],[],[88],[53],[77],[77,78],[77,79],[77,80],[77,81],[77,82],[77,83],[77,84],[77,85],[77,86],[77,89,90],[77],[91,92],[93,94],[98,53,97],[95,96],[],[],[],[100,99],[],[102,101],[],[],[],[4,3],[],[56,107,106],[109,108],[],[110,111],[],[],[],[],[114],[],[7],[119,57,118],[],[121,120],[],[122,123],[],[],[],[126,125,127],[129,128,78],[131,130],[134,133],[],[114],[],[132],[],[135,136],[140,79,139],[137,138],[],[],[],[141,142],[],[143,144],[],[],[],[152],[147,58],[],[146],[146,148],[149,146],[146,150],[153,154,146],[146],[155,156],[157,158],[164,58,163,39],[159,160],[],[162,161],[],[],[],[165,166],[],[168,167],[],[169,170],[],[172,171],[],[173,174],[],[147,175],[],[],[12,11,13],[180,181,59],[],[186],[183,182],[],[184,185],[],[],[],[],[191],[80,81],[188,384],[188,189,384],[188,192,193],[188],[196,194,195],[80,128,197],[199,198],[201,202],[114],[],[200],[],[204,203],[208,207,81],[205,206],[],[],[],[209,210],[],[211,212],[],[],[],[214,148,189],[],[221],[60,217],[],[216],[216,218],[216,219],[222,216,223],[216],[225,224],[227,226],[60,233,232,39],[229,228],[],[230,231],[],[],[],[234,235],[],[237,236],[],[238,239],[],[240,241],[],[242,243],[],[217,244],[],[],[19,18,20,17],[249,248,61],[186],[250,251],[],[252,253],[],[],[],[259],[83,82],[255,190,384],[256,255,384],[255,257,384],[260,255,261],[255],[262,263,264],[265,128,82],[267,266],[268,269],[114],[],[200],[270,271],[275,83,274],[272,273],[],[],[],[276,277],[],[278,279],[],[],[],[256,149,281],[],[283,257,218],[],[289],[286,62],[],[285],[287,285],[291,290,285],[285],[293,292],[294,295],[301,300,39,62],[296,297],[],[299,298],[],[],[],[302,303],[],[304,305],[],[307,306],[],[308,309],[],[311,310],[],[312,286],[],[],[25,26,27,28,24],[63,317,316],[186],[319,318],[],[320,321],[],[],[],[328],[84,85],[258,323,384],[324,323,384],[325,323,384],[323,326,384],[330,323,329],[323],[332,333,331],[334,84,128],[335,336],[338,337],[114],[],[200],[340,339],[343,344,85],[341,342],[],[],[],[345,346],[],[347,348],[],[],[],[324,150,350],[],[325,219,352],[],[287,326,354],[],[359],[357,64],[],[356],[361,356,360],[356],[363,362],[365,364],[371,64,370,39],[367,366],[],[368,369],[],[],[],[372,373],[],[374,375],[],[376,377],[],[378,379],[],[381,380],[],[357,382],[],[],[391],[86,87],[327,384],[385,384],[386,384],[387,384],[384,388],[389,384],[393,392,384],[384],[395,394,396],[86,397,128],[399,398],[401,400],[114],[],[200],[402,403],[87,406,407],[405,404],[],[],[],[409,408],[],[410,411],[],[],[],[385,151,413],[],[386,415,220],[],[387,288,417],[],[358,419,388],[],[37],[424,65,423],[186],[426,425],[],[428,427],[],[],[],[430,389,431],[],[433,432],[434,435],[441,66,39,440],[436,437],[],[438,439],[],[],[],[443,442],[],[444,445],[],[447,446],[],[448,449],[],[451,450],[],[453,452],[],[],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Field Access Expr ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Variable Declaration Expr ","Simple Name col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Variable Declarator java.util.ArrayList col = ","Class Or Interface Type ArrayList ","Cast Expr ","Simple Name resetExistingObject ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Simple Name readNull ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name readArrayStart ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Conditional Expr col == null ? new java.util.ArrayList(0) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","EQUALS","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name a1 ","Name Expr jsoniter_codegen ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Variable Declarator Object a1 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name decoder ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","NOT_EQUALS","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","','","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(1) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a2 ","Name Expr jsoniter_codegen ","Name Expr a2 ","Name Expr a2 ","Name Expr a2 ","Variable Declarator Object a2 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name decoder ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name firstName ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(2) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a3 ","Name Expr jsoniter_codegen ","Name Expr a3 ","Name Expr a3 ","Variable Declarator Object a3 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name decoder ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr com ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(3) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a4 ","Name Expr jsoniter_codegen ","Name Expr a4 ","Variable Declarator Object a4 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name decoder ","Simple Name cfg1173796797 ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(8) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name decoder ","Name Expr jsoniter_codegen ","Simple Name cfg1173796797 "]}
{"Version":"0.9.22","MethodName":"User_decode","callMethodNameReferTo":{},"num":478,"succs":[[2,4,1,3,5,6,8],[69],[10,11,3],[],[15,16],[7],[22,21],[],[9],[0,26,25],[13,12],[],[],[],[15,28],[],[18,17],[20,19],[],[],[],[23,24],[],[],[],[],[14,29,27],[],[],[72,73,70,74,1,5,71,69],[101,31],[128,32],[129,33,35,80],[34,130],[137,35,25,29],[139,36],[140,37,141,38],[148,38,29,25],[169,39],[40,200],[44,201,41,202,203],[42,211],[237,43],[44,214,29,25],[239,45],[269,46],[51,270,271,47,202],[48,278],[49,304],[50,306],[282,51,29,25],[52,308],[337,53],[339,338,59,202,54],[55,346],[56,373],[57,375],[377,58],[351,29,25,59],[379,60],[61,407],[436,62],[438,63],[64,440],[442,65],[66,444],[445,68,446,152,67],[453,65],[25,29,414],[],[76,75,71],[],[92,28],[98,97],[61,35,62,63,65,44,51,64,45,38,52,68,60,30,31,39,59],[78,77],[],[],[],[28],[79,28],[32,28,80],[81,28],[82,28],[83,28],[84,28],[85,28],[86,28],[28,87],[88,28],[91,89,28],[90,28],[94,93],[96,95],[],[],[],[99,100],[],[],[],[113],[79],[102],[102,103],[102,104],[102,105],[102,106],[102,107],[102,108],[102,109],[102,110],[102,111],[102,114,115],[102],[116,117],[118,119],[123,79,122],[120,121],[],[],[],[125,124],[],[127,126],[],[],[],[34,33],[],[81,132,131],[134,133],[],[135,136],[],[],[],[138],[],[37],[143,82,142],[],[145,144],[],[146,147],[],[],[],[150,149,151],[153,152,103],[155,154],[158,157],[],[138],[],[156],[],[159,160],[164,104,163],[161,162],[],[],[],[165,166],[],[167,168],[],[],[],[176],[171,83],[],[170],[170,172],[173,170],[170,174],[177,178,170],[170],[179,180],[181,182],[188,83,187,29],[183,184],[],[186,185],[],[],[],[189,190],[],[192,191],[],[193,194],[],[196,195],[],[197,198],[],[171,199],[],[],[42,41,43],[204,205,84],[],[210],[207,206],[],[208,209],[],[],[],[],[215],[105,106],[212,408],[212,408,213],[212,216,217],[212],[220,218,219],[105,152,221],[223,222],[225,226],[138],[],[224],[],[228,227],[232,231,106],[229,230],[],[],[],[233,234],[],[235,236],[],[],[],[238,172,213],[],[245],[85,241],[],[240],[240,242],[240,243],[246,240,247],[240],[249,248],[251,250],[85,257,256,29],[253,252],[],[254,255],[],[],[],[258,259],[],[261,260],[],[262,263],[],[264,265],[],[266,267],[],[241,268],[],[],[49,48,50,47],[273,272,86],[210],[274,275],[],[276,277],[],[],[],[283],[108,107],[279,214,408],[280,279,408],[279,281,408],[284,279,285],[279],[286,287,288],[289,152,107],[291,290],[292,293],[138],[],[224],[294,295],[299,108,298],[296,297],[],[],[],[300,301],[],[302,303],[],[],[],[280,173,305],[],[307,281,242],[],[313],[310,87],[],[309],[311,309],[315,314,309],[309],[317,316],[318,319],[325,324,29,87],[320,321],[],[323,322],[],[],[],[326,327],[],[328,329],[],[331,330],[],[332,333],[],[335,334],[],[336,310],[],[],[55,56,57,58,54],[88,341,340],[210],[343,342],[],[344,345],[],[],[],[352],[109,110],[282,347,408],[348,347,408],[349,347,408],[347,350,408],[354,347,353],[347],[356,357,355],[358,109,152],[359,360],[362,361],[138],[],[224],[364,363],[367,368,110],[365,366],[],[],[],[369,370],[],[371,372],[],[],[],[348,174,374],[],[349,243,376],[],[311,350,378],[],[383],[381,89],[],[380],[385,380,384],[380],[387,386],[389,388],[395,89,394,29],[391,390],[],[393,392],[],[],[],[396,397],[],[398,399],[],[400,401],[],[402,403],[],[405,404],[],[381,406],[],[],[415],[111,112],[351,408],[409,408],[410,408],[411,408],[408,412],[413,408],[417,416,408],[408],[419,418,420],[111,421,152],[423,422],[425,424],[138],[],[224],[426,427],[112,430,431],[429,428],[],[],[],[433,432],[],[434,435],[],[],[],[409,175,437],[],[410,439,244],[],[411,312,441],[],[382,443,412],[],[67],[448,90,447],[210],[450,449],[],[452,451],[],[],[],[454,455,413],[],[457,456],[458,459],[465,91,29,464],[460,461],[],[462,463],[],[],[],[467,466],[],[468,469],[],[471,470],[],[472,473],[],[475,474],[],[477,476],[],[],[]],"nodeAttribute":["Method Declaration Throws ","PUBLIC","Class Or Interface Type Object ","Simple Name String ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Return Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","ReturnStmt","Method Call Expr ","Simple Name decode_ ","Simple Name iter ","Method Declaration Throws ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Field Access Expr ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Variable Declaration Expr ","Simple Name col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Variable Declarator java.util.ArrayList col = ","Class Or Interface Type ArrayList ","Cast Expr ","Simple Name resetExistingObject ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Simple Name readNull ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","NullLiteralExpr","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name readArrayStart ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Conditional Expr col == null ? new java.util.ArrayList(0) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","EQUALS","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name a1 ","Name Expr jsoniter_codegen ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Variable Declarator Object a1 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name decoder ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","NOT_EQUALS","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","','","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(1) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a2 ","Name Expr jsoniter_codegen ","Name Expr a2 ","Name Expr a2 ","Name Expr a2 ","Variable Declarator Object a2 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name decoder ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name firstName ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(2) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a3 ","Name Expr jsoniter_codegen ","Name Expr a3 ","Name Expr a3 ","Variable Declarator Object a3 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name decoder ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr com ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(3) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a4 ","Name Expr jsoniter_codegen ","Name Expr a4 ","Variable Declarator Object a4 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name decoder ","Simple Name cfg1173796797 ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(8) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name decoder ","Name Expr jsoniter_codegen ","Simple Name cfg1173796797 "]}
{"fileName":"User.java","Version":"0.9.22","callMethodName":["encode","encode_"]}
{"Version":"0.9.22","MethodName":"User_encode","callMethodNameReferTo":{},"num":153,"succs":[[37,1],[2,15,39,4,38],[41,3],[5,4,43],[44],[9,10,8,12,6,14,11,7],[68],[8],[],[16,21],[26,19],[13],[33,34],[],[4,0],[16],[],[16,15],[19],[],[48,18,19],[23,22],[24,25],[],[],[],[28,27],[29,30],[],[32,31],[],[],[],[36,35],[],[],[],[2,3],[],[40],[],[18,42],[],[],[49,46,20,45],[],[17,47,50],[],[],[70,72,71,6,73,74,69,11,68],[51,52],[54,53],[],[55,56],[],[],[],[58,107],[59,109],[111,60],[115,61],[125,62],[63,127],[64,130],[140,65],[142,66],[67,145],[151],[],[70],[],[89,47],[48,96],[103,104],[64,59,63,58,60,67,57,61,66,62,65],[47],[47,75],[76,47],[48],[78,48],[79,48],[80,48],[48,81],[48,82],[48,83],[84,48],[48,85],[48,86],[48,87],[91,90],[93,92],[],[95,94],[],[],[],[98,97],[100,99],[],[101,102],[],[],[],[106,105],[],[],[],[78,108],[],[79,110],[],[112,80,113],[],[114],[],[117,116,81],[],[118,119],[120,121],[124,75],[122,123],[],[],[],[],[126,82],[],[128,83,129],[],[114],[84,131,132],[],[134,133],[136,135],[76,139],[138,137],[],[],[],[],[141,85],[],[144,143,86],[],[114],[87,146,147],[],[149,148],[],[77,150],[],[152,88],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name encode ","Parameter java.lang.Object obj ","Parameter com.jsoniter.output.JsonStream stream ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type lang ","Simple Name Object ","Simple Name lang ","Simple Name lang ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","ReturnStmt","Method Call Expr ","Simple Name encode_ ","Cast Expr ","Simple Name obj ","Simple Name stream ","Method Declaration Throws ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","STATIC","Void Type ","Simple Name encode_ ","Parameter com.example.myapplication.User obj ","Parameter com.jsoniter.output.JsonStream stream ","Class Or Interface Type IOException ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Class Or Interface Type Object ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Method Call Expr ","Simple Name writeObjectStart ","Method Call Expr ","Simple Name writeIndention ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Class Or Interface Type Object ","Field Access Expr ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Simple Name firstName ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Class Or Interface Type String ","Field Access Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name lastName ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Primitive Type int ","Field Access Expr ","Simple Name score ","Method Call Expr ","Simple Name writeObjectEnd "]}
{"Version":"0.9.22","MethodName":"User_encode_","callMethodNameReferTo":{},"num":102,"succs":[[56,1],[2,58],[60,3],[64,4],[74,5],[6,76],[7,79],[89,8],[91,9],[10,94],[100],[15,17,19,12,16,14,21,18,13],[13],[],[15],[],[38,23],[27,45],[20],[52,53],[],[7,1,2,6,10,3,0,4,9,8,5],[23],[],[23,22],[24,23],[27],[],[26,27],[28,27],[29,27],[27,30],[27,31],[27,32],[33,27],[27,34],[27,35],[27,36],[40,39],[42,41],[],[44,43],[],[],[],[47,46],[49,48],[],[50,51],[],[],[],[55,54],[],[],[],[26,57],[],[28,59],[],[61,29,62],[],[63],[],[65,66,30],[],[67,68],[69,70],[73,22],[71,72],[],[],[],[],[75,31],[],[77,32,78],[],[63],[33,80,81],[],[83,82],[85,84],[24,88],[87,86],[],[],[],[],[90,34],[],[93,92,35],[],[63],[36,95,96],[],[97,98],[],[25,99],[],[101,37],[]],"nodeAttribute":["Field Access Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Void Type ","Simple Name encode_ ","Parameter com.example.myapplication.User obj ","Parameter com.jsoniter.output.JsonStream stream ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Class Or Interface Type Object ","Simple Name stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Method Call Expr ","Simple Name writeObjectStart ","Method Call Expr ","Simple Name writeIndention ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Class Or Interface Type Object ","Field Access Expr ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Simple Name firstName ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Class Or Interface Type String ","Field Access Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name lastName ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Primitive Type int ","Field Access Expr ","Simple Name score ","Method Call Expr ","Simple Name writeObjectEnd "]}
{"fileName":"User.java","Version":"0.9.22","callMethodName":["encode","encode_"]}
{"Version":"0.9.22","MethodName":"User_encode","callMethodNameReferTo":{},"num":237,"succs":[[37,1],[2,4,15,39,38],[41,3],[4,5,43],[44],[9,10,8,12,6,14,11,7],[81],[8],[],[16,21],[26,19],[13],[33,34],[],[4,0],[16],[],[16,15],[19],[],[18,48,19],[23,22],[24,25],[],[],[],[28,27],[29,30],[],[32,31],[],[],[],[36,35],[],[],[],[2,3],[],[40],[],[18,42],[],[],[20,46,49,45],[],[17,47,50],[],[],[86,83,87,84,6,82,85,11,81],[51,52],[54,53],[],[],[],[56,114],[127,57],[135,58],[136,59,129,61,38],[138,60],[49,61,43],[148,62],[150,63],[64,152],[67,65,165],[67,166,154,66,38],[69,167],[68],[169,69],[71,79,192,70],[71,196],[130,80,200,72,193],[73,202],[74,204],[208,75,77],[158,209,76,38,77],[79,210],[78],[79,212],[71,195,201],[235],[],[83],[],[98,47],[103,48],[111,110],[62,80,56,55,64,57,69,63,61],[47],[48],[89,48],[90,48],[91,48],[92,48],[96,93,48],[94,48],[94,95,48],[96,48],[100,99],[102,101],[],[],[],[104,105],[106,107],[],[108,109],[],[],[],[113,112],[],[],[],[119],[88],[115],[116,115],[117,115],[120,121,115],[115],[88,122],[123,124],[126,125],[],[],[],[131],[116],[128],[128,129],[128,133,132],[128],[134,116],[],[59,60],[137],[],[89,140,139,141],[],[143,142],[145,146],[],[144],[],[],[147],[],[90,149],[],[91,151],[],[160],[117],[153],[153,65,154],[153,159,157,118,155],[194,195],[156],[158,75,156],[153,161,162],[153],[117,163,164],[],[137],[66],[40],[92,168],[],[171,49,172,93,170],[173,174],[],[185,47,155],[175,176],[],[178,177],[],[180,179],[],[181,182],[],[183,184],[],[],[],[186,187],[189,188],[],[190,191],[],[],[],[73,72,74],[157,194],[],[194,193],[198,194,197],[194],[199],[],[],[],[203,94],[],[206,205,156],[],[157,207,118],[],[76],[40],[211,95],[],[214,213,49,215,96],[217,216],[],[159,228,47],[218,219],[],[221,220],[],[223,222],[],[224,225],[],[226,227],[],[],[],[229,230],[231,232],[],[234,233],[],[],[],[97,236],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name encode ","Parameter java.lang.Object obj ","Parameter com.jsoniter.output.JsonStream stream ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type lang ","Simple Name Object ","Simple Name lang ","Simple Name lang ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","ReturnStmt","Method Call Expr ","Simple Name encode_ ","Cast Expr ","Simple Name obj ","Simple Name stream ","Method Declaration Throws ","Class Or Interface Type List ","Class Or Interface Type util ","Simple Name List ","Class Or Interface Type java ","Simple Name util ","Expression Stmt ","Method Call Expr ","If Stmt ","Marker Annotation Expr @Override ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","STATIC","Void Type ","Simple Name encode_ ","Parameter java.lang.Object obj ","Parameter com.jsoniter.output.JsonStream stream ","Class Or Interface Type IOException ","Block Stmt ","Name Expr obj ","Simple Name mapKey ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Variable Declaration Expr ","Simple Name list ","Name Expr list ","Name Expr list ","Name Expr list ","Variable Declarator java.util.List list = ","Class Or Interface Type List ","Cast Expr ","Class Or Interface Type List ","Class Or Interface Type util ","Simple Name List ","Class Or Interface Type java ","Simple Name util ","Variable Declaration Expr ","Simple Name size ","Name Expr size ","Name Expr size ","Variable Declarator int size = ","Primitive Type int ","Method Call Expr ","Simple Name size ","Block Stmt ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '[' ","'['","Primitive Type byte ","Char Literal Expr ']' ","']'","Method Call Expr ","Simple Name writeArrayStart ","Method Call Expr ","Simple Name writeIndention ","Variable Declaration Expr ","Simple Name e ","Name Expr e ","Name Expr e ","Name Expr e ","Name Expr i ","Name Expr e ","Name Expr e ","Variable Declarator java.lang.Object e = ","Variable Declaration Expr ","Method Call Expr ","Simple Name get ","Integer Literal Expr Zero  ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Field Access Expr ","Simple Name encode_ ","Cast Expr ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name encoder ","Name Expr jsoniter_codegen ","Simple Name CodegenAccess ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","LESS","POSTFIX_INCREMENT","Return Stmt ","Simple Name writeMore ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Field Access Expr ","Simple Name encode_ ","Cast Expr ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name encoder ","Name Expr jsoniter_codegen ","Simple Name cfg1173796797 ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Method Call Expr ","Simple Name writeArrayEnd "]}
{"Version":"0.9.22","MethodName":"User_encode_","callMethodNameReferTo":{},"num":191,"succs":[[1,65],[78,2],[86,3],[88,4,80,6,87],[90,5],[26,6,100],[101,7],[103,8],[9,105],[12,10,118],[12,119,11,107,87],[14,121],[13],[123,14],[16,24,146,15],[16,150],[81,25,154,17,147],[18,156],[19,158],[162,20,22],[111,163,21,87,22],[24,164],[23],[24,166],[16,149,155],[189],[34,30,36,31,27,29,32,33,28],[28],[],[30],[],[49,38],[54,40],[35],[62,61],[],[7,25,1,0,9,8,14,2,6],[38],[],[40],[],[39,40],[41,40],[42,40],[43,40],[44,47,40],[45,40],[45,46,40],[47,40],[51,50],[53,52],[],[],[],[55,56],[57,58],[],[59,60],[],[],[],[64,63],[],[],[],[70],[37],[66],[67,66],[68,66],[71,72,66],[66],[73,37],[74,75],[77,76],[],[],[],[82],[67],[79],[79,80],[79,84,83],[79],[85,67],[],[4,5],[],[89],[],[39,92,91,93],[],[95,94],[97,98],[],[96],[],[],[99],[],[],[41,102],[],[42,104],[],[113],[68],[106],[106,10,107],[106,110,112,69,108],[148,149],[109],[111,20,109],[106,114,115],[106],[68,116,117],[],[89],[11],[120],[],[43,122],[],[125,26,126,44,124],[127,128],[],[139,38,108],[129,130],[],[132,131],[],[134,133],[],[135,136],[],[137,138],[],[],[],[140,141],[143,142],[],[144,145],[],[],[],[18,17,19],[110,148],[],[148,147],[152,148,151],[148],[153],[],[],[],[157,45],[],[160,159,109],[],[110,161,69],[],[21],[120],[165,46],[],[168,167,26,169,47],[171,170],[],[112,182,38],[172,173],[],[175,174],[],[177,176],[],[178,179],[],[180,181],[],[],[],[183,184],[185,186],[],[188,187],[],[],[],[48,190],[]],"nodeAttribute":["Expression Stmt ","Method Call Expr ","If Stmt ","Marker Annotation Expr @Override ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Void Type ","Simple Name encode_ ","Parameter java.lang.Object obj ","Parameter com.jsoniter.output.JsonStream stream ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Simple Name mapKey ","Simple Name stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Variable Declaration Expr ","Simple Name list ","Name Expr list ","Name Expr list ","Name Expr list ","Variable Declarator java.util.List list = ","Class Or Interface Type List ","Cast Expr ","Class Or Interface Type List ","Class Or Interface Type util ","Simple Name List ","Class Or Interface Type java ","Simple Name util ","Variable Declaration Expr ","Simple Name size ","Name Expr size ","Name Expr size ","Variable Declarator int size = ","Primitive Type int ","Method Call Expr ","Simple Name size ","Block Stmt ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '[' ","'['","Primitive Type byte ","Char Literal Expr ']' ","']'","ReturnStmt","Method Call Expr ","Simple Name writeArrayStart ","Method Call Expr ","Simple Name writeIndention ","Variable Declaration Expr ","Simple Name e ","Name Expr e ","Name Expr e ","Name Expr e ","Name Expr i ","Name Expr e ","Name Expr e ","Variable Declarator java.lang.Object e = ","Variable Declaration Expr ","Method Call Expr ","Simple Name get ","Integer Literal Expr Zero  ","Block Stmt ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Field Access Expr ","Simple Name encode_ ","Cast Expr ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name encoder ","Name Expr jsoniter_codegen ","Simple Name CodegenAccess ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","LESS","POSTFIX_INCREMENT","Return Stmt ","Simple Name writeMore ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Field Access Expr ","Simple Name encode_ ","Cast Expr ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name myapplication ","Field Access Expr ","Simple Name example ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name encoder ","Name Expr jsoniter_codegen ","Simple Name cfg1173796797 ","Class Or Interface Type User ","Class Or Interface Type myapplication ","Simple Name User ","Class Or Interface Type example ","Simple Name myapplication ","Class Or Interface Type com ","Simple Name example ","Method Call Expr ","Simple Name writeArrayEnd "]}
{"fileName":"User.java","Version":"0.9.22","callMethodName":[]}
{"fileName":"User.java","Version":"0.9.22","callMethodName":["decode_","decode"]}
{"Version":"0.9.22","MethodName":"User_decode_","callMethodNameReferTo":{},"num":370,"succs":[[1,100],[117,2],[3,137],[4,139,119,138,14],[8,5,141],[8,6,142,120,143],[145,7],[155,59,154,14],[10,9],[157,10],[166,11],[122,142,12,167,14],[13,168],[176,59,154,14],[177,15],[27,16,185],[17,124,27,186,138],[18,188,20],[125,189,142,19,20],[191,59,154,29],[22,21],[205,22],[23,25,213],[25,24,214,142,127],[215,59,154,29],[26],[229,29],[28],[236,29],[243,30],[31,250],[32,257],[33,265],[47,34,39,35,43],[321,322,47,39,35,43,83],[36,37,273,38],[275,274],[276,38],[287],[42,40,273,41],[275,288],[42,289],[287],[44,273,45,46],[275,298],[299,46],[287],[48,273,50,49],[275,308],[309,50],[287],[52,327],[53,89,330,33,329],[335,54],[358,55],[56,361],[364,57],[367,58],[341,59,154],[68,66,64,62,60,65,63,61],[61],[],[70,63,69],[],[90,74],[67],[96,95],[],[31,56,32,54,53,57,58,15,55,30,14,1,0,99,29,2],[72,71],[],[],[],[74],[],[73,74],[75,74],[75,74],[76,74,77],[78,74],[79,74],[80,79,74],[81,79,74],[82,89,74],[74,83],[84,74],[85,74],[86,74],[74,87],[74,88],[92,91],[94,93],[],[],[],[97,98],[],[],[],[52,272],[108],[73,103,105],[101],[102,101],[101],[101,104],[101],[106,101],[110,101,109],[101],[111,73,112],[114,113],[],[116,115],[],[],[],[128],[75],[118],[3,118,119],[3,5,118,120,77],[3,121,5,120],[79,121,122],[123,127],[124,16,123],[80,125,18,16,123],[126,18,125,16],[118,130,129],[118],[75,132,131],[133,134],[],[135,136],[],[],[],[4],[],[140],[],[6,7],[],[144],[],[146,76,148,147],[149,150],[],[153],[152,151],[],[],[],[],[],[156],[],[159,121,158],[],[160,77,161],[162,163],[],[164,165],[],[],[],[13,12],[144],[171,169,78,170],[173,172],[],[153],[175,174],[],[],[],[156],[178,123,158],[180,79,179],[182,181],[],[184,183],[],[],[],[17],[187],[],[19],[190],[],[192],[195,194,193],[196,102,142],[197],[103,198],[156],[],[199,200],[202,201],[],[203,204],[],[],[],[126,206,158],[80,207,208],[209,210],[],[211,212],[],[],[],[24],[190],[216],[217,218,219],[220,142,104],[221],[222,105],[156],[],[224,223],[226,225],[],[228,227],[],[],[],[81,231,230],[233,232],[],[235,234],[],[],[],[238,82,237],[239,240],[],[242,241],[],[],[],[247],[86,245],[],[244],[248,245,249],[245],[156],[254],[85,252],[],[251],[255,256,252],[252],[156],[261],[259,87],[],[258],[262,259,263],[259],[264],[],[269],[84,267],[],[266],[271,267,270],[267],[156],[33,51],[],[153],[],[266,277,158],[279,278],[280,281],[84,286],[283,282],[],[284,285],[],[],[],[],[],[153],[290,251,158],[292,291],[294,293],[85,297],[295,296],[],[],[],[],[153],[300,244,158],[302,301],[304,303],[307,86],[306,305],[],[],[],[],[153],[258,310,158],[312,311],[],[313,315,314,87],[316,317],[],[320],[318,319],[],[],[],[],[324,323],[],[326,325],[],[],[],[328,88],[],[331,332],[],[333,334],[],[],[],[342],[107,106],[246,336],[253,337],[338,260],[339,268],[340],[336,344,343],[336],[345],[348,347,346],[349,106,142],[350],[107,351],[156],[],[353,352],[355,354],[],[356,357],[],[],[],[246,359,158],[360,337],[],[362,158,253],[338,363],[],[365,158,260],[339,366],[],[158,268,368],[340,369],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Switch Stmt ","Method Call Expr ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Field Access Expr ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Do Stmt ","Variable Declaration Expr ","Simple Name existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Variable Declarator java.lang.Object existingObj = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Marker Annotation Expr @Override ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Variable Declarator byte nextToken = ","Primitive Type byte ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","NOT_EQUALS","Char Literal Expr '{' ","'{'","Block Stmt ","EQUALS","Char Literal Expr 'n' ","'n'","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","IntegerLiteralExpr","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr 'n' ","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr '\"' ","'\"'","Block Stmt ","Char Literal Expr '}' ","'}'","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr '}' ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Assign Expr ASSIGN ","Simple Name _firstName_ ","Name Expr _firstName_ ","Variable Declarator java.lang.String _firstName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _lastName_ ","Simple Name _lastName_ ","Name Expr _lastName_ ","Variable Declarator java.lang.String _lastName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _score_ ","Simple Name _score_ ","Name Expr _score_ ","Variable Declarator int _score_ = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr _attachment_ ","Simple Name _attachment_ ","Name Expr _attachment_ ","Variable Declarator com.jsoniter.any.Any _attachment_ = ","Class Or Interface Type Any ","Null Literal Expr ","Block Stmt ","SwitchEntryStmt","Integer Literal Expr Note Zero  ","MINUS","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Class Or Interface Type any ","Simple Name Any ","Class Or Interface Type jsoniter ","Simple Name any ","Class Or Interface Type com ","Simple Name jsoniter ","Simple Name readAny ","continue;","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name readInt ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","StringLiteralExpr","Field Access Expr ","Simple Name readObjectFieldAsHash ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name skip ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr arr ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator com.jsoniter.demo.User obj = ","Class Or Interface Type User ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name firstName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name lastName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name score ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name attachment "]}
{"Version":"0.9.22","MethodName":"User_decode","callMethodNameReferTo":{},"num":394,"succs":[[1,8,5,6,3,2,4],[89],[11,3,10],[],[15,16],[7],[22,21],[],[9],[0,26,25],[12,13],[],[],[],[15,28],[],[17,18],[20,19],[],[],[],[24,23],[],[],[],[],[14,27,29],[],[],[94,92,93,90,1,5,91,89],[31,125],[142,32],[33,162],[34,164,144,163,44],[38,35,166],[38,36,145,167,168],[170,37],[179,29,25,44],[40,39],[181,40],[190,41],[147,42,167,191,44],[43,192],[200,29,25,44],[201,45],[57,46,209],[47,149,57,210,163],[48,212,50],[150,213,167,49,50],[215,29,25,59],[51,52],[229,52],[53,55,237],[55,54,238,152,167],[239,29,25,59],[56],[253,59],[58],[260,59],[267,60],[61,274],[62,281],[63,289],[77,64,69,65,73],[345,346,77,69,65,73,108],[66,67,297,68],[299,298],[300,68],[311],[72,70,297,71],[299,312],[72,313],[311],[74,297,75,76],[299,322],[323,76],[311],[78,297,80,79],[299,332],[333,80],[311],[82,351],[83,114,354,63,353],[359,84],[382,85],[86,385],[388,87],[391,88],[365,29,25],[],[96,95,91],[],[115,28],[121,120],[61,86,62,84,83,87,45,85,88,44,60,31,30,124,59,32],[98,97],[],[],[],[28],[99,28],[100,28],[100,28],[101,28,102],[103,28],[104,28],[105,104,28],[106,104,28],[107,114,28],[28,108],[109,28],[110,28],[111,28],[28,112],[28,113],[117,116],[119,118],[],[],[],[122,123],[],[],[],[82,296],[133],[99,128,130],[126],[127,126],[126],[126,129],[126],[131,126],[135,126,134],[126],[136,99,137],[138,139],[],[141,140],[],[],[],[153],[100],[143],[33,143,144],[33,35,143,145,102],[33,146,35,145],[104,146,147],[148,152],[149,46,148],[105,150,48,46,148],[151,150,48,46],[143,155,154],[143],[100,157,156],[158,159],[],[160,161],[],[],[],[34],[],[165],[],[36,37],[],[169],[],[101,171,172,173],[174,175],[],[178],[177,176],[],[],[],[],[180],[],[183,146,182],[],[184,102,185],[186,187],[],[188,189],[],[],[],[43,42],[169],[195,193,103,194],[197,196],[],[178],[199,198],[],[],[],[180],[202,148,182],[204,104,203],[206,205],[],[208,207],[],[],[],[47],[211],[],[49],[214],[],[216],[219,218,217],[220,127,167],[221],[128,222],[180],[],[223,224],[226,225],[],[227,228],[],[],[],[151,230,182],[105,231,232],[233,234],[],[235,236],[],[],[],[54],[214],[240],[241,242,243],[244,167,129],[245],[130,246],[180],[],[248,247],[250,249],[],[252,251],[],[],[],[106,255,254],[257,256],[],[259,258],[],[],[],[107,262,261],[263,264],[],[265,266],[],[],[],[271],[111,269],[],[268],[272,269,273],[269],[180],[278],[110,276],[],[275],[279,280,276],[276],[180],[285],[283,112],[],[282],[286,283,287],[283],[288],[],[293],[109,291],[],[290],[295,291,294],[291],[180],[63,81],[],[178],[],[290,301,182],[303,302],[304,305],[109,310],[307,306],[],[308,309],[],[],[],[],[],[178],[314,275,182],[316,315],[318,317],[110,321],[319,320],[],[],[],[],[178],[324,268,182],[326,325],[328,327],[331,111],[330,329],[],[],[],[],[178],[282,334,182],[336,335],[],[337,339,338,112],[340,341],[],[344],[342,343],[],[],[],[],[348,347],[],[350,349],[],[],[],[352,113],[],[355,356],[],[357,358],[],[],[],[366],[132,131],[270,360],[361,277],[362,284],[363,292],[364],[360,368,367],[360],[369],[372,371,370],[373,131,167],[374],[132,375],[180],[],[377,376],[378,379],[],[380,381],[],[],[],[270,383,182],[384,361],[],[386,182,277],[362,387],[],[389,182,284],[363,390],[],[182,292,392],[364,393],[]],"nodeAttribute":["Method Declaration Throws ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Return Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","ReturnStmt","Method Call Expr ","Simple Name decode_ ","Simple Name iter ","Method Declaration Throws ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Switch Stmt ","Method Call Expr ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Field Access Expr ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Do Stmt ","Variable Declaration Expr ","Simple Name existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Variable Declarator java.lang.Object existingObj = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Marker Annotation Expr @Override ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Variable Declarator byte nextToken = ","Primitive Type byte ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","NOT_EQUALS","Char Literal Expr '{' ","'{'","Block Stmt ","EQUALS","Char Literal Expr 'n' ","'n'","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","IntegerLiteralExpr","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr 'n' ","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr '\"' ","'\"'","Block Stmt ","Char Literal Expr '}' ","'}'","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr '}' ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Assign Expr ASSIGN ","Simple Name _firstName_ ","Name Expr _firstName_ ","Variable Declarator java.lang.String _firstName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _lastName_ ","Simple Name _lastName_ ","Name Expr _lastName_ ","Variable Declarator java.lang.String _lastName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _score_ ","Simple Name _score_ ","Name Expr _score_ ","Variable Declarator int _score_ = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr _attachment_ ","Simple Name _attachment_ ","Name Expr _attachment_ ","Variable Declarator com.jsoniter.any.Any _attachment_ = ","Class Or Interface Type Any ","Null Literal Expr ","Block Stmt ","SwitchEntryStmt","Integer Literal Expr Note Zero  ","MINUS","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Class Or Interface Type any ","Simple Name Any ","Class Or Interface Type jsoniter ","Simple Name any ","Class Or Interface Type com ","Simple Name jsoniter ","Simple Name readAny ","continue;","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name readInt ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","StringLiteralExpr","Field Access Expr ","Simple Name readObjectFieldAsHash ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name skip ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr arr ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator com.jsoniter.demo.User obj = ","Class Or Interface Type User ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name firstName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name lastName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name score ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name attachment "]}
{"fileName":"User.java","Version":"0.9.22","callMethodName":["decode_","decode"]}
{"Version":"0.9.22","MethodName":"User_decode_","callMethodNameReferTo":{},"num":454,"succs":[[76,1],[103,2],[104,3,5,55],[4,105],[113,5,112,39],[115,6],[116,7,8,117],[124,8,39,112],[145,9],[10,176],[177,14,11,179,178],[12,187],[213,13],[190,14,39,112],[15,215],[245,16],[246,247,17,21,178],[18,254],[19,280],[20,282],[258,21,112,39],[22,284],[313,23],[315,314,29,24,178],[25,322],[26,349],[27,351],[353,28],[327,29,112,39],[355,30],[31,383],[412,32],[414,33],[34,416],[418,35],[36,420],[421,38,422,37,128],[429,35],[39,112,390],[46,44,42,48,40,45,43,41],[41],[],[50,43,49],[],[67,54],[47],[73,72],[],[31,29,8,14,5,32,21,33,35,34,15,22,38,30,9,0,1],[52,51],[],[],[],[54],[],[53,54],[2,54,55],[56,54],[57,54],[58,54],[59,54],[54,60],[61,54],[62,54],[63,54],[64,54,66],[65,54],[69,68],[71,70],[],[],[],[74,75],[],[],[],[88],[53],[77],[77,78],[77,79],[77,80],[77,81],[77,82],[77,83],[77,84],[77,85],[77,86],[77,89,90],[77],[91,92],[93,94],[98,53,97],[95,96],[],[],[],[100,99],[],[102,101],[],[],[],[4,3],[],[56,107,106],[109,108],[],[110,111],[],[],[],[],[114],[],[7],[119,57,118],[],[121,120],[],[122,123],[],[],[],[126,125,127],[129,128,78],[131,130],[134,133],[],[114],[],[132],[],[135,136],[140,79,139],[137,138],[],[],[],[141,142],[],[143,144],[],[],[],[152],[147,58],[],[146],[146,148],[149,146],[146,150],[153,146,154],[146],[155,156],[157,158],[164,163,58,39],[159,160],[],[162,161],[],[],[],[166,165],[],[168,167],[],[170,169],[],[171,172],[],[173,174],[],[147,175],[],[],[12,11,13],[180,181,59],[],[186],[183,182],[],[184,185],[],[],[],[],[191],[80,81],[188,384],[188,189,384],[188,192,193],[188],[196,194,195],[80,128,197],[199,198],[201,202],[114],[],[200],[],[204,203],[208,207,81],[205,206],[],[],[],[209,210],[],[211,212],[],[],[],[214,148,189],[],[221],[217,60],[],[216],[216,218],[216,219],[222,216,223],[216],[224,225],[227,226],[233,232,39,60],[228,229],[],[230,231],[],[],[],[234,235],[],[236,237],[],[239,238],[],[240,241],[],[242,243],[],[244,217],[],[],[19,18,20,17],[249,248,61],[186],[250,251],[],[252,253],[],[],[],[259],[83,82],[255,190,384],[256,255,384],[255,257,384],[260,255,261],[255],[262,263,264],[265,128,82],[267,266],[268,269],[114],[],[200],[270,271],[275,83,274],[272,273],[],[],[],[276,277],[],[278,279],[],[],[],[256,149,281],[],[283,257,218],[],[289],[62,286],[],[285],[287,285],[291,290,285],[285],[292,293],[295,294],[301,62,300,39],[297,296],[],[299,298],[],[],[],[302,303],[],[305,304],[],[307,306],[],[308,309],[],[311,310],[],[312,286],[],[],[25,26,27,28,24],[63,317,316],[186],[319,318],[],[320,321],[],[],[],[328],[84,85],[258,323,384],[324,323,384],[325,323,384],[323,326,384],[330,323,329],[323],[332,333,331],[334,84,128],[335,336],[338,337],[114],[],[200],[340,339],[343,344,85],[341,342],[],[],[],[345,346],[],[347,348],[],[],[],[324,150,350],[],[325,219,352],[],[287,326,354],[],[359],[357,64],[],[356],[356,361,360],[356],[363,362],[364,365],[371,370,64,39],[366,367],[],[368,369],[],[],[],[372,373],[],[374,375],[],[376,377],[],[378,379],[],[380,381],[],[357,382],[],[],[391],[86,87],[327,384],[385,384],[386,384],[387,384],[384,388],[389,384],[393,392,384],[384],[395,394,396],[86,397,128],[399,398],[401,400],[114],[],[200],[402,403],[87,406,407],[405,404],[],[],[],[409,408],[],[410,411],[],[],[],[385,151,413],[],[386,415,220],[],[387,288,417],[],[358,419,388],[],[37],[424,65,423],[186],[426,425],[],[428,427],[],[],[],[430,389,431],[],[432,433],[435,434],[441,440,66,39],[437,436],[],[438,439],[],[],[],[442,443],[],[444,445],[],[447,446],[],[449,448],[],[451,450],[],[453,452],[],[],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Field Access Expr ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Variable Declaration Expr ","Simple Name col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Variable Declarator java.util.ArrayList col = ","Class Or Interface Type ArrayList ","Cast Expr ","Simple Name resetExistingObject ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Simple Name readNull ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name readArrayStart ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Conditional Expr col == null ? new java.util.ArrayList(0) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","EQUALS","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name a1 ","Name Expr jsoniter_codegen ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Variable Declarator Object a1 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type Integer ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name Integer ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","NOT_EQUALS","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","','","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(1) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a2 ","Name Expr jsoniter_codegen ","Name Expr a2 ","Name Expr a2 ","Name Expr a2 ","Variable Declarator Object a2 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type Integer ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name Integer ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name firstName ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(2) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a3 ","Name Expr jsoniter_codegen ","Name Expr a3 ","Name Expr a3 ","Variable Declarator Object a3 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type Integer ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name Integer ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr com ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(3) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a4 ","Name Expr jsoniter_codegen ","Name Expr a4 ","Variable Declarator Object a4 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type Integer ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name Integer ","Simple Name cfg1173796797 ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(8) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type Integer ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name Integer ","Name Expr jsoniter_codegen ","Simple Name cfg1173796797 "]}
{"Version":"0.9.22","MethodName":"User_decode","callMethodNameReferTo":{},"num":478,"succs":[[2,4,1,3,5,6,8],[69],[10,11,3],[],[15,16],[7],[22,21],[],[9],[0,26,25],[13,12],[],[],[],[15,28],[],[18,17],[20,19],[],[],[],[23,24],[],[],[],[],[14,29,27],[],[],[72,73,70,74,1,5,71,69],[101,31],[128,32],[129,33,35,80],[34,130],[137,35,25,29],[139,36],[140,37,38,141],[148,38,29,25],[169,39],[40,200],[201,44,41,202,203],[42,211],[237,43],[44,214,29,25],[45,239],[269,46],[270,271,51,47,202],[48,278],[49,304],[50,306],[282,29,25,51],[52,308],[337,53],[339,338,59,202,54],[55,346],[56,373],[57,375],[377,58],[351,59,29,25],[379,60],[61,407],[436,62],[438,63],[64,440],[442,65],[66,444],[445,68,446,152,67],[453,65],[25,29,414],[],[76,75,71],[],[92,28],[98,97],[61,59,38,44,35,62,63,51,65,64,45,52,68,60,30,31,39],[78,77],[],[],[],[28],[79,28],[32,28,80],[81,28],[82,28],[83,28],[84,28],[28,85],[86,28],[87,28],[88,28],[89,28,91],[90,28],[94,93],[96,95],[],[],[],[99,100],[],[],[],[113],[79],[102],[102,103],[102,104],[102,105],[102,106],[102,107],[102,108],[102,109],[102,110],[102,111],[102,114,115],[102],[116,117],[118,119],[123,79,122],[120,121],[],[],[],[125,124],[],[127,126],[],[],[],[34,33],[],[81,132,131],[134,133],[],[135,136],[],[],[],[138],[],[37],[143,82,142],[],[145,144],[],[146,147],[],[],[],[150,149,151],[153,152,103],[155,154],[158,157],[],[138],[],[156],[],[159,160],[164,104,163],[161,162],[],[],[],[165,166],[],[167,168],[],[],[],[176],[171,83],[],[170],[170,172],[173,170],[170,174],[177,170,178],[170],[179,180],[181,182],[188,187,83,29],[183,184],[],[186,185],[],[],[],[190,189],[],[192,191],[],[194,193],[],[195,196],[],[197,198],[],[171,199],[],[],[42,41,43],[204,205,84],[],[210],[207,206],[],[208,209],[],[],[],[],[215],[105,106],[212,408],[212,408,213],[212,216,217],[212],[220,218,219],[105,152,221],[223,222],[225,226],[138],[],[224],[],[228,227],[232,231,106],[229,230],[],[],[],[233,234],[],[235,236],[],[],[],[238,172,213],[],[245],[241,85],[],[240],[240,242],[240,243],[246,240,247],[240],[248,249],[251,250],[257,256,29,85],[252,253],[],[254,255],[],[],[],[258,259],[],[260,261],[],[263,262],[],[264,265],[],[266,267],[],[268,241],[],[],[49,48,50,47],[273,272,86],[210],[274,275],[],[276,277],[],[],[],[283],[108,107],[279,214,408],[280,279,408],[279,281,408],[284,279,285],[279],[286,287,288],[289,152,107],[291,290],[292,293],[138],[],[224],[294,295],[299,108,298],[296,297],[],[],[],[300,301],[],[302,303],[],[],[],[280,173,305],[],[307,281,242],[],[313],[87,310],[],[309],[311,309],[315,314,309],[309],[316,317],[319,318],[325,87,324,29],[321,320],[],[323,322],[],[],[],[326,327],[],[329,328],[],[331,330],[],[332,333],[],[335,334],[],[336,310],[],[],[55,56,57,58,54],[88,341,340],[210],[343,342],[],[344,345],[],[],[],[352],[109,110],[282,347,408],[348,347,408],[349,347,408],[347,350,408],[354,347,353],[347],[356,357,355],[358,109,152],[359,360],[362,361],[138],[],[224],[364,363],[367,368,110],[365,366],[],[],[],[369,370],[],[371,372],[],[],[],[348,174,374],[],[349,243,376],[],[311,350,378],[],[383],[381,89],[],[380],[380,385,384],[380],[387,386],[388,389],[395,394,89,29],[390,391],[],[392,393],[],[],[],[396,397],[],[398,399],[],[400,401],[],[402,403],[],[404,405],[],[381,406],[],[],[415],[111,112],[351,408],[409,408],[410,408],[411,408],[408,412],[413,408],[417,416,408],[408],[419,418,420],[111,421,152],[423,422],[425,424],[138],[],[224],[426,427],[112,430,431],[429,428],[],[],[],[433,432],[],[434,435],[],[],[],[409,175,437],[],[410,439,244],[],[411,312,441],[],[382,443,412],[],[67],[448,90,447],[210],[450,449],[],[452,451],[],[],[],[454,413,455],[],[456,457],[459,458],[465,464,91,29],[461,460],[],[462,463],[],[],[],[466,467],[],[468,469],[],[470,471],[],[473,472],[],[475,474],[],[477,476],[],[],[]],"nodeAttribute":["Method Declaration Throws ","PUBLIC","Class Or Interface Type Object ","Simple Name String ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Return Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","ReturnStmt","Method Call Expr ","Simple Name decode_ ","Simple Name iter ","Method Declaration Throws ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Field Access Expr ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Variable Declaration Expr ","Simple Name col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Name Expr col ","Variable Declarator java.util.ArrayList col = ","Class Or Interface Type ArrayList ","Cast Expr ","Simple Name resetExistingObject ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Simple Name readNull ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","NullLiteralExpr","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name readArrayStart ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Conditional Expr col == null ? new java.util.ArrayList(0) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","EQUALS","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name a1 ","Name Expr jsoniter_codegen ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Variable Declarator Object a1 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type Integer ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name Integer ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","NOT_EQUALS","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","','","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(1) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a2 ","Name Expr jsoniter_codegen ","Name Expr a2 ","Name Expr a2 ","Name Expr a2 ","Variable Declarator Object a2 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type Integer ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name Integer ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name firstName ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(2) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a3 ","Name Expr jsoniter_codegen ","Name Expr a3 ","Name Expr a3 ","Variable Declarator Object a3 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type Integer ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name Integer ","Simple Name cfg1173796797 ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr com ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(3) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Variable Declaration Expr ","Simple Name a4 ","Name Expr jsoniter_codegen ","Name Expr a4 ","Variable Declarator Object a4 = ","Class Or Interface Type Object ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type Integer ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name Integer ","Simple Name cfg1173796797 ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Name Expr obj ","Variable Declarator java.util.ArrayList obj = ","Class Or Interface Type ArrayList ","Conditional Expr col == null ? new java.util.ArrayList(8) : (java.util.ArrayList) com.jsoniter.CodegenAccess.reuseCollection(col) ","Binary Expr EQUALS ","Object Creation Expr java.util.ArrayList Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type ArrayList ","Integer Literal Expr Note Zero  ","Class Or Interface Type ArrayList ","Method Call Expr ","Class Or Interface Type util ","Simple Name ArrayList ","Class Or Interface Type java ","Simple Name util ","Field Access Expr ","Simple Name reuseCollection ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name add ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name add ","Cast Expr ","Class Or Interface Type User ","Method Call Expr ","Class Or Interface Type Integer ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Simple Name decode_ ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name Integer ","Name Expr jsoniter_codegen ","Simple Name cfg1173796797 "]}
{"fileName":"User.java","Version":"0.9.22","callMethodName":["encode","encode_"]}
{"Version":"0.9.22","MethodName":"User_encode","callMethodNameReferTo":{},"num":189,"succs":[[37,1],[2,15,39,4,38],[41,3],[5,4,43],[44],[9,10,8,12,6,14,11,7],[75],[8],[],[16,21],[26,19],[13],[33,34],[],[4,0],[16],[],[16,15],[19],[],[18,48,19],[23,22],[24,25],[],[],[],[28,27],[29,30],[],[32,31],[],[],[],[36,35],[],[],[],[2,3],[],[40],[],[18,42],[],[],[49,20,46,45],[],[50,47,17],[],[],[77,78,6,76,81,79,11,80,75],[51,52],[54,53],[],[55,56],[],[],[],[58,120],[59,122],[124,60],[128,61],[138,62],[63,140],[64,143],[153,65],[155,66],[67,158],[68,164],[166,69],[169,70,72],[71,171,72,170,38],[74,173],[73],[74,175],[187],[],[77],[],[102,47],[109,48],[117,116],[58,59,63,74,60,69,65,64,67,57,61,68,66,62],[47],[47,82],[47,83],[47,84],[70,85,47],[48],[87,48],[88,48],[89,48],[90,48],[91,48],[48,92],[93,48],[94,48],[95,48],[96,48],[97,48],[98,48],[99,98,48],[100,48],[104,103],[105,106],[],[108,107],[],[],[],[111,110],[113,112],[],[114,115],[],[],[],[118,119],[],[],[],[87,121],[],[88,123],[],[125,89,126],[],[127],[],[129,130,90],[],[131,132],[133,134],[137,82],[135,136],[],[],[],[],[139,91],[],[141,92,142],[],[127],[93,144,145],[],[147,146],[148,149],[83,152],[151,150],[],[],[],[],[154,94],[],[157,156,95],[],[127],[96,159,160],[],[162,161],[],[84,163],[],[165,97],[],[168,98,167],[],[127],[71],[85,172],[40],[],[99,174],[],[177,176,100],[],[179,178],[180,181],[186,86],[182,183],[],[185,184],[],[],[],[],[188,101],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name encode ","Parameter java.lang.Object obj ","Parameter com.jsoniter.output.JsonStream stream ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type lang ","Simple Name Object ","Simple Name lang ","Simple Name lang ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","ReturnStmt","Method Call Expr ","Simple Name encode_ ","Cast Expr ","Simple Name obj ","Simple Name stream ","Method Declaration Throws ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","STATIC","Void Type ","Simple Name encode_ ","Parameter com.jsoniter.demo.User obj ","Parameter com.jsoniter.output.JsonStream stream ","Class Or Interface Type IOException ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Class Or Interface Type Object ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Name Expr stream ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Method Call Expr ","Simple Name writeObjectStart ","Method Call Expr ","Simple Name writeIndention ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Class Or Interface Type Object ","Field Access Expr ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Simple Name firstName ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Class Or Interface Type String ","Field Access Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name lastName ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Primitive Type int ","Field Access Expr ","Simple Name score ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","Block Stmt ","Field Access Expr ","Simple Name lang ","Simple Name attachment ","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Class Or Interface Type Any ","Field Access Expr ","Class Or Interface Type any ","Simple Name Any ","Class Or Interface Type jsoniter ","Simple Name any ","Class Or Interface Type com ","Simple Name jsoniter ","Simple Name attachment ","Expression Stmt ","Simple Name writeObjectEnd "]}
{"Version":"0.9.22","MethodName":"User_encode_","callMethodNameReferTo":{},"num":140,"succs":[[1,69],[2,71],[73,3],[77,4],[87,5],[6,89],[7,92],[102,8],[104,9],[10,107],[11,113],[115,12],[118,13,15],[14,121,15,119,120],[17,124],[16],[17,126],[138],[22,23,19,28,21,24,26,25,20],[20],[],[22],[],[51,30],[58,36],[27],[66,65],[],[2,6,1,17,3,12,8,7,10,0,4,11,9,5],[30],[],[30,29],[30,31],[30,32],[13,33,30],[36],[],[35,36],[37,36],[38,36],[39,36],[40,36],[41,36],[42,36],[43,36],[44,36],[45,36],[46,36],[47,36],[48,47,36],[49,36],[53,52],[54,55],[],[57,56],[],[],[],[60,59],[62,61],[],[63,64],[],[],[],[67,68],[],[],[],[35,70],[],[37,72],[],[74,38,75],[],[76],[],[79,78,39],[],[80,81],[82,83],[86,29],[84,85],[],[],[],[],[88,40],[],[90,41,91],[],[76],[42,93,94],[],[96,95],[97,98],[31,101],[100,99],[],[],[],[],[103,43],[],[106,105,44],[],[76],[45,108,109],[],[111,110],[],[32,112],[],[114,46],[],[117,47,116],[],[76],[14],[33,122],[],[123],[],[],[48,125],[],[128,127,49],[],[130,129],[131,132],[137,34],[133,134],[],[136,135],[],[],[],[],[139,50],[]],"nodeAttribute":["Field Access Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Void Type ","Simple Name encode_ ","Parameter com.jsoniter.demo.User obj ","Parameter com.jsoniter.output.JsonStream stream ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Class Or Interface Type Object ","Simple Name stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Name Expr stream ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Method Call Expr ","Simple Name writeObjectStart ","Method Call Expr ","Simple Name writeIndention ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Class Or Interface Type Object ","Field Access Expr ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Simple Name firstName ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Class Or Interface Type String ","Field Access Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name lastName ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Primitive Type int ","Field Access Expr ","Simple Name score ","Method Call Expr ","Simple Name writeMore ","Method Call Expr ","Simple Name writeObjectField ","String Literal Expr Not Empty  ","Block Stmt ","Field Access Expr ","EQUALS","Simple Name lang ","Simple Name attachment ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Class Or Interface Type Any ","Field Access Expr ","Class Or Interface Type any ","Simple Name Any ","Class Or Interface Type jsoniter ","Simple Name any ","Class Or Interface Type com ","Simple Name jsoniter ","Simple Name attachment ","Expression Stmt ","Simple Name writeObjectEnd "]}
{"fileName":"User.java","Version":"0.9.22","callMethodName":["encode","encode_"]}
{"Version":"0.9.22","MethodName":"User_encode","callMethodNameReferTo":{},"num":237,"succs":[[37,1],[2,4,15,39,38],[41,3],[4,5,43],[44],[9,10,8,12,6,14,11,7],[81],[8],[],[16,21],[26,19],[13],[33,34],[],[4,0],[16],[],[16,15],[19],[],[18,48,19],[23,22],[24,25],[],[],[],[28,27],[29,30],[],[32,31],[],[],[],[36,35],[],[],[],[2,3],[],[40],[],[18,42],[],[],[20,46,49,45],[],[17,47,50],[],[],[86,83,87,84,6,82,85,11,81],[51,52],[54,53],[],[],[],[56,114],[127,57],[135,58],[136,59,129,61,38],[138,60],[49,61,43],[148,62],[150,63],[64,152],[67,65,165],[67,166,154,66,38],[69,167],[68],[169,69],[71,79,192,70],[71,196],[130,80,200,72,193],[73,202],[74,204],[208,75,77],[158,209,76,38,77],[79,210],[78],[79,212],[71,195,201],[235],[],[83],[],[98,47],[103,48],[111,110],[62,80,56,55,64,57,69,63,61],[47],[48],[89,48],[90,48],[91,48],[92,48],[96,93,48],[94,48],[94,95,48],[96,48],[100,99],[102,101],[],[],[],[104,105],[106,107],[],[108,109],[],[],[],[113,112],[],[],[],[119],[88],[115],[116,115],[117,115],[120,121,115],[115],[88,122],[123,124],[126,125],[],[],[],[131],[116],[128],[128,129],[128,133,132],[128],[134,116],[],[59,60],[137],[],[89,140,139,141],[],[143,142],[145,146],[],[144],[],[],[147],[],[90,149],[],[91,151],[],[160],[117],[153],[153,65,154],[153,157,159,118,155],[194,195],[156],[158,75,156],[153,161,162],[153],[117,163,164],[],[137],[66],[40],[92,168],[],[172,49,170,171,93],[173,174],[],[185,155,47],[176,175],[],[178,177],[],[180,179],[],[181,182],[],[183,184],[],[],[],[187,186],[189,188],[],[190,191],[],[],[],[73,72,74],[157,194],[],[194,193],[198,194,197],[194],[199],[],[],[],[203,94],[],[206,205,156],[],[157,207,118],[],[76],[40],[211,95],[],[215,49,96,214,213],[216,217],[],[159,228,47],[219,218],[],[221,220],[],[223,222],[],[224,225],[],[226,227],[],[],[],[230,229],[232,231],[],[233,234],[],[],[],[97,236],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name encode ","Parameter java.lang.Object obj ","Parameter com.jsoniter.output.JsonStream stream ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type lang ","Simple Name Object ","Simple Name lang ","Simple Name lang ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","ReturnStmt","Method Call Expr ","Simple Name encode_ ","Cast Expr ","Simple Name obj ","Simple Name stream ","Method Declaration Throws ","Class Or Interface Type List ","Class Or Interface Type util ","Simple Name List ","Class Or Interface Type java ","Simple Name util ","Expression Stmt ","Method Call Expr ","If Stmt ","Marker Annotation Expr @Override ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","STATIC","Void Type ","Simple Name encode_ ","Parameter java.lang.Object obj ","Parameter com.jsoniter.output.JsonStream stream ","Class Or Interface Type IOException ","Block Stmt ","Name Expr obj ","Simple Name mapKey ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Variable Declaration Expr ","Simple Name list ","Name Expr list ","Name Expr list ","Name Expr list ","Variable Declarator java.util.List list = ","Class Or Interface Type List ","Cast Expr ","Class Or Interface Type List ","Class Or Interface Type util ","Simple Name List ","Class Or Interface Type java ","Simple Name util ","Variable Declaration Expr ","Simple Name size ","Name Expr size ","Name Expr size ","Variable Declarator int size = ","Primitive Type int ","Method Call Expr ","Simple Name size ","Block Stmt ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '[' ","'['","Primitive Type byte ","Char Literal Expr ']' ","']'","Method Call Expr ","Simple Name writeArrayStart ","Method Call Expr ","Simple Name writeIndention ","Variable Declaration Expr ","Simple Name e ","Name Expr e ","Name Expr e ","Name Expr e ","Name Expr i ","Name Expr e ","Name Expr e ","Variable Declarator java.lang.Object e = ","Variable Declaration Expr ","Method Call Expr ","Simple Name get ","Integer Literal Expr Zero  ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Field Access Expr ","Simple Name encode_ ","Cast Expr ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name encoder ","Name Expr jsoniter_codegen ","Simple Name CodegenAccess ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","LESS","POSTFIX_INCREMENT","Return Stmt ","Simple Name writeMore ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Field Access Expr ","Simple Name encode_ ","Cast Expr ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name encoder ","Name Expr jsoniter_codegen ","Simple Name cfg1173796797 ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Method Call Expr ","Simple Name writeArrayEnd "]}
{"Version":"0.9.22","MethodName":"User_encode_","callMethodNameReferTo":{},"num":191,"succs":[[1,65],[78,2],[86,3],[88,4,80,6,87],[90,5],[26,6,100],[101,7],[103,8],[9,105],[12,10,118],[12,119,11,107,87],[14,121],[13],[123,14],[16,24,146,15],[16,150],[81,25,154,17,147],[18,156],[19,158],[162,20,22],[111,163,21,87,22],[24,164],[23],[24,166],[16,149,155],[189],[34,30,36,31,27,29,32,33,28],[28],[],[30],[],[49,38],[54,40],[35],[62,61],[],[7,25,1,0,9,8,14,2,6],[38],[],[40],[],[39,40],[41,40],[42,40],[43,40],[47,44,40],[45,40],[45,46,40],[47,40],[51,50],[53,52],[],[],[],[55,56],[57,58],[],[59,60],[],[],[],[64,63],[],[],[],[70],[37],[66],[67,66],[68,66],[71,72,66],[66],[73,37],[74,75],[77,76],[],[],[],[82],[67],[79],[79,80],[79,84,83],[79],[85,67],[],[4,5],[],[89],[],[39,92,91,93],[],[95,94],[97,98],[],[96],[],[],[99],[],[],[41,102],[],[42,104],[],[113],[68],[106],[106,10,107],[106,110,112,69,108],[148,149],[109],[111,20,109],[106,114,115],[106],[68,116,117],[],[89],[11],[120],[],[43,122],[],[126,26,125,124,44],[127,128],[],[139,108,38],[130,129],[],[132,131],[],[134,133],[],[135,136],[],[137,138],[],[],[],[141,140],[143,142],[],[144,145],[],[],[],[18,17,19],[110,148],[],[148,147],[152,148,151],[148],[153],[],[],[],[157,45],[],[160,159,109],[],[110,161,69],[],[21],[120],[165,46],[],[169,26,47,168,167],[170,171],[],[112,182,38],[173,172],[],[175,174],[],[177,176],[],[178,179],[],[180,181],[],[],[],[183,184],[186,185],[],[187,188],[],[],[],[48,190],[]],"nodeAttribute":["Expression Stmt ","Method Call Expr ","If Stmt ","Marker Annotation Expr @Override ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Void Type ","Simple Name encode_ ","Parameter java.lang.Object obj ","Parameter com.jsoniter.output.JsonStream stream ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Simple Name mapKey ","Simple Name stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Class Or Interface Type JsonStream ","Class Or Interface Type output ","Simple Name JsonStream ","Class Or Interface Type jsoniter ","Simple Name output ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Variable Declaration Expr ","Simple Name list ","Name Expr list ","Name Expr list ","Name Expr list ","Variable Declarator java.util.List list = ","Class Or Interface Type List ","Cast Expr ","Class Or Interface Type List ","Class Or Interface Type util ","Simple Name List ","Class Or Interface Type java ","Simple Name util ","Variable Declaration Expr ","Simple Name size ","Name Expr size ","Name Expr size ","Variable Declarator int size = ","Primitive Type int ","Method Call Expr ","Simple Name size ","Block Stmt ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '[' ","'['","Primitive Type byte ","Char Literal Expr ']' ","']'","ReturnStmt","Method Call Expr ","Simple Name writeArrayStart ","Method Call Expr ","Simple Name writeIndention ","Variable Declaration Expr ","Simple Name e ","Name Expr e ","Name Expr e ","Name Expr e ","Name Expr i ","Name Expr e ","Name Expr e ","Variable Declarator java.lang.Object e = ","Variable Declaration Expr ","Method Call Expr ","Simple Name get ","Integer Literal Expr Zero  ","Block Stmt ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Field Access Expr ","Simple Name encode_ ","Cast Expr ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name encoder ","Name Expr jsoniter_codegen ","Simple Name CodegenAccess ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","LESS","POSTFIX_INCREMENT","Return Stmt ","Simple Name writeMore ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name writeNull ","Method Call Expr ","Field Access Expr ","Simple Name encode_ ","Cast Expr ","Field Access Expr ","Simple Name User ","Field Access Expr ","Simple Name demo ","Field Access Expr ","Simple Name jsoniter ","Field Access Expr ","Simple Name com ","Field Access Expr ","Simple Name encoder ","Name Expr jsoniter_codegen ","Simple Name cfg1173796797 ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Method Call Expr ","Simple Name writeArrayEnd "]}
{"fileName":"User.java","Version":"0.9.22","callMethodName":[]}
