{"fileName":"JsoniterSpi.java","Version":"0.9.22","callMethodName":["initialValue","setCurrentConfig","clearCurrentConfig","getCurrentConfig","setDefaultConfig","getDefaultConfig","assignConfigName","assignNewConfigName","registerExtension","getExtensions","registerMapKeyDecoder","registerMapKeyEncoder","registerTypeImplementation","getTypeImplementation","registerTypeDecoder","registerTypeDecoder","registerTypeEncoder","registerTypeEncoder","registerPropertyDecoder","registerPropertyDecoder","registerPropertyEncoder","registerPropertyEncoder","copyGlobalSettings","copyGlobalPropertyEncoder","copyGlobalPropertyDecoder","copyGlobalTypeEncoder","copyGlobalTypeDecoder","copyGlobalMapKeyDecoder","copyGlobalMapKeyEncoder","getMapKeyEncoderCacheKey","getMapKeyDecoderCacheKey","addNewMapDecoder","getMapKeyDecoder","addNewMapEncoder","getMapKeyEncoder","getDecoder","addNewDecoder","getEncoder","addNewEncoder","canCreate","create","getObjectFactory","addObjectFactory","equals","hashCode"]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_setCurrentConfig","callMethodNameReferTo":{},"num":14,"succs":[[6,5,1,3,4,2],[2],[],[4],[],[9,8],[10],[8],[],[],[11],[7,12,13],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name setCurrentConfig ","Parameter Config val ","Block Stmt ","Name Expr val ","Simple Name val ","Class Or Interface Type Config ","Expression Stmt ","Method Call Expr ","Class Or Interface Type StringBuilder ","String Literal Expr Not Empty  "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_clearCurrentConfig","callMethodNameReferTo":{},"num":11,"succs":[[5,1,3,4,2],[2],[],[4],[],[6],[7],[10,8,9],[],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name clearCurrentConfig ","Block Stmt ","Expression Stmt ","Method Call Expr ","Return Stmt ","Name Expr arr ","Name Expr defaultConfig "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getCurrentConfig","callMethodNameReferTo":{},"num":11,"succs":[[1,3,4,2,5],[2],[],[4],[],[6],[8,0,7],[],[10,9],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_setDefaultConfig","callMethodNameReferTo":{},"num":14,"succs":[[6,3,1,4,5,2],[2],[],[4],[],[8,9],[10],[8],[],[],[11],[7,12,13],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name setDefaultConfig ","Simple Name parameters ","Block Stmt ","Name Expr val ","Simple Name val ","Class Or Interface Type Double ","Expression Stmt ","Assign Expr ASSIGN ","Name Expr defaultConfig ","ASSIGN"]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getDefaultConfig","callMethodNameReferTo":{},"num":9,"succs":[[4,5,1,3,2],[2],[],[4],[],[6],[0,8,7],[],[]],"nodeAttribute":["Method Declaration Throws ","PUBLIC","STATIC","Class Or Interface Type Config ","Simple Name getDefaultConfig ","Block Stmt ","Return Stmt ","ReturnStmt","Name Expr defaultConfig "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_assignConfigName","callMethodNameReferTo":{},"num":601,"succs":[[1,16],[2,25],[3,4,27,26,19],[5,4,20,29],[5,29,30],[9,11,6,10,8,7],[7],[49],[9],[],[13,15],[1,4,0],[13],[],[13,12,32],[],[21],[18,12],[],[17],[2,17,19],[22,23,17],[17],[24,18,12],[],[3],[],[28],[],[],[31,14,33],[],[],[51,48,53,50,52,49,7],[58,35],[72,36],[61,73,37,26,38],[33,62,29,38],[74,39],[87,40],[88,42,41,76,89],[42,91],[43,97],[44,103],[45,107],[116,46],[118,47],[67,33,29],[7],[],[51],[],[57,32],[44,35,43,47,42,39,46,45,34,38],[32],[54,32],[55,32],[],[68],[54,60],[],[59],[59,61,36],[64,59,62],[77],[63,105],[65,63],[66,63],[70,59,69],[59],[71,54,60],[],[37],[28],[80],[55],[75],[78,75,40,79],[],[75,40,76],[75,81,82],[75],[83,84,86],[55,85],[],[],[126,6,125,123,124],[41],[],[90],[],[77,93,92],[],[94,79,95],[78,96],[],[],[92,98,63],[99,100,95],[64,101,95],[102],[102],[],[65,106,104],[],[],[181,182,48,184,183,7],[112],[109],[],[108],[110,108],[113,114,108],[108],[109,115],[],[56,110,66,117],[],[119,92,111],[],[121,127],[144,122],[86,29,135],[],[125],[],[121,120,122],[136],[129,130],[],[],[133,134,128,132],[128],[],[],[131],[137,138,128],[128],[140,141,139],[142,129,26],[86,130,143],[90],[28],[],[131,92,145],[147,95,146],[149,132,148],[151],[150],[],[],[154,152,153],[133,155,26],[134,86,156],[90],[28],[],[192,158,159],[198,197,161,159],[194,160],[158,199],[163,162,209],[163,215,165,214],[211,164],[162,216],[226,167,166],[167,169,232,231],[168,228],[233,166],[243,170,171],[173,249,248,171],[245,172],[170,250],[175,174,260],[267,175,177,266],[176,262],[174,268],[178,179,285],[292,179,291],[287,180],[178,293],[182],[],[191,105],[173,177,169,161,157,165],[203,105],[220,185,105],[186,237,105],[254,187,105],[188,273,105],[189,298,105],[],[160],[194],[196],[194,193],[194],[],[],[200,201,206,185,202],[],[193,204,207],[205,208,195],[],[],[],[312,315,48,311,313,310,314,7],[],[],[164],[211],[213],[211,210],[211],[],[],[219,223,186,217,218],[],[210,221,224],[222,212,225],[],[],[],[340,48,337,339,336,7,338,335],[],[],[168],[228],[230],[227,228],[228],[],[],[235,187,234,236,240],[],[238,227,241],[242,239,229],[],[],[],[360,48,358,359,361,363,7,362],[],[],[172],[245],[247],[245,244],[245],[],[],[251,253,188,252,257],[],[255,244,258],[259,246,256],[],[],[],[385,381,48,384,382,386,383,7],[],[],[176],[262],[265],[261,262],[263,262],[262],[],[],[271,269,272,270,189,277],[],[274,279,278],[275,281,282],[284,276,264],[],[],[],[],[409,48,405,407,410,406,404,7,408],[261,280],[],[],[263,283],[],[],[],[180],[287],[290],[286,287],[288,287],[287],[],[],[302,296,190,297,295,294],[],[299,303,304],[307,306,300],[301,309,289],[],[],[],[],[430,431,48,432,429,434,433,435,7],[286,305],[],[],[308,288],[],[],[],[311],[],[203,319],[320,204],[205,321],[322],[203],[204,333],[327,205],[],[],[],[323],[324,325,318,328],[],[326,316,329,330],[],[],[460,457,458,6,459,461,7,49],[334,317,331,332],[],[],[],[],[481,6,479,482,480,7],[336],[],[344,220],[345,221],[346,222],[347],[220],[221,333],[222,352],[],[],[],[348],[349,350,343,353],[],[355,341,351,354],[],[],[497,500,496,498,499,6,7,49],[342,357,356,334],[],[],[],[359],[],[237,367],[238,368],[239,369],[370],[237],[238,333],[239,375],[],[],[],[371],[372,373,366,376],[],[374,377,364,378],[],[],[526,6,527,525,528,7,529,49],[379,380,334,365],[],[],[],[382],[],[254,390],[255,391],[392,256],[393],[254],[255,333],[256,398],[],[],[],[394],[399,396,395,389],[],[397,400,387,401],[],[],[563,562,566,6,564,565,49,7],[403,334,388,402],[],[],[],[405],[],[414,273],[274,415],[275,416],[417,276],[418],[274,333],[275],[276,375],[],[],[],[],[419],[421,420,413,376],[],[374,423,95,422],[424,412,95],[425,426],[102],[428,334,427,411],[],[],[],[430],[],[439,298],[299,440],[300,441],[301,442],[443],[299,333],[300],[301,398],[],[],[],[],[444],[446,399,438,445],[],[448,447,397,95],[437,95,449],[450,451],[102],[453,452,334,436],[],[],[],[455,466],[475,456],[477],[458],[],[326,464],[327,465],[456,454,455],[326],[327],[],[],[471],[468],[],[467],[467,469],[467,472,473],[467],[474,468],[],[462,469,476,463],[],[478,470,92],[],[480],[],[333,486],[483],[487,334,29],[333,491],[484,333],[],[489,485,334,488],[484,492,490],[],[],[],[591,592,6,594,593,7],[505,494],[495,514],[516],[497],[],[503,351],[352,504],[495,493,494],[351],[352],[],[],[510],[507],[],[506],[508,506],[512,511,506],[506],[513,507],[],[501,508,502,515],[],[517,509,92],[],[519,536],[522,520,546],[548,532,522,547,521],[549,524],[523],[551,524],[553],[526],[],[374,534],[535,375],[518,519,524],[374],[374,530],[375],[532,375,520],[],[],[542],[538],[],[537],[537,539],[537,540],[537,543,544],[537],[545,538],[],[521],[],[28],[539,550,530],[],[531,552,533,540],[],[554,541,92],[],[556,573],[557,559,583],[584,559,547,569,558],[585,561],[560],[561,587],[589],[563],[],[571,397],[398,572],[556,555,561],[397],[567,397],[398],[557,398,569],[],[],[579],[575],[],[574],[576,574],[574,577],[580,581,574],[574],[582,575],[],[558],[28],[576,567,586],[],[570,588,577,568],[],[578,590,92],[],[592],[],[597,491],[595],[492,598,29],[491],[],[600,599,596],[],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name assignConfigName ","Parameter Object obj ","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Simple Name object ","Variable Declaration Expr ","Simple Name configName ","Name Expr configNames ","Name Expr configName ","Name Expr configName ","Variable Declarator String configName = ","Simple Name append ","Method Call Expr ","Simple Name get ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Simple Name assignNewConfigName ","Simple Name obj ","Method Declaration ","Expression Stmt ","If Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","SYNCHRONIZED","Class Or Interface Type String ","Simple Name assignNewConfigName ","Parameter Object obj ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name configName ","Name Expr configNames ","Simple Name isWildcard ","Name Expr configName ","Name Expr configName ","Name Expr hash ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Variable Declarator String configName = ","Class Or Interface Type Object ","Method Call Expr ","Name Expr val ","Block Stmt ","Null Literal Expr ","Variable Declaration Expr ","Simple Name hash ","Name Expr hash ","Name Expr hash ","Name Expr Long ","Name Expr iter ","Variable Declarator long hash = ","Name Expr iter ","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name toString ","Method Declaration ","Block Stmt ","LESS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name MAX_VALUE ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Expression Stmt ","Simple Name configName ","Method Declaration ","Variable Declaration Expr ","Simple Name newCache ","Name Expr configNames ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<Object, String> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<Object, String> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Name Expr indention ","Primitive Type int ","Simple Name hashCode ","Block Stmt ","Variable Declaration Expr ","Simple Name result ","Name Expr type ","Name Expr type ","Name Expr result ","Name Expr result ","Name Expr property ","Name Expr property ","Name Expr result ","Variable Declarator int result = ","Primitive Type int ","Conditional Expr type != null ? type.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","MULTIPLY","IntegerLiteralExpr","Conditional Expr property != null ? property.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","If Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Method Declaration ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Void Type ","Simple Name copyGlobalSettings ","Parameter String configName ","Block Stmt ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Class Or Interface Type String ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Variable Declarator byte b2 = ","Name Expr globalMapKeyDecoders ","Simple Name entrySet ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name mapKeyType ","Simple Name mapKeyDecoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalMapKeyEncoders ","Simple Name entrySet ","Method Call Expr ","Expression Stmt ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name mapKeyType ","Simple Name mapKeyEncoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalTypeDecoders ","Simple Name entrySet ","Method Call Expr ","Simple Name copyGlobalTypeDecoder ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name typeDecoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalTypeEncoders ","Simple Name entrySet ","Method Call Expr ","Simple Name copyGlobalTypeEncoder ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name typeEncoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Name Expr clazz ","Class Or Interface Type Entry ","Name Expr globalPropertyDecoders ","Simple Name entrySet ","Method Call Expr ","Variable Declaration Expr [FINAL] ","Field Access Expr ","Field Access Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name property ","Simple Name propertyDecoder ","Method Declaration ","Method Call Expr ","Simple Name type ","Simple Name getKey ","Method Call Expr ","Simple Name property ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalPropertyEncoders ","Simple Name entrySet ","Method Call Expr ","Variable Declaration Expr [FINAL] ","Field Access Expr ","Field Access Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name property ","Simple Name propertyEncoder ","Method Declaration ","Method Call Expr ","Simple Name type ","Simple Name getKey ","Method Call Expr ","Simple Name property ","Simple Name getKey ","Simple Name getValue ","Void Type ","Simple Name copyGlobalMapKeyDecoder ","Parameter String configName ","Parameter Type mapKeyType ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr configName ","Name Expr mapKeyType ","Name Expr mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewMapDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name mapKeyDecoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Void Type ","Simple Name copyGlobalMapKeyEncoder ","Parameter String configName ","Parameter Type mapKeyType ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr configName ","Name Expr mapKeyType ","Name Expr mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewMapEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name mapKeyEncoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalTypeDecoder ","Parameter String configName ","Parameter Type type ","Parameter Decoder typeDecoder ","Block Stmt ","Name Expr configName ","Name Expr type ","Name Expr typeDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name decoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalTypeEncoder ","Parameter String configName ","Parameter Type type ","Parameter Encoder typeEncoder ","Block Stmt ","Name Expr configName ","Name Expr type ","Name Expr typeEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name encoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalPropertyDecoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Decoder propertyDecoder ","Block Stmt ","Name Expr type ","Name Expr property ","Name Expr propertyDecoder ","Class Or Interface Type String ","Name Expr iter ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Binary Expr PLUS ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalPropertyEncoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Encoder propertyEncoder ","Block Stmt ","Name Expr type ","Simple Name readLong ","Name Expr propertyEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Return Stmt ","Binary Expr PLUS ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Void Type ","Simple Name addNewMapDecoder ","Parameter String cacheKey ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr cacheKey ","Name Expr mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyDecoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr IterImplObject ","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name addNewMapEncoder ","Parameter String cacheKey ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr cacheKey ","Name Expr mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyEncoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr mapKeyEncoders ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Void Type ","Simple Name addNewDecoder ","Parameter String cacheKey ","Parameter Decoder decoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Binary Expr LESS ","Name Expr decoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoders ","Name Expr newCache ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","Method Call Expr ","Simple Name remove ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr decoders ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name addNewEncoder ","Parameter String cacheKey ","Parameter Encoder encoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr encoder ","Name Expr encoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoders ","Name Expr newCache ","Simple Name writeVal ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name remove ","Method Call Expr ","Name Expr val ","Assign Expr ASSIGN ","Name Expr encoders ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_assignNewConfigName","callMethodNameReferTo":{},"num":574,"succs":[[27,1],[41,2],[30,43,3,42,4],[14,31,45,4],[46,5],[59,6],[60,8,7,48,61],[8,63],[9,69],[10,75],[11,79],[88,12],[90,13],[36,14,45],[19,15,21,18,20,17,16],[16],[17],[],[19],[],[26,23],[10,8,9,1,13,5,12,11,0,4],[23],[],[22,23],[24,23],[],[37],[22,29],[],[28],[30,28,2],[33,28,31],[49],[32,77],[34,32],[35,32],[39,28,38],[28],[40,22,29],[],[3],[],[44],[],[],[52],[24],[47],[50,47,6,51],[],[47,6,48],[47,53,54],[47],[55,56,58],[24,57],[],[],[99,96,98,95,97],[7],[],[62],[],[49,65,64],[],[66,51,67],[50,68],[],[],[64,70,32],[71,72,67],[33,73,67],[74],[74],[],[78,34,76],[],[],[154,155,15,157,156,16],[84],[81],[],[80],[82,80],[85,86,80],[80],[81,87],[],[25,82,35,89],[],[91,83,64],[],[93,100],[117,94],[58,45,108],[],[16],[98],[],[93,92,94],[109],[102,103],[],[],[106,107,101,105],[101],[],[],[104],[110,111,101],[101],[113,114,112],[115,102,42],[58,103,116],[62],[44],[],[104,64,118],[120,67,119],[122,105,121],[124],[123],[],[],[127,125,126],[106,128,42],[107,129,58],[62],[44],[],[165,131,132],[171,170,132,134],[167,133],[131,172],[136,135,182],[136,188,138,187],[184,137],[135,189],[199,140,139],[140,142,205,204],[141,201],[206,139],[216,143,144],[146,222,221,144],[218,145],[143,223],[148,147,233],[148,240,150,239],[149,235],[147,241],[151,152,258],[265,152,264],[260,153],[151,266],[155],[],[164,77],[146,150,142,134,130,138],[176,77],[193,158,77],[159,210,77],[227,160,77],[161,246,77],[162,77,271],[],[133],[167],[169],[167,166],[167],[],[],[173,174,179,158,175],[],[166,177,180],[178,181,168],[],[],[],[285,288,15,284,286,283,16,287],[],[],[137],[184],[186],[184,183],[184],[],[],[192,196,159,190,191],[],[194,183,197],[195,185,198],[],[],[],[313,15,310,312,309,311,16,308],[],[],[141],[201],[203],[200,201],[201],[],[],[208,160,207,209,213],[],[211,214,200],[215,212,202],[],[],[],[333,331,332,15,334,336,335,16],[],[],[145],[218],[220],[218,217],[218],[],[],[224,226,161,225,230],[],[228,217,231],[232,219,229],[],[],[],[358,15,354,357,355,359,356,16],[],[],[149],[235],[238],[234,235],[236,235],[235],[],[],[244,242,245,243,162,250],[],[247,252,251],[248,254,255],[257,249,237],[],[],[],[],[382,15,378,380,383,379,381,16,377],[234,253],[],[],[236,256],[],[],[],[153],[260],[263],[259,260],[261,260],[260],[],[],[275,269,163,270,268,267],[],[272,276,277],[280,279,273],[274,282,262],[],[],[],[],[403,404,15,405,402,406,407,408,16],[259,278],[],[],[281,261],[],[],[],[284],[],[176,292],[293,177],[178,294],[295],[176],[177,306],[300,178],[],[],[],[296],[297,298,291,301],[],[299,289,302,303],[],[],[433,430,96,431,432,434,17,16],[307,290,304,305],[],[],[],[],[454,96,452,453,455,16],[309],[],[317,193],[318,194],[319,195],[320],[193],[194,306],[195,325],[],[],[],[321],[322,323,316,326],[],[328,314,324,327],[],[],[470,473,469,471,96,472,16,17],[315,330,329,307],[],[],[],[332],[],[210,340],[211,341],[212,342],[343],[210],[211,306],[212,348],[],[],[],[344],[345,346,339,349],[],[347,350,337,351],[],[],[499,500,96,498,501,502,16,17],[352,353,307,338],[],[],[],[355],[],[227,363],[228,364],[365,229],[366],[227],[228,306],[229,371],[],[],[],[367],[372,369,368,362],[],[370,373,360,374],[],[],[536,535,539,96,537,538,16,17],[376,307,361,375],[],[],[],[378],[],[387,246],[247,388],[248,389],[249,390],[391],[247,306],[248],[249,348],[],[],[],[],[392],[394,393,386,349],[],[347,396,67,395],[397,385,67],[398,399],[74],[401,307,400,384],[],[],[],[403],[],[412,271],[272,413],[273,414],[274,415],[416],[272,306],[273],[274,371],[],[],[],[],[417],[419,372,411,418],[],[421,420,370,67],[410,67,422],[423,424],[74],[426,425,409,307],[],[],[],[428,439],[448,429],[450],[431],[],[299,437],[300,438],[429,427,428],[299],[300],[],[],[444],[441],[],[440],[440,442],[440,445,446],[440],[447,441],[],[435,442,449,436],[],[451,443,64],[],[453],[],[306,459],[456],[460,307,45],[306,464],[457,306],[],[462,458,307,461],[457,465,463],[],[],[],[564,565,567,96,566,16],[478,467],[468,487],[489],[470],[],[476,324],[325,477],[468,466,467],[324],[325],[],[],[483],[480],[],[479],[481,479],[485,484,479],[479],[486,480],[],[474,481,475,488],[],[490,64,482],[],[492,509],[495,493,519],[521,505,495,520,494],[522,497],[496],[524,497],[526],[499],[],[347,507],[508,348],[492,491,497],[347],[347,503],[348],[505,348,493],[],[],[515],[511],[],[510],[510,512],[510,513],[510,516,517],[510],[518,511],[],[494],[],[44],[512,523,503],[],[504,525,506,513],[],[527,514,64],[],[529,546],[530,532,556],[557,532,520,542,531],[558,534],[533],[534,560],[562],[536],[],[544,370],[371,545],[529,528,534],[370],[540,370],[371],[530,371,542],[],[],[552],[548],[],[547],[549,547],[547,550],[553,554,547],[547],[555,548],[],[531],[44],[549,540,559],[],[543,561,550,541],[],[551,563,64],[],[565],[],[570,464],[568],[465,571,45],[464],[],[573,572,569],[],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","SYNCHRONIZED","Class Or Interface Type String ","Simple Name assignNewConfigName ","Parameter Object obj ","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name configName ","Name Expr configNames ","Simple Name isWildcard ","Name Expr configName ","Name Expr configName ","Name Expr hash ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Variable Declarator String configName = ","Class Or Interface Type Object ","Method Call Expr ","Name Expr val ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Variable Declaration Expr ","Simple Name hash ","Name Expr hash ","Name Expr hash ","Name Expr Long ","Name Expr iter ","Variable Declarator long hash = ","Name Expr iter ","Method Call Expr ","Method Call Expr ","Simple Name hashCode ","Simple Name toString ","Method Declaration ","Block Stmt ","LESS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name MAX_VALUE ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Expression Stmt ","Simple Name configName ","Method Declaration ","Variable Declaration Expr ","Simple Name newCache ","Name Expr configNames ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<Object, String> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<Object, String> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Name Expr indention ","PUBLIC","Primitive Type int ","Simple Name hashCode ","Block Stmt ","Variable Declaration Expr ","Simple Name result ","Name Expr type ","Name Expr type ","Name Expr result ","Name Expr result ","Name Expr property ","Name Expr property ","Name Expr result ","Variable Declarator int result = ","Primitive Type int ","Conditional Expr type != null ? type.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","MULTIPLY","IntegerLiteralExpr","Conditional Expr property != null ? property.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","If Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Method Declaration ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Void Type ","Simple Name copyGlobalSettings ","Parameter String configName ","Block Stmt ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Class Or Interface Type String ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Variable Declarator byte b2 = ","Name Expr globalMapKeyDecoders ","Simple Name entrySet ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name mapKeyType ","Simple Name mapKeyDecoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalMapKeyEncoders ","Simple Name entrySet ","Method Call Expr ","Expression Stmt ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name mapKeyType ","Simple Name mapKeyEncoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalTypeDecoders ","Simple Name entrySet ","Method Call Expr ","Simple Name copyGlobalTypeDecoder ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name typeDecoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalTypeEncoders ","Simple Name entrySet ","Method Call Expr ","Simple Name copyGlobalTypeEncoder ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name typeEncoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Name Expr clazz ","Class Or Interface Type Entry ","Name Expr globalPropertyDecoders ","Simple Name entrySet ","Method Call Expr ","Variable Declaration Expr [FINAL] ","Field Access Expr ","Field Access Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name property ","Simple Name propertyDecoder ","Method Declaration ","Method Call Expr ","Simple Name type ","Simple Name getKey ","Method Call Expr ","Simple Name property ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalPropertyEncoders ","Simple Name entrySet ","Method Call Expr ","Variable Declaration Expr [FINAL] ","Field Access Expr ","Field Access Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name property ","Simple Name propertyEncoder ","Method Declaration ","Method Call Expr ","Simple Name type ","Simple Name getKey ","Method Call Expr ","Simple Name property ","Simple Name getKey ","Simple Name getValue ","Void Type ","Simple Name copyGlobalMapKeyDecoder ","Parameter String configName ","Parameter Type mapKeyType ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr configName ","Name Expr mapKeyType ","Name Expr mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewMapDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name mapKeyDecoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Void Type ","Simple Name copyGlobalMapKeyEncoder ","Parameter String configName ","Parameter Type mapKeyType ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr configName ","Name Expr mapKeyType ","Name Expr mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewMapEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name mapKeyEncoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalTypeDecoder ","Parameter String configName ","Parameter Type type ","Parameter Decoder typeDecoder ","Block Stmt ","Name Expr configName ","Name Expr type ","Name Expr typeDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name decoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalTypeEncoder ","Parameter String configName ","Parameter Type type ","Parameter Encoder typeEncoder ","Block Stmt ","Name Expr configName ","Name Expr type ","Name Expr typeEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name encoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalPropertyDecoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Decoder propertyDecoder ","Block Stmt ","Name Expr type ","Name Expr property ","Name Expr propertyDecoder ","Class Or Interface Type String ","Name Expr iter ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Binary Expr PLUS ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalPropertyEncoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Encoder propertyEncoder ","Block Stmt ","Name Expr type ","Simple Name readLong ","Name Expr propertyEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Return Stmt ","Binary Expr PLUS ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Void Type ","Simple Name addNewMapDecoder ","Parameter String cacheKey ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr cacheKey ","Name Expr mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyDecoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr IterImplObject ","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name addNewMapEncoder ","Parameter String cacheKey ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr cacheKey ","Name Expr mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyEncoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr mapKeyEncoders ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Void Type ","Simple Name addNewDecoder ","Parameter String cacheKey ","Parameter Decoder decoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Binary Expr LESS ","Name Expr decoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoders ","Name Expr newCache ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","Method Call Expr ","Simple Name remove ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr decoders ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name addNewEncoder ","Parameter String cacheKey ","Parameter Encoder encoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr encoder ","Name Expr encoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoders ","Name Expr newCache ","Simple Name writeVal ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name remove ","Method Call Expr ","Name Expr val ","Assign Expr ASSIGN ","Name Expr encoders ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerExtension","callMethodNameReferTo":{},"num":22,"succs":[[14,1],[16,17,2],[20],[8,6,9,7,4,5],[5],[],[7],[],[11,13],[0],[11],[],[11,10,1],[],[2],[1],[19,10,18],[],[],[],[21,12,15],[]],"nodeAttribute":["If Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name registerExtension ","Parameter Extension extension ","Block Stmt ","Name Expr extension ","Simple Name extension ","Name Expr extension ","Class Or Interface Type Extension ","Block Stmt ","Name Expr extensions ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr extensions ","Simple Name contains ","Expression Stmt ","Simple Name add "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getExtensions","callMethodNameReferTo":{},"num":26,"succs":[[11,1],[2,20],[3,15,25],[4,8,6,7,5],[5],[],[9,10,7],[],[2,0,1],[],[],[16],[13],[],[12],[14,12],[18,17,12],[12],[19,13],[],[21,22,14],[],[24,23],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type List ","Simple Name getExtensions ","Block Stmt ","Simple Name sLen ","Simple Name extension ","Variable Declaration Expr ","Simple Name combined ","Name Expr extensions ","Name Expr combined ","Name Expr combined ","Variable Declarator ArrayList<Extension> combined = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Extension> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name add ","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","ReturnStmt"]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerMapKeyDecoder","callMethodNameReferTo":{},"num":117,"succs":[[1,18],[21],[8,6,3,5,7,9,4],[4],[69],[6],[],[11,16],[17,14],[1,0],[11],[],[10,25,11],[14],[],[14,26,13],[],[],[19,10,13,20],[],[],[23,27,22,12,15],[],[28,24,29],[],[],[],[35,38,32,34,36,33,4,37],[31,30],[],[],[3,58,59,60,4],[4],[34],[],[24,42],[43,25],[26,44],[45],[24],[25,56],[50,26],[],[],[],[46],[47,48,41,51],[],[49,39,52,53],[],[],[73,70,71,3,72,74,69,4],[57,40,54,55],[],[],[],[],[95,3,93,94,96,4],[59],[],[61],[63,31,62],[],[65,64],[],[],[67,79],[88,68],[90],[],[71],[],[49,77],[50,78],[68,66,67],[49],[50],[],[],[84],[81],[],[80],[80,82],[80,85,86],[80],[87,81],[],[75,82,89,76],[],[91,83,92],[],[],[94],[],[56,100],[97],[101,57,62],[56,105],[98,56],[],[99,103,57,102],[98,106,104],[],[],[],[107,108,110,3,109,4],[108],[],[113,105],[111],[106,114,62],[105],[],[116,115,112],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name registerMapKeyDecoder ","Parameter Type mapKeyType ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr mapKeyType ","Simple Name mapKeyType ","Name Expr mapKeyType ","Name Expr mapKeyDecoder ","Simple Name mapKeyDecoder ","Name Expr mapKeyDecoder ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Method Call Expr ","Name Expr globalMapKeyDecoders ","Simple Name put ","Method Call Expr ","Expression Stmt ","Method Call Expr ","Simple Name configName ","Simple Name mapKeyType ","Simple Name mapKeyDecoder ","Method Declaration ","Method Call Expr ","Simple Name configName ","Simple Name getCurrentConfig ","Method Declaration ","PRIVATE","Void Type ","Simple Name copyGlobalMapKeyDecoder ","Parameter String configName ","Parameter Type mapKeyType ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr configName ","Name Expr mapKeyType ","Name Expr mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewMapDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name mapKeyDecoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","Method Call Expr ","Expression Stmt ","SYNCHRONIZED","Void Type ","Simple Name addNewMapDecoder ","Parameter String cacheKey ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr cacheKey ","Name Expr mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyDecoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr IterImplObject ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerMapKeyEncoder","callMethodNameReferTo":{},"num":117,"succs":[[18,1],[21],[8,6,3,5,9,7,4],[4],[69],[6],[],[16,11],[17,14],[0,1],[11],[],[11,25,10],[14],[],[26,13,14],[],[],[20,19,13,10],[],[],[23,27,22,15,12],[],[28,29,24],[],[],[],[38,32,35,37,34,4,36,33],[31,30],[],[],[3,58,59,60,4],[4],[34],[],[42,24],[43,25],[44,26],[45],[24],[25,56],[26,50],[],[],[],[46],[47,48,41,51],[],[53,39,49,52],[],[],[71,70,74,72,3,73,69,4],[40,54,55,57],[],[],[],[],[95,3,93,94,96,4],[59],[],[61],[63,31,62],[],[65,64],[],[],[79,67],[68,88],[90],[],[71],[],[77,49],[50,78],[68,66,67],[49],[50],[],[],[84],[81],[],[80],[82,80],[86,85,80],[80],[87,81],[],[75,82,76,89],[],[91,92,83],[],[],[94],[],[56,100],[97],[101,57,62],[56,105],[98,56],[],[99,103,57,102],[98,106,104],[],[],[],[107,108,110,3,109,4],[108],[],[113,105],[111],[106,114,62],[105],[],[116,115,112],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name registerMapKeyEncoder ","Parameter Type mapKeyType ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr mapKeyType ","Simple Name mapKeyType ","Name Expr mapKeyType ","Name Expr mapKeyEncoder ","Simple Name mapKeyEncoder ","Name Expr mapKeyEncoder ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Method Call Expr ","Name Expr globalMapKeyEncoders ","Simple Name put ","Method Call Expr ","Expression Stmt ","Method Call Expr ","Simple Name configName ","Simple Name mapKeyType ","Simple Name mapKeyEncoder ","Method Declaration ","Method Call Expr ","Simple Name configName ","Simple Name getCurrentConfig ","Method Declaration ","PRIVATE","Void Type ","Simple Name copyGlobalMapKeyEncoder ","Parameter String configName ","Parameter Type mapKeyType ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr configName ","Name Expr mapKeyType ","Name Expr mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewMapEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name mapKeyEncoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","Expression Stmt ","Expression Stmt ","SYNCHRONIZED","Void Type ","Simple Name addNewMapEncoder ","Parameter String cacheKey ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr cacheKey ","Name Expr mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyEncoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr mapKeyEncoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerTypeImplementation","callMethodNameReferTo":{},"num":18,"succs":[[7,3,5,4,6,1,2],[2],[],[4],[],[12,9],[11,13],[14],[9],[],[11],[],[],[],[15],[8,16,10,17],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name registerTypeImplementation ","Parameter Class superClazz ","Parameter Class implClazz ","Block Stmt ","Name Expr superClazz ","Simple Name superClazz ","Name Expr implClazz ","Simple Name implClazz ","Class Or Interface Type Class ","Class Or Interface Type Class ","Expression Stmt ","Method Call Expr ","Name Expr typeImpls ","Simple Name put "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getTypeImplementation","callMethodNameReferTo":{},"num":15,"succs":[[4,1,3,5,2,6],[2],[],[4],[],[10,9],[7],[12,11,0],[9],[],[],[],[8,13,14],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Class Or Interface Type Class ","Simple Name getTypeImplementation ","Parameter Class superClazz ","Block Stmt ","Return Stmt ","Name Expr superClazz ","Class Or Interface Type JsonStream ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Name Expr typeImpls ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerTypeDecoder","callMethodNameReferTo":{},"num":130,"succs":[[1,18],[21],[6,9,3,7,5,8,4],[4],[73],[6],[],[16,11],[14,17],[1,0],[11],[],[25,10,11],[14],[],[13,26,14],[],[],[19,13,10,20],[],[],[23,12,22,15,27],[],[29,24,28],[],[],[],[35,32,33,34,36,38,4,37],[30,31],[],[],[3,58,59,60,4],[4],[34],[],[24,42],[25,43],[26,44],[45],[24],[25,56],[26,50],[],[],[],[46],[47,48,41,51],[],[49,52,39,53],[],[],[75,76,3,74,77,4,73,78],[54,55,57,40],[],[],[],[],[108,3,106,109,107,4],[59],[],[61],[63,31,62],[],[65,64],[],[],[67,85],[70,68,95],[97,81,70,96,69],[99,72],[71],[101,72],[103],[],[75],[],[49,83],[84,50],[67,66,72],[49],[49,79],[50],[81,50,68],[],[],[91],[87],[],[86],[86,88],[86,89],[86,92,93],[86],[94,87],[],[69],[],[98],[],[88,100,79],[],[80,102,82,89],[],[104,90,105],[],[],[107],[],[56,113],[110],[114,57,62],[56,118],[111,56],[],[116,112,57,115],[111,119,117],[],[],[],[120,121,123,3,122,4],[121],[],[126,118],[124],[119,127,62],[118],[],[129,128,125],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name registerTypeDecoder ","Parameter Class clazz ","Parameter Decoder decoder ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Name Expr decoder ","Simple Name decoder ","Name Expr decoder ","Class Or Interface Type Class ","Class Or Interface Type Decoder ","Method Call Expr ","Name Expr globalTypeDecoders ","Simple Name put ","Method Call Expr ","Simple Name copyGlobalTypeDecoder ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name typeDecoder ","Method Declaration ","Method Call Expr ","Simple Name configName ","Simple Name getCurrentConfig ","Method Declaration ","PRIVATE","Void Type ","Simple Name copyGlobalTypeDecoder ","Parameter String configName ","Parameter Type type ","Parameter Decoder typeDecoder ","Block Stmt ","Name Expr configName ","Name Expr type ","Name Expr typeDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name decoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","SYNCHRONIZED","Void Type ","Simple Name addNewDecoder ","Parameter String cacheKey ","Parameter Decoder decoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Binary Expr LESS ","Name Expr decoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoders ","Name Expr newCache ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr decoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerTypeDecoder","callMethodNameReferTo":{},"num":134,"succs":[[18,1],[23],[9,3,5,8,6,7,4],[4],[77],[6],[],[11,16],[14,17],[0,1],[11],[],[11,10],[14],[],[14,29,13],[],[],[20,21,13,19],[],[],[22,10],[],[26,15,24,25,30],[],[32,27,31],[35,28,12],[],[],[],[39,38,36,37,40,42,41,4],[34,33],[],[],[3,62,63,4,64],[],[4],[38],[],[27,46],[28,47],[29,48],[49],[27],[28,60],[29,54],[],[],[],[50],[51,52,45,55],[],[53,56,43,57],[],[],[79,3,80,78,81,4,77,82],[58,59,61,44],[],[],[],[],[112,3,110,113,111,4],[63],[],[65],[67,34,66],[],[69,68],[],[],[71,89],[74,72,99],[101,85,74,100,73],[103,76],[75],[105,76],[107],[],[79],[],[53,87],[88,54],[71,70,76],[53],[53,83],[54],[85,54,72],[],[],[95],[91],[],[90],[90,92],[90,93],[90,96,97],[90],[98,91],[],[73],[],[102],[],[92,104,83],[],[84,106,86,93],[],[108,94,109],[],[],[111],[],[60,117],[114],[118,61,66],[60,122],[115,60],[],[120,116,61,119],[115,123,121],[],[],[],[124,125,3,127,126,4],[125],[],[130,122],[128],[123,131,66],[122],[],[133,132,129],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name registerTypeDecoder ","Parameter TypeLiteral typeLiteral ","Parameter Decoder decoder ","Block Stmt ","Name Expr typeLiteral ","Simple Name typeLiteral ","Name Expr typeLiteral ","Name Expr decoder ","Simple Name decoder ","Name Expr decoder ","Class Or Interface Type TypeLiteral ","Class Or Interface Type Decoder ","Method Call Expr ","Name Expr globalTypeDecoders ","Simple Name put ","Method Call Expr ","Simple Name getType ","Method Call Expr ","Simple Name copyGlobalTypeDecoder ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name typeDecoder ","Method Declaration ","Method Call Expr ","Simple Name configName ","Simple Name getCurrentConfig ","Method Declaration ","Simple Name getType ","PRIVATE","Void Type ","Simple Name copyGlobalTypeDecoder ","Parameter String configName ","Parameter Type type ","Parameter Decoder typeDecoder ","Block Stmt ","Name Expr configName ","Name Expr type ","Name Expr typeDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name decoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","SYNCHRONIZED","Void Type ","Simple Name addNewDecoder ","Parameter String cacheKey ","Parameter Decoder decoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Binary Expr LESS ","Name Expr decoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoders ","Name Expr newCache ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr decoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerTypeEncoder","callMethodNameReferTo":{},"num":130,"succs":[[1,18],[21],[6,3,7,8,5,9,4],[4],[73],[6],[],[16,11],[14,17],[1,0],[11],[],[11,10,25],[14],[],[14,13,26],[],[],[13,20,10,19],[],[],[23,22,15,12,27],[],[28,24,29],[],[],[],[37,32,33,36,34,38,35,4],[31,30],[],[],[3,58,59,60,4],[4],[34],[],[24,42],[25,43],[44,26],[45],[24],[25,56],[26,50],[],[],[],[46],[51,48,47,41],[],[49,52,39,53],[],[],[75,74,78,3,76,77,4,73],[55,57,40,54],[],[],[],[],[108,3,106,109,107,4],[59],[],[61],[63,31,62],[],[65,64],[],[],[67,85],[68,70,95],[97,70,96,81,69],[99,72],[71],[72,101],[103],[],[75],[],[83,49],[50,84],[67,72,66],[49],[79,49],[50],[68,50,81],[],[],[91],[87],[],[86],[88,86],[86,89],[92,93,86],[86],[94,87],[],[69],[],[98],[],[88,79,100],[],[82,102,89,80],[],[90,104,105],[],[],[107],[],[56,113],[110],[114,57,62],[56,118],[111,56],[],[116,112,57,115],[111,119,117],[],[],[],[120,121,123,3,122,4],[121],[],[126,118],[124],[119,127,62],[118],[],[129,128,125],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Simple Name sLen ","Simple Name registerTypeEncoder ","Parameter Class clazz ","Parameter Encoder encoder ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Name Expr encoder ","Simple Name encoder ","Name Expr encoder ","Class Or Interface Type Class ","Class Or Interface Type Encoder ","Method Call Expr ","Name Expr globalTypeEncoders ","Simple Name put ","Method Call Expr ","Simple Name copyGlobalTypeEncoder ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name typeEncoder ","Method Declaration ","Method Call Expr ","Simple Name configName ","Simple Name getCurrentConfig ","Method Declaration ","PRIVATE","Void Type ","Simple Name copyGlobalTypeEncoder ","Parameter String configName ","Parameter Type type ","Parameter Encoder typeEncoder ","Block Stmt ","Name Expr configName ","Name Expr type ","Name Expr typeEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name encoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","SYNCHRONIZED","Void Type ","Simple Name addNewEncoder ","Parameter String cacheKey ","Parameter Encoder encoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr encoder ","Name Expr encoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoders ","Name Expr newCache ","Simple Name writeVal ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Name Expr val ","Assign Expr ASSIGN ","Name Expr encoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerTypeEncoder","callMethodNameReferTo":{},"num":134,"succs":[[18,1],[23],[5,9,3,7,6,8,4],[4],[77],[6],[],[16,11],[14,17],[0,1],[11],[],[10,11],[14],[],[29,13,14],[],[],[19,21,20,13],[],[],[10,22],[],[26,24,15,30,25],[],[31,27,32],[12,28,35],[],[],[],[41,36,37,40,38,42,39,4],[34,33],[],[],[3,62,63,4,64],[],[4],[38],[],[27,46],[28,47],[48,29],[49],[27],[28,60],[29,54],[],[],[],[50],[55,52,51,45],[],[53,56,43,57],[],[],[79,78,82,3,80,81,4,77],[59,61,44,58],[],[],[],[],[112,3,110,113,111,4],[63],[],[65],[67,34,66],[],[69,68],[],[],[71,89],[72,74,99],[101,74,100,85,73],[103,76],[75],[76,105],[107],[],[79],[],[87,53],[54,88],[71,76,70],[53],[83,53],[54],[72,54,85],[],[],[95],[91],[],[90],[92,90],[90,93],[96,97,90],[90],[98,91],[],[73],[],[102],[],[92,83,104],[],[86,106,93,84],[],[94,108,109],[],[],[111],[],[60,117],[114],[118,61,66],[60,122],[115,60],[],[120,116,61,119],[115,123,121],[],[],[],[124,125,3,127,126,4],[125],[],[130,122],[128],[123,131,66],[122],[],[133,132,129],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Simple Name ctor ","Simple Name disableHtmlEscaping ","Parameter TypeLiteral typeLiteral ","Parameter Encoder encoder ","Block Stmt ","Name Expr typeLiteral ","Name Expr annotations ","Name Expr typeLiteral ","Name Expr encoder ","Simple Name encoder ","Name Expr encoder ","Class Or Interface Type TypeLiteral ","Class Or Interface Type Encoder ","Method Call Expr ","Name Expr globalTypeEncoders ","Simple Name put ","Method Call Expr ","Simple Name getType ","Method Call Expr ","Simple Name copyGlobalTypeEncoder ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name typeEncoder ","Method Declaration ","Method Call Expr ","Simple Name configName ","Simple Name getCurrentConfig ","Method Declaration ","Simple Name getType ","PRIVATE","Void Type ","Simple Name copyGlobalTypeEncoder ","Parameter String configName ","Parameter Type type ","Parameter Encoder typeEncoder ","Block Stmt ","Name Expr configName ","Name Expr type ","Name Expr typeEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name encoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","SYNCHRONIZED","Void Type ","Simple Name addNewEncoder ","Parameter String cacheKey ","Parameter Encoder encoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr encoder ","Name Expr encoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoders ","Name Expr newCache ","Simple Name writeVal ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Name Expr val ","Assign Expr ASSIGN ","Name Expr encoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerPropertyDecoder","callMethodNameReferTo":{},"num":145,"succs":[[1,23],[28],[5,8,3,10,7,6,9,4],[4],[88],[6],[],[20,12],[21,15],[22,18],[1,0],[12],[],[32,11,12],[15],[],[14,15,33],[18],[],[18,17,34],[],[],[],[26,25,17,24],[],[],[27,14,11],[],[29,13,19,30,35,16],[],[37,36,31],[],[],[],[],[46,40,42,44,47,43,41,45,4],[38,39],[],[],[3,73,75,4,74],[4],[42],[],[51,31],[32,52],[53,33],[34,54],[55],[32,71],[33],[34,60],[],[],[],[],[56],[58,57,50,61],[],[59,64,63,62],[],[],[90,91,3,89,92,4,88,93],[65,49,63],[],[67,68],[66],[],[70,72,69,48],[],[],[],[],[123,3,121,124,122,4],[74],[],[76],[78,39,77],[],[80,79],[],[],[82,100],[85,83,110],[112,96,85,111,84],[114,87],[86],[116,87],[118],[],[90],[],[59,98],[99,60],[81,82,87],[59],[59,94],[60],[96,60,83],[],[],[106],[102],[],[101],[101,103],[101,104],[101,107,108],[101],[109,102],[],[84],[],[113],[],[103,115,94],[],[95,117,97,104],[],[119,105,120],[],[],[122],[],[71,128],[125],[129,72,77],[71,133],[126,71],[],[131,127,72,130],[126,134,132],[],[],[],[135,136,3,138,137,4],[136],[],[141,133],[139],[134,142,77],[133],[],[144,143,140],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name registerPropertyDecoder ","Parameter Class clazz ","Parameter String property ","Parameter Decoder decoder ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Name Expr property ","Simple Name property ","Name Expr property ","Name Expr decoder ","Simple Name decoder ","Name Expr decoder ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Method Call Expr ","Name Expr globalPropertyDecoders ","Simple Name put ","Object Creation Expr TypeProperty Optional.empty Optional.empty ","Class Or Interface Type TypeProperty ","Method Call Expr ","Simple Name copyGlobalPropertyDecoder ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name property ","Simple Name propertyDecoder ","Method Declaration ","Method Call Expr ","Simple Name configName ","Simple Name getCurrentConfig ","Method Declaration ","PRIVATE","Void Type ","Simple Name copyGlobalPropertyDecoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Decoder propertyDecoder ","Block Stmt ","Name Expr type ","Name Expr property ","Name Expr propertyDecoder ","Class Or Interface Type String ","Name Expr iter ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Binary Expr PLUS ","Simple Name cacheKey ","Simple Name decoder ","Method Declaration ","Binary Expr PLUS ","PLUS","Method Call Expr ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","SYNCHRONIZED","Void Type ","Simple Name addNewDecoder ","Parameter String cacheKey ","Parameter Decoder decoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Binary Expr LESS ","Name Expr decoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoders ","Name Expr newCache ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr decoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerPropertyDecoder","callMethodNameReferTo":{},"num":149,"succs":[[23,1],[30],[8,3,5,9,10,6,7,4],[4],[92],[6],[],[12,20],[21,15],[18,22],[0,1],[12],[],[11,12],[15],[],[14,36,15],[18],[],[18,17,37],[],[],[],[26,25,17,24],[],[],[28,14,27],[],[11,29],[],[33,16,32,38,31,19],[],[39,40,34],[35,13,43],[],[],[],[],[50,44,46,48,51,47,45,4,49],[42,41],[],[],[3,77,78,79,4],[],[4],[46],[],[55,34],[35,56],[57,36],[37,58],[59],[35,75],[36],[37,64],[],[],[],[],[60],[62,61,54,65],[],[63,68,67,66],[],[],[94,3,95,93,96,4,97,92],[69,53,67],[],[71,72],[70],[],[74,76,73,52],[],[],[],[],[127,3,125,128,126,4],[78],[],[80],[82,42,81],[],[84,83],[],[],[86,104],[89,87,114],[116,100,89,115,88],[118,91],[90],[120,91],[122],[],[94],[],[63,102],[103,64],[85,86,91],[63],[63,98],[64],[100,64,87],[],[],[110],[106],[],[105],[105,107],[105,108],[105,111,112],[105],[113,106],[],[88],[],[117],[],[107,119,98],[],[99,121,101,108],[],[123,109,124],[],[],[126],[],[75,132],[129],[133,76,81],[75,137],[130,75],[],[135,131,76,134],[130,138,136],[],[],[],[139,140,3,142,141,4],[140],[],[145,137],[143],[138,146,81],[137],[],[148,147,144],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Name Expr iter ","Simple Name registerPropertyDecoder ","Parameter TypeLiteral typeLiteral ","Parameter String property ","Parameter Decoder decoder ","Block Stmt ","Name Expr typeLiteral ","Simple Name typeLiteral ","Name Expr typeLiteral ","Name Expr property ","Simple Name property ","Name Expr property ","Name Expr decoder ","Simple Name decoder ","Name Expr decoder ","Class Or Interface Type TypeLiteral ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Method Call Expr ","Name Expr globalPropertyDecoders ","Simple Name put ","Object Creation Expr TypeProperty Optional.empty Optional.empty ","Class Or Interface Type TypeProperty ","Method Call Expr ","Simple Name getType ","Method Call Expr ","Simple Name copyGlobalPropertyDecoder ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name property ","Simple Name propertyDecoder ","Method Declaration ","Method Call Expr ","Simple Name configName ","Simple Name getCurrentConfig ","Method Declaration ","Simple Name getType ","PRIVATE","Void Type ","Simple Name copyGlobalPropertyDecoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Decoder propertyDecoder ","Block Stmt ","Name Expr type ","Name Expr property ","Name Expr propertyDecoder ","Class Or Interface Type String ","Name Expr iter ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Binary Expr PLUS ","Simple Name cacheKey ","Simple Name decoder ","Method Declaration ","Binary Expr PLUS ","PLUS","Method Call Expr ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","SYNCHRONIZED","Void Type ","Simple Name addNewDecoder ","Parameter String cacheKey ","Parameter Decoder decoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Binary Expr LESS ","Name Expr decoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoders ","Name Expr newCache ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr decoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerPropertyEncoder","callMethodNameReferTo":{},"num":145,"succs":[[1,23],[28],[10,6,5,8,3,7,9,4],[4],[88],[6],[],[12,20],[21,15],[18,22],[1,0],[12],[],[32,12,11],[15],[],[14,15,33],[18],[],[34,18,17],[],[],[],[24,17,25,26],[],[],[14,27,11],[],[13,35,30,16,29,19],[],[36,37,31],[],[],[],[],[42,43,40,44,41,46,45,47,4],[38,39],[],[],[3,73,75,4,74],[4],[42],[],[51,31],[32,52],[33,53],[34,54],[55],[32,71],[33],[34,60],[],[],[],[],[56],[58,61,50,57],[],[64,62,59,63],[],[],[90,89,93,3,91,92,4,88],[49,63,65],[],[67,68],[66],[],[70,69,48,72],[],[],[],[],[123,3,121,124,122,4],[74],[],[76],[78,39,77],[],[80,79],[],[],[82,100],[83,85,110],[112,85,111,96,84],[114,87],[86],[87,116],[118],[],[90],[],[98,59],[60,99],[82,81,87],[59],[94,59],[60],[83,60,96],[],[],[106],[102],[],[101],[103,101],[101,104],[107,108,101],[101],[109,102],[],[84],[],[113],[],[103,94,115],[],[97,117,104,95],[],[105,119,120],[],[],[122],[],[71,128],[125],[129,72,77],[71,133],[126,71],[],[131,127,72,130],[126,134,132],[],[],[],[135,136,3,138,137,4],[136],[],[141,133],[139],[134,142,77],[133],[],[144,143,140],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name registerPropertyEncoder ","Parameter Class clazz ","Parameter String property ","Parameter Encoder encoder ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Name Expr property ","Simple Name property ","Name Expr property ","Name Expr encoder ","Simple Name encoder ","Name Expr encoder ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Method Call Expr ","Name Expr globalPropertyEncoders ","Simple Name put ","Object Creation Expr TypeProperty Optional.empty Optional.empty ","Class Or Interface Type TypeProperty ","Method Call Expr ","Simple Name copyGlobalPropertyEncoder ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name property ","Simple Name propertyEncoder ","Method Declaration ","Method Call Expr ","Simple Name configName ","Simple Name getCurrentConfig ","Method Declaration ","PRIVATE","Void Type ","Simple Name copyGlobalPropertyEncoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Encoder propertyEncoder ","Block Stmt ","Name Expr type ","Simple Name readLong ","Name Expr propertyEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Return Stmt ","Binary Expr PLUS ","Simple Name cacheKey ","Simple Name encoder ","Method Declaration ","Binary Expr PLUS ","PLUS","Method Call Expr ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","SYNCHRONIZED","Void Type ","Simple Name addNewEncoder ","Parameter String cacheKey ","Parameter Encoder encoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr encoder ","Name Expr encoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoders ","Name Expr newCache ","Simple Name writeVal ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Name Expr val ","Assign Expr ASSIGN ","Name Expr encoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_registerPropertyEncoder","callMethodNameReferTo":{},"num":149,"succs":[[23,1],[30],[6,8,9,3,7,5,10,4],[4],[92],[6],[],[12,20],[15,21],[22,18],[1,0],[12],[],[11,12],[15],[],[15,14,36],[18],[],[37,17,18],[],[],[],[24,25,26,17],[],[],[28,14,27],[],[11,29],[],[31,32,19,38,16,33],[],[39,40,34],[13,43,35],[],[],[],[],[46,47,44,48,45,50,49,51,4],[42,41],[],[],[3,77,78,79,4],[],[4],[46],[],[55,34],[35,56],[36,57],[37,58],[59],[35,75],[36],[37,64],[],[],[],[],[60],[62,65,54,61],[],[68,66,63,67],[],[],[94,93,97,3,95,96,4,92],[53,67,69],[],[71,72],[70],[],[74,73,76,52],[],[],[],[],[127,3,125,128,126,4],[78],[],[80],[82,42,81],[],[84,83],[],[],[86,104],[87,89,114],[116,89,115,100,88],[118,91],[90],[91,120],[122],[],[94],[],[102,63],[64,103],[86,85,91],[63],[98,63],[64],[87,64,100],[],[],[110],[106],[],[105],[107,105],[105,108],[111,112,105],[105],[113,106],[],[88],[],[117],[],[107,98,119],[],[101,121,108,99],[],[109,123,124],[],[],[126],[],[75,132],[129],[133,76,81],[75,137],[130,75],[],[135,131,76,134],[130,138,136],[],[],[],[139,140,3,142,141,4],[140],[],[145,137],[143],[138,146,81],[137],[],[148,147,144],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name registerPropertyEncoder ","Parameter TypeLiteral typeLiteral ","Parameter String property ","Parameter Encoder encoder ","Block Stmt ","Name Expr typeLiteral ","Simple Name typeLiteral ","Name Expr typeLiteral ","Name Expr property ","Simple Name property ","Name Expr property ","Name Expr encoder ","Simple Name encoder ","Name Expr encoder ","Class Or Interface Type TypeLiteral ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Method Call Expr ","Name Expr globalPropertyEncoders ","Simple Name put ","Object Creation Expr TypeProperty Optional.empty Optional.empty ","Class Or Interface Type TypeProperty ","Method Call Expr ","Simple Name getType ","Method Call Expr ","Return Stmt ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name property ","Simple Name propertyEncoder ","Method Declaration ","Method Call Expr ","Simple Name configName ","Simple Name getCurrentConfig ","Method Declaration ","Simple Name getType ","PRIVATE","Void Type ","Simple Name copyGlobalPropertyEncoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Encoder propertyEncoder ","Block Stmt ","Name Expr type ","Simple Name readLong ","Name Expr propertyEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Return Stmt ","Binary Expr PLUS ","Simple Name cacheKey ","Simple Name encoder ","Method Declaration ","Binary Expr PLUS ","PLUS","Method Call Expr ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Config ","Parameter ParseException e ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","SYNCHRONIZED","Void Type ","Simple Name addNewEncoder ","Parameter String cacheKey ","Parameter Encoder encoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr encoder ","Name Expr encoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoders ","Name Expr newCache ","Simple Name writeVal ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Name Expr val ","Assign Expr ASSIGN ","Name Expr encoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_copyGlobalSettings","callMethodNameReferTo":{},"num":455,"succs":[[39,1,2],[45,44,2,4],[41,3],[1,46],[6,5,56],[6,62,8,61],[58,7],[5,63],[73,10,9],[10,12,79,78],[11,75],[80,9],[90,13,14],[16,96,95,14],[92,15],[13,97],[18,17,107],[114,18,20,113],[19,109],[17,115],[21,22,132],[139,22,138],[134,23],[21,140],[27,28,25,30,29,26],[26],[307],[28],[],[38,32],[16,20,12,4,0,8],[50,32],[],[67,31,32],[33,84,32],[101,34,32],[35,120,32],[36,145,32],[],[3],[41],[43],[41,40],[41],[],[],[47,48,53,31,49],[],[40,51,54],[52,55,42],[],[],[],[159,162,25,158,160,157,26,161],[],[],[7],[58],[60],[58,57],[58],[],[],[66,70,33,64,65],[],[68,57,71],[69,59,72],[],[],[],[187,184,25,186,183,182,185,26],[],[],[11],[75],[77],[74,75],[75],[],[],[82,34,81,83,87],[],[85,88,74],[89,86,76],[],[],[],[207,205,206,25,208,210,209,26],[],[],[15],[92],[94],[92,91],[92],[],[],[98,100,35,99,104],[],[102,91,105],[106,93,103],[],[],[],[232,25,228,231,229,233,230,26],[],[],[19],[109],[112],[108,109],[110,109],[109],[],[],[118,116,119,117,36,124],[],[121,126,125],[122,128,129],[131,123,111],[],[],[],[],[256,25,252,254,257,253,255,26,251],[108,127],[],[],[110,130],[],[],[],[23],[134],[137],[133,134],[135,134],[134],[],[],[149,143,37,144,142,141],[],[146,150,151],[154,153,147],[148,156,136],[],[],[],[],[279,280,25,281,278,282,283,284,26],[133,152],[],[],[155,135],[],[],[],[158],[],[50,166],[167,51],[52,168],[169],[50],[51,180],[174,52],[],[],[],[170],[171,172,165,175],[],[173,163,176,177],[],[],[311,308,306,309,310,312,26,307],[181,164,178,179],[],[],[],[],[333,306,331,332,334,26],[183],[],[191,67],[192,68],[193,69],[194],[67],[180,68],[69,199],[],[],[],[195],[196,197,190,200],[],[202,188,198,201],[],[],[350,353,349,351,306,352,307,26],[189,204,203,181],[],[],[],[206],[],[84,214],[85,215],[86,216],[217],[84],[85,180],[86,222],[],[],[],[218],[219,220,213,223],[],[221,224,211,225],[],[],[379,380,306,378,381,382,26,307],[226,227,181,212],[],[],[],[229],[],[101,237],[102,238],[239,103],[240],[101],[102,180],[103,245],[],[],[],[241],[246,243,242,236],[],[244,247,234,248],[],[],[417,416,420,306,418,419,26,307],[250,181,235,249],[],[],[],[252],[],[261,120],[121,262],[122,263],[123,264],[265],[121,180],[122],[123,222],[],[],[],[],[266],[268,267,260,223],[],[221,271,270,269],[272,259,270],[],[274,275],[273],[],[277,181,276,258],[],[],[],[279],[],[288,145],[146,289],[147,290],[148,291],[292],[146,180],[147],[148,245],[],[],[],[],[293],[295,246,287,294],[],[297,296,244,270],[286,270,298],[299,300],[273],[302,301,285,181],[],[],[],[304,317],[326,305],[328],[26],[],[309],[],[173,315],[174,316],[305,303,304],[173],[174],[],[],[322],[319],[],[318],[318,320],[318,323,324],[318],[325,319],[],[313,320,327,314],[],[329,321,330],[],[],[332],[],[180,338],[335],[340,181,339],[180,344],[336,180],[],[],[337,342,181,341],[336,345,343],[],[],[],[445,446,306,448,447,26],[358,347],[348,367],[369],[350],[],[356,198],[199,357],[348,346,347],[198],[199],[],[],[363],[360],[],[359],[361,359],[365,364,359],[359],[366,360],[],[354,361,355,368],[],[370,330,362],[],[372,389],[375,373,399],[401,385,375,400,374],[403,377],[376],[405,377],[407],[379],[],[221,387],[388,222],[372,371,377],[221],[221,383],[222],[385,222,373],[],[],[395],[391],[],[390],[390,392],[390,393],[390,396,397],[390],[398,391],[],[374],[],[402],[],[392,404,383],[],[384,406,386,393],[],[408,394,330],[],[410,427],[411,413,437],[438,413,400,423,412],[439,415],[414],[415,441],[443],[417],[],[425,244],[245,426],[410,409,415],[244],[421,244],[245],[411,245,423],[],[],[433],[429],[],[428],[430,428],[428,431],[434,435,428],[428],[436,429],[],[412],[402],[430,421,440],[],[424,442,431,422],[],[432,444,330],[],[446],[],[451,344],[449],[345,452,339],[344],[],[454,453,450],[],[]],"nodeAttribute":["If Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Method Declaration ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name copyGlobalSettings ","Parameter String configName ","Block Stmt ","Name Expr configName ","Simple Name configName ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Name Expr configName ","Class Or Interface Type String ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Variable Declarator byte b2 = ","Name Expr globalMapKeyDecoders ","Simple Name entrySet ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name mapKeyType ","Simple Name mapKeyDecoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalMapKeyEncoders ","Simple Name entrySet ","Method Call Expr ","Expression Stmt ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name mapKeyType ","Simple Name mapKeyEncoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalTypeDecoders ","Simple Name entrySet ","Method Call Expr ","Simple Name copyGlobalTypeDecoder ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name typeDecoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalTypeEncoders ","Simple Name entrySet ","Method Call Expr ","Simple Name copyGlobalTypeEncoder ","Method Call Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name typeEncoder ","Method Declaration ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Name Expr clazz ","Class Or Interface Type Entry ","Name Expr globalPropertyDecoders ","Simple Name entrySet ","Method Call Expr ","Variable Declaration Expr [FINAL] ","Field Access Expr ","Field Access Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name property ","Simple Name propertyDecoder ","Method Declaration ","Method Call Expr ","Simple Name type ","Simple Name getKey ","Method Call Expr ","Simple Name property ","Simple Name getKey ","Simple Name getValue ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr globalPropertyEncoders ","Simple Name entrySet ","Method Call Expr ","Variable Declaration Expr [FINAL] ","Field Access Expr ","Field Access Expr ","Method Call Expr ","Simple Name configName ","Simple Name type ","Simple Name property ","Simple Name propertyEncoder ","Method Declaration ","Method Call Expr ","Simple Name type ","Simple Name getKey ","Method Call Expr ","Simple Name property ","Simple Name getKey ","Simple Name getValue ","Void Type ","Simple Name copyGlobalMapKeyDecoder ","Parameter String configName ","Parameter Type mapKeyType ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr configName ","Name Expr mapKeyType ","Name Expr mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewMapDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name mapKeyDecoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Void Type ","Simple Name copyGlobalMapKeyEncoder ","Parameter String configName ","Parameter Type mapKeyType ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr configName ","Name Expr mapKeyType ","Name Expr mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewMapEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name mapKeyEncoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalTypeDecoder ","Parameter String configName ","Parameter Type type ","Parameter Decoder typeDecoder ","Block Stmt ","Name Expr configName ","Name Expr type ","Name Expr typeDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name decoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalTypeEncoder ","Parameter String configName ","Parameter Type type ","Parameter Encoder typeEncoder ","Block Stmt ","Name Expr configName ","Name Expr type ","Name Expr typeEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name encoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalPropertyDecoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Decoder propertyDecoder ","Block Stmt ","Name Expr type ","Name Expr property ","Name Expr propertyDecoder ","Class Or Interface Type String ","Name Expr iter ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Method Call Expr ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Void Type ","Simple Name copyGlobalPropertyEncoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Encoder propertyEncoder ","Block Stmt ","Name Expr type ","Simple Name readLong ","Name Expr propertyEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Return Stmt ","Binary Expr PLUS ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Expression Stmt ","Method Call Expr ","Expression Stmt ","PUBLIC","SYNCHRONIZED","Void Type ","Simple Name addNewMapDecoder ","Parameter String cacheKey ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr cacheKey ","Name Expr mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyDecoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr IterImplObject ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name addNewMapEncoder ","Parameter String cacheKey ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr cacheKey ","Name Expr mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyEncoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr mapKeyEncoders ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Void Type ","Simple Name addNewDecoder ","Parameter String cacheKey ","Parameter Decoder decoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Binary Expr LESS ","Name Expr decoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoders ","Name Expr newCache ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr decoders ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name addNewEncoder ","Parameter String cacheKey ","Parameter Encoder encoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr encoder ","Name Expr encoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoders ","Name Expr newCache ","Simple Name writeVal ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name remove ","Method Call Expr ","Name Expr val ","Assign Expr ASSIGN ","Name Expr encoders ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_copyGlobalPropertyEncoder","callMethodNameReferTo":{"33":"TypeLiteral.java_TypeLiteral_outer_create","89":"TypeLiteral.java_TypeLiteral_outer_create","30":"TypeLiteral.java_TypeLiteral_outer_getEncoderCacheKey"},"num":105,"succs":[[4,5,1,6,3,8,7,9,2],[2],[47],[4],[],[16,17],[11,18],[13,19],[15,20],[21],[11,37],[],[13],[],[15,26],[],[],[],[],[],[],[22],[24,27,14,23],[],[30,28,25,29],[],[],[49,48,52,46,50,51,47,2],[12,29,31],[],[33,34],[32],[],[36,35,10,38],[],[],[],[],[82,46,80,83,81,2],[40,59],[41,43,69],[71,43,70,55,42],[73,45],[44],[45,75],[77],[2],[],[49],[],[57,25],[26,58],[40,45,39],[25],[53,25],[26],[41,26,55],[],[],[65],[61],[],[60],[62,60],[60,63],[66,67,60],[60],[68,61],[],[42],[],[72],[],[62,53,74],[],[56,76,63,54],[],[64,78,79],[],[],[81],[],[37,87],[84],[89,38,88],[37,93],[85,37],[],[],[91,86,38,90],[85,94,92],[],[],[],[95,96,46,98,97,2],[96],[],[101,93],[99],[94,102,88],[93],[],[104,103,100],[],[]],"nodeAttribute":["Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name copyGlobalPropertyEncoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Encoder propertyEncoder ","Block Stmt ","Name Expr type ","Simple Name type ","Simple Name readLong ","Simple Name property ","Name Expr propertyEncoder ","Simple Name propertyEncoder ","Class Or Interface Type String ","Simple Name configName ","Class Or Interface Type Type ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Return Stmt ","Binary Expr PLUS ","Simple Name cacheKey ","Simple Name encoder ","Method Declaration ","Binary Expr PLUS ","PLUS","Method Call Expr ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","PUBLIC","SYNCHRONIZED","Void Type ","Simple Name addNewEncoder ","Parameter String cacheKey ","Parameter Encoder encoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr encoder ","Name Expr encoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoders ","Name Expr newCache ","Simple Name writeVal ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Name Expr val ","Assign Expr ASSIGN ","Name Expr encoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_copyGlobalPropertyDecoder","callMethodNameReferTo":{"33":"TypeLiteral.java_TypeLiteral_outer_create","89":"TypeLiteral.java_TypeLiteral_outer_create","30":"TypeLiteral.java_TypeLiteral_outer_getDecoderCacheKey"},"num":105,"succs":[[8,1,4,6,9,5,3,7,2],[2],[47],[4],[],[16,17],[11,18],[13,19],[20,15],[21],[11,37],[],[13],[],[15,26],[],[],[],[],[],[],[22],[24,23,14,27],[],[25,30,29,28],[],[],[49,50,46,48,51,47,52,2],[31,12,29],[],[33,34],[32],[],[36,38,35,10],[],[],[],[],[82,46,80,83,81,2],[40,59],[43,41,69],[71,55,43,70,42],[73,45],[44],[75,45],[77],[2],[],[49],[],[25,57],[58,26],[40,39,45],[25],[25,53],[26],[55,26,41],[],[],[65],[61],[],[60],[60,62],[60,63],[60,66,67],[60],[68,61],[],[42],[],[72],[],[62,74,53],[],[54,76,56,63],[],[78,64,79],[],[],[81],[],[37,87],[84],[89,38,88],[37,93],[85,37],[],[],[91,86,38,90],[85,94,92],[],[],[],[95,96,46,98,97,2],[96],[],[101,93],[99],[94,102,88],[93],[],[104,103,100],[],[]],"nodeAttribute":["Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name copyGlobalPropertyDecoder ","Parameter String configName ","Parameter Type type ","Parameter String property ","Parameter Decoder propertyDecoder ","Block Stmt ","Name Expr type ","Simple Name type ","Name Expr property ","Simple Name property ","Name Expr propertyDecoder ","Simple Name propertyDecoder ","Class Or Interface Type String ","Simple Name configName ","Name Expr iter ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Binary Expr PLUS ","Simple Name cacheKey ","Simple Name decoder ","Method Declaration ","Binary Expr PLUS ","PLUS","Method Call Expr ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","SYNCHRONIZED","Void Type ","Simple Name addNewDecoder ","Parameter String cacheKey ","Parameter Decoder decoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Binary Expr LESS ","Name Expr decoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoders ","Name Expr newCache ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr decoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_copyGlobalTypeEncoder","callMethodNameReferTo":{"81":"TypeLiteral.java_TypeLiteral_outer_create","21":"TypeLiteral.java_TypeLiteral_outer_getEncoderCacheKey","25":"TypeLiteral.java_TypeLiteral_outer_create"},"num":97,"succs":[[7,3,1,6,4,8,5,2],[2],[39],[4],[],[10,15],[12,16],[17,14],[18],[10],[],[12,29],[],[14,23],[],[],[],[],[19],[24,21,20,13],[],[22,25,9,26],[],[],[41,40,44,38,42,43,2,39],[28,30,11,27],[],[],[],[],[74,38,72,75,73,2],[32,51],[33,35,61],[63,35,62,47,34],[65,37],[36],[37,67],[69],[2],[],[41],[],[49,22],[23,50],[32,31,37],[22],[45,22],[23],[33,23,47],[],[],[57],[53],[],[52],[54,52],[52,55],[58,59,52],[52],[60,53],[],[34],[],[64],[],[54,45,66],[],[48,68,55,46],[],[56,70,71],[],[],[73],[],[29,79],[76],[81,30,80],[29,85],[77,29],[],[],[83,78,30,82],[77,86,84],[],[],[],[87,88,38,90,89,2],[88],[],[93,85],[91],[86,94,80],[85],[],[96,95,92],[],[]],"nodeAttribute":["Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name copyGlobalTypeEncoder ","Parameter String configName ","Parameter Type type ","Parameter Encoder typeEncoder ","Block Stmt ","Name Expr configName ","Simple Name configName ","Name Expr type ","Simple Name type ","Name Expr typeEncoder ","Simple Name typeEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name encoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","PUBLIC","SYNCHRONIZED","Void Type ","Simple Name addNewEncoder ","Parameter String cacheKey ","Parameter Encoder encoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr encoder ","Name Expr encoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoders ","Name Expr newCache ","Simple Name writeVal ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Name Expr val ","Assign Expr ASSIGN ","Name Expr encoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_copyGlobalTypeDecoder","callMethodNameReferTo":{"81":"TypeLiteral.java_TypeLiteral_outer_create","21":"TypeLiteral.java_TypeLiteral_outer_getDecoderCacheKey","25":"TypeLiteral.java_TypeLiteral_outer_create"},"num":97,"succs":[[5,3,4,1,6,8,7,2],[2],[39],[4],[],[10,15],[12,16],[14,17],[18],[10],[],[12,29],[],[14,23],[],[],[],[],[19],[20,21,13,24],[],[22,25,9,26],[],[],[41,42,38,40,43,2,39,44],[27,28,30,11],[],[],[],[],[74,38,72,75,73,2],[32,51],[35,33,61],[63,47,35,62,34],[65,37],[36],[67,37],[69],[2],[],[41],[],[22,49],[50,23],[31,32,37],[22],[22,45],[23],[47,23,33],[],[],[57],[53],[],[52],[52,54],[52,55],[52,58,59],[52],[60,53],[],[34],[],[64],[],[54,66,45],[],[46,68,48,55],[],[70,56,71],[],[],[73],[],[29,79],[76],[81,30,80],[29,85],[77,29],[],[],[83,78,30,82],[77,86,84],[],[],[],[87,88,38,90,89,2],[88],[],[93,85],[91],[86,94,80],[85],[],[96,95,92],[],[]],"nodeAttribute":["Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name copyGlobalTypeDecoder ","Parameter String configName ","Parameter Type type ","Parameter Decoder typeDecoder ","Block Stmt ","Name Expr configName ","Simple Name configName ","Name Expr type ","Simple Name type ","Name Expr typeDecoder ","Simple Name typeDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name decoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","SYNCHRONIZED","Void Type ","Simple Name addNewDecoder ","Parameter String cacheKey ","Parameter Decoder decoder ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Binary Expr LESS ","Name Expr decoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoders ","Name Expr newCache ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr decoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_copyGlobalMapKeyDecoder","callMethodNameReferTo":{"68":"TypeLiteral.java_TypeLiteral_outer_create","21":"TypeLiteral.java_TypeLiteral_outer_getDecoderCacheKey","25":"TypeLiteral.java_TypeLiteral_outer_create"},"num":84,"succs":[[5,8,1,4,6,3,7,2],[2],[35],[4],[],[10,15],[16,12],[14,17],[18],[10],[],[12,29],[],[23,14],[],[],[],[],[19],[20,21,13,24],[],[22,9,25,26],[],[],[39,36,34,37,38,40,35,2],[30,11,27,28],[],[],[],[],[61,34,59,60,62,2],[32,45],[54,33],[56],[2],[],[37],[],[22,43],[23,44],[33,31,32],[22],[23],[],[],[50],[47],[],[46],[46,48],[46,51,52],[46],[53,47],[],[41,48,55,42],[],[57,49,58],[],[],[60],[],[29,66],[63],[68,30,67],[29,72],[64,29],[],[],[65,70,30,69],[64,73,71],[],[],[],[74,75,77,34,76,2],[75],[],[80,72],[78],[73,81,67],[72],[],[83,82,79],[],[]],"nodeAttribute":["Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name copyGlobalMapKeyDecoder ","Parameter String configName ","Parameter Type mapKeyType ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr configName ","Simple Name configName ","Name Expr mapKeyType ","Simple Name mapKeyType ","Name Expr mapKeyDecoder ","Simple Name mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Decoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewMapDecoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name mapKeyDecoder ","Method Declaration ","Method Call Expr ","Simple Name getDecoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Expression Stmt ","Method Call Expr ","Expression Stmt ","PUBLIC","SYNCHRONIZED","Void Type ","Simple Name addNewMapDecoder ","Parameter String cacheKey ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr cacheKey ","Name Expr mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyDecoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr IterImplObject ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_copyGlobalMapKeyEncoder","callMethodNameReferTo":{"68":"TypeLiteral.java_TypeLiteral_outer_create","21":"TypeLiteral.java_TypeLiteral_outer_getEncoderCacheKey","25":"TypeLiteral.java_TypeLiteral_outer_create"},"num":84,"succs":[[8,5,1,7,4,3,2,6],[2],[35],[4],[],[15,10],[16,12],[17,14],[18],[10],[],[29,12],[],[14,23],[],[],[],[],[19],[20,21,13,24],[],[26,9,22,25],[],[],[37,40,36,38,34,39,35,2],[11,27,28,30],[],[],[],[],[61,34,59,60,62,2],[45,32],[33,54],[56],[2],[],[37],[],[43,22],[23,44],[33,31,32],[22],[23],[],[],[50],[47],[],[46],[48,46],[52,51,46],[46],[53,47],[],[41,48,42,55],[],[57,49,58],[],[],[60],[],[29,66],[63],[68,30,67],[29,72],[64,29],[],[],[65,70,30,69],[64,73,71],[],[],[],[74,75,77,34,76,2],[75],[],[80,72],[78],[73,81,67],[72],[],[83,82,79],[],[]],"nodeAttribute":["Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name copyGlobalMapKeyEncoder ","Parameter String configName ","Parameter Type mapKeyType ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr configName ","Simple Name configName ","Name Expr mapKeyType ","Simple Name mapKeyType ","Name Expr mapKeyEncoder ","Simple Name mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Encoder ","Expression Stmt ","Method Call Expr ","Simple Name addNewMapEncoder ","Method Call Expr ","Simple Name cacheKey ","Simple Name mapKeyEncoder ","Method Declaration ","Method Call Expr ","Simple Name getEncoderCacheKey ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PUBLIC","SYNCHRONIZED","Void Type ","Simple Name addNewMapEncoder ","Parameter String cacheKey ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr cacheKey ","Name Expr mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyEncoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr mapKeyEncoders ","ASSIGN","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getMapKeyEncoderCacheKey","callMethodNameReferTo":{"17":"TypeLiteral.java_TypeLiteral_outer_create","33":"TypeLiteral.java_TypeLiteral_outer_create"},"num":49,"succs":[[12,1],[23,2,22],[8,3,6,5,7,4],[4],[],[6],[],[10,11],[0,1],[10,20],[],[],[15],[9],[13],[16,13,17],[13],[18,19,9,21],[],[],[],[27,3,25,28,26,4],[],[14,24],[],[26],[],[20,32],[29],[33,21,22],[20,37],[30,20],[],[35,31,21,34],[30,38,36],[],[],[],[39,40,3,42,41,4],[40],[],[45,37],[43],[38,46,22],[37],[],[48,47,44],[],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name getMapKeyEncoderCacheKey ","Parameter Type mapKeyType ","Block Stmt ","Name Expr mapKeyType ","Simple Name mapKeyType ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name typeLiteral ","Name Expr typeLiteral ","Variable Declarator TypeLiteral typeLiteral = ","Class Or Interface Type TypeLiteral ","Method Call Expr ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","ReturnStmt","Method Call Expr ","Simple Name getEncoderCacheKey ","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getMapKeyDecoderCacheKey","callMethodNameReferTo":{"17":"TypeLiteral.java_TypeLiteral_outer_create","33":"TypeLiteral.java_TypeLiteral_outer_create"},"num":49,"succs":[[12,1],[23,2,22],[5,8,3,7,6,4],[4],[],[6],[],[10,11],[0,1],[10,20],[],[],[15],[9],[13],[17,16,13],[13],[18,9,21,19],[],[],[],[27,3,25,28,26,4],[],[14,24],[],[26],[],[20,32],[29],[33,21,22],[20,37],[30,20],[],[35,31,21,34],[30,38,36],[],[],[],[39,40,3,42,41,4],[40],[],[45,37],[43],[38,46,22],[37],[],[48,47,44],[],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name getMapKeyDecoderCacheKey ","Parameter Type mapKeyType ","Block Stmt ","Name Expr mapKeyType ","Simple Name mapKeyType ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name typeLiteral ","Name Expr typeLiteral ","Variable Declarator TypeLiteral typeLiteral = ","Class Or Interface Type TypeLiteral ","Method Call Expr ","Name Expr TypeLiteral ","Simple Name create ","Simple Name clazz ","Method Declaration ","ReturnStmt","Method Call Expr ","Simple Name getDecoderCacheKey ","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_addNewMapDecoder","callMethodNameReferTo":{},"num":32,"succs":[[1,18],[27,2],[29],[10,7,4,8,9,11,5,6],[5],[6],[],[8],[],[13,16],[15,17],[2,0,1],[13],[],[15],[],[],[],[23],[20],[],[19],[19,21],[19,24,25],[19],[26,20],[],[12,21,28,14],[],[30,22,31],[],[]],"nodeAttribute":["Expression Stmt ","Method Call Expr ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","SYNCHRONIZED","Void Type ","Simple Name addNewMapDecoder ","Parameter String cacheKey ","Parameter Decoder mapKeyDecoder ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr mapKeyDecoder ","Simple Name mapKeyDecoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyDecoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr IterImplObject ","ASSIGN"]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getMapKeyDecoder","callMethodNameReferTo":{},"num":15,"succs":[[5,4,1,6,3,2],[2],[],[4],[],[9,10],[7],[0,12,11],[9],[],[],[],[8,13,14],[],[]],"nodeAttribute":["Method Declaration Throws ","PUBLIC","STATIC","Class Or Interface Type Decoder ","Simple Name getMapKeyDecoder ","Parameter String cacheKey ","Block Stmt ","Return Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Class Or Interface Type String ","ReturnStmt","Method Call Expr ","Name Expr IterImplNumber ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_addNewMapEncoder","callMethodNameReferTo":{},"num":32,"succs":[[18,1],[2,27],[29],[8,11,7,9,10,4,5,6],[5],[6],[],[8],[],[16,13],[15,17],[2,0,1],[13],[],[15],[],[],[],[23],[20],[],[19],[21,19],[25,24,19],[19],[26,20],[],[12,21,14,28],[],[30,31,22],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","SYNCHRONIZED","Void Type ","Simple Name addNewMapEncoder ","Parameter String cacheKey ","Parameter Encoder mapKeyEncoder ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr mapKeyEncoder ","Simple Name mapKeyEncoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr mapKeyEncoders ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr mapKeyEncoders ","ASSIGN"]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getMapKeyEncoder","callMethodNameReferTo":{},"num":15,"succs":[[4,6,5,1,3,2],[2],[],[4],[],[10,9],[7],[12,11,0],[9],[],[],[],[14,8,13],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Name Expr decoder ","Simple Name getMapKeyEncoder ","Parameter String cacheKey ","Block Stmt ","Return Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Class Or Interface Type String ","ReturnStmt","Method Call Expr ","Name Expr mapKeyEncoders ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getDecoder","callMethodNameReferTo":{},"num":15,"succs":[[6,5,4,1,3,2],[2],[],[4],[],[10,9],[7],[0,12,11],[9],[],[],[],[8,13,14],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Class Or Interface Type Decoder ","Simple Name getDecoder ","Parameter String cacheKey ","Block Stmt ","Return Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Class Or Interface Type String ","ReturnStmt","Method Call Expr ","Name Expr decoders ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_addNewDecoder","callMethodNameReferTo":{},"num":45,"succs":[[1,24],[4,2,34],[36,19,4,35,3],[38,6],[5],[40,6],[42],[12,8,13,11,14,10,15,9],[9],[10],[],[12],[],[17,22],[23,20],[1,0,6],[17],[],[17,16],[20],[],[19,20,2],[],[],[30],[26],[],[25],[25,27],[25,28],[25,31,32],[25],[33,26],[],[3],[],[37],[],[27,39,16],[],[18,41,21,28],[],[43,29,44],[],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","SYNCHRONIZED","Void Type ","Simple Name addNewDecoder ","Parameter String cacheKey ","Parameter Decoder decoder ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Binary Expr LESS ","Simple Name decoder ","Name Expr decoder ","Class Or Interface Type String ","Class Or Interface Type Decoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr decoders ","Name Expr newCache ","Name Expr newCache ","Name Expr newCache ","Variable Declarator HashMap<String, Decoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Decoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr decoders ","ASSIGN"]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getEncoder","callMethodNameReferTo":{},"num":15,"succs":[[3,6,5,1,4,2],[2],[],[4],[],[10,9],[7],[12,0,11],[9],[],[],[],[14,13,8],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Name Expr decoder ","Simple Name getEncoder ","Parameter String cacheKey ","Block Stmt ","Return Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Simple Name format ","ReturnStmt","Method Call Expr ","Name Expr encoders ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_addNewEncoder","callMethodNameReferTo":{},"num":45,"succs":[[1,24],[2,4,34],[36,4,35,19,3],[38,6],[5],[6,40],[42],[12,11,15,8,13,14,10,9],[9],[10],[],[12],[],[22,17],[20,23],[1,6,0],[17],[],[16,17],[20],[],[2,20,19],[],[],[30],[26],[],[25],[27,25],[25,28],[31,32,25],[25],[33,26],[],[3],[],[37],[],[27,16,39],[],[21,41,28,18],[],[29,43,44],[],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","SYNCHRONIZED","Void Type ","Simple Name addNewEncoder ","Parameter String cacheKey ","Parameter Encoder encoder ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr encoder ","Simple Name encoder ","Name Expr encoder ","Class Or Interface Type String ","Class Or Interface Type Encoder ","Variable Declaration Expr ","Simple Name newCache ","Name Expr encoders ","Name Expr newCache ","Simple Name writeVal ","Name Expr newCache ","Variable Declarator HashMap<String, Encoder> newCache = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name remove ","Method Call Expr ","Name Expr val ","Assign Expr ASSIGN ","Name Expr encoders ","ASSIGN"]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_canCreate","callMethodNameReferTo":{},"num":96,"succs":[[23,1],[18,24,25,2,3],[27,3,26,11],[5,29,4],[5,34,35,10],[6,31],[36,7],[8,4,30,37,11,20],[38,9],[43,4,26,11],[26,11,44],[14,15,17,16,12,13],[13],[72],[15],[],[19,22],[0,3,10],[19],[],[18,19],[19,40,7,20],[],[2],[],[],[],[28],[],[6],[31],[33],[30,7,41,31],[31],[],[12,51,49,50,13],[8,9],[],[39,42,21,32],[],[],[],[73,71,76,74,75,72,77,13],[28],[45],[],[54,47],[48,63],[35,58,26],[52,53,50],[],[48,46,47],[],[],[59],[56],[],[55],[57,55],[61,60,55],[55],[62,56],[],[65,64,57],[],[67,66],[],[],[82,69],[70,91],[93],[13],[],[74],[],[80,40],[81,41],[69,68,70],[40],[41],[],[],[87],[84],[],[83],[83,85],[83,88,89],[83],[90,84],[],[92,79,85,78],[],[86,94,95],[],[]],"nodeAttribute":["If Stmt ","Method Call Expr ","Return Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Primitive Type boolean ","Simple Name canCreate ","Parameter Class clazz ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","Name Expr objectFactories ","Simple Name containsKey ","ReturnStmt","Boolean Literal Expr true ","true","Block Stmt ","Continue Stmt ","Simple Name extension ","Name Expr extension ","Class Or Interface Type Extension ","Simple Name getExtensions ","Method Declaration ","Block Stmt ","Simple Name canCreate ","Method Call Expr ","Simple Name addObjectFactory ","Simple Name clazz ","Simple Name extension ","Method Declaration ","Boolean Literal Expr true ","Boolean Literal Expr false ","false","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name getExtensions ","Block Stmt ","Simple Name sLen ","Simple Name extension ","Variable Declaration Expr ","Simple Name combined ","Name Expr extensions ","Name Expr combined ","Name Expr combined ","Variable Declarator ArrayList<Extension> combined = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Extension> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name add ","Method Call Expr ","Name Expr currentConfig ","Simple Name get ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","SYNCHRONIZED","Void Type ","Simple Name addObjectFactory ","Parameter Class clazz ","Parameter Extension extension ","Block Stmt ","Name Expr clazz ","Name Expr extension ","Class Or Interface Type Class ","Class Or Interface Type Extension ","Variable Declaration Expr ","Simple Name copy ","Name Expr objectFactories ","Name Expr iter ","Name Expr copy ","Variable Declarator HashMap<Class, Extension> copy = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<Class, Extension> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr objectFactories ","ASSIGN"]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_create","callMethodNameReferTo":{},"num":29,"succs":[[5,1,3,4,6,2],[2],[],[4],[],[9,11],[7],[13,0,12],[9,17],[],[8,9],[],[],[10,15,0,14],[8,18,16],[],[],[],[19,20,1,22,21,2],[20],[],[25,17],[23],[18,26,12],[17],[],[28,27,24],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Class Or Interface Type Object ","Simple Name create ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr clazz ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Method Call Expr ","Simple Name create ","Simple Name getObjectFactory ","Simple Name clazz ","Method Declaration ","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Class Or Interface Type Class ","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_getObjectFactory","callMethodNameReferTo":{},"num":15,"succs":[[3,4,6,1,5,2],[2],[],[4],[],[10,9],[7],[0,12,11],[9],[],[],[],[14,13,8],[],[]],"nodeAttribute":["Method Declaration ","PUBLIC","STATIC","Class Or Interface Type Extension ","Simple Name getObjectFactory ","Parameter Class clazz ","Block Stmt ","Return Stmt ","Name Expr clazz ","Simple Name clazz ","Class Or Interface Type Class ","ReturnStmt","Method Call Expr ","Name Expr objectFactories ","Simple Name get "]}
{"Version":"0.9.22","MethodName":"JsoniterSpi_addObjectFactory","callMethodNameReferTo":{},"num":32,"succs":[[18,1],[2,27],[29],[7,4,10,9,8,5,11,6],[5],[6],[],[8],[],[16,13],[17,15],[1,0,2],[13],[],[15],[],[],[],[23],[20],[],[19],[19,21],[19,24,25],[19],[26,20],[],[28,14,21,12],[],[22,30,31],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","SYNCHRONIZED","Void Type ","Simple Name addObjectFactory ","Parameter Class clazz ","Parameter Extension extension ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr extension ","Simple Name extension ","Class Or Interface Type Class ","Class Or Interface Type Extension ","Variable Declaration Expr ","Simple Name copy ","Name Expr objectFactories ","Name Expr iter ","Name Expr copy ","Variable Declarator HashMap<Class, Extension> copy = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<Class, Extension> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Assign Expr ASSIGN ","Name Expr objectFactories ","ASSIGN"]}
{"Version":"0.9.22","MethodName":"TypeProperty_equals","callMethodNameReferTo":{},"num":80,"succs":[[15,1],[24,2,18,25],[16,3],[30,31,32,4],[5,42],[17,6],[7,54,53,52],[8,67,27],[11,13,14,9,10,12],[],[],[12],[],[19,23],[0,5,7,2,4],[8,28,27],[8,40,27],[8,66,27],[19],[],[19,18],[20,19],[21,19],[],[26],[],[],[],[29],[],[20,25,33],[],[37,35,36],[34],[],[38],[],[21,39],[],[],[41],[],[48],[22],[43],[44,43],[45,43],[46,43],[49,50,43],[43],[51,22],[],[55,56,36],[57,58],[64,63,36],[],[34],[8,61,59,60],[],[],[],[62,19,44],[],[65,45],[34],[],[41],[69,68,70],[71,72,36],[8,73,74,75],[77,78,25],[],[34],[],[],[19,76,46],[],[79,47],[34],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr OR ","Expression Stmt ","If Stmt ","Conditional Expr type != null ? !type.equals(that.type) : that.type != null ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Name Expr setters ","Simple Name equals ","Parameter Object o ","Block Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Name Expr o ","Simple Name o ","Name Expr o ","Name Expr o ","Name Expr o ","Class Or Interface Type Object ","Name Expr desc ","EQUALS","ThisExpr","ReturnStmt","Boolean Literal Expr true ","true","Binary Expr EQUALS ","OR","Binary Expr NOT_EQUALS ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","NOT_EQUALS","Method Call Expr ","Simple Name getClass ","Simple Name getClass ","Boolean Literal Expr false ","false","Variable Declaration Expr ","Simple Name that ","Name Expr that ","Name Expr that ","Name Expr that ","Name Expr that ","Variable Declarator TypeProperty that = ","Class Or Interface Type TypeProperty ","Cast Expr ","Class Or Interface Type TypeProperty ","Binary Expr NOT_EQUALS ","Unary Expr ! ","Binary Expr NOT_EQUALS ","Name Expr type ","Null Literal Expr ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr type ","Simple Name equals ","Field Access Expr ","Simple Name type ","Field Access Expr ","Null Literal Expr ","Simple Name type ","Boolean Literal Expr false ","Conditional Expr property != null ? property.equals(that.property) : that.property == null ","Binary Expr NOT_EQUALS ","Method Call Expr ","Binary Expr EQUALS ","Name Expr property ","Null Literal Expr ","Name Expr property ","Simple Name equals ","Field Access Expr ","Simple Name property ","Field Access Expr ","Null Literal Expr ","Simple Name property "]}
{"Version":"0.9.22","MethodName":"TypeProperty_hashCode","callMethodNameReferTo":{},"num":45,"succs":[[1,9],[29,2],[3,44,17],[8,5,7,4,6],[],[],[7],[],[1,0,2],[18],[11,12],[],[],[15,16,10,14],[10],[],[],[13],[19,20,10],[10],[22,23,21],[25,11,24],[3,12,27],[28],[],[26],[],[],[],[13,30,31],[],[34,33,32],[36,14,35],[],[38],[37],[],[],[41,39,40],[15,42,24],[16,3,43],[28],[26],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","Name Expr indention ","PUBLIC","Primitive Type int ","Simple Name hashCode ","Block Stmt ","Variable Declaration Expr ","Simple Name result ","Name Expr type ","Name Expr type ","Name Expr result ","Name Expr result ","Name Expr property ","Name Expr property ","Name Expr result ","Variable Declarator int result = ","Primitive Type int ","Conditional Expr type != null ? type.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Simple Name hashCode ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Binary Expr PLUS ","Binary Expr MULTIPLY ","PLUS","Enclosed Expr ","Integer Literal Expr Note Zero  ","MULTIPLY","IntegerLiteralExpr","Conditional Expr property != null ? property.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","ReturnStmt"]}
