{"fileName":"StreamImplString.java","Version":"0.9.22","callMethodName":["writeString","writeStringWithoutQuote","writeStringSlowPath","writeStringSlowPathWithoutEscapeUnicode","writeAsciiChar","writeAsSlashU"]}
{"Version":"0.9.22","MethodName":"StreamImplString_writeString","callMethodNameReferTo":{},"num":746,"succs":[[70,1],[2,81],[90,3],[4,101],[5,116],[6,7,117,118,103],[7,122],[8,127],[129,128,13,94,9],[10,130],[11,133],[12,134,118,13,105],[137,13],[141,14],[151,15],[159,16,26],[128,17,27,71,98],[18,160],[24,167,168,19,26],[20,169,22],[21,162,170,22],[32,171,26],[23],[27,178],[180,181,25],[27,178],[16,73,157],[28,182],[32,75,84,29,183],[30,184],[190,31],[32,193,35],[33,194],[197,34],[204],[41,42,46,40,38,36,43,44,39,37],[37],[38],[],[40],[],[48,68],[65,69],[45],[],[],[32,7,34,33,2,27,14,1,3,4,13,15,0],[48],[],[48,47],[49,5,48],[50,48],[48,51],[11,52,48],[48,53],[48,54,56],[57,48,55],[20,161,162],[48,55],[58,60],[145],[59],[199,61,59],[62,59],[65],[],[64,65],[66,65,200],[],[],[77],[72,74],[],[72,71],[72,73],[72,74],[75,72,201],[72,79,78],[72],[80],[],[86],[64],[82],[83,82],[84,202,82],[87,88,82],[82],[64,89],[],[99],[83],[91],[91,5,92],[91,93],[91,8,94],[91,11,8,97,53,95],[102,11,105],[96],[91,100,83],[91],[106],[47],[102],[102,5,103],[102,104],[107,102,108],[102],[110,109,111],[112,113],[],[115],[114,47],[],[],[],[6],[119,92,120],[],[49,121],[],[],[93,124,123],[],[110,104,125],[50,126],[],[10,9],[],[80],[131,132,51],[],[115],[12],[135,120,95],[52,136],[],[96,138,123],[139,110,97],[53,140],[],[147],[54],[142,144],[142,57,143],[142,143],[145,60],[142,148,149],[142],[150,54],[],[153,152,123],[155,154],[158],[156,55],[143,157],[],[],[],[17,18],[163],[66,74],[161,57],[164,161,165],[161],[66,74,166],[],[19],[179,24],[21],[],[123,173,172],[175,174],[177,57],[176,56],[144,157],[],[],[],[25],[],[],[30,31,29],[],[185,186,123],[188,187],[158],[58,189],[145,157],[],[191,60,123],[192,59],[],[],[146,195,123],[196,61],[],[62,203,76,67,198,85],[],[],[],[],[],[224,229,221,222,223,225,43,227,228,226,37],[205,63,206],[],[158],[246,208],[254,209,219],[210,219,247],[218,255,211],[240,236,128,212],[213,256],[216,265,214],[216,215,266,118,258],[218,267],[217],[218,272],[237,211,157],[220],[277],[37],[223],[],[199,242],[200,243],[201,244],[202,245],[],[207,208],[199],[199,232,230,269],[274,199,231,230],[199,232,230,279],[200],[280,200,234],[201,238],[236,201],[237,201],[201,238,281],[202],[240,202,282],[],[],[],[],[248],[230],[250,249,247],[247],[251,252],[253,230],[],[],[210],[213,212],[261],[238,234],[257],[257,270,258,214],[257,275,259,258,214],[263,257,262],[257],[264,238,234],[],[215],[115],[271,259,231,268],[],[],[],[293,291,289,221,290,43,294,37,292],[232,273,276,260],[],[],[],[408,407,409,221,406,43,404,405,37],[283,233,241,239,235,278],[],[],[],[],[],[536,534,535,532,221,537,43,533,538,531,37],[285,302],[286,313],[326,287],[288,338],[350],[290],[],[300,269],[270,301],[],[285,286,284,287,288],[269],[270],[270,296],[270,297],[270,298],[],[],[305],[296],[303],[303,307,306],[303],[308,309],[],[310],[311,312,296],[],[115],[316],[297],[314],[318,314,317],[314],[319,320],[],[321],[311,322,323],[324,325,297],[115],[],[115],[329],[298],[327],[330,327,331],[327],[333,332],[],[334],[311,335,336],[324,337,298],[115],[115],[341],[299],[339],[342,343,339],[339],[345,344],[],[346],[348,347,311],[324,299,349],[115],[115],[351,355,357,352,356,354,353,295],[],[358,359],[361,362],[364,340],[365,328],[315,366],[304,367],[],[360],[],[],[363],[],[],[],[],[],[394,390,369,398,374,386,370,382,378],[394,390,275,398,374,386,370,382,378],[424,371,372,373],[158],[425,373],[178],[376,424,377,375],[360],[433,377],[178],[379,380,424,381],[441],[442,381],[178],[383,384,424,385],[451],[452,385],[178],[424,388,389,387],[461],[462,389],[178],[392,393,424,391],[471],[393,472],[178],[395,397,424,396],[481],[397,482],[178],[399,424],[491,400,402],[401,128,402,419,492],[493],[403],[495],[405],[],[274,422],[275,423],[],[368],[274],[274,410],[274,411],[274,412],[274,413],[414,274],[274,415],[274,416,269],[274,417,416],[275,369],[275,270,400,419],[420,275,400,419],[],[],[],[426,427,428,410],[],[430,429],[432,431],[],[360],[],[158],[411,435,436,434],[],[437,438],[439,440],[],[360],[],[360],[],[412,444,445,443],[],[446,447],[448,449],[],[360],[],[450],[],[],[453,413,455,454],[],[456,457],[458,459],[],[360],[],[460],[],[],[414,464,463,465],[],[466,467],[469,468],[],[360],[],[470],[],[],[473,475,474,415],[],[476,477],[478,479],[],[360],[],[480],[],[],[485,483,416,484],[],[486,487],[488,489],[],[360],[],[490],[],[401],[115],[420,271,417,494],[],[421,418,496],[],[554,498],[499,561,530],[548,128,500,544],[501,562],[592,502,528],[593,503,118,564,528],[506,504,594],[565,506,128,505,595],[511,596],[527,515,511,523,518,519,507,520,524,514],[615,508],[618,511,509,617,616],[510,621],[650,530],[512,651],[118,573,513,652,514],[653,514],[657,515],[516,658],[659,549,518,517,547],[178],[660,519],[665,520],[521,667],[522,523,617,668,669],[523,672],[687,524],[525,699],[700,527,582,118,526],[527,701],[704,530],[529],[744,530],[499,545,157],[532],[],[550,279],[280,551],[552,281],[553,282],[],[498,497],[279,542],[279],[539,540,279],[274,541,279],[280],[281,546],[281,544],[545,281,547],[546,281],[549,282],[548,282],[],[],[],[],[557],[557,556],[504,573,502,563],[560,559],[555],[558,555,557],[557],[501,500],[588],[543,546],[563],[564,563,502],[565,504,563,502],[504,566,502,563],[565,504,563,502],[504,568,563,502],[569,504,563,502,508],[570,504,563,502,508],[504,502,563,508,571],[504,572,563,502],[504,556,563,502],[574,504,563,502],[504,521,502,575,563],[504,580,578,579,581,502,563],[662,661],[],[504,502,576,563],[],[504,577,502],[582,504,577,502],[504,577,583,502],[504,577,584,502],[504,567,577,585,502],[275,564,563,502,586],[590,563,589],[563],[543,591,546],[],[503],[115],[505],[115],[539,597,599,598],[],[601,600],[608,609],[],[602],[604,603,605],[115],[],[606],[324,566,607],[115],[],[610],[604,611,612],[115],[613],[311,567,614],[115],[510,509],[619,128,568],[],[569,118,620],[],[],[623,540,624,622,625],[],[626,627],[634,633],[644,643],[],[628],[604,629,630],[115],[631],[324,570,632],[115],[],[635],[604,637,636],[115],[638],[311,640,639],[641],[115],[324,642,571],[115],[],[645],[604,646,647],[115],[648],[649,311,572],[115],[],[513],[],[655,654],[],[656],[],[555,556,123],[517],[],[663],[558],[661],[558,664,661],[661],[559,666,123],[80],[522],[574,670,128],[671,118,575],[],[],[673,674],[],[676,120,675],[678,677,120],[656],[679,680,120],[686,685,576],[681,682,120],[656],[656],[662,683,684],[],[],[],[],[577,688,123],[689,690,120],[692,691,120],[698],[115],[693],[696,694,695],[697],[],[115],[110,578,579],[580,110,581],[526],[115],[702,703],[],[656],[705,708,707,541,709,706],[],[711,710],[717,718],[728,727],[737,738],[],[712],[604,714,713],[115],[715],[324,583,716],[115],[],[719],[604,721,720],[115],[722],[723,311,724],[725],[115],[324,726,584],[115],[],[729],[604,731,730],[115],[732],[311,734,733],[735],[115],[736,324,585],[115],[],[739],[604,740,741],[115],[742],[311,743,586],[115],[276,745,587,542],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Binary Expr LESS ","Expression Stmt ","Try Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Break Stmt ","Parameter ArrayIndexOutOfBoundsException e ","Break Stmt ","Name Expr val ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Simple Name element ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","STATIC","FINAL","Name Expr iter ","Simple Name writeString ","Parameter final JsonStream stream ","Parameter final String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Name Expr stream ","Simple Name append ","Simple Name append ","Name Expr stream ","String Literal Expr Not Empty  ","Simple Name append ","Name Expr stream ","Name Expr c ","Simple Name append ","Class Or Interface Type String ","Name Expr n ","Simple Name append ","Name Expr stream ","Simple Name append ","Char Literal Expr '[' ","Simple Name val ","Simple Name buf ","Name Expr val ","Class Or Interface Type JsonStream ","Class Or Interface Type String ","Simple Name fillCache ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr count ","Name Expr buf ","Name Expr i ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr stream ","Name Expr valLen ","Name Expr valLen ","Name Expr stream ","Variable Declarator int valLen = ","Name Expr buf ","Method Call Expr ","Simple Name length ","Variable Declaration Expr ","Simple Name toWriteLen ","Name Expr toWriteLen ","Name Expr toWriteLen ","Name Expr toWriteLen ","Name Expr toWriteLen ","Name Expr toWriteLen ","Parameter JsonIterator iter ","Name Expr JsonStream ","Variable Declarator int toWriteLen = ","Name Expr ctx ","Variable Declaration Expr ","Name Expr CodegenImplNative ","Name Expr bufLengthMinusTwo ","Name Expr bufLengthMinusTwo ","Name Expr bufLengthMinusTwo ","Variable Declarator int bufLengthMinusTwo = ","Name Expr ctx ","Binary Expr MINUS ","Parameter JsonIterator iter ","MINUS","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","IntegerLiteralExpr","Block Stmt ","Name Expr isCollectionValueNullable ","GREATER","Return Stmt ","PLUS","Simple Name count ","Assign Expr ASSIGN ","ASSIGN","Binary Expr MINUS ","Field Access Expr ","Simple Name count ","Block Stmt ","LESS","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name ensure ","Integer Literal Expr Note Zero  ","Block Stmt ","Binary Expr PLUS ","Field Access Expr ","Name Expr lines ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Simple Name count ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Name Expr buf ","Field Access Expr ","Simple Name count ","Assign Expr ASSIGN ","Method Call Expr ","Char Literal Expr '\"' ","Field Access Expr ","String Literal Expr Not Empty  ","Simple Name buf ","POSTFIX_INCREMENT","'\"'","Block Stmt ","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Variable Declarator char c = ","Primitive Type char ","Method Call Expr ","Simple Name charAt ","Block Stmt ","Catch Clause ","Block Stmt ","Name Expr CAN_DIRECT_WRITE ","Assign Expr ASSIGN ","Array Access Expr n++ ","Cast Expr ","Field Access Expr ","Unary Expr ++ ","Simple Name buf ","Primitive Type byte ","break;","Block Stmt ","Class Or Interface Type ArrayIndexOutOfBoundsException ","Simple Name e ","Block Stmt ","EQUALS","Array Access Expr j ","Array Access Expr n++ ","Char Literal Expr '\"' ","Field Access Expr ","Unary Expr ++ ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name count ","ReturnStmt","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr Array ","Method Call Expr ","Simple Name writeStringSlowPath ","Simple Name stream ","Simple Name val ","Simple Name i ","Simple Name valLen ","Method Declaration Throws ","Method Call Expr ","Name Expr lines ","Char Literal Expr ']' ","Expression Stmt ","If Stmt ","Name Expr escapeUnicode ","For Stmt ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Block Stmt ","Expression Stmt ","Unary Expr ++ ","Block Stmt ","Expression Stmt ","PRIVATE","Null Literal Expr ","Simple Name writeStringSlowPath ","Parameter JsonStream stream ","Parameter String val ","Parameter int i ","Parameter int valLen ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr val ","Name Expr val ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr valLen ","Name Expr valLen ","Class Or Interface Type JsonStream ","Class Or Interface Type String ","Primitive Type int ","Primitive Type int ","Variable Declaration Expr ","Simple Name escapeUnicode ","Variable Declarator boolean escapeUnicode = ","Primitive Type boolean ","Method Call Expr ","Method Call Expr ","Simple Name escapeUnicode ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Method Call Expr ","Name Expr ctx ","Method Call Expr ","Simple Name charAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name writeAsSlashU ","Simple Name stream ","Simple Name c ","Method Declaration Throws ","Method Call Expr ","Simple Name writeAsciiChar ","Simple Name stream ","Simple Name c ","Method Declaration Throws ","Method Call Expr ","Simple Name writeStringSlowPathWithoutEscapeUnicode ","Simple Name stream ","Simple Name val ","Simple Name i ","Simple Name valLen ","Method Declaration Throws ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name writeAsSlashU ","Parameter JsonStream stream ","Parameter int c ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Class Or Interface Type JsonStream ","Primitive Type int ","Variable Declaration Expr ","Simple Name b4 ","Name Expr b4 ","Variable Declarator byte b4 = ","Primitive Type byte ","Cast Expr ","Name Expr keys ","Enclosed Expr ","Binary Expr BINARY_AND ","BINARY_AND","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b3 ","Name Expr b3 ","Variable Declarator byte b3 = ","Primitive Type byte ","Cast Expr ","This Expr ","Enclosed Expr ","Binary Expr BINARY_AND ","Simple Name format ","Integer Literal Expr Note Zero  ","SIGNED_RIGHT_SHIFT","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b2 ","Name Expr b2 ","Variable Declarator byte b2 = ","Primitive Type byte ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_AND ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b1 ","Name Expr b1 ","Variable Declarator byte b1 = ","Primitive Type byte ","Cast Expr ","Null Literal Expr ","Enclosed Expr ","Binary Expr BINARY_AND ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Array Access Expr b1 ","Array Access Expr b2 ","Array Access Expr b3 ","Array Access Expr b4 ","Primitive Type byte ","Char Literal Expr '\\\\' ","'\\\\'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Name Expr ITOA ","Name Expr ITOA ","Name Expr ITOA ","Name Expr ITOA ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr '\"' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\\\' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\b' ","Expression Stmt ","Name Expr DIGITS ","Switch Entry Stmt ","Char Literal Expr '\\f' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\n' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\r' ","Expression Stmt ","Name Expr DIGITS ","Switch Entry Stmt ","Char Literal Expr '\\t' ","Expression Stmt ","Name Expr System ","Switch Entry Stmt ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeAsciiChar ","Parameter JsonStream stream ","Parameter int c ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr middle ","Name Expr stream ","Array Type 1 ","Name Expr stream ","Name Expr stream ","Name Expr c ","Name Expr c ","Name Expr c ","Class Or Interface Type JsonStream ","Primitive Type int ","SwitchEntryStmt","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr '\"' ","Method Call Expr ","Simple Name write ","Cast Expr ","Class Or Interface Type IOException ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr '\\\\' ","'\\b'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Simple Name copy ","Char Literal Expr '\\\\' ","Primitive Type byte ","String Literal Expr Not Empty  ","'b'","'\\f'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'f' ","'f'","'\\n'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","'\\r'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'r' ","'r'","'\\t'","Method Call Expr ","Simple Name part2 ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 't' ","'t'","Block Stmt ","Integer Literal Expr Note Zero  ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name write ","Expression Stmt ","For Stmt ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Simple Name element ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Block Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Continue Stmt ","If Stmt ","Binary Expr GREATER ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","Break Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Throw Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name writeStringSlowPathWithoutEscapeUnicode ","Parameter JsonStream stream ","Parameter String val ","Parameter int i ","Parameter int valLen ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr val ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr valLen ","Name Expr valLen ","Class Or Interface Type JsonStream ","Class Or Interface Type String ","Primitive Type int ","Primitive Type int ","Variable Declaration Expr ","Name Expr _surrogate ","Name Expr c ","Simple Name _surrogate ","Name Expr _surrogate ","Name Expr _surrogate ","Primitive Type int ","Block Stmt ","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr firstPart ","Name Expr SURR1_FIRST ","Name Expr c ","Name Expr SURR2_FIRST ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Variable Declarator int c = ","Primitive Type int ","Method Call Expr ","Name Expr String ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","BINARY_OR","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Name Expr iter ","Enclosed Expr ","Binary Expr BINARY_AND ","Name Expr iter ","Block Stmt ","Binary Expr LESS ","OR","Binary Expr GREATER ","Name Expr SURR1_FIRST ","Name Expr SURR2_LAST ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Name Expr iter ","Enclosed Expr ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","continue;","Block Stmt ","Name Expr SURR1_LAST ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","StringLiteralExpr","Assign Expr ASSIGN ","Block Stmt ","GREATER_EQUALS","Variable Declaration Expr ","Field Access Expr ","Name Expr firstPart ","Variable Declarator int firstPart = ","Simple Name buf ","Assign Expr ASSIGN ","Integer Literal Expr Zero  ","Block Stmt ","Binary Expr LESS ","Binary Expr GREATER ","Name Expr SURR2_FIRST ","Name Expr SURR2_LAST ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr Integer ","Simple Name toHexString ","Name Expr Integer ","Simple Name toHexString ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr LEFT_SHIFT ","Enclosed Expr ","LEFT_SHIFT","Integer Literal Expr Note Zero  ","Binary Expr MINUS ","Binary Expr MINUS ","Block Stmt ","Integer Literal Expr Note Zero  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Method Call Expr ","Expression Stmt "]}
{"Version":"0.9.22","MethodName":"StreamImplString_writeStringWithoutQuote","callMethodNameReferTo":{},"num":727,"succs":[[61,1],[72,2],[81,3],[4,92],[5,103],[6,105,104,94,7],[109,7],[115,8],[117,9,116,85,13],[118,10],[122,11],[123,12,105,96,13],[126,13],[14,130],[138,15,22],[16,116,23,89,62],[140,17],[20,18,150],[153,20,151,19,152],[22,165],[21],[172,23],[64,15,139],[173,24],[66,27,25,75,174],[26,175],[27,29,178],[179,28],[182],[35,30,32,40,37,33,34,38,31,36],[31],[32],[],[34],[],[59,42],[60,56],[39],[],[],[14,27,3,2,1,0,13,28,4,23,7],[42],[],[41,42],[5,43,42],[44,42],[45,42],[46,11,42],[49,47,42],[50,48,42],[145,18,141],[52,48,42],[131],[51],[51,184,53],[56],[],[55,56],[57,185,56],[],[],[68],[65,63],[],[63,62],[64,63],[65,63],[186,66,63],[69,70,63],[63],[71],[],[77],[55],[73],[73,74],[187,75,73],[79,73,78],[73],[55,80],[],[90],[74],[82],[5,83,82],[84,82],[85,8,82],[86,47,8,11,88,82],[93,96,11],[87],[91,74,82],[82],[97],[41],[93],[5,93,94],[95,93],[99,98,93],[93],[101,100],[102,41],[],[],[6],[83,107,106],[],[43,108],[],[],[84,111,110],[],[112,95,113],[],[114,44],[],[9,10],[],[71],[119,120,45],[],[121],[],[12],[86,124,107],[125,46],[],[87,127,110],[112,128,88],[129,47],[],[134],[132,48],[50,131],[131,52],[135,136,131],[131],[137,48],[],[16,17],[],[146],[65,57],[141],[142,141],[143,141],[50,144,141],[147,148,141],[141],[149,65,57],[],[19],[154,155,152],[],[164,145,116],[156,152,157],[162,144,159],[142,105,158],[160,143,159],[121],[],[161],[],[163],[],[121],[167,110,166],[169,168],[50,171],[49,170],[132,139],[],[],[],[26,25],[],[52,176,110],[51,177],[],[],[133,180,110],[53,181],[],[188,54,76,183,58,67],[],[],[],[],[],[206,211,203,205,204,207,37,209,208,210,31],[228,190],[236,191,201],[192,201,229],[200,237,193],[222,218,116,194],[195,238],[198,247,196],[198,197,105,248,240],[200,249],[199],[200,254],[219,193,139],[202],[259],[31],[205],[],[184,224],[185,225],[186,226],[187,227],[],[189,190],[184],[184,214,212,251],[256,184,212,213],[184,214,212,261],[185],[262,185,216],[186,220],[218,186],[219,186],[186,220,263],[187],[222,187,264],[],[],[],[],[230],[212],[232,231,229],[229],[233,234],[235,212],[],[],[192],[195,194],[243],[220,216],[239],[239,252,240,196],[239,257,241,240,196],[245,239,244],[239],[246,220,216],[],[197],[121],[253,241,213,250],[],[],[],[275,273,271,203,272,37,276,31,274],[214,255,258,242],[],[],[],[389,388,390,203,37,387,386,385,31],[265,215,223,221,217,260],[],[],[],[],[],[517,515,516,513,203,518,519,37,514,512,31],[267,284],[268,295],[308,269],[270,320],[332],[272],[],[282,251],[252,283],[],[267,268,266,269,270],[251],[252],[252,278],[252,279],[252,280],[],[],[287],[278],[285],[285,289,288],[285],[290,291],[],[292],[293,294,278],[],[121],[298],[279],[296],[300,296,299],[296],[301,302],[],[303],[293,304,305],[306,307,279],[121],[],[121],[311],[280],[309],[312,309,313],[309],[315,314],[],[316],[293,317,318],[306,319,280],[121],[121],[323],[281],[321],[324,325,321],[321],[327,326],[],[328],[330,329,293],[306,281,331],[121],[121],[333,337,339,334,338,336,335,277],[],[340,341],[342,343],[345,322],[346,310],[297,347],[286,348],[],[163],[],[344],[],[],[],[],[],[375,371,350,379,355,367,351,363,359],[375,371,257,379,367,355,351,363,359],[405,352,353,354],[161],[406,354],[172],[357,405,358,356],[163],[414,358],[172],[360,361,405,362],[422],[423,362],[172],[364,365,405,366],[432],[433,366],[172],[405,369,368,370],[442],[443,370],[172],[373,374,405,372],[452],[374,453],[172],[376,378,405,377],[462],[378,463],[172],[380,405],[472,381,383],[382,116,383,400,473],[474],[384],[476],[386],[],[256,403],[257,404],[],[349],[256],[256,391],[392,256],[256,393],[256,394],[395,256],[256,396],[256,397,251],[256,398,397],[257,350],[257,252,381,400],[401,257,381,400],[],[],[],[407,408,409,391],[],[411,410],[413,412],[],[163],[],[161],[392,416,417,415],[],[418,419],[420,421],[],[163],[],[163],[],[393,425,426,424],[],[427,428],[429,430],[],[163],[],[431],[],[],[434,394,436,435],[],[437,438],[439,440],[],[163],[],[441],[],[],[395,445,444,446],[],[447,448],[450,449],[],[163],[],[451],[],[],[454,456,455,396],[],[457,458],[460,459],[],[163],[],[461],[],[],[466,464,397,465],[],[467,468],[469,470],[],[163],[],[471],[],[382],[121],[401,253,398,475],[],[402,399,477],[],[535,479],[480,542,511],[529,116,481,525],[482,543],[573,483,509],[574,484,105,545,509],[487,485,575],[546,487,116,486,576],[492,577],[496,508,492,504,500,499,488,501,505,495],[596,489],[599,492,490,598,597],[491,602],[631,511],[632,493],[105,554,494,633,495],[634,495],[638,496],[497,639],[640,530,499,498,528],[172],[641,500],[646,501],[502,648],[503,504,598,649,650],[504,653],[668,505],[506,680],[681,563,508,105,507],[508,682],[685,511],[510],[725,511],[480,526,139],[513],[],[531,261],[262,532],[533,263],[534,264],[],[479,478],[261,523],[261],[520,521,261],[256,522,261],[262],[263,527],[263,525],[526,263,528],[527,263],[530,264],[529,264],[],[],[],[],[538],[538,537],[485,554,544,483],[541,540],[536],[539,536,538],[538],[482,481],[569],[524,527],[544],[545,544,483],[546,485,483,544],[485,547,544,483],[546,485,544,483],[485,549,544,483],[550,485,483,544,489],[551,485,483,544,489],[485,544,483,489,552],[485,553,483,544],[485,537,544,483],[555,485,544,483],[485,502,483,556,544],[485,561,559,562,560,544,483],[643,642],[],[485,557,483,544],[],[485,558,483],[485,563,558,483],[485,558,564,483],[485,558,565,483],[485,558,548,566,483],[257,545,483,544,567],[571,544,570],[544],[524,572,527],[],[484],[121],[486],[121],[520,578,580,579],[],[582,581],[589,590],[],[583],[585,584,586],[121],[],[587],[306,547,588],[121],[],[591],[585,592,593],[121],[594],[293,548,595],[121],[491,490],[600,116,549],[],[550,105,601],[],[],[604,521,605,603,606],[],[607,608],[615,614],[625,624],[],[609],[585,610,611],[121],[612],[306,551,613],[121],[],[616],[585,618,617],[121],[619],[293,621,620],[622],[121],[306,623,552],[121],[],[626],[585,627,628],[121],[629],[630,293,553],[121],[],[494],[],[636,635],[],[637],[],[536,537,110],[498],[],[644],[539],[642],[539,645,642],[642],[647,540,110],[71],[503],[555,651,116],[652,105,556],[],[],[654,655],[],[657,107,656],[659,658,107],[637],[660,661,107],[667,666,557],[662,663,107],[637],[637],[643,664,665],[],[],[],[],[558,669,110],[670,671,107],[673,672,107],[679],[121],[674],[677,675,676],[678],[],[121],[112,559,560],[561,112,562],[507],[121],[683,684],[],[637],[686,689,688,522,690,687],[],[692,691],[698,699],[709,708],[718,719],[],[693],[585,695,694],[121],[696],[306,697,564],[121],[],[700],[585,702,701],[121],[703],[704,293,705],[706],[121],[306,707,565],[121],[],[710],[585,712,711],[121],[713],[293,715,714],[716],[121],[717,306,566],[121],[],[720],[585,721,722],[121],[723],[293,724,567],[121],[258,726,523,568],[]],"nodeAttribute":["Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Binary Expr EQUALS ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","For Stmt ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Block Stmt ","Break Stmt ","Unary Expr ++ ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","STATIC","FINAL","Name Expr iter ","Simple Name writeStringWithoutQuote ","Parameter final JsonStream stream ","Parameter final String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr stream ","Simple Name stream ","Simple Name append ","Name Expr stream ","Simple Name append ","Simple Name toLong ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr c ","Name Expr stream ","Name Expr n ","Array Type 1 ","Name Expr stream ","Name Expr val ","Simple Name val ","Name Expr val ","Name Expr val ","Class Or Interface Type JsonStream ","Class Or Interface Type String ","Variable Declaration Expr ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Simple Name valLen ","Name Expr valLen ","Name Expr valLen ","Name Expr valLen ","Variable Declarator int valLen = ","Primitive Type int ","Method Call Expr ","Simple Name length ","Variable Declaration Expr ","Name Expr dateFormat ","Name Expr toWriteLen ","Array Access Expr pos++ ","Simple Name isWildcard ","Name Expr toWriteLen ","Name Expr toWriteLen ","Name Expr bufLen ","Name Expr toWriteLen ","Variable Declarator int toWriteLen = ","Name Expr ctx ","Variable Declaration Expr ","Simple Name append ","Name Expr bufLen ","Name Expr bufLen ","Name Expr bufLen ","Variable Declarator int bufLen = ","Name Expr ctx ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Block Stmt ","Binary Expr PLUS ","GREATER","Return Stmt ","PLUS","Name Expr start ","Assign Expr ASSIGN ","ASSIGN","Binary Expr MINUS ","MINUS","Field Access Expr ","Simple Name count ","Block Stmt ","LESS","Integer Literal Expr Zero  ","Method Call Expr ","Name Expr String ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Binary Expr PLUS ","Field Access Expr ","Simple Name count ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Simple Name count ","Simple Name appendOnUnknownField ","Type Parameter T ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Name Expr buf ","Field Access Expr ","Simple Name count ","Block Stmt ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name c ","Integer Literal Expr Note Zero  ","Name Expr c ","Name Expr c ","Name Expr c ","Variable Declarator char c = ","Name Expr left ","Method Call Expr ","Simple Name charAt ","Block Stmt ","Expression Stmt ","AND","Binary Expr LESS ","Expression Stmt ","Binary Expr NOT_EQUALS ","Binary Expr GREATER ","Binary Expr NOT_EQUALS ","Integer Literal Expr Note Zero  ","NOT_EQUALS","Char Literal Expr '\"' ","'\"'","Char Literal Expr '\\\\' ","'\\\\'","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Array Access Expr n++ ","Cast Expr ","Field Access Expr ","Simple Name add ","Simple Name get ","Integer Literal Expr Note Zero  ","break;","Block Stmt ","EQUALS","Assign Expr ASSIGN ","Field Access Expr ","Simple Name count ","ReturnStmt","Return Stmt ","Return Stmt ","Simple Name field ","Method Call Expr ","Simple Name writeStringSlowPath ","Simple Name stream ","Simple Name val ","Simple Name i ","Simple Name valLen ","Method Declaration Throws ","Expression Stmt ","If Stmt ","Name Expr escapeUnicode ","For Stmt ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Block Stmt ","Expression Stmt ","Unary Expr ++ ","Block Stmt ","Expression Stmt ","PRIVATE","Null Literal Expr ","Simple Name writeStringSlowPath ","Parameter JsonStream stream ","Parameter String val ","Parameter int i ","Parameter int valLen ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr val ","Name Expr val ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr valLen ","Name Expr valLen ","Class Or Interface Type JsonStream ","Class Or Interface Type String ","Primitive Type int ","Primitive Type int ","Variable Declaration Expr ","Simple Name escapeUnicode ","Variable Declarator boolean escapeUnicode = ","Primitive Type boolean ","Method Call Expr ","Method Call Expr ","Simple Name escapeUnicode ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Method Call Expr ","Name Expr ctx ","Method Call Expr ","Simple Name charAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name writeAsSlashU ","Simple Name stream ","Simple Name c ","Method Declaration Throws ","Method Call Expr ","Simple Name writeAsciiChar ","Simple Name stream ","Simple Name c ","Method Declaration Throws ","Method Call Expr ","Simple Name writeStringSlowPathWithoutEscapeUnicode ","Simple Name stream ","Simple Name val ","Simple Name i ","Simple Name valLen ","Method Declaration Throws ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name writeAsSlashU ","Parameter JsonStream stream ","Parameter int c ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Class Or Interface Type JsonStream ","Primitive Type int ","Variable Declaration Expr ","Simple Name b4 ","Name Expr b4 ","Variable Declarator byte b4 = ","Primitive Type byte ","Cast Expr ","Name Expr keys ","Enclosed Expr ","Binary Expr BINARY_AND ","BINARY_AND","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b3 ","Name Expr b3 ","Variable Declarator byte b3 = ","Primitive Type byte ","Cast Expr ","This Expr ","Enclosed Expr ","Binary Expr BINARY_AND ","Simple Name format ","Integer Literal Expr Note Zero  ","SIGNED_RIGHT_SHIFT","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b2 ","Name Expr b2 ","Variable Declarator byte b2 = ","Primitive Type byte ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_AND ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b1 ","Name Expr b1 ","Variable Declarator byte b1 = ","Primitive Type byte ","Cast Expr ","Null Literal Expr ","Enclosed Expr ","Binary Expr BINARY_AND ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Array Access Expr b1 ","Array Access Expr b2 ","Array Access Expr b3 ","Array Access Expr b4 ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Name Expr ITOA ","Name Expr ITOA ","Name Expr ITOA ","Name Expr ITOA ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr '\"' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\\\' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\b' ","Expression Stmt ","Name Expr DIGITS ","Switch Entry Stmt ","Char Literal Expr '\\f' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\n' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\r' ","Expression Stmt ","Name Expr DIGITS ","Switch Entry Stmt ","Char Literal Expr '\\t' ","Expression Stmt ","Name Expr System ","Switch Entry Stmt ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeAsciiChar ","Parameter JsonStream stream ","Parameter int c ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr middle ","Name Expr stream ","Array Type 1 ","Name Expr stream ","Name Expr stream ","Name Expr c ","Name Expr c ","Name Expr c ","Class Or Interface Type JsonStream ","Primitive Type int ","SwitchEntryStmt","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr '\"' ","Method Call Expr ","Simple Name write ","Cast Expr ","Class Or Interface Type IOException ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr '\\\\' ","'\\b'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Simple Name copy ","Char Literal Expr '\\\\' ","Primitive Type byte ","String Literal Expr Not Empty  ","'b'","'\\f'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'f' ","'f'","'\\n'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","'\\r'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'r' ","'r'","'\\t'","Method Call Expr ","Simple Name part2 ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 't' ","'t'","Block Stmt ","Integer Literal Expr Note Zero  ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name write ","Expression Stmt ","For Stmt ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Simple Name element ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Block Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Continue Stmt ","If Stmt ","Binary Expr GREATER ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","Break Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Throw Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name writeStringSlowPathWithoutEscapeUnicode ","Parameter JsonStream stream ","Parameter String val ","Parameter int i ","Parameter int valLen ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr val ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr valLen ","Name Expr valLen ","Class Or Interface Type JsonStream ","Class Or Interface Type String ","Primitive Type int ","Primitive Type int ","Variable Declaration Expr ","Name Expr _surrogate ","Name Expr c ","Simple Name _surrogate ","Name Expr _surrogate ","Name Expr _surrogate ","Primitive Type int ","Block Stmt ","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr firstPart ","Name Expr SURR1_FIRST ","Name Expr c ","Name Expr SURR2_FIRST ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Variable Declarator int c = ","Primitive Type int ","Method Call Expr ","Name Expr String ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","BINARY_OR","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Name Expr iter ","Enclosed Expr ","Binary Expr BINARY_AND ","Name Expr iter ","Block Stmt ","Binary Expr LESS ","OR","Binary Expr GREATER ","Name Expr SURR1_FIRST ","Name Expr SURR2_LAST ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Name Expr iter ","Enclosed Expr ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","continue;","Block Stmt ","Name Expr SURR1_LAST ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","StringLiteralExpr","Assign Expr ASSIGN ","Block Stmt ","GREATER_EQUALS","Variable Declaration Expr ","Field Access Expr ","Name Expr firstPart ","Variable Declarator int firstPart = ","Simple Name buf ","Assign Expr ASSIGN ","Integer Literal Expr Zero  ","Block Stmt ","Binary Expr LESS ","Binary Expr GREATER ","Name Expr SURR2_FIRST ","Name Expr SURR2_LAST ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr Integer ","Simple Name toHexString ","Name Expr Integer ","Simple Name toHexString ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr LEFT_SHIFT ","Enclosed Expr ","LEFT_SHIFT","Integer Literal Expr Note Zero  ","Binary Expr MINUS ","Binary Expr MINUS ","Block Stmt ","Integer Literal Expr Note Zero  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Method Call Expr ","Expression Stmt "]}
{"Version":"0.9.22","MethodName":"StreamImplString_writeStringSlowPath","callMethodNameReferTo":{},"num":557,"succs":[[47,1],[55,2,12],[3,12,48],[11,56,4],[40,35,57,5],[6,59],[9,68,7],[8,9,70,69,61],[11,72],[10],[11,77],[37,4,58],[13],[82],[19,26,15,17,18,20,23,22,21,24,16],[16],[],[18],[],[28,43],[33,44],[36,45],[41,46],[25],[],[],[0,1],[28],[],[28,30,27,74],[79,28,27,29],[28,30,27,84],[33],[],[85,33,32],[36,38],[],[35,36],[37,36],[36,38,86],[41],[],[40,41,87],[],[],[],[],[49],[27],[51,50,48],[48],[52,53],[54,27],[],[],[3],[6,5],[],[],[64],[38,32],[60],[60,75,61,7],[80,60,62,61,7],[66,60,65],[60],[67,38,32],[],[8],[],[71],[],[76,62,29,73],[],[],[],[98,96,94,15,95,23,99,97,16],[30,78,81,63],[],[],[],[213,212,214,15,211,23,210,209,16],[88,42,31,39,34,83],[],[],[],[],[],[343,341,342,339,15,344,345,340,23,338,16],[90,107],[91,118],[131,92],[143,93],[155],[95],[],[105,74],[106,75],[],[90,91,89,92,93],[74],[75],[75,101],[75,102],[75,103],[],[],[110],[101],[108],[108,112,111],[108],[113,114],[],[115],[116,117,101],[],[71],[121],[102],[119],[123,119,122],[119],[124,125],[],[126],[116,127,128],[129,130,102],[71],[],[71],[134],[103],[132],[135,132,136],[132],[138,137],[],[139],[116,140,141],[129,142,103],[71],[71],[146],[104],[144],[148,147,144],[144],[150,149],[],[151],[153,152,116],[129,104,154],[71],[71],[156,160,162,157,161,159,158,100],[],[163,164],[166,167],[169,145],[170,133],[120,171],[172,109],[],[165],[],[],[168],[],[],[],[],[],[199,195,203,174,191,179,175,187,183],[199,195,80,203,191,179,175,187,183],[229,176,177,178],[230],[231,178],[239],[181,229,182,180],[165],[240,182],[239],[184,229,185,186],[248],[249,186],[239],[188,189,229,190],[258],[259,190],[239],[229,193,194,192],[268],[269,194],[239],[197,198,229,196],[278],[198,279],[239],[202,200,229,201],[288],[202,289],[239],[204,229],[298,205,207],[206,57,207,224,299],[300],[208],[302],[210],[],[79,227],[80,228],[],[173],[79],[79,215],[216,79],[79,217],[79,218],[219,79],[79,220],[79,221,74],[79,222,221],[80,174],[80,75,205,224],[225,80,205,224],[],[],[],[],[232,233,234,215],[],[236,235],[238,237],[],[165],[],[230],[],[216,242,243,241],[],[244,245],[246,247],[],[165],[],[165],[],[217,251,252,250],[],[253,254],[255,256],[],[165],[],[257],[],[],[260,218,262,261],[],[263,264],[265,266],[],[165],[],[267],[],[],[219,271,270,272],[],[273,274],[276,275],[],[165],[],[277],[],[],[280,282,281,220],[],[283,284],[286,285],[],[165],[],[287],[],[],[292,290,221,291],[],[293,294],[295,296],[],[165],[],[297],[],[206],[71],[225,76,222,301],[],[226,223,303],[],[361,305],[306,368,337],[355,57,307,351],[308,369],[399,309,335],[400,310,69,371,335],[313,311,401],[372,313,57,312,402],[318,403],[334,322,330,318,326,325,314,327,331,321],[422,315],[425,318,316,424,423],[317,428],[457,337],[319,458],[69,380,320,459,321],[460,321],[464,322],[323,466],[356,467,325,324,354],[239],[468,326],[473,327],[328,476],[329,330,424,477,478],[330,481],[497,331],[332,510],[511,389,334,69,333],[334,512],[515,337],[336],[555,337],[306,352,58],[339],[],[357,84],[85,358],[359,86],[360,87],[],[305,304],[84,349],[84],[346,347,84],[79,348,84],[85],[86,353],[86,351],[352,86,354],[353,86],[356,87],[355,87],[],[],[],[],[364],[364,363],[311,380,370,309],[367,366],[362],[365,362,364],[364],[308,307],[395],[350,353],[370],[371,370,309],[372,311,370,309],[311,373,370,309],[372,311,370,309],[311,375,309,370],[376,311,309,370,315],[377,311,370,309,315],[311,370,309,315,378],[311,379,370,309],[311,363,309,370],[381,311,370,309],[311,328,370,382,309],[311,387,385,386,388,370,309],[470,469],[],[311,383,370,309],[],[311,384,309],[311,389,384,309],[311,384,390,309],[311,384,309,391],[311,384,374,392,309],[80,371,370,309,393],[397,370,396],[370],[350,398,353],[],[310],[71],[312],[71],[346,404,406,405],[],[408,407],[415,416],[],[409],[411,410,412],[71],[],[413],[129,373,414],[71],[],[417],[411,418,419],[71],[420],[116,374,421],[71],[317,316],[426,57,375],[],[376,69,427],[],[],[430,347,431,429,432],[],[433,434],[441,440],[451,450],[],[435],[411,436,437],[71],[438],[129,377,439],[71],[],[442],[411,444,443],[71],[445],[116,447,446],[448],[71],[129,449,378],[71],[],[452],[411,453,454],[71],[455],[456,116,379],[71],[],[320],[],[462,461],[],[463],[],[362,363,465],[],[324],[],[471],[365],[469],[365,472,469],[469],[474,366,465],[475],[],[329],[381,479,57],[480,69,382],[],[],[483,482],[],[486,485,484],[488,487,485],[],[463],[489,490,485],[496,495,383],[491,492,485],[463],[463],[470,493,494],[],[],[],[],[384,498,465],[499,500,485],[502,501,485],[509],[71],[503],[506,504,505],[507],[],[71],[508,385,386],[],[387,508,388],[333],[71],[513,514],[],[463],[516,519,518,348,520,517],[],[522,521],[528,529],[539,538],[548,549],[],[523],[411,525,524],[71],[526],[129,527,390],[71],[],[530],[411,532,531],[71],[533],[534,116,535],[536],[71],[129,537,391],[71],[],[540],[411,542,541],[71],[543],[116,545,544],[546],[71],[547,129,392],[71],[],[550],[411,551,552],[71],[553],[116,554,393],[71],[81,556,349,394],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Name Expr escapeUnicode ","For Stmt ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Block Stmt ","Expression Stmt ","Unary Expr ++ ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","STATIC","Null Literal Expr ","Simple Name writeStringSlowPath ","Parameter JsonStream stream ","Parameter String val ","Parameter int i ","Parameter int valLen ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr val ","Simple Name val ","Name Expr val ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr valLen ","Simple Name valLen ","Name Expr valLen ","Class Or Interface Type JsonStream ","Class Or Interface Type String ","Primitive Type int ","Primitive Type int ","Variable Declaration Expr ","Simple Name escapeUnicode ","Variable Declarator boolean escapeUnicode = ","Primitive Type boolean ","Method Call Expr ","Method Call Expr ","Simple Name escapeUnicode ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","LESS","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Method Call Expr ","Name Expr ctx ","Method Call Expr ","Simple Name charAt ","Block Stmt ","GREATER","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name writeAsSlashU ","Simple Name stream ","Simple Name c ","Method Declaration Throws ","Method Call Expr ","Simple Name writeAsciiChar ","Simple Name stream ","Simple Name c ","Method Declaration Throws ","Method Call Expr ","Simple Name writeStringSlowPathWithoutEscapeUnicode ","Simple Name stream ","Simple Name val ","Simple Name i ","Simple Name valLen ","Method Declaration Throws ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name writeAsSlashU ","Parameter JsonStream stream ","Parameter int c ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Class Or Interface Type JsonStream ","Primitive Type int ","Variable Declaration Expr ","Simple Name b4 ","Name Expr b4 ","Variable Declarator byte b4 = ","Primitive Type byte ","Cast Expr ","Name Expr keys ","Enclosed Expr ","Binary Expr BINARY_AND ","BINARY_AND","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b3 ","Name Expr b3 ","Variable Declarator byte b3 = ","Primitive Type byte ","Cast Expr ","This Expr ","Enclosed Expr ","Binary Expr BINARY_AND ","Simple Name format ","Integer Literal Expr Note Zero  ","SIGNED_RIGHT_SHIFT","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b2 ","Name Expr b2 ","Variable Declarator byte b2 = ","Primitive Type byte ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_AND ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b1 ","Name Expr b1 ","Variable Declarator byte b1 = ","Primitive Type byte ","Cast Expr ","Null Literal Expr ","Enclosed Expr ","Binary Expr BINARY_AND ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Array Access Expr b1 ","Array Access Expr b2 ","Array Access Expr b3 ","Array Access Expr b4 ","Primitive Type byte ","Char Literal Expr '\\\\' ","'\\\\'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Name Expr ITOA ","Name Expr ITOA ","Name Expr ITOA ","Name Expr ITOA ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr '\"' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\\\' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\b' ","Expression Stmt ","Name Expr DIGITS ","Switch Entry Stmt ","Char Literal Expr '\\f' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\n' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\r' ","Expression Stmt ","Name Expr DIGITS ","Switch Entry Stmt ","Char Literal Expr '\\t' ","Expression Stmt ","Name Expr System ","Switch Entry Stmt ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeAsciiChar ","Parameter JsonStream stream ","Parameter int c ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr middle ","Name Expr stream ","Array Type 1 ","Name Expr stream ","Name Expr stream ","Name Expr c ","Name Expr c ","Name Expr c ","Class Or Interface Type JsonStream ","Primitive Type int ","SwitchEntryStmt","'\"'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr '\"' ","break;","Method Call Expr ","Simple Name write ","Cast Expr ","Class Or Interface Type IOException ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr '\\\\' ","'\\b'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Simple Name copy ","Char Literal Expr '\\\\' ","Primitive Type byte ","String Literal Expr Not Empty  ","'b'","'\\f'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'f' ","'f'","'\\n'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","'\\r'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'r' ","'r'","'\\t'","Method Call Expr ","Simple Name part2 ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 't' ","'t'","Block Stmt ","Integer Literal Expr Note Zero  ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name write ","Expression Stmt ","For Stmt ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Simple Name element ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Block Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Continue Stmt ","If Stmt ","Binary Expr GREATER ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","Break Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Throw Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name writeStringSlowPathWithoutEscapeUnicode ","Parameter JsonStream stream ","Parameter String val ","Parameter int i ","Parameter int valLen ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr val ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr valLen ","Name Expr valLen ","Class Or Interface Type JsonStream ","Class Or Interface Type String ","Primitive Type int ","Primitive Type int ","Variable Declaration Expr ","Name Expr _surrogate ","Name Expr c ","Simple Name _surrogate ","Name Expr _surrogate ","Name Expr _surrogate ","Primitive Type int ","Block Stmt ","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr firstPart ","Name Expr SURR1_FIRST ","Name Expr c ","Name Expr SURR2_FIRST ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Variable Declarator int c = ","Primitive Type int ","Method Call Expr ","Name Expr String ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","BINARY_OR","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Name Expr iter ","Enclosed Expr ","Binary Expr BINARY_AND ","Name Expr iter ","Block Stmt ","Binary Expr LESS ","OR","Binary Expr GREATER ","Name Expr SURR1_FIRST ","Name Expr SURR2_LAST ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Name Expr iter ","Enclosed Expr ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","continue;","Block Stmt ","Name Expr SURR1_LAST ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","StringLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Block Stmt ","GREATER_EQUALS","Variable Declaration Expr ","Field Access Expr ","Name Expr firstPart ","Variable Declarator int firstPart = ","Simple Name buf ","Assign Expr ASSIGN ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Block Stmt ","Binary Expr LESS ","Binary Expr GREATER ","Name Expr SURR2_FIRST ","Name Expr SURR2_LAST ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr Integer ","Simple Name toHexString ","Name Expr Integer ","Simple Name toHexString ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr LEFT_SHIFT ","Enclosed Expr ","LEFT_SHIFT","Integer Literal Expr Note Zero  ","Binary Expr MINUS ","MINUS","Binary Expr MINUS ","Block Stmt ","Integer Literal Expr Note Zero  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Method Call Expr ","Expression Stmt "]}
{"Version":"0.9.22","MethodName":"StreamImplString_writeAsciiChar","callMethodNameReferTo":{},"num":227,"succs":[[26,22,30,1,18,6,2,14,10],[26,57,22,30,6,18,2,14,10],[63,3,4,5],[64],[65,5],[74],[8,63,9,7],[71],[75,9],[74],[11,63,12,13],[83],[84,13],[74],[15,16,63,17],[93],[94,17],[74],[63,20,19,21],[103],[104,21],[74],[24,25,63,23],[113],[25,114],[74],[27,29,63,28],[123],[29,124],[74],[31,63],[133,32,34],[33,134,34,58,135],[137],[35],[142],[42,44,46,37,41,43,39,40,38],[38],[],[40],[],[48,61],[57,62],[45],[],[],[0],[48],[],[48,47],[48,49],[48,50],[48,51],[48,52],[48,53],[48,54,139],[48,55,54],[],[57,1],[57,140,32,58],[59,57,32,58],[],[],[],[],[66,67,68,47],[],[70,69],[73,72],[],[71],[],[],[64],[],[49,77,78,76],[],[79,80],[81,82],[],[71],[],[71],[],[50,86,87,85],[],[88,89],[90,91],[],[71],[],[92],[],[],[95,51,97,96],[],[98,99],[100,101],[],[71],[],[102],[],[],[52,106,105,107],[],[108,109],[111,110],[],[71],[],[112],[],[],[115,117,116,53],[],[118,119],[121,120],[],[71],[],[122],[],[],[127,125,54,126],[],[128,129],[130,131],[],[71],[],[132],[],[33],[],[136],[],[59,141,55,138],[],[],[],[153,151,149,37,150,43,154,152,38],[60,56,143],[],[145,162],[146,173],[186,147],[148,198],[210],[150],[],[160,139],[140,161],[],[145,146,144,147,148],[139],[140],[140,156],[140,157],[140,158],[],[],[165],[156],[163],[163,167,166],[163],[168,169],[],[170],[171,172,156],[],[136],[176],[157],[174],[178,174,177],[174],[179,180],[],[181],[171,182,183],[184,185,157],[136],[],[136],[189],[158],[187],[190,187,191],[187],[193,192],[],[194],[171,195,196],[184,197,158],[136],[136],[201],[159],[199],[202,203,199],[199],[205,204],[],[206],[208,207,171],[184,159,209],[136],[136],[211,215,217,212,216,214,213,155],[],[218,219],[220,221],[223,200],[224,188],[175,225],[226,164],[],[71],[],[222],[],[],[],[],[]],"nodeAttribute":["Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr '\"' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\\\' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\b' ","Expression Stmt ","Name Expr DIGITS ","Switch Entry Stmt ","Char Literal Expr '\\f' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\n' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '\\r' ","Expression Stmt ","Name Expr DIGITS ","Switch Entry Stmt ","Char Literal Expr '\\t' ","Expression Stmt ","Name Expr System ","Switch Entry Stmt ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","STATIC","Void Type ","Simple Name writeAsciiChar ","Parameter JsonStream stream ","Parameter int c ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr middle ","Name Expr stream ","Array Type 1 ","Name Expr stream ","Name Expr stream ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Class Or Interface Type JsonStream ","Primitive Type int ","SwitchEntryStmt","'\"'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","'\\\\'","Primitive Type byte ","Char Literal Expr '\"' ","break;","Method Call Expr ","Simple Name write ","Cast Expr ","Class Or Interface Type IOException ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr '\\\\' ","'\\b'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Simple Name copy ","Char Literal Expr '\\\\' ","Primitive Type byte ","String Literal Expr Not Empty  ","'b'","'\\f'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'f' ","'f'","'\\n'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","'\\r'","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'r' ","'r'","'\\t'","Method Call Expr ","Simple Name part2 ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 't' ","'t'","Block Stmt ","LESS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Simple Name stream ","Simple Name c ","Method Declaration Throws ","Method Call Expr ","Simple Name write ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name writeAsSlashU ","Parameter JsonStream stream ","Parameter int c ","Class Or Interface Type IOException ","Block Stmt ","Name Expr stream ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Class Or Interface Type JsonStream ","Primitive Type int ","Variable Declaration Expr ","Simple Name b4 ","Name Expr b4 ","Variable Declarator byte b4 = ","Primitive Type byte ","Cast Expr ","Name Expr keys ","Enclosed Expr ","Binary Expr BINARY_AND ","BINARY_AND","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b3 ","Name Expr b3 ","Variable Declarator byte b3 = ","Primitive Type byte ","Cast Expr ","This Expr ","Enclosed Expr ","Binary Expr BINARY_AND ","Simple Name format ","Integer Literal Expr Note Zero  ","SIGNED_RIGHT_SHIFT","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b2 ","Name Expr b2 ","Variable Declarator byte b2 = ","Primitive Type byte ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_AND ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b1 ","Name Expr b1 ","Variable Declarator byte b1 = ","Primitive Type byte ","Cast Expr ","Null Literal Expr ","Enclosed Expr ","Binary Expr BINARY_AND ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Array Access Expr b1 ","Array Access Expr b2 ","Array Access Expr b3 ","Array Access Expr b4 ","Primitive Type byte ","Char Literal Expr '\\\\' ","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Name Expr ITOA ","Name Expr ITOA ","Name Expr ITOA ","Name Expr ITOA "]}
{"Version":"0.9.22","MethodName":"StreamImplString_writeAsSlashU","callMethodNameReferTo":{},"num":92,"succs":[[1,25],[2,37],[50,3],[4,62],[74],[13,10,8,6,9,12,15,7,11],[7],[],[9],[],[23,17],[24,19],[14],[],[],[1,2,0,3,4],[17],[],[19],[],[19,18],[19,20],[19,21],[],[],[28],[18],[26],[26,30,29],[26],[31,32],[],[33],[34,35,18],[],[36],[],[40],[20],[38],[42,38,41],[38],[43,44],[],[45],[34,46,47],[48,49,20],[36],[],[36],[53],[21],[51],[54,51,55],[51],[57,56],[],[58],[34,59,60],[48,61,21],[36],[36],[65],[22],[63],[66,67,63],[63],[69,68],[],[70],[72,71,34],[48,22,73],[36],[36],[75,79,81,76,80,78,77,16],[],[82,83],[85,86],[88,64],[89,52],[39,90],[91,27],[],[84],[],[],[87],[],[],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","STATIC","Void Type ","Simple Name writeAsSlashU ","Parameter JsonStream stream ","Parameter int c ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr stream ","Simple Name stream ","Name Expr c ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Class Or Interface Type JsonStream ","Primitive Type int ","Variable Declaration Expr ","Simple Name b4 ","Name Expr b4 ","Variable Declarator byte b4 = ","Primitive Type byte ","Cast Expr ","Name Expr keys ","Enclosed Expr ","Binary Expr BINARY_AND ","BINARY_AND","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name b3 ","Name Expr b3 ","Variable Declarator byte b3 = ","Primitive Type byte ","Cast Expr ","This Expr ","Enclosed Expr ","Binary Expr BINARY_AND ","Simple Name format ","Integer Literal Expr Note Zero  ","SIGNED_RIGHT_SHIFT","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b2 ","Name Expr b2 ","Variable Declarator byte b2 = ","Primitive Type byte ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_AND ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name b1 ","Name Expr b1 ","Variable Declarator byte b1 = ","Primitive Type byte ","Cast Expr ","Null Literal Expr ","Enclosed Expr ","Binary Expr BINARY_AND ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Array Access Expr b1 ","Array Access Expr b2 ","Array Access Expr b3 ","Array Access Expr b4 ","Primitive Type byte ","Char Literal Expr '\\\\' ","'\\\\'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Name Expr ITOA ","Name Expr ITOA ","Name Expr ITOA ","Name Expr ITOA "]}
