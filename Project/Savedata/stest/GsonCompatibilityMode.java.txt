{"fileName":"GsonCompatibilityMode.java","Version":"test","callMethodName":["builder","initialValue","excludeFieldsWithoutExposeAnnotation","serializeNulls","setDateFormat","setDateFormat","initialValue","setDateFormat","initialValue","setFieldNamingStrategy","setFieldNamingPolicy","setPrettyPrinting","disableHtmlEscaping","setVersion","setExclusionStrategies","addSerializationExclusionStrategy","addDeserializationExclusionStrategy","build","doBuild","equals","hashCode","copy","toString","createOmitValue","createEncoder","encode","encode","createDecoder","decode","decode","decodeBoolean","decodeLong","decodeInt","decodeFloat","decodeDouble","updateClassDescriptor","getJsonProperty","value","from","to","required","decoder","implementation","encoder","nullable","collectionValueNullable","defaultValueToOmit","annotationType","getJsonIgnore","ignoreDecoding","ignoreEncoding","annotationType","ignoreDecoding","ignoreEncoding","annotationType"]}
{"Version":"test","MethodName":"GsonCompatibilityMode_builder","callMethodNameReferTo":{},"num":13,"succs":[[3,1,2,4],[],[3],[],[5],[0,7,6],[],[9,8],[],[0,11,10],[12],[],[]],"nodeAttribute":["Method Declaration ","PROTECTED","Simple Name getType ","Simple Name builder ","Block Stmt ","Return Stmt ","ReturnStmt","Cast Expr ","Class Or Interface Type Builder ","Method Call Expr ","Super Expr ","Simple Name builder ","SuperExpr"]}
{"Version":"test","MethodName":"Builder_excludeFieldsWithoutExposeAnnotation","callMethodNameReferTo":{},"num":15,"succs":[[7,1],[2,13,12],[6,4,5,3],[],[5],[],[0,1],[10,9,8],[],[],[11],[],[],[14],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name excludeFieldsWithoutExposeAnnotation ","Block Stmt ","Assign Expr ASSIGN ","Name Expr excludeFieldsWithoutExposeAnnotation ","ASSIGN","Boolean Literal Expr true ","true","ReturnStmt","This Expr ","ThisExpr"]}
{"Version":"test","MethodName":"Builder_serializeNulls","callMethodNameReferTo":{},"num":14,"succs":[[7,1],[2,12,11],[6,4,5,3],[],[5],[],[0,1],[8,9],[],[10],[],[],[13],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name serializeNulls ","Block Stmt ","Method Call Expr ","Simple Name omitDefaultValue ","Boolean Literal Expr false ","false","ReturnStmt","This Expr ","ThisExpr"]}
{"Version":"test","MethodName":"Builder_setDateFormat","callMethodNameReferTo":{},"num":12,"succs":[[5,2,4,3,1],[],[3],[],[8,7],[6],[10,0,9],[],[],[],[11],[]],"nodeAttribute":["Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name setDateFormat ","Parameter dateStyle ","Block Stmt ","Return Stmt ","Primitive Type int ","Simple Name dateStyle ","ReturnStmt","This Expr ","ThisExpr"]}
{"Version":"test","MethodName":"Builder_setDateFormat","callMethodNameReferTo":{},"num":37,"succs":[[1,17],[35,28,2],[7,8,6,5,4,3],[],[5],[],[15,14,11],[13,15,16],[1,0],[22,29,28,2],[11],[],[13],[],[],[],[],[20,18,19],[],[],[21],[],[25,24,27,26,23],[],[],[26],[],[9],[],[31,30,12,32,10],[],[],[33,34],[],[],[36],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name setDateFormat ","Parameter dateStyle ","Parameter timeStyle ","Block Stmt ","Return Stmt ","Name Expr dateStyle ","Simple Name dateStyle ","Name Expr timeStyle ","Simple Name timeStyle ","Primitive Type int ","FINAL","Primitive Type int ","Assign Expr ASSIGN ","Name Expr dateFormat ","ASSIGN","Object Creation Expr ThreadLocal<DateFormat> Optional.empty Optional.empty ","Class Or Interface Type ThreadLocal ","Method Declaration ","Marker Annotation Expr @Override ","PROTECTED","Class Or Interface Type DateFormat ","Simple Name initialValue ","Block Stmt ","ReturnStmt","Method Call Expr ","Name Expr DateFormat ","Simple Name getDateTimeInstance ","Field Access Expr ","Name Expr Locale ","Simple Name US ","This Expr ","ThisExpr"]}
{"Version":"test","MethodName":"Builder_setDateFormat","callMethodNameReferTo":{},"num":32,"succs":[[13,1],[2,30,24],[7,4,5,6,3],[],[5],[],[11,12,10],[1,0],[25,2,18,24],[10],[],[],[],[16,14,15],[],[],[17],[],[19,21,23,20,22],[],[],[22],[],[8],[],[26,9,27],[],[29,28],[],[],[31],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name setDateFormat ","Parameter pattern ","Block Stmt ","Return Stmt ","Name Expr pattern ","Simple Name pattern ","Class Or Interface Type String ","FINAL","Assign Expr ASSIGN ","Name Expr dateFormat ","ASSIGN","Object Creation Expr ThreadLocal<DateFormat> Optional.empty Optional.empty ","Class Or Interface Type ThreadLocal ","Method Declaration ","Marker Annotation Expr @Override ","PROTECTED","Class Or Interface Type DateFormat ","Simple Name initialValue ","Block Stmt ","ReturnStmt","Object Creation Expr SimpleDateFormat Optional.empty Optional.empty ","Class Or Interface Type SimpleDateFormat ","Field Access Expr ","Name Expr Locale ","Simple Name US ","This Expr ","ThisExpr"]}
{"Version":"test","MethodName":"Builder_setFieldNamingStrategy","callMethodNameReferTo":{},"num":19,"succs":[[11,1],[2,18,17],[5,7,4,6,3],[],[5],[],[10,9],[0,1],[9],[],[],[12,8,13],[15,14],[],[16],[],[],[],[16]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name setFieldNamingStrategy ","Parameter fieldNamingStrategy ","Block Stmt ","Name Expr fieldNamingStrategy ","Simple Name fieldNamingStrategy ","Class Or Interface Type FieldNamingStrategy ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","This Expr ","Simple Name fieldNamingStrategy ","ThisExpr","ReturnStmt","This Expr "]}
{"Version":"test","MethodName":"Builder_setFieldNamingPolicy","callMethodNameReferTo":{},"num":19,"succs":[[11,1],[2,18,17],[6,5,4,7,3],[],[5],[],[9,10],[0,1],[9],[],[],[12,13,8],[14,15],[],[16],[],[],[],[16]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name setFieldNamingPolicy ","Parameter namingConvention ","Block Stmt ","Name Expr namingConvention ","Simple Name namingConvention ","Class Or Interface Type FieldNamingPolicy ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","This Expr ","Simple Name fieldNamingStrategy ","ThisExpr","ReturnStmt","This Expr "]}
{"Version":"test","MethodName":"Builder_setPrettyPrinting","callMethodNameReferTo":{},"num":14,"succs":[[1,7],[12,2,11],[5,4,3,6],[],[5],[],[1,0],[8,9],[],[10],[],[],[13],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name setPrettyPrinting ","Block Stmt ","Method Call Expr ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","ReturnStmt","This Expr ","ThisExpr"]}
{"Version":"test","MethodName":"Builder_disableHtmlEscaping","callMethodNameReferTo":{},"num":15,"succs":[[7,1],[13,12,2],[5,4,3,6],[],[5],[],[1,0],[8,9,10],[],[],[11],[],[],[14],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name disableHtmlEscaping ","Block Stmt ","Assign Expr ASSIGN ","Name Expr disableHtmlEscaping ","ASSIGN","Boolean Literal Expr true ","true","ReturnStmt","This Expr ","ThisExpr"]}
{"Version":"test","MethodName":"Builder_setVersion","callMethodNameReferTo":{},"num":19,"succs":[[1,11],[18,2,17],[4,7,5,3,6],[],[5],[],[10,9],[0,1],[9],[],[],[13,8,12],[15,14],[],[16],[],[],[],[16]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name setVersion ","Parameter version ","Block Stmt ","Name Expr version ","Simple Name version ","Primitive Type double ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","This Expr ","Simple Name version ","ThisExpr","ReturnStmt","This Expr "]}
{"Version":"test","MethodName":"Builder_setExclusionStrategies","callMethodNameReferTo":{},"num":36,"succs":[[1,13,2],[11,2,4],[15,3],[1,17],[22,5,21],[8,9,10,6,7],[],[8],[],[12,11],[0,4],[],[],[3],[15,19],[16],[15],[14,20,18],[],[],[28,29,27,26,6],[],[23],[],[32,25],[35,20,21],[27],[],[31,19],[24,25],[19],[],[34,33,30],[],[],[23]],"nodeAttribute":["For Each Stmt ","Name Expr strategies ","Variable Declaration Expr ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name setExclusionStrategies ","Parameter strategies ","Block Stmt ","Simple Name strategies ","Class Or Interface Type ExclusionStrategy ","Block Stmt ","Name Expr strategy ","Simple Name strategy ","Class Or Interface Type ExclusionStrategy ","Method Call Expr ","Simple Name addSerializationExclusionStrategy ","Simple Name exclusionStrategy ","Method Declaration ","ReturnStmt","This Expr ","ThisExpr","Expression Stmt ","Return Stmt ","Class Or Interface Type Builder ","Simple Name addSerializationExclusionStrategy ","Parameter exclusionStrategy ","Block Stmt ","Name Expr exclusionStrategy ","Class Or Interface Type ExclusionStrategy ","Method Call Expr ","Name Expr serializationExclusionStrategies ","Simple Name add ","This Expr "]}
{"Version":"test","MethodName":"Builder_addSerializationExclusionStrategy","callMethodNameReferTo":{},"num":17,"succs":[[11,1],[2,15,14],[6,5,4,7,3],[],[5],[],[10,9],[0,1],[9],[],[],[13,12,8],[],[],[],[16],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name addSerializationExclusionStrategy ","Parameter exclusionStrategy ","Block Stmt ","Name Expr exclusionStrategy ","Simple Name exclusionStrategy ","Class Or Interface Type ExclusionStrategy ","Method Call Expr ","Name Expr serializationExclusionStrategies ","Simple Name add ","ReturnStmt","This Expr ","ThisExpr"]}
{"Version":"test","MethodName":"Builder_addDeserializationExclusionStrategy","callMethodNameReferTo":{},"num":17,"succs":[[11,1],[2,15,14],[5,6,7,4,3],[],[5],[],[10,9],[0,1],[9],[],[],[12,13,8],[],[],[],[16],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Builder ","Simple Name addDeserializationExclusionStrategy ","Parameter exclusionStrategy ","Block Stmt ","Name Expr exclusionStrategy ","Simple Name exclusionStrategy ","Class Or Interface Type ExclusionStrategy ","Method Call Expr ","Name Expr deserializationExclusionStrategies ","Simple Name add ","ReturnStmt","This Expr ","ThisExpr"]}
{"Version":"test","MethodName":"Builder_build","callMethodNameReferTo":{},"num":18,"succs":[[7,1],[2,12,11],[4,5,3,6],[],[5],[],[1,0],[9,8],[],[10],[],[],[13,14],[],[2,15,16],[17],[],[]],"nodeAttribute":["Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type GsonCompatibilityMode ","Simple Name build ","Block Stmt ","Method Call Expr ","Simple Name escapeUnicode ","Boolean Literal Expr false ","false","ReturnStmt","Cast Expr ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Super Expr ","Simple Name build ","SuperExpr"]}
{"Version":"test","MethodName":"Builder_doBuild","callMethodNameReferTo":{},"num":16,"succs":[[5,2,3,6,1,4],[],[],[4],[],[10,9],[7],[12,0,11],[9],[],[],[],[13,14,8],[],[15],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PROTECTED","Class Or Interface Type Config ","Simple Name doBuild ","Parameter configName ","Block Stmt ","Return Stmt ","Name Expr configName ","Simple Name configName ","Class Or Interface Type String ","ReturnStmt","Object Creation Expr GsonCompatibilityMode Optional.empty Optional.empty ","Class Or Interface Type GsonCompatibilityMode ","This Expr ","ThisExpr"]}
{"Version":"test","MethodName":"Builder_equals","callMethodNameReferTo":{},"num":146,"succs":[[15,1],[2,18,26,25],[3,16],[33,32,31,4],[5,17],[44,43,6],[49,7],[8,66,28],[11,9,13,14,12,10],[],[],[12],[],[24,19],[2,7,0,4,6],[8,28,29],[41,8,28],[48,8,28],[19],[],[19,18],[19,20],[21,19],[22,19],[],[27],[],[],[],[30],[],[34,20,26],[],[38,36,37],[35],[],[39],[],[21,40],[],[],[42],[],[45,22,8,46],[],[47],[],[],[42],[62],[23],[50],[51,50],[50,52],[53,50],[54,50],[55,50],[56,50],[50,57],[50,58],[59,50],[60,50],[50,64,63],[50],[23,65],[],[69,68,67],[68,70,71],[],[133],[73,68,72],[120],[68,74,75],[107],[76,68,77],[94],[68,78,79],[87,88,86,8],[81,80,26],[83,84,26],[],[82,51],[],[],[85,52],[],[89,90],[],[92,19,91],[],[],[53,93],[],[],[96,95,97],[98,37,99],[101,100,8,102],[105,104,26],[],[35],[],[],[54,19,103],[],[55,106],[35],[],[109,110,108],[112,111,37],[113,8,114,115],[118,117,26],[],[35],[],[],[56,116,19],[],[119,57],[35],[],[122,121,123],[124,37,125],[127,128,126,8],[131,130,26],[],[35],[],[],[129,19,58],[],[59,132],[35],[],[136,134,135],[137,138,37],[139,141,8,140],[143,144,26],[],[35],[],[],[60,19,142],[],[145,61],[35],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr OR ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name equals ","Parameter o ","Block Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Name Expr o ","Simple Name o ","Name Expr o ","Name Expr o ","Name Expr o ","Name Expr o ","Class Or Interface Type Object ","This Expr ","EQUALS","ThisExpr","ReturnStmt","Boolean Literal Expr true ","true","Binary Expr EQUALS ","OR","Binary Expr NOT_EQUALS ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","NOT_EQUALS","Method Call Expr ","Simple Name getClass ","Simple Name getClass ","Boolean Literal Expr false ","false","Method Call Expr ","LOGICAL_COMPLEMENT","Super Expr ","Simple Name equals ","SuperExpr","Boolean Literal Expr false ","Variable Declaration Expr ","Simple Name builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Name Expr builder ","Variable Declarator Builder builder = ","Class Or Interface Type Builder ","Cast Expr ","Class Or Interface Type Builder ","Binary Expr AND ","Binary Expr AND ","AND","Enclosed Expr ","Binary Expr AND ","Enclosed Expr ","Binary Expr AND ","Enclosed Expr ","Binary Expr AND ","Enclosed Expr ","Binary Expr AND ","Method Call Expr ","Binary Expr EQUALS ","Binary Expr EQUALS ","Name Expr excludeFieldsWithoutExposeAnnotation ","Field Access Expr ","Simple Name excludeFieldsWithoutExposeAnnotation ","Name Expr disableHtmlEscaping ","Field Access Expr ","Simple Name disableHtmlEscaping ","Method Call Expr ","Simple Name equals ","Method Call Expr ","Name Expr dateFormat ","Simple Name get ","Field Access Expr ","Simple Name get ","Simple Name dateFormat ","Conditional Expr fieldNamingStrategy != null ? fieldNamingStrategy.equals(builder.fieldNamingStrategy) : builder.fieldNamingStrategy == null ","Binary Expr NOT_EQUALS ","Method Call Expr ","Binary Expr EQUALS ","Name Expr fieldNamingStrategy ","Null Literal Expr ","Name Expr fieldNamingStrategy ","Simple Name equals ","Field Access Expr ","Simple Name fieldNamingStrategy ","Field Access Expr ","Null Literal Expr ","Simple Name fieldNamingStrategy ","Conditional Expr version != null ? version.equals(builder.version) : builder.version == null ","Binary Expr NOT_EQUALS ","Method Call Expr ","Binary Expr EQUALS ","Name Expr version ","Null Literal Expr ","Name Expr version ","Simple Name equals ","Field Access Expr ","Simple Name version ","Field Access Expr ","Null Literal Expr ","Simple Name version ","Conditional Expr serializationExclusionStrategies != null ? serializationExclusionStrategies.equals(builder.serializationExclusionStrategies) : builder.serializationExclusionStrategies == null ","Binary Expr NOT_EQUALS ","Method Call Expr ","Binary Expr EQUALS ","Name Expr serializationExclusionStrategies ","Null Literal Expr ","Name Expr serializationExclusionStrategies ","Simple Name equals ","Field Access Expr ","Simple Name serializationExclusionStrategies ","Field Access Expr ","Null Literal Expr ","Simple Name serializationExclusionStrategies ","Conditional Expr deserializationExclusionStrategies != null ? deserializationExclusionStrategies.equals(builder.deserializationExclusionStrategies) : builder.deserializationExclusionStrategies == null ","Binary Expr NOT_EQUALS ","Method Call Expr ","Binary Expr EQUALS ","Name Expr deserializationExclusionStrategies ","Null Literal Expr ","Name Expr deserializationExclusionStrategies ","Simple Name equals ","Field Access Expr ","Simple Name deserializationExclusionStrategies ","Field Access Expr ","Null Literal Expr ","Simple Name deserializationExclusionStrategies "]}
{"Version":"test","MethodName":"Builder_hashCode","callMethodNameReferTo":{},"num":125,"succs":[[15,1],[2,49],[3,62],[70,4],[78,5],[6,91],[7,102],[8,113],[42,9,124],[14,10,12,13,11],[],[],[13],[],[3,8,6,7,2,5,4,1,0],[43],[17,19,18],[19],[],[],[16,21,22],[16],[],[20,24,25],[20],[],[28,23,29,27],[23],[],[],[26,31,33,32],[26],[],[],[37,36,35,30],[30],[],[],[39,34,40,41],[34],[],[],[38],[19,45,44],[19],[47,46,9],[48],[],[],[16,50,51],[],[53,52,54],[55,17,56],[],[58],[57],[],[],[60,59,18],[57],[61],[],[20,63,50],[53,64,65],[66,21,56],[67],[57],[68,69,22],[57],[61],[50,23,71],[53,72,73],[56,24,74],[75,76,9],[57],[77,25],[],[],[26,50,79],[53,80,81],[56,27,82],[83],[57],[86,85,84],[28,88,87],[90,29,9],[61],[],[89],[],[],[92,50,30],[53,94,93],[31,56,95],[96],[57],[99,97,98],[32,87,100],[101,33,9],[61],[89],[],[103,50,34],[53,104,105],[56,35,106],[107],[57],[110,109,108],[111,36,87],[112,37,9],[61],[89],[],[50,114,38],[53,115,116],[39,56,117],[118],[57],[121,120,119],[122,87,40],[123,9,41],[61],[89],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type int ","Simple Name hashCode ","Block Stmt ","Variable Declaration Expr ","Name Expr result ","Name Expr result ","Name Expr excludeFieldsWithoutExposeAnnotation ","Simple Name result ","Name Expr result ","Name Expr result ","Name Expr disableHtmlEscaping ","Name Expr result ","Name Expr result ","Name Expr dateFormat ","Name Expr result ","Name Expr result ","Name Expr fieldNamingStrategy ","Name Expr fieldNamingStrategy ","Name Expr result ","Name Expr result ","Name Expr version ","Name Expr version ","Name Expr result ","Name Expr result ","Name Expr serializationExclusionStrategies ","Name Expr serializationExclusionStrategies ","Name Expr result ","Name Expr result ","Name Expr deserializationExclusionStrategies ","Name Expr deserializationExclusionStrategies ","Name Expr result ","Variable Declarator int result = ","Primitive Type int ","Method Call Expr ","Super Expr ","Simple Name hashCode ","SuperExpr","Assign Expr ASSIGN ","ASSIGN","Binary Expr PLUS ","Binary Expr MULTIPLY ","PLUS","Enclosed Expr ","Integer Literal Expr Note Zero  ","MULTIPLY","IntegerLiteralExpr","Conditional Expr excludeFieldsWithoutExposeAnnotation ? 1 : 0 ","Integer Literal Expr Note Zero  ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Conditional Expr disableHtmlEscaping ? 1 : 0 ","Integer Literal Expr Note Zero  ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Method Call Expr ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name hashCode ","Simple Name get ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Conditional Expr fieldNamingStrategy != null ? fieldNamingStrategy.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Simple Name hashCode ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Conditional Expr version != null ? version.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Conditional Expr serializationExclusionStrategies != null ? serializationExclusionStrategies.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Conditional Expr deserializationExclusionStrategies != null ? deserializationExclusionStrategies.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","ReturnStmt"]}
{"Version":"test","MethodName":"Builder_copy","callMethodNameReferTo":{},"num":69,"succs":[[17,1],[42,2],[46,3],[4,49],[52,5],[6,55],[7,58],[8,63],[33,9,68],[13,14,12,10,11],[],[],[13,15,16],[],[8,4,6,7,2,5,1,3,0],[],[],[34],[20,19],[],[],[22,18],[],[24,21],[],[23,26],[],[28,25],[],[30,27],[],[32,29],[],[31],[35,20,36],[20],[37,38],[],[40,9,39],[41],[],[],[43,44,19],[45,18],[],[],[22,44,47],[21,48],[],[24,44,50],[23,51],[],[44,53,26],[25,54],[],[56,28,44],[27,57],[],[60,59,44],[61,29],[30,62],[],[],[65,44,64],[66,31],[32,67],[],[],[]],"nodeAttribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Builder ","Simple Name copy ","Block Stmt ","Class Or Interface Type Config ","Simple Name Builder ","Variable Declaration Expr ","Name Expr copied ","Name Expr excludeFieldsWithoutExposeAnnotation ","Simple Name copied ","Name Expr copied ","Name Expr disableHtmlEscaping ","Name Expr copied ","Name Expr dateFormat ","Name Expr copied ","Name Expr fieldNamingStrategy ","Name Expr copied ","Name Expr version ","Name Expr copied ","Name Expr serializationExclusionStrategies ","Name Expr copied ","Name Expr deserializationExclusionStrategies ","Name Expr copied ","Variable Declarator Builder copied = ","Class Or Interface Type Builder ","Cast Expr ","Class Or Interface Type Builder ","Method Call Expr ","Super Expr ","Simple Name copy ","SuperExpr","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name excludeFieldsWithoutExposeAnnotation ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name disableHtmlEscaping ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name dateFormat ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name fieldNamingStrategy ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name version ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr HashSet<ExclusionStrategy> Optional.empty Optional.empty ","Simple Name serializationExclusionStrategies ","Class Or Interface Type HashSet ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr HashSet<ExclusionStrategy> Optional.empty Optional.empty ","Simple Name deserializationExclusionStrategies ","Class Or Interface Type HashSet ","ReturnStmt"]}
{"Version":"test","MethodName":"Builder_toString","callMethodNameReferTo":{},"num":47,"succs":[[1,4,3,2,5],[],[],[4],[],[6],[0,7,8],[],[10,11,9],[10,12,13],[],[46],[14,10,15],[],[10,17,16],[45],[10,18,19],[],[10,20,21],[45],[10,23,22],[],[10,25,24],[45],[27,10,26],[],[10,28,29],[45],[10,30,31],[],[10,33,32],[45],[34,10,35],[],[10,37,36],[45],[10,38,39],[],[10,40,41],[45],[42,0,43],[45],[44],[],[],[],[]],"nodeAttribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Return Stmt ","ReturnStmt","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Char Literal Expr '}' ","Binary Expr PLUS ","Name Expr deserializationExclusionStrategies ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr serializationExclusionStrategies ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr version ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr fieldNamingStrategy ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr dateFormat ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr disableHtmlEscaping ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Name Expr excludeFieldsWithoutExposeAnnotation ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","String Literal Expr Not Empty  ","Super Expr ","Simple Name toString ","SuperExpr","StringLiteralExpr","'}'"]}
{"Version":"test","MethodName":"GsonCompatibilityMode_createOmitValue","callMethodNameReferTo":{},"num":39,"succs":[[1,19],[21,2,6,14,20],[23,3],[4,30],[5,31,6,25],[7,33,6,32],[7,35,32],[12,9,10,13,8,11],[],[],[11],[],[18,15],[0,6],[15],[],[1,14,15],[16,15],[],[2,3],[22],[],[],[26],[16],[24],[28,27,24],[24],[16,29],[],[5],[],[],[34],[],[7,36,17,37],[38],[],[]],"nodeAttribute":["If Stmt ","Instance Of Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PROTECTED","Class Or Interface Type OmitValue ","Simple Name createOmitValue ","Parameter valueType ","Block Stmt ","Name Expr valueType ","Simple Name valueType ","Name Expr valueType ","Name Expr valueType ","Class Or Interface Type Type ","Block Stmt ","InstanceOfExpr","Class Or Interface Type Class ","Class","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Block Stmt ","Simple Name isPrimitive ","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Super Expr ","Simple Name createOmitValue ","SuperExpr"]}
{"Version":"test","MethodName":"GsonCompatibilityMode_createEncoder","callMethodNameReferTo":{},"num":445,"succs":[[1,29,3],[30,2,23,3,31],[13,34,33,11],[4,70],[5,71,12,31,25],[6,73],[82,9,7],[83,84,9,8],[86,11],[10],[88,11],[13,89,33,12],[13,431,33],[18,16,17,19,20,15,14],[],[],[17],[],[27,22],[24,28],[12,0],[22],[],[24],[],[1,24,23],[24,25],[],[],[2],[32],[],[],[],[35],[],[41,43,45,39,40,38,37,42,15],[],[39],[],[47,50],[49,51],[44],[],[],[52,53],[47],[],[49],[],[],[],[54],[66],[57],[56],[],[58,59,56],[56],[60,61],[63,62],[],[65,64],[],[],[437,436,435,438],[68,67,48],[],[69,55,46],[],[6,5,11],[72],[],[76,80],[76,75],[],[81],[74,76,79,78],[],[77],[],[76],[8],[65,85],[],[],[74,87,75],[],[87,77,78],[90],[],[95,94,96,98,93,92,42,97,15],[],[94],[],[100,111],[112,102],[],[115,116,114,117,113],[100],[],[102],[],[109,102,101],[103,102,101],[102,101],[102,101],[102,101],[102,101],[108,105,106,107,102,104],[109,102],[],[],[118],[128],[132],[139,141,140,142],[428],[124],[99],[123,119],[120,119],[121,119],[122,121,119],[126,125,119],[119],[127,99],[],[130,101,129],[],[131],[],[135],[135,137,134],[241,231,176,162,201,221],[138],[133],[135,133,136],[135],[150],[155,143,154],[145,157],[160,158,159],[149,144],[],[143,144],[145,144],[144,146],[147,144],[148,144,146],[151,152,144],[144],[153],[],[],[156,120],[],[],[161],[195],[202,201,203],[191],[121,146],[162],[163,165,162,201],[164,162,201],[163,162,201],[162,201,166,221],[231,162,201,167,221],[168,241,231,162,201,221],[241,169,231,162,201,221],[168,241,231,162,201,221],[241,171,231,162,201,221],[241,172,231,279,162,201,221],[241,231,279,173,162,201,221],[174,241,231,279,162,201,221],[241,175,231,162,201,221],[241,123,231,149,162,201,134,221],[241,177,231,201,221],[178,241,177,231,201,221],[241,177,179,231,345,201,221],[182,241,184,185,177,231,183,201,221],[339,340],[],[180,241,177,231,201,221],[],[241,181,231,201,221],[241,181,186,231,201,221],[187,241,181,231,201,221],[241,188,181,231,201,221],[189,241,181,164,231,170,167,201,166,221],[192,193,162],[162],[194,121,146],[],[197],[197,79,164],[200,199],[196],[210,198,196],[197],[163,154,204],[206,207],[223,222,221],[205],[],[208],[211,210,212],[87,209,196],[79,164],[198,213,31],[215],[218],[214],[],[216],[103,165,217],[],[219],[220,104,199],[],[224,166,31],[226],[233,231,232],[225],[],[227],[228,105,229],[],[230],[],[234,31,167],[236],[240],[235],[],[237],[106,239,238],[],[230],[242,241,243],[168,244,154],[245],[276,277,269,274,272,267,275,270,273,278,271,268],[205],[246],[107,247,248,249],[],[251,250],[260,259],[],[252],[253,255,254],[205],[],[256],[258,169,257],[],[205],[],[261],[262,263,254],[205],[264],[266,265,170],[],[205],[280,279],[320,319],[326],[328,327],[334],[335],[338],[343],[346,345],[368],[381,382],[388],[283,282,281],[288,287],[171,154,284],[],[286,172,285],[],[],[],[289],[318],[108,292,290,293,291],[],[294,295],[302,301],[312,311],[],[296],[298,254,297],[205],[299],[300,173,257],[205],[],[303],[304,254,305],[205],[306],[265,307,308],[309],[205],[174,310,257],[205],[],[313],[314,254,315],[205],[316],[317,175,265],[205],[],[321,176,285],[322],[],[323],[324,325],[],[230],[133,87,134],[147,329,330],[332],[],[122,331],[],[333],[],[148,157],[177,87,336],[123,337,149],[],[341],[136],[339],[339,136,342],[339],[344,87,137],[153],[348,282,347],[351],[178,349,154],[179,350,285],[],[],[352],[354,353],[],[356,357,355],[356,359,358],[],[230],[356,361,360],[180,367,366],[356,362,363],[230],[230],[364,365,340],[],[],[],[],[369,181,87],[356,370,371],[356,372,373],[380],[205],[374],[375,377,376],[378],[],[205],[182,379,183],[],[379,185,184],[186,383,285],[384],[205],[385],[386,387],[],[230],[393,392,109,389,390,391],[],[394,395],[401,402],[411,412],[421,422],[],[396],[397,398,254],[205],[399],[187,400,257],[205],[],[403],[405,404,254],[205],[406],[408,265,407],[409],[205],[188,410,257],[205],[],[413],[414,254,415],[205],[416],[417,265,418],[419],[205],[189,420,257],[205],[],[423],[424,254,425],[205],[426],[190,427,265],[205],[429,430,110],[],[131],[13,21,26,432,433],[434],[],[],[],[437],[],[439],[65,440,33],[442,441],[],[65,444,443],[434],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Encoder ","Simple Name createEncoder ","Parameter cacheKey ","Parameter type ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr type ","Simple Name type ","Name Expr type ","Name Expr type ","Class Or Interface Type String ","Class Or Interface Type Type ","Block Stmt ","Class Expr Date.class ","EQUALS","Class Or Interface Type Date ","ReturnStmt","Object Creation Expr Encoder Optional.empty Optional.empty ","Class Or Interface Type Encoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Void Type ","Simple Name encode ","Parameter obj ","Parameter stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr stream ","Simple Name stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Name Expr dateFormat ","Simple Name dateFormat ","Variable Declarator DateFormat dateFormat = ","Class Or Interface Type DateFormat ","Method Call Expr ","Field Access Expr ","Simple Name get ","Method Call Expr ","Simple Name dateFormat ","Simple Name builder ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Method Call Expr ","Simple Name format ","Block Stmt ","Class Expr String.class ","Class Or Interface Type String ","Variable Declaration Expr [FINAL] ","Name Expr replacements ","Name Expr REPLACEMENT_CHARS ","Simple Name replacements ","Name Expr replacements ","Name Expr HTML_SAFE_REPLACEMENT_CHARS ","Name Expr replacements ","FINAL","Array Type 1 ","Block Stmt ","Method Call Expr ","Simple Name disableHtmlEscaping ","Simple Name builder ","Assign Expr ASSIGN ","ASSIGN","Assign Expr ASSIGN ","Object Creation Expr Encoder Optional.empty Optional.empty ","Class Or Interface Type Encoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Void Type ","Simple Name encode ","Parameter obj ","Parameter stream ","Class Or Interface Type IOException ","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Expression Stmt ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Variable Declarator String value = ","Class Or Interface Type String ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Simple Name write ","Char Literal Expr '\"' ","'\"'","Variable Declaration Expr ","Name Expr _surrogate ","Name Expr c ","Simple Name _surrogate ","Name Expr _surrogate ","Name Expr _surrogate ","Primitive Type int ","Variable Declaration Expr ","Binary Expr LESS ","Unary Expr ++ ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Method Call Expr ","Simple Name length ","POSTFIX_INCREMENT","Expression Stmt ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr firstPart ","Name Expr SURR1_FIRST ","Name Expr c ","Name Expr SURR2_FIRST ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Variable Declarator int c = ","Primitive Type int ","Method Call Expr ","Simple Name charAt ","Variable Declaration Expr ","Name Expr replacement ","Simple Name replacement ","Name Expr replacement ","Name Expr replacement ","Class Or Interface Type String ","Binary Expr LESS ","Block Stmt ","If Stmt ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Expression Stmt ","If Stmt ","Assign Expr ASSIGN ","Array Access Expr c ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","Null Literal Expr ","NullLiteralExpr","Expression Stmt ","Method Call Expr ","Simple Name write ","Expression Stmt ","Method Call Expr ","Simple Name writeRaw ","Binary Expr EQUALS ","Block Stmt ","If Stmt ","Char Literal Expr '\\u2028' ","'\\u2028'","Expression Stmt ","Method Call Expr ","Simple Name writeRaw ","String Literal Expr Not Empty  ","StringLiteralExpr","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","Char Literal Expr '\\u2029' ","'\\u2029'","Expression Stmt ","Method Call Expr ","Simple Name writeRaw ","String Literal Expr Not Empty  ","If Stmt ","Binary Expr LESS ","Block Stmt ","Block Stmt ","Integer Literal Expr Note Zero  ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","BINARY_OR","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","SIGNED_RIGHT_SHIFT","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","BINARY_AND","Integer Literal Expr Note Zero  ","If Stmt ","If Stmt ","Expression Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Expression Stmt ","If Stmt ","Expression Stmt ","Binary Expr OR ","Block Stmt ","Binary Expr LESS ","OR","Binary Expr GREATER ","Name Expr SURR1_FIRST ","GREATER","Name Expr SURR2_LAST ","Expression Stmt ","Continue Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","continue;","Binary Expr GREATER ","Block Stmt ","Name Expr SURR1_LAST ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Binary Expr GREATER_EQUALS ","Block Stmt ","GREATER_EQUALS","Method Call Expr ","Simple Name length ","Break Stmt ","break;","Unary Expr ++ ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name charAt ","Variable Declaration Expr ","Simple Name firstPart ","Name Expr firstPart ","Variable Declarator int firstPart = ","Primitive Type int ","Assign Expr ASSIGN ","Integer Literal Expr Zero  ","Binary Expr OR ","Block Stmt ","Binary Expr LESS ","Binary Expr GREATER ","Name Expr SURR2_FIRST ","Name Expr SURR2_LAST ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr Integer ","Simple Name toHexString ","Name Expr Integer ","Simple Name toHexString ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr LEFT_SHIFT ","Enclosed Expr ","LEFT_SHIFT","Integer Literal Expr Note Zero  ","Binary Expr MINUS ","MINUS","Binary Expr MINUS ","Binary Expr GREATER ","Block Stmt ","Integer Literal Expr Note Zero  ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr SIGNED_RIGHT_SHIFT ","Integer Literal Expr Note Zero  ","Primitive Type byte ","Enclosed Expr ","Binary Expr BINARY_OR ","Integer Literal Expr Note Zero  ","Enclosed Expr ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name write ","Char Literal Expr '\"' ","Method Call Expr ","Super Expr ","Simple Name createEncoder ","SuperExpr","PROTECTED","Simple Name getType ","Simple Name builder ","Block Stmt ","Return Stmt ","Cast Expr ","Class Or Interface Type Builder ","Method Call Expr ","Super Expr ","Simple Name builder "]}
{"Version":"test","MethodName":"GsonCompatibilityMode_createDecoder","callMethodNameReferTo":{},"num":459,"succs":[[58,1,3],[59,47,3,60,2],[63,22,62,21],[111,4,6],[5,112,6,49,60],[114,22,62,21],[9,188,7],[9,50,8,189,60],[191,22,62,21],[12,240,10],[11,12,51,60,241],[243,22,62,21],[292,13,15],[293,14,52,15,60],[22,295,62,21],[16,343,18],[17,60,53,18,344],[346,22,62,21],[19,394],[395,54,20,21,60],[22,397,62,21],[22,445,62],[28,26,25,29,27,23,24],[],[],[26],[],[56,46],[57,48],[0,21],[101,65,22,62],[149,22,116,62],[157,22,116,62],[22,116,165,62],[22,116,62,180],[193,222,22,62],[193,22,233,62],[245,22,274,62],[245,22,285,62],[22,62,297,326],[22,337,62,297],[22,377,348,62],[22,348,62,388],[399,22,428,62],[399,22,439,62],[46],[],[48],[],[47,48,1],[4,48,49,1],[4,50,7,48,1],[4,7,48,51,1,10],[4,7,13,48,52,1,10],[4,47,13,48,52,49,1,10,16,50,7,51,53],[48,54],[],[],[2],[61],[],[],[],[64],[],[68,67,73,70,69,71,66,24],[],[68],[],[76,75],[72],[],[],[78,77],[75],[],[],[79],[92,91],[82],[81],[],[84,81,83],[81],[86,85],[87,88],[],[90,89],[],[],[451,450,449,452],[30,93],[104,103],[94],[97],[74],[95],[95,98,99],[95],[100,74],[],[102,96,80],[],[106,105],[107],[],[],[108],[109,110],[],[],[5],[113],[],[115],[],[119,120,121,118,70,117,122,24],[],[119],[],[129,124],[],[131,130],[128,124,127,126,125],[],[124,123],[124,123],[124,123],[124,123],[],[132],[145,143,144],[139],[123],[133],[133,143,134],[133,143,135,151],[133,136,143,159,151],[171,133,136,143,135,137,134,159,151],[140,133,141],[133],[123,142],[],[146,134,60],[31],[152,153,151],[147,148],[],[],[150,125],[],[154,135,60],[32],[159,160,161],[156,155],[],[],[126,158],[],[136,162,60],[33],[171,172,173],[164,163],[],[],[167,168,166],[127,169],[170],[170],[],[],[174,137,60],[34,177],[182],[175,176],[],[],[178],[128,179],[],[181],[],[183],[184,185],[],[187,138,186],[170],[],[8],[190],[],[192],[],[194,197,199,196,198,195,70,24],[],[196],[],[204,201],[],[206,205],[203,201,202],[],[200,201],[200,201],[],[207],[218,217,216],[212],[200],[208],[216,209,208],[210,216,224,208,209],[214,213,208],[208],[200,215],[],[219,209,60],[35],[224,226,225],[221,220],[],[],[223,202],[],[210,227,60],[230,36],[235],[229,228],[],[],[231],[203,232],[],[234],[],[236],[238,237],[],[211,187,239],[170],[11],[242],[],[244],[],[251,249,247,246,70,250,248,24],[],[248],[],[256,253],[],[257,258],[254,253,255],[],[252,253],[252,253],[],[259],[269,268,270],[264],[252],[260],[261,260,268],[260,261,262,268,276],[266,265,260],[260],[252,267],[],[271,261,60],[37],[277,276,278],[273,272],[],[],[254,275],[],[262,279,60],[38,282],[287],[280,281],[],[],[283],[284,255],[],[286],[],[288],[289,290],[],[187,291,263],[170],[14],[294],[],[296],[],[298,300,303,299,70,301,302,24],[],[300],[],[305,308],[],[309,310],[306,307,305],[],[305,304],[305,304],[],[311],[320,322,321],[316],[304],[312],[312,320,313],[312,320,314,313,328],[312,318,317],[312],[319,304],[],[313,323,60],[39],[330,329,328],[324,325],[],[],[306,327],[],[314,331,60],[40,334],[338],[332,333],[],[],[335],[336,307],[],[286],[339],[340,341],[],[187,315,342],[170],[17],[345],[],[347],[],[350,354,351,70,352,24,349,353],[],[351],[],[356,359],[],[361,360],[356,357,358],[],[356,355],[356,355],[],[362],[373,371,372],[367],[355],[363],[371,363,364],[365,371,363,364,379],[368,369,363],[363],[370,355],[],[374,364,60],[41],[381,380,379],[376,375],[],[],[357,378],[],[365,382,60],[385,42],[389],[383,384],[],[],[386],[387,358],[],[],[390],[392,391],[],[187,393,366],[170],[20],[396],[],[398],[],[405,400,402,401,70,24,403,404],[],[402],[],[407,410],[],[411,412],[409,408,407],[],[406,407],[406,407],[],[413],[424,423,422],[418],[406],[414],[415,422,414],[415,416,422,430,414],[419,420,414],[414],[406,421],[],[415,425,60],[43],[431,432,430],[427,426],[],[],[408,429],[],[416,433,60],[44,436],[440],[435,434],[],[],[437],[409,438],[],[],[441],[443,442],[],[187,444,417],[170],[45,446,22,447,55],[448],[],[],[],[451],[],[453],[90,454,62],[456,455],[],[90,458,457],[448],[]],"nodeAttribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Decoder ","Simple Name createDecoder ","Parameter cacheKey ","Parameter type ","Block Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr type ","Simple Name type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Class Or Interface Type String ","Class Or Interface Type Type ","Block Stmt ","Class Expr Date.class ","EQUALS","Class Or Interface Type Date ","ReturnStmt","Object Creation Expr Decoder Optional.empty Optional.empty ","Class Or Interface Type Decoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name decode ","Parameter iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","Try Stmt ","Variable Declaration Expr ","Name Expr dateFormat ","Simple Name dateFormat ","Variable Declarator DateFormat dateFormat = ","Class Or Interface Type DateFormat ","Method Call Expr ","Field Access Expr ","Simple Name get ","Method Call Expr ","Simple Name dateFormat ","Simple Name builder ","Method Declaration ","Block Stmt ","Catch Clause ","Expression Stmt ","Variable Declaration Expr ","Simple Name input ","Name Expr input ","Variable Declarator String input = ","Class Or Interface Type String ","Method Call Expr ","Simple Name readString ","Method Call Expr ","Simple Name parse ","Parameter e ","Block Stmt ","Class Or Interface Type ParseException ","Simple Name e ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Block Stmt ","Class Expr String.class ","Class Or Interface Type String ","Object Creation Expr Decoder Optional.empty Optional.empty ","Class Or Interface Type Decoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name decode ","Parameter iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Variable Declarator ValueType valueType = ","Class Or Interface Type ValueType ","Method Call Expr ","Simple Name whatIsNext ","Binary Expr EQUALS ","Block Stmt ","If Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name STRING ","Method Call Expr ","Simple Name readString ","Binary Expr EQUALS ","Block Stmt ","If Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NUMBER ","Method Call Expr ","Simple Name readNumberAsString ","Binary Expr EQUALS ","Block Stmt ","If Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name BOOLEAN ","Conditional Expr iter.readBoolean() ? \"true\" : \"false\" ","Method Call Expr ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Simple Name readBoolean ","StringLiteralExpr","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NULL ","Expression Stmt ","Method Call Expr ","Simple Name skip ","Null Literal Expr ","NullLiteralExpr","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Block Stmt ","Class Expr boolean.class ","Primitive Type boolean ","Object Creation Expr Decoder.BooleanDecoder Optional.empty Optional.empty ","Class Or Interface Type BooleanDecoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name decodeBoolean ","Parameter iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Variable Declarator ValueType valueType = ","Class Or Interface Type ValueType ","Method Call Expr ","Simple Name whatIsNext ","Binary Expr EQUALS ","Block Stmt ","If Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name BOOLEAN ","Method Call Expr ","Simple Name readBoolean ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NULL ","Expression Stmt ","Method Call Expr ","Simple Name skip ","Boolean Literal Expr false ","false","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr long.class ","Primitive Type long ","Object Creation Expr Decoder.LongDecoder Optional.empty Optional.empty ","Class Or Interface Type LongDecoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Primitive Type long ","Simple Name decodeLong ","Parameter iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Variable Declarator ValueType valueType = ","Class Or Interface Type ValueType ","Method Call Expr ","Simple Name whatIsNext ","Binary Expr EQUALS ","Block Stmt ","If Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NUMBER ","Method Call Expr ","Simple Name readLong ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NULL ","Expression Stmt ","Method Call Expr ","Simple Name skip ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr int.class ","Primitive Type int ","Object Creation Expr Decoder.IntDecoder Optional.empty Optional.empty ","Class Or Interface Type IntDecoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Primitive Type int ","Simple Name decodeInt ","Parameter iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Variable Declarator ValueType valueType = ","Class Or Interface Type ValueType ","Method Call Expr ","Simple Name whatIsNext ","Binary Expr EQUALS ","Block Stmt ","If Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NUMBER ","Method Call Expr ","Simple Name readInt ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NULL ","Expression Stmt ","Method Call Expr ","Simple Name skip ","Integer Literal Expr Zero  ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr float.class ","Primitive Type float ","Object Creation Expr Decoder.FloatDecoder Optional.empty Optional.empty ","Class Or Interface Type FloatDecoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Primitive Type float ","Simple Name decodeFloat ","Parameter iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Variable Declarator ValueType valueType = ","Class Or Interface Type ValueType ","Method Call Expr ","Simple Name whatIsNext ","Binary Expr EQUALS ","Block Stmt ","If Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NUMBER ","Method Call Expr ","Simple Name readFloat ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NULL ","Expression Stmt ","Method Call Expr ","Simple Name skip ","Double Literal Expr Zero  ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr double.class ","Primitive Type double ","Object Creation Expr Decoder.DoubleDecoder Optional.empty Optional.empty ","Class Or Interface Type DoubleDecoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Primitive Type double ","Simple Name decodeDouble ","Parameter iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name valueType ","Name Expr valueType ","Name Expr valueType ","Name Expr valueType ","Variable Declarator ValueType valueType = ","Class Or Interface Type ValueType ","Method Call Expr ","Simple Name whatIsNext ","Binary Expr EQUALS ","Block Stmt ","If Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NUMBER ","Method Call Expr ","Simple Name readDouble ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name NULL ","Expression Stmt ","Method Call Expr ","Simple Name skip ","Double Literal Expr Zero  ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Super Expr ","Simple Name createDecoder ","SuperExpr","PROTECTED","Simple Name getType ","Simple Name builder ","Block Stmt ","Return Stmt ","Cast Expr ","Class Or Interface Type Builder ","Method Call Expr ","Super Expr ","Simple Name builder "]}
{"Version":"test","MethodName":"GsonCompatibilityMode_updateClassDescriptor","callMethodNameReferTo":{},"num":311,"succs":[[1,57],[68,3,2],[3,53,94,45],[4,70],[5,95],[96,6,8,97,98],[7,101],[110,8],[9,117],[10,120,119,13,118],[11,125],[12,133],[13,140],[14,147],[149,15,148,97,25],[16,153],[163,17],[165,119,164,18,20],[175,19],[182,20],[21,189],[22,199],[23,119,201,25,200],[210,24],[217,25],[26,224,27],[229,35,230,27],[28,226],[29,232],[233,234,32,30,225],[236,31],[243],[33,244],[246,26,227,34,245],[250,26],[257,36,37],[262,263,2,37],[259,38],[265,39],[42,266,267,40,258],[269,41],[243],[43,276],[278,260,277,36,44],[282,36],[289],[50,47,51,52,48,49],[],[],[50],[],[56,54],[1,45,0],[54],[],[53,54],[],[61],[59],[],[58,59,9],[62,63,59],[59],[65,64],[67,66],[],[],[295,294,293,296],[4,35,13,8,25],[70],[93],[5,70,69],[5,71],[72],[73,72,9],[76,74,72,9],[126],[78,9,75],[76,126],[77],[79,77],[80],[81],[81,82],[83],[84],[85,29,84],[86],[87,86,33],[88],[39,88,89],[90],[43,90,91],[70],[],[7,6],[99,69],[],[100],[],[],[103,102,104],[105,71],[],[107,106],[],[],[],[109],[],[111,103,112],[72,113],[114,115],[],[],[],[109],[10,12,11],[58,121,97],[],[123,97,122],[100],[73,124],[100],[],[127],[60,74],[128,129,126],[126],[131,60,130],[],[132,74],[],[134,135,103],[136,75],[137,139,138],[],[],[],[76],[142,141,103],[143,77],[146,145,144],[],[],[],[78],[21,15,16,20],[151,150],[100],[67,152],[],[],[157],[79],[154],[154,155],[154,159,158],[154],[160,79,161],[],[162],[],[18,19],[166,155,97],[167,169,168],[100],[170,171],[],[174,173,156],[67,172],[],[],[],[307,304,306,305,48],[103,176,177],[80,178],[180,179],[],[],[],[109],[184,183,103],[81,185],[187,186],[],[],[],[109],[193],[82],[190],[191,190],[190,194,195],[190],[196,82,197],[],[198],[],[23,24],[191,202,97],[203,204,205],[100],[207,206],[],[174,209,192],[67,208],[],[],[],[103,211,212],[213,83],[214,215],[],[],[],[109],[218,103,219],[220,84],[221,222],[],[],[],[109],[28,32],[226],[228],[226,225],[226],[67,231],[],[],[30,31],[],[85,235],[],[238,103,237],[86,239],[241,240],[],[],[],[109],[],[34],[],[247,248],[],[87,249],[],[252,251,103],[253,88],[254,255],[],[],[],[109],[42,38],[259],[261],[259,258],[259],[67,264],[],[],[40,41],[],[89,268],[],[271,103,270],[90,272],[274,273],[],[],[],[109],[44],[],[280,279],[],[281,91],[],[103,283,284],[92,285],[287,286],[],[],[],[109],[290,46,291,55],[292],[],[],[],[295],[],[297],[67,299,298],[],[301,300],[],[67,303,302],[292],[],[],[306],[],[308],[174,309,298],[310],[]],"nodeAttribute":["Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Expression Stmt ","Continue Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Expression Stmt ","Continue Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Void Type ","Simple Name updateClassDescriptor ","Parameter desc ","Block Stmt ","Name Expr desc ","Simple Name desc ","Name Expr desc ","Class Or Interface Type ClassDescriptor ","Variable Declaration Expr ","Name Expr fieldNamingStrategy ","Simple Name fieldNamingStrategy ","Name Expr fieldNamingStrategy ","Variable Declarator FieldNamingStrategy fieldNamingStrategy = ","Class Or Interface Type FieldNamingStrategy ","Field Access Expr ","Method Call Expr ","Simple Name fieldNamingStrategy ","Simple Name builder ","Method Declaration ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr translated ","Name Expr binding ","Name Expr translated ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Simple Name allBindings ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Null Literal Expr ","Simple Name method ","NullLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Binary Expr NOT_EQUALS ","AND","Binary Expr NOT_EQUALS ","Null Literal Expr ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Variable Declaration Expr ","Simple Name translated ","Variable Declarator String translated = ","Class Or Interface Type String ","Method Call Expr ","Simple Name translateName ","Field Access Expr ","Simple Name field ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Method Call Expr ","Simple Name version ","Simple Name builder ","Variable Declaration Expr ","Simple Name since ","Name Expr since ","Name Expr since ","Variable Declarator Since since = ","Class Or Interface Type Since ","Method Call Expr ","Simple Name getAnnotation ","Class Expr Since.class ","Class Or Interface Type Since ","Block Stmt ","Binary Expr NOT_EQUALS ","Binary Expr LESS ","Null Literal Expr ","Field Access Expr ","LESS","Method Call Expr ","Method Call Expr ","Simple Name version ","Simple Name builder ","Simple Name value ","Method Declaration ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Simple Name until ","Name Expr until ","Name Expr until ","Variable Declarator Until until = ","Class Or Interface Type Until ","Method Call Expr ","Simple Name getAnnotation ","Class Expr Until.class ","Class Or Interface Type Until ","Block Stmt ","Binary Expr NOT_EQUALS ","Binary Expr GREATER_EQUALS ","Null Literal Expr ","Field Access Expr ","GREATER_EQUALS","Method Call Expr ","Method Call Expr ","Simple Name version ","Simple Name builder ","Simple Name value ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Name Expr strategy ","Simple Name strategy ","Name Expr strategy ","Class Or Interface Type ExclusionStrategy ","Method Call Expr ","Simple Name serializationExclusionStrategies ","Simple Name builder ","Block Stmt ","Simple Name shouldSkipClass ","Field Access Expr ","Simple Name clazz ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","continue;","Block Stmt ","Simple Name shouldSkipField ","Object Creation Expr FieldAttributes Optional.empty Optional.empty ","Class Or Interface Type FieldAttributes ","Field Access Expr ","Simple Name field ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name toNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Name Expr strategy ","Simple Name strategy ","Name Expr strategy ","Class Or Interface Type ExclusionStrategy ","Method Call Expr ","Simple Name deserializationExclusionStrategies ","Simple Name builder ","Block Stmt ","Simple Name shouldSkipClass ","Field Access Expr ","Simple Name clazz ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Block Stmt ","Simple Name shouldSkipField ","Object Creation Expr FieldAttributes Optional.empty Optional.empty ","Class Or Interface Type FieldAttributes ","Field Access Expr ","Simple Name field ","Assign Expr ASSIGN ","Field Access Expr ","Array Creation Expr String Array Creation Level Not Empty ","Simple Name fromNames ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Method Call Expr ","Super Expr ","Simple Name updateClassDescriptor ","SuperExpr","PROTECTED","Simple Name getType ","Simple Name builder ","Block Stmt ","Return Stmt ","ReturnStmt","Cast Expr ","Class Or Interface Type Builder ","Method Call Expr ","Super Expr ","Simple Name builder ","Marker Annotation Expr @Override ","Class Or Interface Type String ","Simple Name value ","Block Stmt ","Return Stmt ","String Literal Expr Empty  ","Empty StringLiteralExpr"]}
{"Version":"test","MethodName":"GsonCompatibilityMode_getJsonProperty","callMethodNameReferTo":{},"num":167,"succs":[[32,1],[42,2],[34,44,3,4,43],[35,9,4,46],[47,5],[59,6],[8,49,61,7,60],[62,8,9,46],[63,9,46],[10,13,12,15,11,14],[],[],[13],[],[28,30],[8,5,1,0,4],[65,71,9,46],[9,79,46,73],[85,91,9,46],[102,9,97,46],[104,9,115,46],[124,9,117,46],[9,126,135,46],[142,9,137,46],[9,144,149,46],[155,9,150,46],[165,9,156,46],[28],[],[28,27],[31],[],[36],[27],[33],[34,33,2],[37,38,33],[33],[27,9,39,40],[41],[],[],[3],[],[45],[],[],[52,53],[29],[48],[48,49],[48,50],[],[55,48,54],[48],[56,29,57],[],[58],[],[7],[],[45],[45],[64],[],[70,66,69,67,68],[],[],[69],[],[16],[72],[],[76,74,75,67,77],[],[76,78],[],[17],[],[82,80,81],[],[],[83],[65,84,50],[],[89,88,86,67,87],[],[90,88],[],[18],[],[94,92,93],[],[],[95],[65,96,51],[],[98,100,101,99,67],[],[100],[],[19],[103],[],[108,107,105,106,67],[],[109,107,110],[],[20],[],[],[112],[163,113,133],[],[],[116],[],[120,121,118,119,67],[],[120,122,123],[],[21],[],[],[125],[],[128,129,127,130,67],[],[129,132,131],[],[22],[],[],[],[],[136],[],[141,140,139,67,138],[],[140],[],[23],[143],[],[146,148,147,67,145],[],[147],[],[24],[143],[151,154,153,152,67],[],[153],[],[25],[72],[160,159,158,157,67],[],[159,162,161],[],[26],[],[],[],[],[166],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PROTECTED","Class Or Interface Type JsonProperty ","Simple Name getJsonProperty ","Parameter annotations ","Block Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Name Expr annotations ","Simple Name annotations ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Variable Declaration Expr ","Simple Name jsoniterObj ","Name Expr jsoniterObj ","Name Expr jsoniterObj ","Variable Declarator JsonProperty jsoniterObj = ","Class Or Interface Type JsonProperty ","Method Call Expr ","Super Expr ","Simple Name getJsonProperty ","SuperExpr","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Variable Declaration Expr [FINAL] ","Simple Name gsonObj ","Name Expr gsonObj ","Name Expr gsonObj ","Name Expr gsonObj ","FINAL","Variable Declarator SerializedName gsonObj = ","Class Or Interface Type SerializedName ","Method Call Expr ","Simple Name getAnnotation ","Class Expr SerializedName.class ","Class Or Interface Type SerializedName ","Block Stmt ","EQUALS","Null Literal Expr ","Null Literal Expr ","Object Creation Expr JsonProperty Optional.empty Optional.empty ","Class Or Interface Type JsonProperty ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name value ","Block Stmt ","String Literal Expr Empty  ","Empty StringLiteralExpr","Method Declaration ","Marker Annotation Expr @Override ","Array Type 1 ","Simple Name from ","Block Stmt ","Class Or Interface Type String ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Simple Name value ","Method Declaration ","Marker Annotation Expr @Override ","Array Type 1 ","Simple Name to ","Block Stmt ","Class Or Interface Type String ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Class Or Interface Type String ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Method Call Expr ","Simple Name value ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name required ","Block Stmt ","Boolean Literal Expr false ","false","Method Declaration ","Marker Annotation Expr @Override ","Class Or Interface Type Class ","Simple Name decoder ","Block Stmt ","Simple Name Class ","Wildcard Type ExtendedType ","WildcardType","ExtendedType","Decoder","Class Or Interface Type Decoder ","Class Expr Decoder.class ","Class Or Interface Type Decoder ","Method Declaration ","Marker Annotation Expr @Override ","Class Or Interface Type Class ","Simple Name implementation ","Block Stmt ","Simple Name Class ","Wildcard Type ","Class Expr Object.class ","Class Or Interface Type Object ","Method Declaration ","Marker Annotation Expr @Override ","Class Or Interface Type Class ","Simple Name encoder ","Block Stmt ","Simple Name Class ","Wildcard Type ExtendedType ","Encoder","Class Or Interface Type Encoder ","Class Expr Encoder.class ","Class Or Interface Type Encoder ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name nullable ","Block Stmt ","Boolean Literal Expr true ","true","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name collectionValueNullable ","Block Stmt ","Boolean Literal Expr true ","Method Declaration ","Marker Annotation Expr @Override ","Class Or Interface Type String ","Simple Name defaultValueToOmit ","Block Stmt ","String Literal Expr Empty  ","Method Declaration ","Marker Annotation Expr @Override ","Class Or Interface Type Class ","Simple Name annotationType ","Block Stmt ","Simple Name Class ","Wildcard Type ExtendedType ","Annotation","Class Or Interface Type Annotation ","Class Expr JsonProperty.class ","Class Or Interface Type JsonProperty "]}
{"Version":"test","MethodName":"GsonCompatibilityMode_getJsonIgnore","callMethodNameReferTo":{},"num":132,"succs":[[30,1],[40,2],[42,4,32,3,41],[4,33,12,44],[45,5],[11,47,46,6],[50,7],[8,62],[52,9,63,10,41],[64,12,10,44],[11,12,44,97],[122,12,44],[16,13,14,18,15,17],[],[],[16],[],[28,26],[4,11,0,1],[66,12,44,72],[76,81,12,44],[95,12,84,44],[12,104,99,44],[12,106,44,111],[112,120,12,44],[26],[],[26,25],[29],[],[34],[25],[31],[31,32,2],[31,36,35],[31],[38,37,12,25],[39],[],[],[3],[],[43],[],[],[10,7,6],[49,48],[],[],[124,123,14,125],[55,56],[27],[51],[51,52,8],[51,8,53],[],[57,51,58],[51],[60,27,59],[],[61],[],[9],[43],[65],[],[70,71,69,67,68],[],[],[70],[],[19],[73,74],[75,53],[],[],[80,78,79,77,68],[],[79],[],[20],[74,82],[54,83],[],[87,86,68,88,85],[],[90,87,89],[],[21],[],[],[92],[93],[],[],[96],[],[98],[],[102,101,103,68,100],[],[102],[],[22],[105],[],[109,107,68,110,108],[],[109],[],[23],[105],[115,114,68,113,116],[],[117,118,115],[],[24],[],[],[],[121],[],[43],[124],[],[126],[49,127,44],[129,128],[],[49,131,130],[39],[]],"nodeAttribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PROTECTED","Class Or Interface Type JsonIgnore ","Simple Name getJsonIgnore ","Parameter annotations ","Block Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Name Expr annotations ","Simple Name annotations ","Name Expr annotations ","Array Type 1 ","Class Or Interface Type Annotation ","Variable Declaration Expr ","Simple Name jsoniterObj ","Name Expr jsoniterObj ","Name Expr jsoniterObj ","Variable Declarator JsonIgnore jsoniterObj = ","Class Or Interface Type JsonIgnore ","Method Call Expr ","Super Expr ","Simple Name getJsonIgnore ","SuperExpr","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Block Stmt ","Method Call Expr ","Simple Name excludeFieldsWithoutExposeAnnotation ","Simple Name builder ","Method Declaration ","Variable Declaration Expr [FINAL] ","Simple Name gsonObj ","Name Expr gsonObj ","Name Expr gsonObj ","Name Expr gsonObj ","FINAL","Variable Declarator Expose gsonObj = ","Class Or Interface Type Expose ","Method Call Expr ","Simple Name getAnnotation ","Class Expr Expose.class ","Class Or Interface Type Expose ","Block Stmt ","Null Literal Expr ","Object Creation Expr JsonIgnore Optional.empty Optional.empty ","Class Or Interface Type JsonIgnore ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name ignoreDecoding ","Block Stmt ","Unary Expr ! ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name deserialize ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name ignoreEncoding ","Block Stmt ","Unary Expr ! ","Method Call Expr ","Simple Name serialize ","Method Declaration ","Marker Annotation Expr @Override ","Class Or Interface Type Class ","Simple Name annotationType ","Block Stmt ","Simple Name Class ","Wildcard Type ExtendedType ","WildcardType","ExtendedType","Annotation","Class Or Interface Type Annotation ","Class Expr JsonIgnore.class ","Class Or Interface Type JsonIgnore ","Object Creation Expr JsonIgnore Optional.empty Optional.empty ","Class Or Interface Type JsonIgnore ","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name ignoreDecoding ","Block Stmt ","Boolean Literal Expr true ","true","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name ignoreEncoding ","Block Stmt ","Boolean Literal Expr true ","Method Declaration ","Marker Annotation Expr @Override ","Class Or Interface Type Class ","Simple Name annotationType ","Block Stmt ","Simple Name Class ","Wildcard Type ExtendedType ","Class Or Interface Type Annotation ","Class Expr JsonIgnore.class ","Class Or Interface Type JsonIgnore ","Null Literal Expr ","Simple Name getType ","Simple Name builder ","Block Stmt ","Return Stmt ","Cast Expr ","Class Or Interface Type Builder ","Method Call Expr ","Super Expr ","Simple Name builder "]}
