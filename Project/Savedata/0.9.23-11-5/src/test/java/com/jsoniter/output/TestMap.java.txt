{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","hasMethodName":["setUp-TestMap-","test-TestMap-","test_empty-TestMap-","test_null-TestMap-","test_value_is_null-TestMap-","test_integer_key-TestMap-","test_enum_key-TestMap-","test_MapKeyCodec-TestMap-","skip_indention-TestMap-","test_indention_with_empty_map-TestMap-","test_int_as_map_key-TestMap-","test_object_key-TestMap-","test_multiple_keys-TestMap-"]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"setUp-TestMap-","callMethodNameReferTo":{},"num":19,"succs":[[1,7],[12],[5,6,4,3],[],[5],[],[1,0],[9,10,8],[],[],[11],[],[9,13,14],[],[17,15,16],[],[],[18],[]],"attribute":["Expression Stmt ","Method Call Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name setUp ","Block Stmt ","Expression Stmt ","Name Expr iter ","ASSIGN","Object Creation Expr ByteArrayOutputStream Optional.empty Optional.empty ","Class Or Interface Type ByteArrayOutputStream ","Assign Expr ASSIGN ","Simple Name append ","Object Creation Expr JsonStream Optional.empty Optional.empty ","Class Or Interface Type JsonStream ","Name Expr baos ","Name Expr iter ","IntegerLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test-TestMap-","callMethodNameReferTo":{"26":"src/main/java/com/jsoniter/output/JsonStream.java-writeVal-JsonStream-String"},"num":44,"succs":[[1,13],[21,2],[26,3],[29,4],[32],[12,10,8,9,6,7],[],[8],[],[11],[],[],[0,3,2,1,4],[17],[15],[],[15,14],[18,15,19],[15],[20],[],[24,23,22,14],[],[25],[25],[],[16,28,27],[],[],[31,30],[],[],[35,33,34],[],[36,38,39,37],[43,42],[25],[],[40],[41],[],[],[],[]],"attribute":["Expression Stmt ","Assign Expr ASSIGN ","Expression Stmt ","Class Or Interface Type List ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Name Expr iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Class Or Interface Type Any ","Simple Name map ","Name Expr buf ","Variable Declarator HashMap<String, Object> map = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Expression Stmt ","Name Expr stream ","Name Expr lines ","Expression Stmt ","Field Access Expr ","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","'''","'''","Name Expr baos ","Simple Name iterator "]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test_empty-TestMap-","callMethodNameReferTo":{"19":"src/main/java/com/jsoniter/output/JsonStream.java-writeVal-JsonStream-String"},"num":38,"succs":[[12,1],[19,2],[3,22],[25],[6,11,7,9,8,5],[],[7],[],[10],[],[],[0,1,2,3],[15],[14],[],[17,16,14],[14],[18],[],[21,20,13],[],[],[24,23],[],[],[26,27,28],[],[32,29,30,31],[37,36],[33],[],[34],[35],[],[],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Field Access Expr ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_empty ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Name Expr map ","Simple Name map ","Variable Declarator HashMap<String, Object> map = ","Variable Declaration Expr ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name append ","Name Expr trieTree ","Return Stmt ","Simple Name append ","Simple Name toInt ","Variable Declaration Expr ","Simple Name assertEquals ","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Field Access Expr ","Char Literal Expr ''' ","Char Literal Expr ''' ","StringLiteralExpr","'''","'''","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test_null-TestMap-","callMethodNameReferTo":{},"num":34,"succs":[[1,11],[2,18],[21],[10,6,5,8,7,4],[],[6],[],[9],[],[],[0,2,1],[13,12,14,15],[],[],[16],[17],[],[],[20,19],[],[],[23,24,22],[],[28,25,26,27],[32,33],[29],[],[30],[31],[],[],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Primitive Type long ","Switch Entry Stmt ","Throws","Class Expr int[].class ","IOException","Block Stmt ","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Object Creation Expr TypeLiteral<HashMap> Optional.empty Optional.empty ","Void Type ","Class Or Interface Type TypeLiteral ","NullLiteralExpr","Expression Stmt ","Simple Name append ","Name Expr cache ","Method Call Expr ","Return Stmt ","Method Call Expr ","Method Call Expr ","Simple Name length ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","StringLiteralExpr","'''","'''","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test_value_is_null-TestMap-","callMethodNameReferTo":{},"num":41,"succs":[[1,13],[2,21],[27,3],[32,4],[35],[7,12,8,10,9,6],[],[8],[],[11],[],[],[0,3,4,2,1],[17],[15],[],[15,14],[19,15,18],[15],[20],[],[24,14,23,22],[],[25],[26],[],[],[29,30,28,16],[],[],[31],[],[34,33],[],[],[38,37,36],[],[25],[39,40],[],[]],"attribute":["Expression Stmt ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_value_is_null ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr buf ","Simple Name obj ","Name Expr obj ","Variable Declarator HashMap<String, int[]> obj = ","Expression Stmt ","Object Creation Expr HashMap<String, int[]> Optional.empty Optional.empty ","Method Call Expr ","Expression Stmt ","Name Expr ctx ","Simple Name encoder ","Simple Name mode ","StringLiteralExpr","NullLiteralExpr","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Object Creation Expr TypeLiteral<Map<String, int[]>> Optional.empty Optional.empty ","Class Or Interface Type TypeLiteral ","Return Stmt ","Simple Name append ","Name Expr lines ","Method Call Expr ","Expression Stmt ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test_integer_key-TestMap-","callMethodNameReferTo":{"32":"src/main/java/com/jsoniter/output/JsonStream.java-close-JsonStream-"},"num":42,"succs":[[13,1],[21,2],[3,27],[4,32],[35],[10,12,7,8,9,6],[],[8],[],[11],[],[],[4,3,0,1,2],[17],[15],[],[15,14],[19,15,18],[15],[20],[],[23,24,22,14],[],[25],[26],[],[],[29,16,28,30],[],[],[31],[],[33,34],[],[],[36,37,38],[],[39],[41,40],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_integer_key ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Primitive Type int ","Name Expr arr ","Name Expr obj ","Variable Declarator HashMap<Integer, Object> obj = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<Integer, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Name Expr buf ","Name Expr arr ","Name Expr iter ","IntegerLiteralExpr","NullLiteralExpr","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Object Creation Expr TypeLiteral<Map<Integer, Object>> Optional.empty Optional.empty ","Class Or Interface Type TypeLiteral ","Method Call Expr ","Simple Name append ","Name Expr lines ","Method Call Expr ","Array Access Expr count++ ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test_enum_key-TestMap-","callMethodNameReferTo":{"33":"src/main/java/com/jsoniter/output/JsonStream.java-close-JsonStream-"},"num":43,"succs":[[1,13],[2,21],[3,28],[4,33],[36],[12,10,7,9,8,6],[],[8],[],[11],[],[],[4,3,1,2,0],[17],[15],[],[14,15],[19,15,18],[15],[20],[],[14,23,22,24],[],[25,26],[27],[],[],[],[31,16,30,29],[],[],[32],[],[34,35],[],[],[39,38,37],[],[40],[42,41],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_enum_key ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr ctx ","Simple Name obj ","Name Expr obj ","Variable Declarator HashMap<EnumKey, Object> obj = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<EnumKey, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Primitive Type int ","Name Expr JsonIterator ","Null Literal Expr ","Simple Name writeTo ","Simple Name KeyA ","NullLiteralExpr","Method Call Expr ","Name Expr stream ","Simple Name writeVal ","Object Creation Expr TypeLiteral<Map<EnumKey, Object>> Optional.empty Optional.empty ","Class Or Interface Type TypeLiteral ","Method Call Expr ","Simple Name append ","Name Expr lines ","Method Call Expr ","Array Access Expr count++ ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test_MapKeyCodec-TestMap-","callMethodNameReferTo":{"42":"src/main/java/com/jsoniter/output/JsonStream.java-writeVal-JsonStream-String"},"num":77,"succs":[[10,1],[49,2],[3,57],[63,4],[73],[9,8,7,6],[],[8],[],[0,2,3,4,1],[13,14,11,12],[],[],[15],[16],[],[],[18,20,24,21,22,23,26,19,6],[],[20],[],[28,31],[32,30],[25],[],[],[33,34],[28],[],[30],[],[],[],[35],[42],[38],[27],[36],[36,39,40],[36],[41,27],[],[44,29,43],[],[46,47,45],[],[],[37,48],[],[53],[51],[],[51,50],[55,54,51],[51],[56],[],[59,58,50,60],[],[61],[62],[],[],[66],[52],[64],[64,67,68],[64],[52,70,71,69],[],[],[72],[],[74,65,75],[],[76],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_MapKeyCodec ","Block Stmt ","Method Call Expr ","Class Or Interface Type TestObject6 ","Simple Name registerMapKeyEncoder ","Class Expr TestObject1.class ","Object Creation Expr Encoder Optional.empty Optional.empty ","Simple Name deserialize ","Class Or Interface Type Encoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Void Type ","Simple Name encode ","Parameter Object obj ","Parameter JsonStream stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr obj ","Name Expr pos ","Name Expr stream ","Simple Name stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Simple Name mapKey ","Name Expr mapKey ","Variable Declarator TestObject1 mapKey = ","Class Or Interface Type TestObject1 ","Cast Expr ","Class Or Interface Type TestObject1 ","Method Call Expr ","Simple Name writeVal ","Method Call Expr ","Name Expr String ","Simple Name valueOf ","Field Access Expr ","Simple Name Field ","Variable Declaration Expr ","Class Or Interface Type Any ","Primitive Type int ","Class Or Interface Type Any ","Variable Declarator HashMap<TestObject1, Object> obj = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<TestObject1, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Name Expr ctx ","Simple Name test_list_of_null ","Null Literal Expr ","Class Or Interface Type TestObject1 ","NullLiteralExpr","Variable Declaration Expr ","Simple Name output ","Name Expr output ","Variable Declarator String output = ","Simple Name append ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TypeLiteral<Map<TestObject1, Object>> Optional.empty Optional.empty ","Class Or Interface Type TypeLiteral ","Method Call Expr ","Class Or Interface Type JsonIterator ","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"skip_indention-TestMap-","callMethodNameReferTo":{"90":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object-OutputStream","59":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object-OutputStream"},"num":102,"succs":[[14,1],[24,2],[3,29],[33,4],[5,51],[6,62],[7,72],[88,8],[93],[13,12,11,10],[],[12],[],[1,7,6,3,5,4,0,2,8],[20],[16],[],[15,16],[16,17],[16,18],[21,22,16],[16],[23],[],[15,27,25,26],[],[28],[28],[],[30,31,17,32],[],[28],[28],[37],[35],[],[34],[34,38,39],[34],[40,41],[44,42,43],[],[47,45,46],[],[35,50],[48],[],[49],[],[],[],[57],[36,18],[52],[19,53,52,55],[73],[54],[58,59,52],[52],[36,60,61,18],[],[],[53,63,64],[],[65,67,66],[69,68,66],[],[28],[70,66,71],[28],[28],[28],[75],[74],[],[77,76,73],[73],[78,79],[80,81,82],[],[85,84,83],[],[87,74],[86],[],[49],[],[],[89,90,54],[],[92,19,55,91],[],[],[94,56,95],[],[96,97,66],[98,99,66],[28],[100,66,101],[28],[28],[28]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Name Expr IterImplNumber ","Block Stmt ","Variable Declaration Expr ","Primitive Type int ","Simple Name map ","Name Expr map ","Primitive Type int ","Name Expr map ","Method Call Expr ","Expression Stmt ","Object Creation Expr HashMap<String, String> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Primitive Type int ","Name Expr rendered ","Name Expr idx ","StringLiteralExpr","Variable Declaration Expr ","Name Expr ctx ","String Literal Expr Not Empty  ","Name Expr idx ","Variable Declaration Expr ","Simple Name dynamicCfg ","Name Expr EncodingMode ","Name Expr dynamicCfg ","Variable Declarator Config dynamicCfg = ","Simple Name append ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Class Or Interface Type Builder ","IntegerLiteralExpr","Simple Name DYNAMIC_MODE ","Method Call Expr ","Simple Name output ","Name Expr output ","Simple Name append ","Name Expr reflectionCfg ","Name Expr output ","Variable Declarator String output = ","Class Or Interface Type Object ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Method Call Expr ","Simple Name assertEquals ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Class Or Interface Type Any ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Variable Declarator int i = ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name reflectionCfg ","Name Expr EncodingMode ","Variable Declarator Config reflectionCfg = ","Simple Name append ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name indentionStep ","Name Expr c ","Class Or Interface Type Builder ","Simple Name REFLECTION_MODE ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Method Call Expr ","Class Or Interface Type JsonIterator ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Simple Name field ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test_indention_with_empty_map-TestMap-","callMethodNameReferTo":{"54":"src/main/java/com/jsoniter/spi/JsoniterSpi.java-getCurrentConfig-JsoniterSpi-","29":"src/main/java/com/jsoniter/spi/JsoniterSpi.java-getCurrentConfig-JsoniterSpi-"},"num":66,"succs":[[1,9],[2,34],[43,3],[58],[8,6,7,5],[],[7],[],[3,2,0,1],[18],[11,12],[],[],[10],[15,16,10,13],[],[],[14],[10,19,20],[10],[21,22],[23,25,24],[],[28,27,26],[],[33,12],[30,29],[],[32],[11,31],[],[],[],[],[37,36,35],[],[38],[41,39,40,13],[],[],[],[42],[],[44,14,45],[],[46,47],[50,49,48],[],[52,51,53],[],[16,57],[54,55],[],[32],[56,15],[],[],[],[59,61,60],[],[38],[17,63,64,62],[],[],[65],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_indention_with_empty_map ","Block Stmt ","Variable Declaration Expr ","Simple Name config ","Name Expr JsoniterSpi ","Name Expr EncodingMode ","Simple Name asList ","Name Expr stream ","Name Expr JsoniterSpi ","Name Expr EncodingMode ","Name Expr config ","Variable Declarator Config config = ","Simple Name append ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Method Call Expr ","Class Or Interface Type JsonException ","Simple Name e ","Method Call Expr ","Simple Name copyBuilder ","Simple Name getCurrentConfig ","IntegerLiteralExpr","Simple Name REFLECTION_MODE ","Method Call Expr ","Simple Name assertEquals ","Null Literal Expr ","Method Call Expr ","StringLiteralExpr","Parameter Object obj ","Simple Name serialize ","Object Creation Expr HashMap<String, String> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Field Access Expr ","Method Call Expr ","Class Or Interface Type JsonException ","Simple Name e ","Method Call Expr ","Simple Name copyBuilder ","Simple Name getCurrentConfig ","Simple Name DYNAMIC_MODE ","Method Call Expr ","Simple Name assertEquals ","Null Literal Expr ","Method Call Expr ","Name Expr JsonStream ","Name Expr peekStart ","Object Creation Expr HashMap<String, String> Optional.empty Optional.empty ","Class Or Interface Type HashMap "]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test_int_as_map_key-TestMap-","callMethodNameReferTo":{},"num":30,"succs":[[8,1],[16,2],[22],[6,7,5,4],[],[6],[],[0,2,1],[12],[10],[],[10,9],[13,10,14],[10],[15],[],[9,17,18,19],[],[20],[21],[],[],[25,24,23],[],[21],[26,28,11,27],[],[],[29],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_int_as_map_key ","Block Stmt ","Variable Declaration Expr ","Name Expr m ","Simple Name m ","Name Expr m ","Variable Declarator HashMap<Integer, String> m = ","Expression Stmt ","Object Creation Expr HashMap<Integer, String> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Integer Literal Expr Note Zero  ","String Literal Expr Not Empty  ","IntegerLiteralExpr","StringLiteralExpr","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Object Creation Expr TypeLiteral<Map<Integer, String>> Optional.empty Optional.empty ","Class Or Interface Type TypeLiteral "]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test_object_key-TestMap-","callMethodNameReferTo":{"24":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":28,"succs":[[8,1],[16,2],[21],[6,7,5,4],[],[6],[],[2,1,0],[12],[10],[],[9,10],[14,13,10],[10],[15],[],[17,18,9,19],[],[20],[20],[],[22,24,23],[],[25],[11,26,27],[],[],[]],"attribute":["Expression Stmt ","Simple Name assertEquals ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_object_key ","Block Stmt ","Variable Declaration Expr ","Name Expr m ","Simple Name m ","Name Expr m ","Variable Declarator HashMap<Integer, Integer> m = ","Simple Name copyGlobalPropertyDecoder ","Object Creation Expr HashMap<Integer, Integer> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Name Expr JsoniterSpi ","Simple Name put ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize "]}
{"fileName":"src/test/java/com/jsoniter/output/TestMap.java","version":"0.9.23","methodName":"test_multiple_keys-TestMap-","callMethodNameReferTo":{"42":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":54,"succs":[[11,1],[2,21],[3,26],[32,4],[5,36],[45],[8,9,10,7],[],[9],[],[1,2,0,5,3,4],[17],[13],[],[12,13],[13,14],[13,15],[13,18,19],[13],[20],[],[12,23,24,22],[],[25],[25],[],[27,29,28,14],[],[25],[30,31],[],[25],[15,35,33,34],[],[25],[25],[39,40],[16],[37],[],[42,41,37],[37],[16,43,44],[],[],[48,46,47],[],[50,49],[52,53,38],[51],[],[],[],[25]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_multiple_keys ","Block Stmt ","Variable Declaration Expr ","Name Expr map ","Simple Name map ","Name Expr any ","Name Expr val ","Name Expr map ","Variable Declarator HashMap<String, Object> map = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Name Expr ctx ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name put ","String Literal Expr Not Empty  ","Object Creation Expr BigDecimal Optional.empty Optional.empty ","Class Or Interface Type BigDecimal ","String Literal Expr Not Empty  ","Expression Stmt ","Name Expr val ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Variable Declaration Expr [FINAL] ","Simple Name serialized ","Name Expr serialized ","FINAL","Variable Declarator String serialized = ","Class Or Interface Type String ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","Method Call Expr ","Simple Name assertEquals ","Unary Expr - ","Method Call Expr ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Simple Name indexOf ","String Literal Expr Not Empty  "]}
