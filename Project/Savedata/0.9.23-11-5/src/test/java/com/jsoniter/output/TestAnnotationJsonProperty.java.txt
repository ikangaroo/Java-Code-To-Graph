{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonProperty.java","version":"0.9.23","hasMethodName":["test_property-TestAnnotationJsonProperty-","test_encoder-TestAnnotationJsonProperty-","getField1-TestAnnotationJsonProperty.TestObject3-","test_getter-TestAnnotationJsonProperty-","getField1-TestAnnotationJsonProperty.TestObject4-","setField1-TestAnnotationJsonProperty.TestObject4-String","test_getter_and_setter-TestAnnotationJsonProperty-"]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonProperty.java","version":"0.9.23","methodName":"test_property-TestAnnotationJsonProperty-","callMethodNameReferTo":{"32":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":37,"succs":[[1,12],[20,2],[3,26],[34],[9,7,6,11,8,5],[],[7],[],[10],[],[],[1,2,3,0],[16],[14],[],[13],[14,17,18],[14],[19],[],[23,22,21],[24,13],[],[25],[],[],[30],[28,15],[],[27],[27,31,32],[27],[33,28,15],[],[36,29,35],[],[25]],"attribute":["Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name useAppContext ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Name Expr obj ","Simple Name Map ","Simple Name registerPropertyDecoder ","Class Or Interface Type TestObject1 ","Simple Name ReflectionEncoder ","Class Or Interface Type TestObject1 ","Assign Expr ASSIGN ","Simple Name assertTrue ","ASSIGN","Simple Name setMode ","Class Or Interface Type String ","StringLiteralExpr","Expression Stmt ","Simple Name output ","Name Expr JsonStream ","Name Expr output ","Variable Declarator String output = ","Simple Name append ","Method Call Expr ","Simple Name serialize ","Expression Stmt ","Simple Name assertEquals ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonProperty.java","version":"0.9.23","methodName":"test_encoder-TestAnnotationJsonProperty-","callMethodNameReferTo":{"32":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":38,"succs":[[12,1],[20,2],[26,3],[34],[9,11,7,8,5,6],[],[7],[],[10],[],[],[3,0,2,1],[16],[14],[],[13],[18,14,17],[14],[19],[],[23,22,21],[24,13],[],[25],[],[],[30],[28,15],[],[27],[27,31,32],[27],[33,28,15],[],[36,35,29],[],[37],[]],"attribute":["Expression Stmt ","Return Stmt ","Method Call Expr ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_encoder ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr com ","Name Expr ctx ","Char Literal Expr ',' ","Variable Declarator TestObject1 obj = ","Method Call Expr ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Class Or Interface Type TestObject1 ","Assign Expr ASSIGN ","Name Expr JsonStream ","ASSIGN","Name Expr val ","Name Expr stream ","IntegerLiteralExpr","Variable Declaration Expr ","Method Call Expr ","Name Expr JsonStream ","Name Expr output ","Variable Declarator String output = ","Name Expr stream ","Method Call Expr ","Simple Name serialize ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonProperty.java","version":"0.9.23","methodName":"getField1-TestAnnotationJsonProperty.TestObject3-","callMethodNameReferTo":{},"num":11,"succs":[[4,3,1,5,2],[],[],[4],[],[6],[0,10,9],[8],[],[],[]],"attribute":["While Stmt ","Assign Expr ASSIGN ","PUBLIC","Class Or Interface Type String ","Simple Name getField1 ","Block Stmt ","Return Stmt ","Simple Name readSlice ","StringLiteralExpr","ReturnStmt","Class Or Interface Type Object "]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonProperty.java","version":"0.9.23","methodName":"test_getter-TestAnnotationJsonProperty-","callMethodNameReferTo":{},"num":24,"succs":[[1,10],[20],[5,7,9,4,6,3],[],[5],[],[8],[],[],[1,0],[14],[12],[],[11],[15,16,11],[11],[12,18,17],[],[19],[],[13,22,21],[],[23],[]],"attribute":["Expression Stmt ","Variable Declaration Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_getter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Method Call Expr ","Name Expr JsonStream ","Name Expr output ","Variable Declarator String output = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name serialize ","Object Creation Expr TestObject3 Optional.empty Optional.empty ","Class Or Interface Type TestObject3 ","Expression Stmt ","Simple Name assertEquals ","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonProperty.java","version":"0.9.23","methodName":"getField1-TestAnnotationJsonProperty.TestObject4-","callMethodNameReferTo":{},"num":11,"succs":[[3,5,4,1,2],[],[],[4],[],[6],[0,10,9],[8],[],[],[]],"attribute":["Method Declaration ","Single Member Annotation Expr @JsonProperty('field-1') ","PUBLIC","Class Or Interface Type String ","Simple Name getField1 ","Block Stmt ","Return Stmt ","String Literal Expr Not Empty  ","StringLiteralExpr","ReturnStmt","Name Expr field1 "]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonProperty.java","version":"0.9.23","methodName":"setField1-TestAnnotationJsonProperty.TestObject4-String","callMethodNameReferTo":{},"num":16,"succs":[[3,4,2,5,1],[],[3],[],[7,8],[9],[7],[],[],[10],[12,6,11],[13,14],[],[15],[],[]],"attribute":["If Stmt ","PUBLIC","Simple Name size ","Simple Name setField1 ","Parameter String field1 ","Block Stmt ","Name Expr field1 ","Simple Name field1 ","Class Or Interface Type String ","Expression Stmt ","Expression Stmt ","Field Access Expr ","ASSIGN","Name Expr type ","Simple Name field1 ","ThisExpr"]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonProperty.java","version":"0.9.23","methodName":"test_getter_and_setter-TestAnnotationJsonProperty-","callMethodNameReferTo":{},"num":24,"succs":[[10,1],[20],[5,9,6,7,4,3],[],[5],[],[8],[],[],[0,1],[14],[12],[],[11],[16,11,15],[11],[18,12,17],[],[19],[],[21,13,22],[],[23],[]],"attribute":["Expression Stmt ","Variable Declaration Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_getter_and_setter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name output ","Simple Name skipString ","Name Expr output ","Variable Declarator String output = ","Simple Name append ","Method Call Expr ","Simple Name serialize ","Object Creation Expr TestObject4 Optional.empty Optional.empty ","Class Or Interface Type TestObject4 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","StringLiteralExpr"]}
