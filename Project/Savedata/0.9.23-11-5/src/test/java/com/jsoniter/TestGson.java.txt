{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","hasMethodName":["test_SerializedName-TestGson-","test_Expose-TestGson-","test_setDateFormat_format-TestGson-","test_setFieldNamingStrategy-TestGson-","test_setFieldNamingPolicy-TestGson-","test_setVersion-TestGson-","test_addDeserializationExclusionStrategy-TestGson-","test_int_as_string-TestGson-","test_bool_as_string-TestGson-","test_null_as_boolean-TestGson-","test_null_as_long-TestGson-","test_null_as_int-TestGson-","test_null_as_float-TestGson-","test_null_as_double-TestGson-"]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_SerializedName-TestGson-","callMethodNameReferTo":{},"num":52,"succs":[[10,1],[17,2],[31,3],[36,4],[47],[7,9,8,6],[],[8],[],[0,4,1,3,2],[13],[12],[],[15,12,14],[12],[16],[],[23],[11],[18],[19,18,21],[],[20],[24,25,18],[18],[11,27,28,26],[],[29],[30],[],[],[33,34,32],[],[29],[35,19],[],[20,37,38],[],[41,40,21,39,42],[],[43,44],[29],[46],[45],[],[],[],[49,48,50],[],[29],[22,51],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_SerializedName ","Block Stmt ","Method Call Expr ","Name Expr iter ","Simple Name hash ","Variable Declarator long hash = ","Primitive Type long ","Integer Literal Expr Note Zero  ","Name Expr iter ","Variable Declaration Expr ","Simple Name obj ","Simple Name obj ","Primitive Type int ","Name Expr JsonIterator ","Simple Name obj ","Variable Declarator TestObject1 obj = ","Name Expr existingObj ","Method Call Expr ","Class Or Interface Type TestObj1 ","String Literal Expr Not Empty  ","Class Expr TestObject1.class ","StringLiteralExpr","Class Or Interface Type TestObject1 ","Assign Expr ASSIGN ","Simple Name assertEquals ","Variable Declarator Object val = ","Field Access Expr ","Simple Name field1 ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name reportError ","Method Call Expr ","String Literal Expr Not Empty  ","Class Expr TestObject1.class ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Class Or Interface Type Builder ","Class Or Interface Type TestObject1 ","Expression Stmt ","Expression Stmt ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name field1 "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_Expose-TestGson-","callMethodNameReferTo":{"64":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>","12":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":73,"succs":[[1,12],[23,2],[34,3],[48,4],[52,5],[62,6],[69],[11,9,10,8],[],[10],[],[3,0,2,1,5,6,4],[15,13,14,17,16],[],[],[18,19],[21],[22],[20],[],[],[],[],[26],[25],[],[28,27,25],[25],[29,30],[31,32],[],[33],[],[],[41],[24],[35],[35,38,39,36],[],[53],[37],[35,43,42],[35],[44,45,46,24],[],[21],[47],[],[50,49],[],[36,51],[],[54],[],[56,53,55],[53],[57,58],[59,60],[],[61],[],[],[63,64,37],[],[66,65,38,67,39],[],[21],[68],[],[71,70],[],[72,40],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_Expose ","Block Stmt ","Method Call Expr ","Class Or Interface Type JsonIterator ","Simple Name deserialize ","Method Call Expr ","String Literal Expr Not Empty  ","Class Expr TestObject2.class ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Class Or Interface Type Builder ","StringLiteralExpr","Class Or Interface Type TestObject2 ","Variable Declaration Expr ","Name Expr gson ","Simple Name gson ","Variable Declarator Gson gson = ","Name Expr desc ","Method Call Expr ","Method Call Expr ","Simple Name field1 ","Object Creation Expr GsonBuilder Optional.empty Optional.empty ","Simple Name excludeFieldsWithoutExposeAnnotation ","Class Or Interface Type GsonBuilder ","Variable Declaration Expr ","Simple Name obj ","Simple Name arr ","Name Expr buf ","Name Expr JsonIterator ","Name Expr newBuf ","Simple Name out ","Variable Declarator TestObject2 obj = ","Name Expr JsoniterSpi ","Method Call Expr ","Simple Name toDouble ","String Literal Expr Not Empty  ","Class Expr TestObject2.class ","Class Or Interface Type TestObject2 ","Method Call Expr ","Name Expr JsonStream ","Field Access Expr ","Simple Name field1 ","Variable Declaration Expr ","Simple Name equals ","Variable Declarator GsonCompatibilityMode config = ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name build ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name excludeFieldsWithoutExposeAnnotation ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject2.class ","Class Or Interface Type TestObject2 ","Method Call Expr ","Name Expr JsonStream ","Field Access Expr ","Simple Name field1 "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_setDateFormat_format-TestGson-","callMethodNameReferTo":{"78":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":91,"succs":[[1,15],[2,23,24],[25,3],[33,4],[45,5],[59,6],[7,65],[8,76],[9,83],[88],[13,14,12,11],[],[13],[],[1,0],[18],[17],[],[17,19,20],[17],[21,22],[],[],[2,8,7,6,5,4,3],[9],[27,26,28],[],[],[31,29,30],[],[],[32],[],[36],[35],[],[38,37,35],[35],[39,40],[43,42,41],[],[44],[],[32],[],[52],[34],[46],[49,50,46,47],[],[66],[48],[53,54,46],[46],[56,34,57,55],[],[32],[58],[],[62,60,61],[],[63],[64,47],[],[],[67],[],[69,68,66],[66],[71,70],[73,74,72],[],[75],[],[32],[],[78,77,48],[],[79,80,49,50,81],[],[32],[82],[],[86,85,84],[],[63],[87,51],[],[90,16,89],[],[]],"attribute":["Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_setDateFormat_format ","Block Stmt ","Variable Declaration Expr ","Name Expr orig ","Simple Name orig ","Variable Declarator TimeZone orig = ","Field Access Expr ","Method Call Expr ","Name Expr TimeZone ","Simple Name getDefault ","Block Stmt ","Block Stmt ","Method Call Expr ","Name Expr TimeZone ","Simple Name setDefault ","Method Call Expr ","Name Expr TimeZone ","Simple Name getTimeZone ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Name Expr gson ","Simple Name gson ","Variable Declarator Gson gson = ","This Expr ","Method Call Expr ","Method Call Expr ","Simple Name create ","Object Creation Expr GsonBuilder Optional.empty Optional.empty ","Simple Name setDateFormat ","String Literal Expr Not Empty  ","Class Or Interface Type TestObject2 ","Variable Declaration Expr ","Class Or Interface Type Any ","Name Expr obj ","Name Expr ctx ","Name Expr JsonIterator ","Name Expr config ","Name Expr val ","Variable Declarator Date obj = ","Class Or Interface Type Date ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Class Expr Date.class ","Class Or Interface Type Date ","Method Call Expr ","Simple Name assertEquals ","Name Expr i ","Binary Expr LESS ","Zero IntegerLiteralExpr","Simple Name getTime ","Variable Declaration Expr ","Simple Name config ","Variable Declarator GsonCompatibilityMode config = ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Method Call Expr ","Simple Name build ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Parameter IOException e ","String Literal Expr Not Empty  ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr Date.class ","Class Or Interface Type Date ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name getTime ","Name Expr isCollectionValueNullable ","Name Expr isCached ","Simple Name setDefault "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_setFieldNamingStrategy-TestGson-","callMethodNameReferTo":{"79":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":89,"succs":[[1,13],[2,37],[3,48],[62,4],[5,67],[6,77],[84],[11,10,9,8],[],[10],[],[2,5,0,3,1,6,4],[22,7,30,31],[18],[15],[28],[14],[16,14],[20,14,19],[14],[21],[],[24,25,27,26,23,8],[],[25],[],[29,28],[12],[],[],[],[34,32,33],[35],[],[36,15],[],[],[40],[16],[38],[42,41,38],[38],[44,43],[16,45,46],[],[47],[],[],[55],[39],[49],[49,50,53,52],[],[68],[51],[49,56,57],[49],[59,58,39,60],[],[35],[61],[],[64,63,65],[],[35],[50,66],[],[69],[17],[71,68,70],[68],[73,72],[17,74,75],[],[76],[],[],[78,51,79],[],[81,82,53,52,80],[],[35],[83],[],[87,85,86],[],[35],[54,88],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_setFieldNamingStrategy ","Block Stmt ","Return Stmt ","Variable Declaration Expr ","Simple Name fieldNamingStrategy ","Integer Literal Expr Note Zero  ","Name Expr fieldNamingStrategy ","Name Expr fieldNamingStrategy ","Variable Declarator FieldNamingStrategy fieldNamingStrategy = ","Class Or Interface Type FieldNamingStrategy ","Object Creation Expr FieldNamingStrategy Optional.empty Optional.empty ","Class Or Interface Type FieldNamingStrategy ","Method Declaration ","Variable Declarator int level = ","Class Or Interface Type String ","Simple Name renderTriTree ","Parameter Field f ","Block Stmt ","Simple Name f ","Class Or Interface Type Field ","ReturnStmt","Binary Expr PLUS ","Name Expr pos ","PLUS","Method Call Expr ","StringLiteralExpr","Simple Name getName ","Variable Declaration Expr ","Simple Name tail ","Primitive Type byte ","Variable Declarator Gson gson = ","This Expr ","Method Call Expr ","Method Call Expr ","Simple Name create ","Object Creation Expr GsonBuilder Optional.empty Optional.empty ","Simple Name setFieldNamingStrategy ","Class Or Interface Type GsonBuilder ","Variable Declaration Expr ","Simple Name obj ","Primitive Type int ","Name Expr buf ","Name Expr JsonIterator ","Name Expr config ","Name Expr obj ","Variable Declarator TestObject3 obj = ","Class Or Interface Type TestObject3 ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Class Expr TestObject3.class ","Class Or Interface Type TestObject3 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name field1 ","Variable Declaration Expr ","Simple Name config ","Variable Declarator GsonCompatibilityMode config = ","Expression Stmt ","Method Call Expr ","Method Call Expr ","Simple Name build ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name setFieldNamingStrategy ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject3.class ","Class Or Interface Type TestObject3 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name field1 "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_setFieldNamingPolicy-TestGson-","callMethodNameReferTo":{"60":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":70,"succs":[[1,11],[2,25],[40,3],[4,45],[5,58],[65],[10,9,7,8],[],[9],[],[1,0,2,5,3,4],[15],[13],[],[12],[16,12,17],[12],[18,19],[22,20,21],[],[23],[],[24,13],[],[],[32],[14],[26],[27,30,29,26],[],[46],[28],[34,33,26],[26],[35,14,37,36],[],[38],[39],[],[],[41,42,43],[],[38],[44,27],[],[48],[47],[],[46,50,49],[46],[51,52],[53,55,54],[],[56],[],[47,57],[],[],[59,28,60],[],[61,63,30,29,62],[],[38],[64],[],[66,67,68],[],[38],[69,31],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Assign Expr ASSIGN ","Block Stmt ","Variable Declaration Expr ","Simple Name tail ","Name Expr FieldNamingPolicy ","Name Expr eLen ","Variable Declarator Gson gson = ","This Expr ","Method Call Expr ","Method Call Expr ","Simple Name create ","Object Creation Expr GsonBuilder Optional.empty Optional.empty ","Simple Name setFieldNamingPolicy ","Field Access Expr ","Class Or Interface Type GsonBuilder ","Simple Name UPPER_CAMEL_CASE ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr out ","Name Expr JsonIterator ","Name Expr config ","Name Expr obj ","Variable Declarator TestObject3 obj = ","Name Expr isStreaming ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Class Expr TestObject3.class ","StringLiteralExpr","Class Or Interface Type TestObject3 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name field1 ","Variable Declaration Expr ","Simple Name config ","Name Expr FieldNamingPolicy ","Variable Declarator GsonCompatibilityMode config = ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Method Call Expr ","Simple Name build ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name setFieldNamingPolicy ","Field Access Expr ","Class Or Interface Type Builder ","Simple Name UPPER_CAMEL_CASE ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject3.class ","Class Or Interface Type TestObject3 ","Method Call Expr ","Class Or Interface Type JsonIterator ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name fields "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_setVersion-TestGson-","callMethodNameReferTo":{"84":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":109,"succs":[[17,1],[2,29],[50,3],[56,4],[5,61],[6,66],[71,7],[82,8],[9,89],[94,10],[11,99],[104],[14,16,15,13],[],[15],[],[3,2,11,9,0,6,5,7,8,1,4,10],[20],[19],[],[22,19,21],[19],[23,24],[25,27,26],[],[28],[],[],[],[42],[18],[30],[31,30],[30,32],[30,33],[30,34,36,37],[],[72],[35],[35,38],[35,39],[35,40],[30,44,43],[30],[46,18,45,47],[],[48],[49],[],[],[53,51,52],[],[54],[31,55],[],[],[58,57,59],[],[54],[60,32],[],[63,64,62],[],[48],[33,65],[],[68,69,67],[],[54],[34,70],[],[73],[],[74,72,75],[72],[77,76],[78,80,79],[],[81],[],[],[],[83,35,84],[],[87,86,85,36,37],[],[48],[88],[],[90,91,92],[],[54],[93,38],[],[97,95,96],[],[54],[98,39],[],[102,100,101],[],[48],[103,40],[],[106,107,105],[],[54],[108,41],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_setVersion ","Block Stmt ","Variable Declaration Expr ","Name Expr gson ","Name Expr desc ","Variable Declarator Gson gson = ","Name Expr iter ","Method Call Expr ","Method Call Expr ","Simple Name create ","Method Call Expr ","Simple Name setVersion ","Double Literal Expr Note Zero  ","Class Or Interface Type GsonBuilder ","Variable Declaration Expr ","Unary Expr -- ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Primitive Type int ","Name Expr JsonIterator ","Name Expr config ","Name Expr obj ","Char Literal Expr ''' ","Simple Name put ","Name Expr obj ","Variable Declarator TestObject5 obj = ","Class Or Interface Type TestObject5 ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Class Expr TestObject5.class ","StringLiteralExpr","Class Or Interface Type TestObject5 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Empty  ","Field Access Expr ","Empty StringLiteralExpr","Simple Name format ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Empty  ","Field Access Expr ","Simple Name field2 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name field3 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Empty  ","Field Access Expr ","Simple Name field4 ","Variable Declaration Expr ","Name Expr String ","Variable Declarator GsonCompatibilityMode config = ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Method Call Expr ","Simple Name build ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name parameters ","Double Literal Expr Note Zero  ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject5.class ","Class Or Interface Type TestObject5 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Empty  ","Class Expr List.class ","Simple Name field1 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Empty  ","Field Access Expr ","Simple Name field2 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Parameter String val ","Simple Name field3 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Empty  ","Field Access Expr ","Simple Name field4 "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_addDeserializationExclusionStrategy-TestGson-","callMethodNameReferTo":{"122":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":147,"succs":[[1,20],[2,58],[3,69],[4,89],[5,95],[6,100],[105,7],[110,8],[9,120],[10,127],[11,132],[137,12],[142],[15,17,16,14],[],[16],[],[1,6,3,9,0,10,2,7,5,11,12,4,8],[38,29,13,37],[56,46,13,37],[25],[22],[35],[21],[23,21],[27,26,21],[21],[28],[],[32,34,33,30,31,14],[],[32],[],[35,36],[18],[],[],[],[40,39],[43,42,41],[],[44,22],[],[45],[],[],[48,49,51,47,50,14],[],[49],[],[52,53],[19],[55,54],[],[],[],[57],[],[61],[23],[59],[59,63,62],[59],[64,65],[23,67,66],[],[68],[],[],[82],[60],[70],[71,70],[72,70],[73,70],[76,74,77,70],[],[111],[75],[75,78],[79,75],[75,80],[84,83,70],[70],[86,85,87,60],[],[45],[88],[],[90,91,92],[],[93],[71,94],[],[],[97,98,96],[],[93],[72,99],[],[101,102,103],[],[45],[104,73],[],[107,106,108],[],[93],[74,109],[],[112],[24],[111,114,113],[111],[115,116],[117,24,118],[],[119],[],[],[75,121,122],[],[76,124,77,125,123],[],[45],[126],[],[129,130,128],[],[93],[131,78],[],[134,133,135],[],[93],[79,136],[],[138,139,140],[],[45],[80,141],[],[143,144,145],[],[93],[81,146],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_addDeserializationExclusionStrategy ","Block Stmt ","Return Stmt ","Return Stmt ","Variable Declaration Expr ","Simple Name exclusionStrategy ","Name Expr c ","Name Expr exclusionStrategy ","Name Expr exclusionStrategy ","Variable Declarator ExclusionStrategy exclusionStrategy = ","Simple Name assertArrayEquals ","Object Creation Expr ExclusionStrategy Optional.empty Optional.empty ","Class Or Interface Type ExclusionStrategy ","Method Declaration ","Class Expr Map.class ","Primitive Type boolean ","Simple Name shouldSkipField ","Parameter FieldAttributes f ","Block Stmt ","Simple Name f ","Class Or Interface Type FieldAttributes ","ReturnStmt","Unary Expr ! ","Method Call Expr ","LOGICAL_COMPLEMENT","Method Call Expr ","Simple Name equals ","String Literal Expr Not Empty  ","Simple Name getName ","StringLiteralExpr","Method Declaration ","Marker Annotation Expr @Override ","Primitive Type boolean ","Simple Name shouldSkipClass ","Parameter Class<?> clazz ","Block Stmt ","Class Or Interface Type Class ","Simple Name clazz ","Simple Name Class ","Wildcard Type ","Boolean Literal Expr false ","false","Variable Declaration Expr ","Simple Name gson ","Name Expr iter ","Variable Declarator Gson gson = ","Class Or Interface Type Gson ","Method Call Expr ","Method Call Expr ","Simple Name create ","Variable Declarator int j = ","Simple Name addDeserializationExclusionStrategy ","Class Or Interface Type GsonBuilder ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr JsonIterator ","Name Expr config ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Simple Name get ","Variable Declarator TestObject5 obj = ","Class Or Interface Type TestObject5 ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Simple Name staticGenDecoders ","Binary Expr UNSIGNED_RIGHT_SHIFT ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Empty  ","Field Access Expr ","Empty StringLiteralExpr","Simple Name field1 ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Field Access Expr ","Name Expr valLen ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name equals ","Return Stmt ","Class Or Interface Type JsonIterator ","String Literal Expr Empty  ","Field Access Expr ","Simple Name field4 ","Variable Declaration Expr ","Simple Name config ","Variable Declarator GsonCompatibilityMode config = ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Method Call Expr ","Simple Name field ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name addDeserializationExclusionStrategy ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Return Stmt ","Class Or Interface Type TestObject5 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Empty  ","Cast Expr ","Simple Name field1 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Empty  ","Field Access Expr ","Simple Name field2 ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name field3 ","Assign Expr ASSIGN ","Class Or Interface Type TestObject11 ","String Literal Expr Empty  ","Field Access Expr ","Simple Name field4 "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_int_as_string-TestGson-","callMethodNameReferTo":{"46":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":54,"succs":[[11,1],[2,18],[3,33],[4,36],[44,5],[51],[10,9,8,7],[],[9],[],[2,3,1,4,5,0],[14],[13],[],[16,13,15],[13],[17],[],[25],[12],[19],[19,22,20,23],[],[37],[21],[19,26,27],[19],[12,29,28,30],[],[31],[32],[],[],[34,20,35],[],[31],[38],[],[39,40,37],[37],[42,41],[43],[],[],[45,21,46],[],[47,49,22,48,23],[],[31],[50],[],[53,24,52],[],[31]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_int_as_string ","Block Stmt ","Variable Declaration Expr ","Simple Name iter ","Simple Name gson ","Variable Declarator Gson gson = ","Class Or Interface Type Gson ","Object Creation Expr Gson Optional.empty Optional.empty ","Name Expr iter ","Variable Declaration Expr ","Simple Name get ","Name Expr str ","Name Expr obj ","Name Expr JsonIterator ","Name Expr config ","Name Expr str ","Variable Declarator String str = ","Class Or Interface Type String ","Name Expr deserializationExclusionStrategies ","Simple Name fromJson ","Simple Name field ","Class Expr String.class ","StringLiteralExpr","Class Or Interface Type String ","Variable Declaration Expr [FINAL] ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name config ","Variable Declarator GsonCompatibilityMode config = ","Assign Expr ASSIGN ","Method Call Expr ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr String.class ","Class Or Interface Type String ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_bool_as_string-TestGson-","callMethodNameReferTo":{"46":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":54,"succs":[[1,11],[2,18],[33,3],[4,36],[5,44],[51],[10,9,8,7],[],[9],[],[4,2,3,5,1,0],[14],[13],[],[15,16,13],[13],[17],[],[25],[12],[19],[20,19,22,23],[],[37],[21],[26,27,19],[19],[28,12,29,30],[],[31],[32],[],[],[20,34,35],[],[31],[38],[],[40,39,37],[37],[41,42],[43],[],[],[45,46,21],[],[49,22,47,23,48],[],[31],[50],[],[52,53,24],[],[31]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_bool_as_string ","Block Stmt ","Variable Declaration Expr ","Name Expr gson ","Simple Name gson ","Variable Declarator Gson gson = ","Class Or Interface Type Gson ","Object Creation Expr Gson Optional.empty Optional.empty ","Class Or Interface Type Gson ","Expression Stmt ","Simple Name str ","Name Expr str ","Name Expr obj ","Name Expr JsonIterator ","Name Expr config ","Name Expr str ","Variable Declarator String str = ","Name Expr writer ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Class Expr String.class ","StringLiteralExpr","Class Or Interface Type String ","Method Call Expr ","Simple Name assertEquals ","Name Expr source ","Variable Declaration Expr ","Simple Name config ","Variable Declarator GsonCompatibilityMode config = ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr String.class ","Class Or Interface Type String ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_null_as_boolean-TestGson-","callMethodNameReferTo":{"47":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":56,"succs":[[1,11],[18,2],[33,3],[4,37],[5,45],[52],[10,9,8,7],[],[9],[],[1,0,4,5,2,3],[14],[13],[],[13,15,16],[13],[17],[],[25],[12],[19],[19,20,22,23],[],[38],[21],[27,26,19],[19],[12,29,28,30],[],[31],[32],[],[],[34,35],[],[20,36],[],[39],[],[40,41,38],[38],[43,42],[44],[],[],[46,21,47],[],[50,22,23,49,48],[],[31],[51],[],[53,54],[],[55,24],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_null_as_boolean ","Block Stmt ","Variable Declaration Expr ","Name Expr gson ","Simple Name gson ","Variable Declarator Gson gson = ","Primitive Type byte ","Object Creation Expr Gson Optional.empty Optional.empty ","Name Expr iter ","Variable Declaration Expr ","Class Or Interface Type Any ","Name Expr obj ","Name Expr obj ","Name Expr JsonIterator ","Name Expr config ","Char Literal Expr '}' ","Variable Declarator TestObject6 obj = ","Class Or Interface Type TestObject6 ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Class Expr TestObject6.class ","StringLiteralExpr","Class Or Interface Type TestObject6 ","Return Stmt ","Simple Name assertFalse ","Field Access Expr ","Simple Name field ","Variable Declaration Expr ","Simple Name config ","Variable Declarator GsonCompatibilityMode config = ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject6.class ","Class Or Interface Type IOException ","Method Call Expr ","Simple Name assertFalse ","Field Access Expr ","Simple Name field "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_null_as_long-TestGson-","callMethodNameReferTo":{"49":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":59,"succs":[[1,11],[18,2],[33,3],[39,4],[5,47],[54],[10,9,8,7],[],[9],[],[5,1,3,0,2,4],[14],[13],[],[16,15,13],[13],[17],[],[25],[12],[19],[19,22,23,20],[],[40],[21],[19,26,27],[19],[12,28,30,29],[],[31],[32],[],[],[36,35,34],[],[37],[38,20],[],[],[41],[],[40,43,42],[40],[44,45],[46],[],[],[48,21,49],[],[22,52,51,23,50],[],[31],[53],[],[55,56,57],[],[37],[24,58],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Field Access Expr ","Block Stmt ","Variable Declaration Expr ","Null Literal Expr ","Simple Name gson ","Variable Declarator Gson gson = ","Class Or Interface Type Gson ","Object Creation Expr Gson Optional.empty Optional.empty ","Name Expr gson ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr JsonIterator ","Name Expr config ","Name Expr obj ","Variable Declarator TestObject7 obj = ","Class Or Interface Type TestObject7 ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Class Expr TestObject7.class ","StringLiteralExpr","Class Or Interface Type TestObject7 ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Zero  ","Field Access Expr ","Zero IntegerLiteralExpr","Simple Name field ","Variable Declaration Expr ","Simple Name config ","Variable Declarator GsonCompatibilityMode config = ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject7.class ","Class Or Interface Type TestObject7 ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Zero  ","Simple Name fieldName ","Name Expr Float "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_null_as_int-TestGson-","callMethodNameReferTo":{"49":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":59,"succs":[[11,1],[18,2],[3,33],[39,4],[47,5],[54],[8,9,10,7],[],[9],[],[1,3,2,5,0,4],[14],[13],[],[13,15,16],[13],[17],[],[25],[12],[19],[23,19,20,22],[],[40],[21],[27,26,19],[19],[30,12,29,28],[],[31],[32],[],[],[36,34,35],[],[37],[38,20],[],[],[41],[],[40,42,43],[40],[45,44],[46],[],[],[48,49,21],[],[23,52,22,51,50],[],[31],[53],[],[56,55,57],[],[37],[24,58],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_null_as_int ","Block Stmt ","Variable Declaration Expr ","Name Expr gson ","Simple Name gson ","Variable Declarator Gson gson = ","Class Or Interface Type Gson ","Object Creation Expr Gson Optional.empty Optional.empty ","Class Or Interface Type Gson ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr JsonIterator ","Name Expr config ","Simple Name get ","Variable Declarator TestObject8 obj = ","Class Or Interface Type TestObject8 ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Class Expr TestObject8.class ","StringLiteralExpr","Class Or Interface Type TestObject8 ","Method Call Expr ","Simple Name assertEquals ","Simple Name c ","Field Access Expr ","Zero IntegerLiteralExpr","Simple Name field ","Variable Declaration Expr ","Simple Name config ","Variable Declarator GsonCompatibilityMode config = ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject8.class ","Class Or Interface Type TestObject8 ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name field "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_null_as_float-TestGson-","callMethodNameReferTo":{"48":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":58,"succs":[[1,11],[2,18],[33,3],[38,4],[46,5],[53],[10,8,9,7],[],[9],[],[1,5,2,0,3,4],[14],[13],[],[13,15,16],[13],[17],[],[25],[12],[19],[20,22,19,23],[],[39],[21],[26,27,19],[19],[29,30,28,12],[],[31],[32],[],[],[36,34,35],[],[],[20,37],[],[40],[],[42,41,39],[39],[43,44],[45],[],[],[47,48,21],[],[49,50,51,22,23],[],[31],[52],[],[55,56,54],[],[],[57,24],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_null_as_float ","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Simple Name gson ","Variable Declarator Gson gson = ","Class Or Interface Type Gson ","Object Creation Expr Gson Optional.empty Optional.empty ","Class Or Interface Type Gson ","Variable Declaration Expr ","Name Expr val ","Name Expr obj ","Name Expr obj ","Name Expr JsonIterator ","Name Expr config ","Name Expr obj ","Variable Declarator TestObject9 obj = ","Class Or Interface Type TestObject9 ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Class Expr TestObject9.class ","StringLiteralExpr","Class Or Interface Type TestObject9 ","Method Call Expr ","Simple Name assertEquals ","Double Literal Expr Zero  ","Field Access Expr ","Simple Name field ","Variable Declaration Expr ","Simple Name config ","Variable Declarator GsonCompatibilityMode config = ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject9.class ","Class Or Interface Type TestObject9 ","Method Call Expr ","Simple Name assertEquals ","Double Literal Expr Zero  ","Field Access Expr ","Simple Name field "]}
{"fileName":"src/test/java/com/jsoniter/TestGson.java","version":"0.9.23","methodName":"test_null_as_double-TestGson-","callMethodNameReferTo":{"48":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-Config-String-Class<T>"},"num":58,"succs":[[1,11],[18,2],[3,33],[38,4],[5,46],[53],[8,10,9,7],[],[9],[],[3,4,1,5,0,2],[14],[13],[],[15,16,13],[13],[17],[],[25],[12],[19],[23,20,22,19],[],[39],[21],[26,19,27],[19],[28,29,12,30],[],[31],[32],[],[],[35,34,36],[],[],[20,37],[],[40],[],[41,39,42],[39],[43,44],[45],[],[],[21,48,47],[],[51,23,50,22,49],[],[31],[52],[],[55,54,56],[],[],[57,24],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_null_as_double ","Block Stmt ","Variable Declaration Expr ","Name Expr gson ","Simple Name gson ","Variable Declarator Gson gson = ","Class Or Interface Type Gson ","Object Creation Expr Gson Optional.empty Optional.empty ","Class Or Interface Type Gson ","Variable Declaration Expr ","Name Expr val ","Name Expr obj ","Name Expr obj ","Name Expr JsonIterator ","Name Expr config ","Name Expr obj ","Variable Declarator TestObject10 obj = ","Class Or Interface Type TestObject10 ","Method Call Expr ","Simple Name fromJson ","String Literal Expr Not Empty  ","Class Expr TestObject10.class ","StringLiteralExpr","Class Or Interface Type TestObject10 ","Method Call Expr ","Simple Name assertEquals ","Double Literal Expr Zero  ","Field Access Expr ","Simple Name field ","Variable Declaration Expr ","Simple Name config ","Variable Declarator GsonCompatibilityMode config = ","Class Or Interface Type GsonCompatibilityMode ","Method Call Expr ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Class Or Interface Type Builder ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name deserialize ","String Literal Expr Not Empty  ","Class Expr TestObject10.class ","Class Or Interface Type TestObject10 ","Method Call Expr ","Simple Name assertEquals ","Double Literal Expr Zero  ","Field Access Expr ","Simple Name field "]}
