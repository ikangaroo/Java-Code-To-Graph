{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","hasMethodName":["valueType-ObjectAny-","object-ObjectAny-","writeTo-ObjectAny-JsonStream","toBoolean-ObjectAny-","toInt-ObjectAny-","toLong-ObjectAny-","toFloat-ObjectAny-","toDouble-ObjectAny-","toBigInteger-ObjectAny-","toBigDecimal-ObjectAny-","toString-ObjectAny-","get-ObjectAny-Object","get-ObjectAny-Object[]-int","entries-ObjectAny-","next-ObjectAny.IteratorAdapter-","key-ObjectAny.IteratorAdapter-","value-ObjectAny.IteratorAdapter-"]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"valueType-ObjectAny-","callMethodNameReferTo":{},"num":11,"succs":[[5,4,1,3,2],[],[],[4],[],[6],[0,8,7],[],[9,10],[],[]],"attribute":["Method Declaration ","Binary Expr EQUALS ","PUBLIC","Class Or Interface Type ValueType ","Simple Name valueType ","Block Stmt ","Return Stmt ","ReturnStmt","Field Access Expr ","Name Expr ValueType ","Simple Name STRING "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"object-ObjectAny-","callMethodNameReferTo":{},"num":9,"succs":[[3,5,4,1,2],[],[],[4],[],[6],[0,8,7],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Method Call Expr ","ReturnStmt","Name Expr val "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"writeTo-ObjectAny-JsonStream","callMethodNameReferTo":{},"num":63,"succs":[[30,1],[2,32],[3,4,39],[45,12,4,44],[41,5],[8,46,6],[8,33,7],[47,10],[9],[10,49],[53,11],[57,3],[61],[17,16,14,22,19,20,18,15],[],[],[17],[],[24,29],[21],[],[],[2,12,0,1],[24,25],[],[24,23],[24,23],[24,26],[24,27],[],[31,23],[],[35],[],[33,6],[36,33,37],[33],[38],[],[10,11,5],[41],[43],[40,41],[41],[],[],[7],[48,25],[],[50,34,51],[],[52],[],[26,55,54],[],[40,56],[],[59,58,13,27],[42,60],[],[],[62,28],[]],"attribute":["Expression Stmt ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Name Expr notFirst ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Void Type ","Simple Name writeTo ","Parameter JsonStream stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr stream ","Simple Name stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Class Or Interface Type JsonStream ","Expression Stmt ","Simple Name writeObjectStart ","Variable Declaration Expr ","Simple Name notFirst ","Name Expr notFirst ","Variable Declarator boolean notFirst = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Name Expr val ","Simple Name entrySet ","Block Stmt ","Method Call Expr ","Simple Name writeMore ","Assign Expr ASSIGN ","ASSIGN","Boolean Literal Expr true ","true","Method Call Expr ","Simple Name writeObjectField ","Method Call Expr ","Simple Name getKey ","Method Call Expr ","Method Call Expr ","Simple Name writeTo ","Simple Name getValue ","Expression Stmt ","Simple Name writeObjectEnd "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"toBoolean-ObjectAny-","callMethodNameReferTo":{},"num":13,"succs":[[5,4,1,3,2],[],[],[4],[],[6],[8,0,7],[],[9,10],[11,12],[],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name toBoolean ","Block Stmt ","Return Stmt ","ReturnStmt","Unary Expr ! ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr val ","Simple Name isEmpty "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"toInt-ObjectAny-","callMethodNameReferTo":{},"num":10,"succs":[[3,4,5,1,2],[],[],[4],[],[6],[7,8,0],[],[9],[]],"attribute":["Method Declaration ","Simple Name firstName ","PUBLIC","Primitive Type int ","Boolean Literal Expr false ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"toLong-ObjectAny-","callMethodNameReferTo":{},"num":10,"succs":[[3,1,4,5,2],[],[],[4],[],[6],[0,8,7],[],[9],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type long ","Simple Name toLong ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"toFloat-ObjectAny-","callMethodNameReferTo":{},"num":10,"succs":[[4,5,3,1,2],[],[],[4],[],[6],[8,7,0],[],[9],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type float ","Simple Name toFloat ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"toDouble-ObjectAny-","callMethodNameReferTo":{},"num":10,"succs":[[1,5,4,2,3],[],[],[4],[],[6],[8,0,7],[],[9],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type double ","Simple Name toDouble ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr Long "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"toBigInteger-ObjectAny-","callMethodNameReferTo":{},"num":13,"succs":[[3,5,1,4,2],[],[],[4],[],[6],[0,7,8],[],[10,11,9],[],[],[12],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type BigInteger ","Simple Name toBigInteger ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr BigInteger ","Simple Name valueOf ","Method Call Expr ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"toBigDecimal-ObjectAny-","callMethodNameReferTo":{},"num":13,"succs":[[4,1,5,3,2],[],[],[4],[],[6],[0,7,8],[],[9,11,10],[],[],[12],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type BigDecimal ","Simple Name toBigDecimal ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr BigDecimal ","Simple Name valueOf ","Method Call Expr ","Simple Name size "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"toString-ObjectAny-","callMethodNameReferTo":{"8":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":13,"succs":[[4,5,3,1,2],[],[],[4],[],[6],[8,0,7],[],[11,9,10],[],[],[12],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize ","This Expr ","ThisExpr"]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"get-ObjectAny-Object","callMethodNameReferTo":{},"num":41,"succs":[[1,16],[2,25],[19,3,26,4,27],[4,5,30,29],[5,29,20],[9,11,8,10,6,7],[],[],[9],[],[13,15],[1,4,0],[13],[],[12,13],[],[21],[12,18],[],[17],[19,17],[23,22,17],[17],[12,5,24,18],[],[3],[],[28],[],[],[31,14,32],[],[34,33],[],[36,38,37,35,7],[],[37],[],[39],[34,40,29],[]],"attribute":["Return Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name get ","Parameter Object key ","Block Stmt ","Name Expr val ","Simple Name key ","Name Expr key ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name element ","Name Expr val ","Name Expr element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Method Call Expr ","Simple Name object ","Method Declaration ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Method Call Expr ","Name Expr val "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"get-ObjectAny-Object[]-int","callMethodNameReferTo":{"80":"src/main/java/com/jsoniter/any/Any.java-get-Any-Object[]-int","100":"src/main/java/com/jsoniter/any/Any.java-rewrap-Any-List<Any>","89":"src/main/java/com/jsoniter/any/Any.java-valueType-Any-","122":"src/main/java/com/jsoniter/any/Any.java-get-Any-Object[]-int"},"num":168,"succs":[[43,1],[44,3,2,34,45],[3,20,47,48],[50,4],[57,5],[58,52,6,15],[59,7],[8,9,67],[14,9,73,72],[10,69],[74,11],[12,88],[91,8,90,13,89],[96,8],[100,20,47,15],[103,16],[17,114],[44,106,19,115,18],[117,19,20,47],[122,20,47],[27,24,23,26,21,25,22],[],[],[24],[],[29,40],[42,35],[3,4,19,16,15,0],[29],[],[29,28],[29,30],[29,31],[29,32],[35],[],[34,35],[36,35],[37,35],[35,38],[41],[],[],[2],[],[46,28],[],[],[49],[],[54],[36,30],[51],[112,51,52],[56,55,51],[51],[36,30],[14,7,6],[],[63],[61],[],[61,60],[61,64,65],[61],[66],[],[10,11],[69],[71],[68,69],[69],[],[],[78],[68,37,31],[75],[12,75,76],[80,75,79],[75],[81,83,31,20,82],[68,84],[],[86,37,85,35],[],[],[87],[],[13],[93,92,76],[],[94,95],[],[129,126,128,127,22],[],[],[77,60,97,98],[],[99,70],[],[102,101,62],[],[],[108],[53,105],[],[104],[106,104],[110,104,109],[104],[53,113,105,111],[],[],[141,143,140,142,139,22],[18],[116],[],[119,118,32,38],[],[121,120],[],[163,165,164,162,22],[123,107,20,124,33],[],[85,39,125,35],[87],[],[128],[],[130],[93,131,47],[132,133],[],[],[135,147],[136,156],[150,137,44,138,157],[138,113,158,47],[113,47,151],[],[141],[],[112,146],[135,138,134],[112],[144,112],[],[152],[144,149],[],[148],[150,148],[154,153,148],[148],[144,113,155,149],[],[137],[116],[159,145,160],[],[121,161],[],[],[164],[],[166],[121,167,47],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name get ","Parameter Object[] keys ","Parameter int idx ","Block Stmt ","Name Expr keys ","Simple Name keys ","Name Expr keys ","Name Expr keys ","Name Expr keys ","Name Expr keys ","Name Expr idx ","Simple Name idx ","Name Expr idx ","Name Expr idx ","Name Expr idx ","Name Expr idx ","Array Type 1 ","Class Or Interface Type Object ","Primitive Type int ","Block Stmt ","EQUALS","Field Access Expr ","Simple Name length ","ReturnStmt","This Expr ","ThisExpr","Variable Declaration Expr ","Simple Name key ","Name Expr key ","Name Expr key ","Variable Declarator Object key = ","Class Or Interface Type Object ","Array Access Expr idx ","Block Stmt ","Simple Name isWildcard ","Variable Declaration Expr ","Name Expr result ","Simple Name result ","Name Expr result ","Variable Declarator HashMap<String, Any> result = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr cache ","Class Or Interface Type Entry ","Name Expr val ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name mapped ","Name Expr mapped ","Name Expr mapped ","Variable Declarator Any mapped = ","Class Or Interface Type Any ","Method Call Expr ","Method Call Expr ","Simple Name get ","Binary Expr PLUS ","Simple Name getValue ","PLUS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Method Call Expr ","NOT_EQUALS","Field Access Expr ","Simple Name valueType ","Method Declaration ","Name Expr ValueType ","Simple Name INVALID ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name getKey ","Method Call Expr ","Name Expr Any ","Simple Name rewrap ","Variable Declaration Expr ","Simple Name element ","Name Expr val ","Name Expr element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Simple Name key ","Method Declaration ","Block Stmt ","Null Literal Expr ","NullLiteralExpr","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Method Call Expr ","Simple Name object ","Method Declaration ","Method Call Expr ","Simple Name get ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","Binary Expr EQUALS ","Class Or Interface Type ValueType ","Simple Name valueType ","Block Stmt ","Return Stmt ","Field Access Expr ","Name Expr ValueType ","Simple Name STRING ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Class Or Interface Type Any ","Simple Name get ","Parameter Object key ","Block Stmt ","Name Expr val ","Name Expr key ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name element ","Name Expr val ","Name Expr element ","Name Expr element ","Variable Declarator Any element = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Object Creation Expr NotFoundAny Optional.empty Optional.empty ","Class Or Interface Type NotFoundAny ","Method Call Expr ","Simple Name object ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Method Call Expr ","Name Expr val "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"entries-ObjectAny-","callMethodNameReferTo":{},"num":15,"succs":[[4,1,3,5,2],[],[],[4],[],[6],[8,7,0],[],[10,9],[],[11,12],[13,14],[],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type EntryIterator ","Simple Name entries ","Block Stmt ","Return Stmt ","ReturnStmt","Object Creation Expr IteratorAdapter Optional.empty Optional.empty ","Class Or Interface Type IteratorAdapter ","Method Call Expr ","Method Call Expr ","Simple Name iterator ","Name Expr val ","Simple Name entrySet "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"next-ObjectAny.IteratorAdapter-","callMethodNameReferTo":{},"num":25,"succs":[[1,11],[2,13,14,4],[15,3],[5,4,20,21],[5,23,20],[9,6,10,8,7],[],[],[9],[],[4,0],[2,3],[1],[],[],[16,17,18],[],[],[5,12,19],[],[],[22],[],[24],[]],"attribute":["If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name next ","Block Stmt ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name hasNext ","Assign Expr ASSIGN ","Name Expr entry ","ASSIGN","Method Call Expr ","Simple Name next ","ReturnStmt","Boolean Literal Expr true ","true","Boolean Literal Expr false ","false"]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"key-ObjectAny.IteratorAdapter-","callMethodNameReferTo":{},"num":11,"succs":[[3,4,1,5,2],[],[],[4],[],[6],[0,8,7],[],[9,10],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Name Expr Any ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr entry ","Simple Name getKey "]}
{"fileName":"src/main/java/com/jsoniter/any/ObjectAny.java","version":"0.9.23","methodName":"value-ObjectAny.IteratorAdapter-","callMethodNameReferTo":{},"num":11,"succs":[[5,1,3,4,2],[],[],[4],[],[6],[8,7,0],[],[10,9],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name value ","Block Stmt ","Return Stmt ","ReturnStmt","Method Call Expr ","Name Expr entry ","Simple Name getValue "]}
