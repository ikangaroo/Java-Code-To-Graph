{"fileName":"src/main/java/com/jsoniter/ReflectionDecoderFactory.java","version":"0.9.23","hasMethodName":["create-ReflectionDecoderFactory-ClassInfo"]}
{"fileName":"src/main/java/com/jsoniter/ReflectionDecoderFactory.java","version":"0.9.23","methodName":"create-ReflectionDecoderFactory-ClassInfo","callMethodNameReferTo":{"70":"src/main/java/com/jsoniter/ReflectionObjectDecoder.java-create-ReflectionObjectDecoder-"},"num":74,"succs":[[1,27],[2,41],[49,3],[5,4,29,50],[5,52,15,51],[54,6],[56,7,8,55,31],[8,58,15,51],[60,9],[61,62,33,11,10],[11,15,64,51],[66,12],[67,13,14,35],[68,14,15,51],[15,51,70],[21,19,17,18,16,20],[17],[],[19],[],[23,26],[1,0,5,2,8,14,11],[23],[],[23,22],[23,24],[],[37],[22],[28],[29,3,28],[30,28],[6,31,28],[32,28],[33,9,28],[34,28],[35,12,28],[39,38,28],[28],[22,40],[],[45],[24],[42],[43,42],[46,47,42],[42],[48,24],[],[4],[],[],[30,53],[],[7],[57],[],[],[43,59,32],[],[10],[63],[],[],[34,44,65],[],[13],[],[36,69],[],[71,72],[25,73],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type Decoder ","Name Expr stream ","Parameter ClassInfo classAndArgs ","Block Stmt ","Name Expr classAndArgs ","Simple Name classAndArgs ","Name Expr classAndArgs ","Name Expr classAndArgs ","Class Or Interface Type ClassInfo ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Super Expr ","Field Access Expr ","Simple Name clazz ","Expression Stmt ","Simple Name typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Array Type 1 ","Field Access Expr ","Simple Name typeArgs ","Block Stmt ","Simple Name isArray ","ReturnStmt","Object Creation Expr ReflectionArrayDecoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionArrayDecoder ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Class Or Interface Type Collection ","Object Creation Expr ReflectionCollectionDecoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionCollectionDecoder ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Class Or Interface Type Map ","Object Creation Expr ReflectionMapDecoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionMapDecoder ","Block Stmt ","Simple Name isEnum ","Object Creation Expr ReflectionEnumDecoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionEnumDecoder ","Method Call Expr ","Object Creation Expr ReflectionObjectDecoder Optional.empty Optional.empty ","Simple Name create ","Class Or Interface Type ReflectionObjectDecoder "]}
