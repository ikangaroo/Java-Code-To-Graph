{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","hasMethodName":["test_read_any-TestReadAny-","test_bind_to_any-TestReadAny-","test_read_any_from_string-TestReadAny-","test_read_int-TestReadAny-","test_read_boolean-TestReadAny-","test_read_int_array-TestReadAny-","test_read_int_object-TestReadAny-","test_read_float_as_int-TestReadAny-","test_read_string-TestReadAny-","test_read_int_as_string-TestReadAny-","test_get-TestReadAny-","test_read_long-TestReadAny-","test_read_float-TestReadAny-","test_size-TestReadAny-","test_keys-TestReadAny-","test_read_double-TestReadAny-","test_read_class-TestReadAny-","test_read_multiple_field-TestReadAny-","test_require_path-TestReadAny-","test_read_any_in_streaming-TestReadAny-"]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_any-TestReadAny-","callMethodNameReferTo":{"25":"src/main/java/com/jsoniter/JsonIterator.java-readAny-JsonIterator-","15":"src/main/java/com/jsoniter/JsonIterator.java-parse-JsonIterator-byte[]"},"num":29,"succs":[[10,1],[20],[5,9,7,4,6,3],[],[5],[],[8],[],[],[1,0],[13],[12],[],[15,14,12],[12],[16,17,18],[],[],[19],[],[22,23,21],[],[24],[27,25,26],[],[28,11],[],[24],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_read_any ","Throws","Simple Name deserialize ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Variable Declarator JsonIterator iter = ","Name Expr JsonIterator ","Method Call Expr ","Name Expr JsonIterator ","Simple Name parse ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Class Or Interface Type JsonIterator ","Integer Literal Expr Note Zero  ","Method Call Expr ","IntegerLiteralExpr","Method Call Expr ","Simple Name toInt ","Integer Literal Expr Note Zero  ","Simple Name readAny "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_bind_to_any-TestReadAny-","callMethodNameReferTo":{"16":"src/main/java/com/jsoniter/JsonIterator.java-parse-JsonIterator-byte[]","32":"src/main/java/com/jsoniter/JsonIterator.java-read-JsonIterator-T"},"num":43,"succs":[[11,1],[2,27],[36],[8,10,5,6,7,4],[],[6],[],[9],[],[],[2,1,0],[14],[13],[],[15,13,16],[13],[19,17,18],[],[],[21,20,22,23],[24],[],[25],[26],[],[],[],[30],[12],[28],[32,28,31],[28],[12,34,33],[],[35],[],[37,38,39],[41,40],[],[42,29],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_empty_class ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Name Expr JsonIterator ","Name Expr slice ","Method Call Expr ","String Literal Expr Not Empty  ","Name Expr ctClass ","Char Literal Expr ''' ","Char Literal Expr ''' ","StringLiteralExpr","'''","'''","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Variable Declarator ComplexObject obj = ","Simple Name assertNotNull ","Method Call Expr ","Simple Name read ","Class Expr ComplexObject.class ","Class Or Interface Type ComplexObject ","Method Call Expr ","Field Access Expr ","Simple Name println ","Field Access Expr ","Class Or Interface Type Object ","Simple Name set ","Simple Name field3 "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_any_from_string-TestReadAny-","callMethodNameReferTo":{"15":"src/main/java/com/jsoniter/JsonIterator.java-parse-JsonIterator-byte[]","31":"src/main/java/com/jsoniter/JsonIterator.java-readAny-JsonIterator-"},"num":38,"succs":[[10,1],[26],[4,7,9,6,5,3],[],[5],[],[8],[],[],[1,0],[13],[12],[],[15,12,14],[12],[16,18,17],[],[],[20,22,19,21],[23],[],[24],[25],[],[],[],[29,27,28],[],[30],[35,33,31,34,32],[],[11,36],[],[23],[30],[37],[],[]],"attribute":["Expression Stmt ","Method Call Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_read_any_from_string ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Integer Literal Expr Note Zero  ","Simple Name iter ","Variable Declarator JsonIterator iter = ","Name Expr JsonIterator ","Method Call Expr ","Name Expr JsonIterator ","Simple Name parse ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","StringLiteralExpr","'''","'''","Method Call Expr ","Field Access Expr ","Integer Literal Expr Note Zero  ","Method Call Expr ","IntegerLiteralExpr","Method Call Expr ","Simple Name toInt ","String Literal Expr Not Empty  ","Integer Literal Expr Note Zero  ","Integer Literal Expr Zero  ","Simple Name readAny ","Zero IntegerLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_int-TestReadAny-","callMethodNameReferTo":{"33":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-","35":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","68":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","104":"src/main/java/com/jsoniter/any/Any.java-toString-Any-","43":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-","75":"src/main/java/com/jsoniter/any/Any.java-object-Any-","44":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","83":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-","52":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-","53":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","22":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-","24":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","88":"src/main/java/com/jsoniter/any/Any.java-toLong-Any-"},"num":106,"succs":[[1,19],[30,2],[40,3],[49,4],[58,5],[72,6],[7,80],[85,8],[91,9],[10,96],[101],[18,14,13,15,16,12],[],[14],[],[17],[],[],[7,0,1,4,9,2,3,5,10,8,6],[20,22,21],[],[23],[24,25],[],[26,28,27],[],[],[],[29],[],[32,33,31],[],[34],[35,36],[],[38,39,37],[],[],[],[29],[42,41,43],[],[23],[45,44],[46,48,47],[],[],[],[29],[51,52,50],[],[23],[53,54],[55,57,56],[],[],[],[29],[66],[60],[],[59,60],[61,60],[62,60],[63,60],[64,60],[68,67,60],[60],[71,70,69],[],[],[29],[73,74,75],[],[76,78,77],[79,59],[],[],[23],[],[83,82,81],[],[23],[61,84],[],[86,87,88],[],[89],[62,90],[],[],[94,93,92],[],[],[63,95],[],[99,98,97],[],[],[100,64],[],[102,104,103],[],[29],[65,105],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_read_int ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Class Or Interface Type JsonIterator ","Integer Literal Expr Note Zero  ","Method Call Expr ","IntegerLiteralExpr","Method Call Expr ","Simple Name toInt ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Zero  ","Method Call Expr ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name toInt ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name toInt ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name toInt ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Expression Stmt ","Simple Name get ","Name Expr len ","Name Expr any ","Simple Name obj ","Simple Name obj ","Simple Name obj ","Name Expr len ","Method Call Expr ","Primitive Type int ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","Method Call Expr ","Method Call Expr ","Name Expr Long ","Name Expr testObj ","Integer Literal Expr Note Zero  ","Simple Name object ","Method Call Expr ","Simple Name assertEquals ","Char Literal Expr ' ' ","Method Call Expr ","Simple Name toInt ","Method Call Expr ","Simple Name assertEquals ","Char Literal Expr 't' ","Method Call Expr ","LongLiteralExpr","Simple Name toLong ","Method Call Expr ","Expression Stmt ","Char Literal Expr 'n' ","Binary Expr EQUALS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","Char Literal Expr 'r' ","Simple Name ignoreDecoding ","Simple Name toDouble ","Method Call Expr ","Return Stmt ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_boolean-TestReadAny-","callMethodNameReferTo":{"80":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","34":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","99":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","52":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","70":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","23":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","90":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","43":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","61":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","110":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String"},"num":115,"succs":[[18,1],[29,2],[39,3],[48,4],[5,57],[6,66],[7,75],[8,85],[95,9],[104],[12,17,15,14,13,11],[],[13],[],[16],[],[],[5,6,8,9,0,2,1,4,7,3],[20,21,19],[],[22],[23,24],[],[26,25,27],[],[],[],[28],[],[32,30,31],[],[33],[35,34],[],[37,38,36],[],[],[],[28],[42,41,40],[],[22],[43,44],[47,46,45],[],[],[],[28],[49,51,50],[],[33],[52,53],[55,56,54],[],[],[],[28],[58,59,60],[],[22],[62,61],[65,63,64],[],[],[],[28],[67,68,69],[],[22],[70,71],[72,73,74],[],[],[],[28],[77,78,76],[],[79],[80,81],[],[84,83,82],[],[],[],[28],[88,87,86],[],[89],[91,90],[],[93,92,94],[],[],[],[28],[96,97,98],[],[28],[99,100],[103,101,102],[],[],[],[28],[105,106,107],[],[109,108],[110,111],[],[],[112,114,113],[],[],[],[28]],"attribute":["Expression Stmt ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_read_boolean ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Expression Stmt ","Char Literal Expr 'n' ","Method Call Expr ","true","Method Call Expr ","Simple Name toBoolean ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Return Stmt ","Boolean Literal Expr false ","Method Call Expr ","false","Method Call Expr ","Simple Name toBoolean ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","Name Expr iter ","Method Call Expr ","Method Call Expr ","Simple Name toBoolean ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Return Stmt ","Boolean Literal Expr false ","Method Call Expr ","Method Call Expr ","Simple Name toBoolean ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","Null Literal Expr ","Method Call Expr ","Method Call Expr ","Simple Name toBoolean ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Expression Stmt ","Simple Name ctor ","Method Call Expr ","Method Call Expr ","Simple Name toBoolean ","Name Expr JsonIterator ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Class Or Interface Type JsonIterator ","Simple Name i ","Method Call Expr ","IntegerLiteralExpr","Method Call Expr ","Simple Name toInt ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Array Access Expr count++ ","Class Or Interface Type T ","Method Call Expr ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name toInt ","Name Expr JsonIterator ","Method Call Expr ","String Literal Expr Not Empty  ","Method Call Expr ","Class Or Interface Type JsonIterator ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Simple Name toString ","Name Expr JsonIterator ","Class Or Interface Type IOException ","String Literal Expr Not Empty  ","Expression Stmt ","Simple Name assertEquals ","Field Access Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Name Expr lines ","Method Call Expr ","Simple Name object ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_int_array-TestReadAny-","callMethodNameReferTo":{"17":"src/main/java/com/jsoniter/JsonIterator.java-parse-JsonIterator-byte[]","33":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-Object","41":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-Object","28":"src/main/java/com/jsoniter/JsonIterator.java-readAny-JsonIterator-"},"num":44,"succs":[[12,1],[2,22],[30,3],[38],[11,9,6,7,8,5],[],[7],[],[10],[],[],[2,3,0,1],[15],[14],[],[16,17,14],[14],[19,20,18],[],[],[21],[],[26],[13],[23],[24,23],[27,28,23],[23],[13,29],[],[33,32,31],[],[34],[35,36,24],[],[],[37],[],[39,40,41],[],[34],[43,42,25],[],[34]],"attribute":["Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_read_int_array ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonProperty ","Method Call Expr ","Name Expr JsonIterator ","Name Expr clazz ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Name Expr obj ","Name Expr any ","Name Expr any ","Variable Declarator Any any = ","Name Expr buf ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Class Or Interface Type JsonIterator ","Simple Name put ","Method Call Expr ","IntegerLiteralExpr","Simple Name toInt ","Name Expr i ","Zero IntegerLiteralExpr","Method Call Expr ","Return Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name toInt ","Integer Literal Expr Note Zero  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_int_object-TestReadAny-","callMethodNameReferTo":{"16":"src/main/java/com/jsoniter/JsonIterator.java-parse-JsonIterator-byte[]","26":"src/main/java/com/jsoniter/JsonIterator.java-readAny-JsonIterator-","31":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-Object"},"num":35,"succs":[[1,11],[21,2],[28],[6,10,5,8,7,4],[],[6],[],[9],[],[],[1,0,2],[14],[13],[],[16,15,13],[13],[17,18,19],[],[],[20],[],[24],[12],[22],[25,26,22],[22],[27,12],[],[31,29,30],[],[32],[23,33,34],[],[],[20]],"attribute":["Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_read_int_object ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Simple Name size ","Variable Declarator JsonIterator iter = ","Array Access Expr count++ ","Method Call Expr ","Name Expr JsonIterator ","Simple Name parse ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Name Expr ctx ","Name Expr obj ","Method Call Expr ","Name Expr buf ","Method Call Expr ","Simple Name readAny ","Expression Stmt ","Array Access Expr count++ ","Integer Literal Expr Note Zero  ","Method Call Expr ","IntegerLiteralExpr","Simple Name toInt ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_float_as_int-TestReadAny-","callMethodNameReferTo":{"17":"src/main/java/com/jsoniter/JsonIterator.java-parse-JsonIterator-byte[]","33":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-Object","41":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-Object","28":"src/main/java/com/jsoniter/JsonIterator.java-readAny-JsonIterator-"},"num":44,"succs":[[1,12],[2,22],[3,30],[38],[11,9,6,8,7,5],[],[7],[],[10],[],[],[1,2,3,0],[15],[14],[],[17,16,14],[14],[18,19,20],[],[],[21],[],[26],[13],[23],[23,24],[23,27,28],[23],[13,29],[],[31,32,33],[],[34],[36,24,35],[],[],[37],[],[39,41,40],[],[34],[43,42,25],[],[34]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_read_float_as_int ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Name Expr JsonIterator ","Simple Name parse ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Name Expr ctx ","Name Expr any ","Name Expr any ","Variable Declarator Any any = ","Name Expr buf ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Array Access Expr count++ ","Char Literal Expr ''' ","Method Call Expr ","IntegerLiteralExpr","Simple Name toInt ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Expression Stmt ","Array Access Expr count++ ","Name Expr str ","Method Call Expr ","Simple Name toInt ","Integer Literal Expr Note Zero  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_string-TestReadAny-","callMethodNameReferTo":{"66":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","19":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","37":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","56":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","28":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","46":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String"},"num":71,"succs":[[1,14],[2,24],[3,33],[42,4],[5,51],[61],[11,8,13,9,10,7],[],[9],[],[12],[],[],[1,0,5,3,2,4],[15,16,17],[],[18],[20,19],[],[22,23,21],[],[],[],[18],[26,27,25],[],[18],[29,28],[30,31,32],[],[],[],[18],[35,36,34],[],[18],[38,37],[41,40,39],[],[],[],[18],[43,44,45],[],[18],[47,46],[50,49,48],[],[],[],[18],[54,53,52],[],[55],[56,57],[],[58,59,60],[],[],[],[18],[62,63,64],[],[65],[67,66],[],[68,70,69],[],[],[],[18]],"attribute":["Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_read_string ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Method Call Expr ","Simple Name toString ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Class Or Interface Type JsonIterator ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Simple Name toString ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Simple Name toString ","Name Expr JsonIterator ","Simple Name deserialize ","Simple Name decode ","Method Call Expr ","Array Access Expr count++ ","Name Expr clazz ","Method Call Expr ","Method Call Expr ","Simple Name toString ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Array Access Expr count++ ","Name Expr buf ","Method Call Expr ","IntegerLiteralExpr","Method Call Expr ","Simple Name toInt ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Expression Stmt ","Char Literal Expr 'n' ","Method Call Expr ","true","Method Call Expr ","Simple Name toBoolean ","Name Expr JsonIterator ","Simple Name deserialize ","Parameter Class clazz "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_int_as_string-TestReadAny-","callMethodNameReferTo":{"16":"src/main/java/com/jsoniter/JsonIterator.java-parse-JsonIterator-byte[]","26":"src/main/java/com/jsoniter/JsonIterator.java-readAny-JsonIterator-","31":"src/main/java/com/jsoniter/any/Any.java-toString-Any-"},"num":33,"succs":[[11,1],[2,21],[28],[6,8,7,5,10,4],[],[6],[],[9],[],[],[2,0,1],[14],[13],[],[16,15,13],[13],[17,18,19],[],[],[20],[],[24],[12],[22],[22,26,25],[22],[12,27],[],[31,30,29],[],[20],[23,32],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_read_int_as_string ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name sLen ","Simple Name iter ","Variable Declarator JsonIterator iter = ","Field Access Expr ","Method Call Expr ","Name Expr JsonIterator ","Simple Name parse ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Name Expr ctx ","Name Expr key ","Variable Declarator Any any = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Class Or Interface Type JsonIterator ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_get-TestReadAny-","callMethodNameReferTo":{"32":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","21":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","89":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","75":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","61":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","47":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String"},"num":95,"succs":[[1,14],[26,2],[3,39],[4,53],[5,67],[81],[13,11,8,10,9,7],[],[9],[],[12],[],[],[5,3,4,1,0,2],[17,16,15],[],[18],[19,20],[],[22,21],[],[23,24,25],[],[],[],[18],[27,29,28],[],[18],[31,30],[33,34,32],[],[35,37,36],[],[38],[],[],[18],[],[42,41,40],[],[43,44],[45,46],[],[],[48,49,47],[],[50,51,52],[],[38],[],[],[18],[54,55,56],[],[57,58],[60,59],[],[],[62,61,63],[],[66,65,64],[],[38],[],[],[18],[70,69,68],[],[71,72],[73,74],[],[],[75,77,76],[],[79,78,80],[],[18],[],[],[18],[84,83,82],[],[85,86],[88,87],[],[],[89,90,91],[],[94,93,92],[],[38],[],[],[18]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_get ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Method Call Expr ","Simple Name toString ","Method Call Expr ","Simple Name get ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Simple Name toString ","Method Call Expr ","Simple Name get ","Integer Literal Expr Zero  ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Zero IntegerLiteralExpr","Expression Stmt ","Class Or Interface Type JsonIterator ","Field Access Expr ","Method Call Expr ","Name Expr ValueType ","Simple Name INVALID ","Method Call Expr ","Simple Name valueType ","Method Call Expr ","Simple Name get ","Integer Literal Expr Zero  ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Class Or Interface Type TestObject18 ","Field Access Expr ","Method Call Expr ","Array Access Expr idx ","Simple Name INVALID ","Method Call Expr ","Simple Name valueType ","Method Call Expr ","Simple Name get ","Integer Literal Expr Zero  ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","Field Access Expr ","Method Call Expr ","Array Access Expr idx ","Simple Name INVALID ","Method Call Expr ","Simple Name valueType ","Method Call Expr ","Simple Name get ","String Literal Expr Not Empty  ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","Field Access Expr ","Method Call Expr ","Name Expr ValueType ","Simple Name INVALID ","Method Call Expr ","Simple Name valueType ","Method Call Expr ","Simple Name get ","Integer Literal Expr Zero  ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_long-TestReadAny-","callMethodNameReferTo":{"16":"src/main/java/com/jsoniter/any/Any.java-toLong-Any-","18":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","51":"src/main/java/com/jsoniter/any/Any.java-toLong-Any-","39":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","27":"src/main/java/com/jsoniter/any/Any.java-toLong-Any-","28":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","46":"src/main/java/com/jsoniter/any/Any.java-toLong-Any-"},"num":53,"succs":[[1,13],[2,24],[33,3],[4,43],[48],[10,8,12,7,9,6],[],[8],[],[11],[],[],[1,4,2,3,0],[14,16,15],[],[17],[18,19],[],[21,22,20],[],[],[],[23],[],[27,25,26],[],[17],[28,29],[32,30,31],[],[],[],[23],[37],[35],[],[35,34],[38,35,39],[35],[40,41,42],[],[],[23],[46,45,44],[],[17],[34,47],[],[51,49,50],[],[17],[36,52],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_read_long ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name assertEquals ","Name Expr keys ","Method Call Expr ","LongLiteralExpr","Method Call Expr ","Simple Name toLong ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Long Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name toLong ","Name Expr JsonIterator ","Simple Name deserialize ","Simple Name INVALID ","Variable Declaration Expr ","Name Expr any ","Name Expr pos ","Name Expr any ","Variable Declarator Any any = ","Primitive Type int ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Array Access Expr pos + 2 ","Simple Name iter ","Method Call Expr ","Simple Name toLong ","Method Call Expr ","Assign Expr PLUS ","Name Expr iter ","Method Call Expr ","Name Expr myList "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_float-TestReadAny-","callMethodNameReferTo":{"34":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","25":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","15":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String"},"num":39,"succs":[[1,11],[21,2],[30],[5,10,6,8,7,4],[],[6],[],[9],[],[],[0,2,1],[13,12,14],[],[],[15,16],[19,18,17],[],[],[],[20],[],[22,23,24],[],[],[25,26],[27,28,29],[],[],[],[20],[32,31,33],[],[],[35,34],[36,37,38],[],[],[],[20]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Array Access Expr n++ ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Assign Expr ASSIGN ","Simple Name assertEquals ","Double Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Name Expr binding ","Class Or Interface Type JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Expression Stmt ","Double Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name toFloat ","Name Expr JsonIterator ","Class Or Interface Type IOException ","Name Expr rawType ","Method Call Expr ","Class Or Interface Type JsonIterator ","Name Expr stream ","Method Call Expr ","Method Call Expr ","Simple Name toFloat ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_size-TestReadAny-","callMethodNameReferTo":{"17":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","37":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","28":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","46":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String"},"num":51,"succs":[[12,1],[2,23],[3,33],[42],[11,9,7,8,6,5],[],[7],[],[10],[],[],[3,2,0,1],[15,13,14],[],[16],[18,17],[],[21,20,19],[],[],[],[22],[],[26,25,24],[],[27],[28,29],[],[30,31,32],[],[],[],[22],[34,36,35],[],[27],[38,37],[41,40,39],[],[],[],[22],[45,44,43],[],[27],[46,47],[49,50,48],[],[],[],[22]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_size ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Zero  ","Method Call Expr ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name size ","Name Expr JsonIterator ","Simple Name deserialize ","Name Expr iter ","StringLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","IntegerLiteralExpr","Method Call Expr ","Simple Name size ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Return Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name name ","Name Expr JsonIterator ","Simple Name deserialize ","Simple Name getName ","Method Call Expr ","Expression Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name size ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_keys-TestReadAny-","callMethodNameReferTo":{"33":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","20":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String"},"num":38,"succs":[[10,1],[25],[5,7,4,9,6,3],[],[5],[],[8],[],[],[1,0],[11,12,13],[],[14,15],[20,21],[],[17,16,18],[],[],[19],[],[24,23,22],[],[],[],[19],[27,26,28],[],[29,30],[33,34],[],[31,32],[],[],[35,36,37],[],[],[],[19]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Simple Name List ","Simple Name test_keys ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name assertEquals ","Object Creation Expr HashSet<Object> Optional.empty Optional.empty ","Method Call Expr ","Class Or Interface Type HashSet ","Method Call Expr ","Name Expr Arrays ","Simple Name asList ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name keys ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name assertEquals ","Object Creation Expr HashSet<Object> Optional.empty Optional.empty ","Method Call Expr ","Class Or Interface Type HashSet ","Method Call Expr ","Name Expr Arrays ","Simple Name asList ","Method Call Expr ","Simple Name keys ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_double-TestReadAny-","callMethodNameReferTo":{"34":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","25":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","15":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String"},"num":39,"succs":[[11,1],[21,2],[30],[8,5,6,7,10,4],[],[6],[],[9],[],[],[1,0,2],[12,13,14],[],[],[16,15],[17,18,19],[],[],[],[20],[],[24,23,22],[],[],[25,26],[28,27,29],[],[],[],[20],[33,32,31],[],[],[34,35],[38,36,37],[],[],[],[20]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Return Stmt ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name assertEquals ","Double Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name toDouble ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Double Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name toDouble ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Class Or Interface Type JsonIterator ","Double Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name toDouble ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_class-TestReadAny-","callMethodNameReferTo":{"16":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String"},"num":30,"succs":[[10,1],[24],[9,5,6,7,4,3],[],[5],[],[8],[],[],[0,1],[13],[12],[],[12,14,15],[12],[16,17,18],[19,21,20],[],[23],[],[],[22],[],[],[27,26,25],[],[28],[11,29],[],[]],"attribute":["Method Call Expr ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_read_class ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Variable Declarator TestObject1 obj = ","Class Or Interface Type TestObject1 ","Method Call Expr ","Method Call Expr ","Simple Name as ","Class Expr TestObject1.class ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Class Or Interface Type TestObject1 ","Method Call Expr ","Expression Stmt ","Integer Literal Expr Note Zero  ","Field Access Expr ","IntegerLiteralExpr","Simple Name field1 "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_multiple_field-TestReadAny-","callMethodNameReferTo":{"48":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-Object","35":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-Object","53":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","72":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-Object","42":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-Object","27":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","60":"src/main/java/com/jsoniter/any/Any.java-toInt-Any-Object"},"num":75,"succs":[[1,16],[2,32],[3,39],[45,4],[5,51],[57,6],[63,7],[69],[11,15,13,12,10,9],[],[11],[],[14],[],[],[3,1,5,0,4,2,7,6],[25],[18],[],[18,17],[18,19],[18,20],[21],[22,21],[21,23],[27,18,26],[18],[28,30,29],[],[],[31],[],[34,35,33],[],[36],[37,38,17],[],[],[31],[40,41,42],[],[36],[43,19,44],[],[31],[47,46,48],[],[36],[49,50,20],[],[31],[52,21,53],[],[56,55,54],[],[],[31],[59,58,60],[],[36],[22,61,62],[],[31],[66,65,64],[],[36],[68,67,23],[],[31],[71,72,70],[],[36],[73,74,24],[],[31]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_read_multiple_field ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr any ","Class Or Interface Type Any ","Name Expr end ","Name Expr any ","Name Expr any ","Name Expr any ","Name Expr any ","Name Expr any ","Variable Declarator Any any = ","Name Expr ctx ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","IntegerLiteralExpr","Simple Name toInt ","String Literal Expr Not Empty  ","Method Call Expr ","Variable Declaration Expr ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name toInt ","String Literal Expr Not Empty  ","Method Call Expr ","Return Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name toInt ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Method Call Expr ","Return Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name toInt ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name toInt ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name toInt ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_require_path-TestReadAny-","callMethodNameReferTo":{"81":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String","28":"src/main/java/com/jsoniter/JsonIterator.java-deserialize-JsonIterator-String"},"num":117,"succs":[[1,25],[34,2,35,3,5],[36,13,9,5],[47,4,48],[13,9,49,5],[7,56,55,9,6],[57,13,9],[8,69,68],[13,9,70],[76,10,77,11,13],[13,78],[12,88,89],[13,90],[15,96,97,14],[98],[109,110,16],[111],[22,19,21,20,18,24],[],[20],[],[23],[],[],[1,0,13,9,5],[27,26],[],[28,29],[32,31,30],[],[],[],[33],[],[2],[46,3],[37,38],[41,40,39],[],[42,44,43],[],[45],[],[],[33],[],[4],[],[],[52,50,51],[53,54],[],[],[],[],[6],[7,67],[59,58],[60,61,62],[],[65,64,63],[],[45],[],[],[66],[],[8],[],[],[72,71,73],[74,75],[],[],[],[],[10],[87,11],[80,79],[83,81,82],[],[85,84,86],[],[33],[],[],[33],[12],[],[],[91,92,93],[94,95],[],[],[],[],[14],[15,108],[100,99],[102,101,103],[],[105,104,106],[],[33],[],[],[107],[],[16],[],[],[112,114,113],[116,115],[],[],[],[]],"attribute":["Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter JsonException e ","Expression Stmt ","If Stmt ","Expression Stmt ","Parameter JsonException e ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter JsonException e ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter JsonException e ","Variable Declaration Expr ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_require_path ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name assertNotNull ","Method Call Expr ","Method Call Expr ","Simple Name get ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Catch Clause ","Method Call Expr ","Method Call Expr ","Simple Name object ","Expression Stmt ","Simple Name get ","Integer Literal Expr Zero  ","Name Expr JsonIterator ","Array Access Expr i ","String Literal Expr Not Empty  ","Zero IntegerLiteralExpr","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Method Call Expr ","Field Access Expr ","Simple Name println ","Name Expr e ","Name Expr System ","Simple Name obj ","Block Stmt ","Catch Clause ","Method Call Expr ","Method Call Expr ","Simple Name object ","Method Call Expr ","Simple Name get ","Integer Literal Expr Zero  ","Name Expr ctx ","Name Expr DIGITS ","String Literal Expr Not Empty  ","Class Or Interface Type ArrayList ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Method Call Expr ","Field Access Expr ","Simple Name println ","Name Expr e ","Name Expr System ","Simple Name out ","Block Stmt ","Catch Clause ","Method Call Expr ","Method Call Expr ","Simple Name object ","Method Call Expr ","Simple Name get ","String Literal Expr Not Empty  ","Name Expr JsonIterator ","Simple Name getTypeName ","Class Or Interface Type Type ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Method Call Expr ","Field Access Expr ","Simple Name println ","Name Expr e ","Name Expr System ","Name Expr obj ","Block Stmt ","Catch Clause ","Method Call Expr ","Expression Stmt ","Simple Name object ","Method Call Expr ","Simple Name get ","String Literal Expr Not Empty  ","Name Expr Any ","Simple Name rewrap ","Object Creation Expr HashMap<String, Any> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Block Stmt ","Class Or Interface Type JsonException ","Simple Name e ","Method Call Expr ","Field Access Expr ","Simple Name println ","Simple Name e ","Name Expr stream ","String Literal Expr Not Empty  "]}
{"fileName":"src/test/java/com/jsoniter/TestReadAny.java","version":"0.9.22","methodName":"test_read_any_in_streaming-TestReadAny-","callMethodNameReferTo":{"81":"src/main/java/com/jsoniter/JsonIterator.java-readAny-JsonIterator-","5":"src/main/java/com/jsoniter/JsonIterator.java-readArray-JsonIterator-","24":"src/main/java/com/jsoniter/JsonIterator.java-readAny-JsonIterator-","42":"src/main/java/com/jsoniter/JsonIterator.java-readAny-JsonIterator-"},"num":91,"succs":[[19,1],[2,38],[3,54],[69,4],[77,5],[6,55,7,78],[79,4],[83],[11,12,16,9,14,13,10],[],[],[12],[],[15],[],[],[3,2,4,7,1,0],[18],[],[20,21,22],[],[23],[24,25,26],[],[28,27],[],[23],[32,29,31,30],[],[],[],[33,34],[23],[],[36,35],[37],[],[],[39,40,41],[],[23],[42,43],[44,45],[],[46,48,47,49],[],[],[],[50,51],[23],[],[52,53],[37],[],[58],[56,57],[],[56,55],[56,60,59],[56],[62,61,64,63],[],[],[66,65],[23],[],[67,68],[37],[],[73],[71],[],[70,71],[75,71,74],[71],[76],[],[6],[],[80,70,81],[],[82,57],[],[86,84,85],[],[37],[88,87],[89,72,90],[],[],[23]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","Single Member Annotation Expr @Category(StreamingCategory.class) ","PUBLIC","Void Type ","Simple Name test_read_any_in_streaming ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Class Expr StreamingCategory.class ","Class Or Interface Type StreamingCategory ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","IntegerLiteralExpr","Method Call Expr ","Simple Name toInt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name readAny ","Name Expr JsonIterator ","Simple Name parse ","Object Creation Expr ByteArrayInputStream Optional.empty Optional.empty ","Integer Literal Expr Note Zero  ","Class Or Interface Type ByteArrayInputStream ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name getBytes ","StringLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Method Call Expr ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name readAny ","Name Expr JsonIterator ","Simple Name parse ","Object Creation Expr ByteArrayInputStream Optional.empty Optional.empty ","Integer Literal Expr Note Zero  ","Class Or Interface Type ByteArrayInputStream ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name getBytes ","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Simple Name iter ","Variable Declarator JsonIterator iter = ","Return Stmt ","Method Call Expr ","Name Expr JsonIterator ","Simple Name parse ","Object Creation Expr ByteArrayInputStream Optional.empty Optional.empty ","Integer Literal Expr Note Zero  ","Class Or Interface Type ByteArrayInputStream ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name getBytes ","Variable Declaration Expr ","Name Expr elements ","Simple Name elements ","Name Expr elements ","Variable Declarator ArrayList<Any> elements = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<Any> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Simple Name readArray ","Method Call Expr ","Simple Name add ","Method Call Expr ","Simple Name readAny ","Method Call Expr ","Simple Name assertEquals ","Simple Name readNull ","Method Call Expr ","Method Call Expr ","Simple Name toString ","Simple Name get ","Integer Literal Expr Note Zero  "]}
