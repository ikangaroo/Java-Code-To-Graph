{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonIgnore.java","version":"0.9.22","hasMethodName":["test_ignore-TestAnnotationJsonIgnore-","test_ignore_decoding_only-TestAnnotationJsonIgnore-","getField1-TestAnnotationJsonIgnore.TestPrivateVariables-","test_private_serialize-TestAnnotationJsonIgnore-"]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonIgnore.java","version":"0.9.22","methodName":"test_ignore-TestAnnotationJsonIgnore-","callMethodNameReferTo":{"28":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":32,"succs":[[11,1],[19,2],[25],[6,8,5,7,10,4],[],[6],[],[9],[],[],[0,1,2],[15],[13],[],[12],[16,17,13],[13],[18],[],[21,22,20],[12,23],[],[24],[],[],[26,27,28],[],[29],[14,31,30],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_ignore ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Primitive Type int ","Simple Name obj ","Name Expr obj ","Variable Declarator TestObject1 obj = ","Class Or Interface Type TestObject1 ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Class Or Interface Type TestObject1 ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Name Expr obj ","Name Expr System ","IntegerLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Name Expr iter ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Parameter Type type "]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonIgnore.java","version":"0.9.22","methodName":"test_ignore_decoding_only-TestAnnotationJsonIgnore-","callMethodNameReferTo":{"28":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":32,"succs":[[1,11],[2,19],[25],[10,6,8,5,7,4],[],[6],[],[9],[],[],[2,0,1],[15],[13],[],[12],[17,16,13],[13],[18],[],[21,20,22],[23,12],[],[24],[],[],[26,27,28],[],[29],[30,31,14],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_ignore_decoding_only ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr any ","Name Expr ctx ","Name Expr obj ","Simple Name registerPropertyDecoder ","Name Expr JsoniterSpi ","Object Creation Expr TestObject2 Optional.empty Optional.empty ","Class Or Interface Type TestObject2 ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Primitive Type int ","Simple Name field4 ","IntegerLiteralExpr","Method Call Expr ","Expression Stmt ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize "]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonIgnore.java","version":"0.9.22","methodName":"getField1-TestAnnotationJsonIgnore.TestPrivateVariables-","callMethodNameReferTo":{},"num":8,"succs":[[4,3,2,1],[],[3],[],[5],[0,7,6],[],[]],"attribute":["If Stmt ","PUBLIC","Method Call Expr ","Simple Name getField1 ","Block Stmt ","Return Stmt ","ReturnStmt","Class Or Interface Type Object "]}
{"fileName":"src/test/java/com/jsoniter/output/TestAnnotationJsonIgnore.java","version":"0.9.22","methodName":"test_private_serialize-TestAnnotationJsonIgnore-","callMethodNameReferTo":{"28":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":31,"succs":[[11,1],[2,19],[25],[8,6,5,10,7,4],[],[6],[],[9],[],[],[2,0,1],[15],[13],[],[12],[13,17,16],[13],[18],[],[21,20,22],[23,12],[],[24],[],[],[27,28,26],[],[24],[14,30,29],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_private_serialize ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator TestPrivateVariables obj = ","Class Or Interface Type TestPrivateVariables ","Object Creation Expr TestPrivateVariables Optional.empty Optional.empty ","Class Or Interface Type TestPrivateVariables ","Assign Expr ASSIGN ","Name Expr JsonStream ","ASSIGN","Name Expr minimal ","Name Expr toGrow ","StringLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Simple Name iter ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize "]}
