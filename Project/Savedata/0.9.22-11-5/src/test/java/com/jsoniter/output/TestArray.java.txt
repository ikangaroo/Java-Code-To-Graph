{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","hasMethodName":["setUp-TestArray-","test_gen_array-TestArray-","test_collection-TestArray-","test_collection_without_type-TestArray-","test_empty_array-TestArray-","test_null_array-TestArray-","test_empty_collection-TestArray-","test_null_collection-TestArray-","test_list_of_objects-TestArray-","test_array_of_null-TestArray-","test_list_of_null-TestArray-","test_hash_set-TestArray-","test_arrays_as_list-TestArray-","test_default_empty_collection-TestArray-","test_indention-TestArray-","test_indention_with_empty_array-TestArray-"]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"setUp-TestArray-","callMethodNameReferTo":{},"num":19,"succs":[[1,7],[12],[6,5,4,3],[],[5],[],[1,0],[9,8,10],[],[],[11],[],[14,9,13],[],[17,15,16],[],[],[18],[]],"attribute":["Variable Declaration Expr ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name setup ","Block Stmt ","Expression Stmt ","Name Expr baos ","ASSIGN","Object Creation Expr ByteArrayOutputStream Optional.empty Optional.empty ","Class Or Interface Type ByteArrayOutputStream ","Expression Stmt ","Simple Name append ","Object Creation Expr JsonStream Optional.empty Optional.empty ","Class Or Interface Type JsonStream ","Name Expr baos ","Simple Name iter ","IntegerLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_gen_array-TestArray-","callMethodNameReferTo":{},"num":36,"succs":[[11,1],[2,21],[24],[10,8,5,7,6,4],[],[6],[],[9],[],[],[2,0,1],[14,13,12],[],[],[15,17,16],[],[],[19,18],[20],[20],[],[23,22],[],[],[26,27,25],[],[31,29,30,28],[34,35],[20],[],[32],[33],[],[],[],[]],"attribute":["Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_gen_array ","Throws","Simple Name STATIC_MODE ","IOException","Block Stmt ","Expression Stmt ","Simple Name append ","Simple Name writeVal ","Array Creation Expr String Array Creation Level Not Empty Array Initializer Expr ","Name Expr stream ","Array Creation Level Dimension Empty ","Array Initializer Expr ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Assign Expr ASSIGN ","Class Or Interface Type Object ","Name Expr lines ","Method Call Expr ","Expression Stmt ","Method Call Expr ","Method Call Expr ","Field Access Expr ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","'''","'''","Class Or Interface Type Type ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_collection-TestArray-","callMethodNameReferTo":{"35":"src/main/java/com/jsoniter/output/JsonStream.java-close-JsonStream-"},"num":50,"succs":[[1,14],[2,23],[27,3],[4,30],[5,35],[38],[9,11,13,10,7,8],[],[9],[],[12],[],[],[3,0,5,4,1,2],[19],[16],[],[16,15],[17,16],[16,20,21],[16],[22],[],[25,24,15],[],[26],[],[17,28,29],[],[26],[32,33,18,31],[],[],[34],[],[36,37],[],[],[41,39,40],[],[44,42,45,43],[49,48],[26],[],[46],[47],[],[],[],[]],"attribute":["Expression Stmt ","Name Expr JdkDatetimeSupport ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_collection ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Simple Name list ","Name Expr iter ","Void Type ","Variable Declarator ArrayList list = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Assign Expr ASSIGN ","Primitive Type int ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name add ","String Literal Expr Not Empty  ","Method Call Expr ","Class Or Interface Type Object ","Simple Name writeVal ","Object Creation Expr TypeLiteral<List<String>> Optional.empty Optional.empty ","Class Or Interface Type TypeLiteral ","Method Call Expr ","Simple Name append ","Name Expr lines ","Method Call Expr ","Class Or Interface Type JsonIterator ","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","'''","'''","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_collection_without_type-TestArray-","callMethodNameReferTo":{"30":"src/main/java/com/jsoniter/output/JsonStream.java-writeVal-JsonStream-String"},"num":48,"succs":[[14,1],[23,2],[27,3],[30,4],[5,33],[36],[9,11,8,10,13,7],[],[9],[],[12],[],[],[5,2,3,1,4,0],[19],[16],[],[15,16],[17,16],[20,16,21],[16],[22],[],[25,15,24],[],[26],[],[28,29,17],[],[26],[32,18,31],[],[],[34,35],[],[],[38,39,37],[],[40,41,43,42],[46,47],[26],[],[44],[45],[],[],[],[]],"attribute":["Variable Declaration Expr ","Method Call Expr ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_collection_without_type ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","This Expr ","Void Type ","Name Expr list ","Name Expr ctor ","Variable Declarator ArrayList list = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Expression Stmt ","Class Or Interface Type Any ","Simple Name element ","StringLiteralExpr","Method Call Expr ","Simple Name add ","Simple Name toFloat ","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Return Stmt ","Simple Name append ","Name Expr lines ","Method Call Expr ","Simple Name assertEquals ","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr ''' ","Char Literal Expr ''' ","'''","'''","Name Expr baos ","Simple Name getValue "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_empty_array-TestArray-","callMethodNameReferTo":{},"num":35,"succs":[[1,11],[2,19],[22],[6,8,5,10,7,4],[],[6],[],[9],[],[],[0,1,2],[13,12,14],[],[],[16,15],[],[],[18],[],[21,20],[],[],[24,23,25],[],[26,29,27,28],[33,34],[30],[],[31],[32],[],[],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_empty_array ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Assign Expr ASSIGN ","Class Or Interface Type Object ","Simple Name writeVal ","Array Creation Expr String Array Creation Level Not Empty ","Class Or Interface Type String ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Return Stmt ","Simple Name append ","Name Expr lines ","Method Call Expr ","Return Stmt ","Method Call Expr ","Method Call Expr ","Char Literal Expr 'r' ","Simple Name readInt ","Char Literal Expr ''' ","Char Literal Expr ''' ","StringLiteralExpr","'''","'''","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_null_array-TestArray-","callMethodNameReferTo":{},"num":34,"succs":[[1,11],[18,2],[21],[6,7,5,8,10,4],[],[6],[],[9],[],[],[0,1,2],[13,14,12,15],[],[],[16],[17],[],[],[19,20],[],[],[23,22,24],[],[26,28,25,27],[32,33],[29],[],[30],[31],[],[],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Primitive Type long ","Return Stmt ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Object Creation Expr TypeLiteral<String[]> Optional.empty Optional.empty ","Primitive Type long ","Class Or Interface Type TypeLiteral ","NullLiteralExpr","Return Stmt ","Simple Name append ","Name Expr cache ","Method Call Expr ","Class Or Interface Type JsonIterator ","Method Call Expr ","Method Call Expr ","Class Or Interface Type String ","Method Call Expr ","Name Expr iter ","Char Literal Expr ''' ","StringLiteralExpr","'''","'''","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_empty_collection-TestArray-","callMethodNameReferTo":{"16":"src/main/java/com/jsoniter/output/JsonStream.java-close-JsonStream-"},"num":32,"succs":[[1,11],[16,2],[19],[6,10,7,8,5,4],[],[6],[],[9],[],[],[2,1,0],[12,13,14],[],[],[15],[],[17,18],[],[],[22,21,20],[],[23,24,26,25],[30,31],[27],[],[28],[29],[],[],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_empty_collection ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Simple Name append ","Simple Name writeVal ","Object Creation Expr ArrayList Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name append ","Name Expr lines ","Method Call Expr ","Array Access Expr count++ ","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name valueOf ","Simple Name size ","Char Literal Expr ''' ","StringLiteralExpr","'''","'''","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_null_collection-TestArray-","callMethodNameReferTo":{},"num":34,"succs":[[11,1],[2,18],[21],[6,5,7,10,4,8],[],[6],[],[9],[],[],[2,0,1],[14,15,13,12],[],[],[16],[17],[],[],[20,19],[],[],[22,24,23],[],[25,27,26,28],[33,32],[29],[],[30],[31],[],[],[],[],[]],"attribute":["Expression Stmt ","Array Access Expr n++ ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_null_collection ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Class Or Interface Type Object ","Simple Name writeVal ","Object Creation Expr TypeLiteral<ArrayList> Optional.empty Optional.empty ","Void Type ","Class Or Interface Type TypeLiteral ","NullLiteralExpr","Return Stmt ","Simple Name append ","Name Expr lines ","Throw Stmt ","Array Access Expr count++ ","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Name Expr iter ","Char Literal Expr ''' ","StringLiteralExpr","'''","'''","Name Expr baos ","Integer Literal Expr Note Zero  "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_list_of_objects-TestArray-","callMethodNameReferTo":{"39":"src/main/java/com/jsoniter/output/JsonStream.java-close-JsonStream-"},"num":48,"succs":[[1,13],[22,2],[31,3],[4,39],[42],[7,8,12,9,10,6],[],[8],[],[11],[],[],[0,4,3,2,1],[18],[15,16],[],[],[14],[16,19,20],[16],[21],[],[24,23,25],[26,14],[],[29,15,28,27],[],[],[30],[30],[],[34,32,35,33],[],[],[36],[17,37,38],[],[],[],[41,40],[],[],[45,44,43],[],[30],[47,46],[],[]],"attribute":["Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_list_of_objects ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr buf ","String Literal Expr Not Empty  ","Simple Name obj ","Name Expr obj ","Variable Declarator TestObject1 obj = ","Class Or Interface Type TestObject1 ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Class Or Interface Type TestObject1 ","Method Call Expr ","Field Access Expr ","ASSIGN","Method Call Expr ","Name Expr stream ","Simple Name asList ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Name Expr stream ","Simple Name writeVal ","Object Creation Expr TypeLiteral<List<TestObject1>> Optional.empty Optional.empty ","Method Call Expr ","Class Or Interface Type TypeLiteral ","Name Expr Arrays ","Simple Name asList ","Method Call Expr ","Name Expr stream ","Name Expr cache ","Method Call Expr ","Class Or Interface Type JsonIterator ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_array_of_null-TestArray-","callMethodNameReferTo":{"19":"src/main/java/com/jsoniter/output/JsonStream.java-close-JsonStream-","11":"src/main/java/com/jsoniter/output/JsonStream.java-writeVal-JsonStream-String"},"num":29,"succs":[[11,1],[2,19],[22],[6,5,10,8,7,4],[],[6],[],[9],[],[],[2,0,1],[12,13,14],[],[],[15,16],[],[],[18],[],[20,21],[],[],[25,23,24],[],[26],[28,27],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_array_of_null ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Array Creation Expr TestObject1 Array Creation Level Not Empty ","Class Or Interface Type TestObject1 ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name append ","Name Expr Array ","Method Call Expr ","Array Access Expr count++ ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_list_of_null-TestArray-","callMethodNameReferTo":{},"num":58,"succs":[[15,1],[23,2],[32,3],[40,4],[5,44],[49,6],[52],[12,11,14,9,10,8],[],[10],[],[13],[],[],[5,2,0,6,1,4,3],[19],[18,17],[],[],[21,18,20],[18],[22],[],[24,25,26],[16,27],[],[28,29,30,17],[],[],[31],[31],[],[36],[34],[],[33,34],[38,37,34],[34],[39],[],[41,42,33],[],[43],[],[35,45,46,47],[],[],[48],[],[50,51],[],[],[55,53,54],[],[31],[57,56],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_list_of_null ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name length ","Simple Name obj ","Variable Declarator TestObject1 obj = ","Class Or Interface Type TestObject1 ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Class Or Interface Type TestObject1 ","Method Call Expr ","Simple Name assertNull ","ASSIGN","Method Call Expr ","Name Expr stream ","Simple Name asList ","Simple Name get ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Name Expr list ","Simple Name list ","Void Type ","Variable Declarator ArrayList<TestObject1> list = ","Return Stmt ","Object Creation Expr ArrayList<TestObject1> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name add ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name append ","Simple Name writeVal ","Object Creation Expr TypeLiteral<List<TestObject1>> Optional.empty Optional.empty ","Class Or Interface Type TypeLiteral ","Method Call Expr ","Simple Name append ","Simple Name toInt ","Method Call Expr ","Class Or Interface Type TestObject18 ","String Literal Expr Not Empty  ","Method Call Expr ","Name Expr baos ","Simple Name toString "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_hash_set-TestArray-","callMethodNameReferTo":{"36":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object","15":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":39,"succs":[[1,12],[21,2],[3,29],[33],[11,6,7,8,9,5],[],[7],[],[10],[],[],[3,0,1,2],[13,15,14],[],[16],[18,19,17],[],[],[],[20],[],[25],[23],[],[23,22],[23,27,26],[23],[28],[],[31,30,22],[],[32],[],[34,35,36],[],[16],[38,24,37],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Declaration ","PUBLIC","Void Type ","String Literal Expr Not Empty  ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Name Expr JsonIterator ","Name Expr iter ","Method Call Expr ","StringLiteralExpr","Enclosed Expr ","Simple Name serialize ","Object Creation Expr HashSet<Integer> Optional.empty Optional.empty ","Class Or Interface Type HashSet ","Variable Declaration Expr ","Name Expr set ","Simple Name set ","Name Expr set ","Variable Declarator HashSet<Integer> set = ","Class Or Interface Type HashSet ","Object Creation Expr HashSet<Integer> Optional.empty Optional.empty ","Class Or Interface Type HashSet ","Method Call Expr ","Simple Name add ","Name Expr c ","IntegerLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Variable Declarator int i = ","Method Call Expr ","Name Expr JsonStream ","Simple Name serialize "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_arrays_as_list-TestArray-","callMethodNameReferTo":{"12":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":23,"succs":[[2,3,7,4,5,1],[],[3],[],[6],[],[],[8],[9],[12,10,11],[],[13],[15,16,14],[],[],[],[17,18,20,19,21],[],[],[22],[22],[22],[]],"attribute":["Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_arrays_as_list ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Simple Name nextToken ","Method Call Expr ","Name Expr Arrays ","Simple Name asList ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr"]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_default_empty_collection-TestArray-","callMethodNameReferTo":{"12":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object"},"num":19,"succs":[[7,3,5,4,2,1],[],[3],[],[6],[],[],[8],[9],[10,12,11],[],[13],[16,14,15],[],[],[],[18,17],[],[]],"attribute":["Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_default_empty_collection ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Method Call Expr ","Expression Stmt ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize ","Method Call Expr ","Name Expr Collections ","Simple Name emptySet "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_indention-TestArray-","callMethodNameReferTo":{"33":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object-OutputStream","66":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object-OutputStream"},"num":81,"succs":[[9,1],[30,2],[50,3],[63],[8,6,7,5],[],[7],[],[1,3,2,0],[16],[11],[],[10],[14,10,12],[],[13],[18,10,17],[10],[20,19],[23,22,21],[],[26,24,25],[],[29],[27],[],[11,28],[],[],[],[33,32,31],[],[36,35,34],[42,44,43,12],[38,37,35],[],[41],[39,40,35],[41],[41],[41],[],[],[],[47,45,46],[],[],[48,49],[29],[29],[51,52,13],[],[53,54],[55,56,57],[],[58,60,59],[],[29],[61],[],[62,14],[],[],[64,65,66],[],[68,67,35],[74,15,75,73],[70,35,69],[41],[72,71,35],[41],[41],[41],[],[],[78,77,76],[],[],[79,80],[29],[29]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_indention ","Block Stmt ","Variable Declaration Expr ","Simple Name cfg ","Name Expr EncodingMode ","Name Expr cfg ","Class Or Interface Type Any ","Name Expr EncodingMode ","Name Expr cfg ","Variable Declarator Config cfg = ","Simple Name append ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name encodingMode ","Field Access Expr ","Field Access Expr ","Simple Name REFLECTION_MODE ","IntegerLiteralExpr","Method Call Expr ","Expression Stmt ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","PLUS","Class Or Interface Type Any ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Simple Name token ","String Literal Expr Not Empty  ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","String Literal Expr Not Empty  ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Class Or Interface Type JsonException ","Simple Name e ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name encodingMode ","Field Access Expr ","Class Or Interface Type Builder ","Simple Name DYNAMIC_MODE ","Method Call Expr ","Simple Name assertEquals ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Class Or Interface Type Class ","Name Expr existing ","Name Expr JsonStream ","Simple Name serialize ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  "]}
{"fileName":"src/test/java/com/jsoniter/output/TestArray.java","version":"0.9.22","methodName":"test_indention_with_empty_array-TestArray-","callMethodNameReferTo":{"33":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object-OutputStream","57":"src/main/java/com/jsoniter/output/JsonStream.java-serialize-JsonStream-Object-OutputStream"},"num":64,"succs":[[1,9],[2,30],[3,41],[54],[8,7,6,5],[],[7],[],[0,1,3,2],[16],[11],[],[10],[10,12,14],[],[13],[10,18,17],[10],[19,20],[22,21,23],[],[24,25,26],[],[29],[27],[],[28,11],[],[],[],[33,31,32],[],[34],[12,36,37,35],[],[],[],[38,39,40],[],[],[],[42,43,13],[],[45,44],[46,48,47],[],[49,50,51],[],[29],[52],[],[14,53],[],[],[56,55,57],[],[34],[58,60,15,59],[],[],[63,62,61],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_indention_with_empty_array ","Block Stmt ","Variable Declaration Expr ","Simple Name cfg ","Name Expr EncodingMode ","Name Expr cfg ","Primitive Type int ","Name Expr EncodingMode ","Name Expr cfg ","Variable Declarator Config cfg = ","Simple Name append ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name indentionStep ","Integer Literal Expr Note Zero  ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name encodingMode ","Field Access Expr ","Class Or Interface Type Builder ","Simple Name REFLECTION_MODE ","IntegerLiteralExpr","Method Call Expr ","Simple Name assertEquals ","Class Or Interface Type Long ","Method Call Expr ","StringLiteralExpr","Name Expr JsonStream ","Simple Name serialize ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name objectFactory ","Integer Literal Expr Note Zero  ","Object Creation Expr Config.Builder Optional.empty Optional.empty ","Simple Name encodingMode ","Field Access Expr ","Name Expr IterImplString ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name assertEquals ","String Literal Expr Not Empty  ","Method Call Expr ","Array Access Expr r2 ","Simple Name serialize ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr "]}
