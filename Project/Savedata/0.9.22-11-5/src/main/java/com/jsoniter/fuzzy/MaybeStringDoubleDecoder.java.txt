{"fileName":"src/main/java/com/jsoniter/fuzzy/MaybeStringDoubleDecoder.java","version":"0.9.22","hasMethodName":["decodeDouble-MaybeStringDoubleDecoder-JsonIterator"]}
{"fileName":"src/main/java/com/jsoniter/fuzzy/MaybeStringDoubleDecoder.java","version":"0.9.22","methodName":"decodeDouble-MaybeStringDoubleDecoder-JsonIterator","callMethodNameReferTo":{"39":"src/main/java/com/jsoniter/CodegenAccess.java-nextToken-CodegenAccess-JsonIterator","60":"src/main/java/com/jsoniter/CodegenAccess.java-nextToken-CodegenAccess-JsonIterator","45":"src/main/java/com/jsoniter/CodegenAccess.java-unreadByte-CodegenAccess-JsonIterator"},"num":73,"succs":[[29,1],[2,41],[5,3,42,32,43],[4,45],[5,49,11,48],[51,6],[7,58],[8,62],[10,35,42,63,9],[10,64],[11,48,53],[12,18,14,20,16,17,13,15],[],[],[15],[],[28,22],[19],[],[],[10,7,5,0,6,1],[22],[],[21,22],[23,22],[24,22],[25,22],[26,22],[],[37],[21,31],[],[30],[34,32,30,26],[],[33],[35,8,33],[38,30,39],[30],[21,40,31],[],[3,4],[],[44],[],[23,47,46],[],[],[],[50,24],[],[54],[25],[52],[56,55,52],[52],[25,57],[],[60,59,33],[],[34,26,61],[],[9],[44],[65,27,66,67],[],[68],[71,69,70],[],[68],[],[72,36],[]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Name Expr JsoniterSpi ","Method Declaration Throws ","Name Expr nextToken ","PUBLIC","Primitive Type double ","Simple Name decodeDouble ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Boolean Literal Expr true ","Simple Name args ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name lang ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name c ","Name Expr CodegenAccess ","Name Expr c ","Name Expr c ","Binary Expr EQUALS ","Name Expr c ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Method Call Expr ","Simple Name nextToken ","Block Stmt ","NOT_EQUALS","Char Literal Expr ''' ","'''","Method Call Expr ","Name Expr CodegenAccess ","Simple Name unreadByte ","ReturnStmt","Method Call Expr ","Simple Name readDouble ","Variable Declaration Expr ","Simple Name out ","Name Expr val ","Variable Declarator double val = ","Name Expr System ","Method Call Expr ","Simple Name readDouble ","Return Stmt ","ASSIGN","Method Call Expr ","Simple Name nextToken ","Block Stmt ","Char Literal Expr ''' ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","StringLiteralExpr","String Literal Expr Not Empty  ","PLUS","Name Expr cacheKey ","Primitive Type char "]}
