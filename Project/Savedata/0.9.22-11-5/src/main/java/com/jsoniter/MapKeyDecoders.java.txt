{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.22","hasMethodName":["registerOrGetExisting-MapKeyDecoders-Type","createMapKeyDecoder-MapKeyDecoders-Type","decode-MapKeyDecoders.StringKeyDecoder-JsonIterator","decode-MapKeyDecoders.NumberKeyDecoder-JsonIterator"]}
{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.22","methodName":"registerOrGetExisting-MapKeyDecoders-Type","callMethodNameReferTo":{"51":"src/main/java/com/jsoniter/spi/JsoniterSpi.java-addNewMapDecoder-JsoniterSpi-String-Decoder","38":"src/main/java/com/jsoniter/spi/JsoniterSpi.java-getMapKeyDecoder-JsoniterSpi-String","26":"src/main/java/com/jsoniter/spi/JsoniterSpi.java-getMapKeyDecoderCacheKey-JsoniterSpi-Type"},"num":98,"succs":[[1,19],[28,2],[40,3],[5,41,31,42,4],[5,8,32,44],[45,6],[51,7],[8,44,35],[13,12,10,14,11,9],[10],[],[12],[],[18,16],[0,1,5,7,2,6],[16],[],[15,49,16],[],[24],[15,21],[],[20],[20,22],[25,26,20],[20],[15,21,27],[],[36],[30,22],[],[29],[31,3,29],[32,17,29],[33],[34,33],[38,37,29],[29],[30,39,22],[],[4],[43],[],[],[],[46,33,47],[],[17,48,50],[],[],[62,64,63,66,10,65],[53,34,52,23],[],[],[55,71],[73,67,72,57,56],[57,50,75,44],[77,58],[59,88],[89,80,42,61,60],[90,50,44,61],[92],[10],[64],[],[49,70],[58,57,54,61],[49],[67,49],[49,68],[],[56],[74],[],[],[76],[],[82],[79,68],[],[78],[59,78,80],[84,78,83],[78],[86,68,85],[87,79],[],[],[60],[43],[91,81],[],[93,94],[],[95,69,96],[97],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type Decoder ","Simple Name registerOrGetExisting ","Parameter Type mapKeyType ","Block Stmt ","Name Expr mapKeyType ","Simple Name mapKeyType ","Name Expr mapKeyType ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name cacheKey ","Name Expr JsoniterSpi ","Name Expr cacheKey ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Name Expr mapKey ","Method Call Expr ","Simple Name getMapKeyDecoderCacheKey ","Variable Declaration Expr ","Simple Name mapKeyDecoder ","Name Expr JsoniterSpi ","Name Expr mapKeyDecoder ","Name Expr mapKeyDecoder ","Name Expr mapKeyDecoder ","Name Expr mapKeyDecoder ","Name Expr mapKeyDecoder ","Variable Declarator Decoder mapKeyDecoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getMapKeyDecoder ","Block Stmt ","Null Literal Expr ","NOT_EQUALS","NullLiteralExpr","ReturnStmt","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name createMapKeyDecoder ","Simple Name mapKeyType ","Method Declaration ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewMapDecoder ","If Stmt ","Field Access Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Simple Name lastRequiredIdx ","Return Stmt ","Throw Stmt ","PRIVATE","Simple Name println ","Simple Name createMapKeyDecoder ","Parameter Type mapKeyType ","Block Stmt ","Name Expr mapKeyType ","Name Expr mapKeyType ","Name Expr mapKeyType ","Class Or Interface Type Type ","Block Stmt ","Field Access Expr ","EQUALS","Class Or Interface Type String ","Object Creation Expr StringKeyDecoder Optional.empty Optional.empty ","Class Or Interface Type StringKeyDecoder ","Variable Declaration Expr ","Simple Name decoder ","Name Expr CodegenImplNative ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name NATIVE_DECODERS ","Block Stmt ","Null Literal Expr ","Object Creation Expr NumberKeyDecoder Optional.empty Optional.empty ","Class Or Interface Type NumberKeyDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.22","methodName":"createMapKeyDecoder-MapKeyDecoders-Type","callMethodNameReferTo":{},"num":50,"succs":[[1,20],[15,22,21,3,2],[3,25,8,24],[27,4],[5,38],[40,30,39,7,6],[42,8,24,7],[44],[9,12,11,14,10,13],[10],[],[12],[],[16,19],[4,3,0,7],[16],[],[15,16],[16,17],[],[2],[23],[],[],[],[26],[],[32],[29,17],[],[28],[5,28,30],[34,28,33],[28],[36,17,35],[37,29],[],[],[6],[],[41],[],[43,31],[],[45,46],[],[47,18,48],[49],[],[]],"attribute":["If Stmt ","Field Access Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Simple Name lastRequiredIdx ","Return Stmt ","Throw Stmt ","Method Declaration ","PRIVATE","STATIC","Simple Name println ","Simple Name createMapKeyDecoder ","Parameter Type mapKeyType ","Block Stmt ","Name Expr mapKeyType ","Simple Name mapKeyType ","Name Expr mapKeyType ","Name Expr mapKeyType ","Class Or Interface Type Type ","Block Stmt ","Field Access Expr ","EQUALS","Class Or Interface Type String ","ReturnStmt","Object Creation Expr StringKeyDecoder Optional.empty Optional.empty ","Class Or Interface Type StringKeyDecoder ","Variable Declaration Expr ","Simple Name decoder ","Name Expr CodegenImplNative ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name NATIVE_DECODERS ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Object Creation Expr NumberKeyDecoder Optional.empty Optional.empty ","Class Or Interface Type NumberKeyDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.22","methodName":"decode-MapKeyDecoders.StringKeyDecoder-JsonIterator","callMethodNameReferTo":{},"num":17,"succs":[[3,5,7,6,9,1,4,2],[],[],[4],[],[12,13],[8],[],[],[10],[14,15,0],[12],[],[],[],[11,16],[]],"attribute":["Method Declaration Throws ","Simple Name fillCache ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Return Stmt ","Simple Name lang ","Simple Name iter ","Class Or Interface Type JsonIterator ","ReturnStmt","Method Call Expr ","Simple Name readString "]}
{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.22","methodName":"decode-MapKeyDecoders.NumberKeyDecoder-JsonIterator","callMethodNameReferTo":{"48":"src/main/java/com/jsoniter/IterImpl.java-nextToken-IterImpl-JsonIterator","26":"src/main/java/com/jsoniter/IterImpl.java-nextToken-IterImpl-JsonIterator","43":"src/main/java/com/jsoniter/spi/Decoder.java-decode-Decoder-JsonIterator"},"num":68,"succs":[[25,1],[3,2,26,28,27],[3,32],[37,4],[47,5],[48,7,6,27,49],[7,52],[40,8,56],[11,15,13,9,14,17,12,10],[],[],[12],[],[19,24],[16],[],[],[0,7,3,4],[19],[],[19,1,18],[19,45,20],[19,21],[19,5,22],[],[2],[29,30,18],[],[31],[],[],[],[34,20,33,35],[],[36],[36],[],[41],[21,39],[],[38],[42,43,38],[38],[44,21,39,46],[],[],[58,60,61,14,57,62,59,10],[6],[51,50,22],[31],[],[],[53,55,23,54],[],[36],[36],[],[],[59],[],[45,65],[],[63],[56,46,66],[45],[],[64,67],[]],"attribute":["If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Return Stmt ","For Stmt ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Method Call Expr ","NOT_EQUALS","Char Literal Expr ''' ","Name Expr IterImpl ","Simple Name nextToken ","'''","Method Call Expr ","Simple Name newInstance ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name key ","Name Expr decoder ","Name Expr key ","Variable Declarator Object key = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name decode ","Simple Name iter ","Method Declaration Throws ","Block Stmt ","Method Call Expr ","Char Literal Expr ''' ","Name Expr IterImpl ","Simple Name nextToken ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","ReturnStmt","Simple Name fillCache ","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Return Stmt ","Simple Name lang ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name readString "]}
