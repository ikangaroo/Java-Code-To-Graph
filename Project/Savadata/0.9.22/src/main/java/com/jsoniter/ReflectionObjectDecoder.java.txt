{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","hasMethodName":["init-ReflectionObjectDecoder-ClassInfo","addBinding-ReflectionObjectDecoder-ClassInfo-Binding","create-ReflectionObjectDecoder-","decode-ReflectionObjectDecoder.OnlyField-JsonIterator","decode_-ReflectionObjectDecoder.OnlyField-JsonIterator","decode-ReflectionObjectDecoder.WithCtor-JsonIterator","decode_-ReflectionObjectDecoder.WithCtor-JsonIterator","decode-ReflectionObjectDecoder.WithWrapper-JsonIterator","decode_-ReflectionObjectDecoder.WithWrapper-JsonIterator","setToBinding-ReflectionObjectDecoder-Object-Binding-Object","setExtra-ReflectionObjectDecoder-Object-Map<String,Object>","canNotSetDirectly-ReflectionObjectDecoder-Binding","decodeBinding-ReflectionObjectDecoder-JsonIterator-Binding","decodeBinding-ReflectionObjectDecoder-JsonIterator-Object-Binding","onUnknownProperty-ReflectionObjectDecoder-JsonIterator-Slice-Map<String,Object>","collectMissingFields-ReflectionObjectDecoder-long","applyWrappers-ReflectionObjectDecoder-Object[]-Object","createNewObject-ReflectionObjectDecoder-JsonIterator-Object[]","createNewObject-ReflectionObjectDecoder-Object"]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"init-ReflectionObjectDecoder-ClassInfo","callMethodNameReferTo":{"75":"srcmainjavacomjsoniterspiClassDescriptor.java-getDecodingClassDescriptor-ClassDescriptor-ClassInfo-boolean"},"num":365,"succs":[[52,1],[2,60],[80,3,4],[84,85,6,4],[82,5],[3,87],[7,92],[8,98],[9,10,100,99,101],[10,121],[129,11,12],[68,14,12,133],[13,131],[134,11],[16,15,136],[140,16,69,18],[138,17],[141,15],[20,19,143],[20,147,70,25],[21,145],[23,148,22],[144,23,152,19],[150,24],[22,153],[26,155],[156,28,27,157,158],[28,160],[29,163],[30,175],[177,178,31,176],[32,190],[33,193],[199],[38,39,35,37,40,41,36,43],[36],[],[38],[],[45,51],[42,293],[],[],[0,29,18,14,28,10,6,25,1,7,2],[45],[],[44,45],[89,45,46],[89,45,47],[48,89,45],[89,45,49],[],[56],[44],[53],[54,53],[57,53,58],[53],[44,59],[],[73],[46],[61],[61,62],[61,63],[64,61],[65,61],[66,8,61],[67,61],[68,61],[69,61],[70,61],[71,61],[74,75,61],[61],[78,76,77,46],[],[],[79],[],[5],[90,82],[83],[82],[62,86],[],[],[91,81,47,88],[],[],[],[231,235,234,232,35,233],[93,94,63],[95,96],[],[97],[],[],[9],[103,100,102],[],[117,105,116],[105,104,106],[112,105,111],[108,107],[],[110],[109,64],[],[],[],[114,113],[110],[115,65],[],[],[119,118],[110],[66,120],[],[],[123,122],[],[126,125,124],[127],[],[67,128],[],[],[13],[90,131],[132],[131],[],[48,135,91,130],[],[17],[90,138],[139],[138],[],[137,91,49,142],[],[21],[145],[146],[145],[],[24],[90,150],[151],[150],[],[91,50,149,154],[],[27],[],[],[159],[],[161,162],[],[127],[94,164,165],[],[166,168,167],[169,170],[],[171],[],[],[172,174,173],[159],[],[],[32,33,31],[179,180],[],[186,180],[182,181],[],[184,183],[],[71,185],[],[],[187,188],[72,189],[],[],[192,94,191],[],[],[94,195,194],[],[197,196,125],[127],[54,198],[],[200,94,201],[],[125,203,202],[127],[55,204],[],[206,259],[208,105,260,261,207],[208,91,266],[267,209],[238,268,210,212],[211,269],[276,212],[213,279],[241,215,280,214],[215,281],[216,304],[306,105,217,305,218],[218,308],[219,315],[317,105,220,221,316],[319,221],[222,330],[223,224,333],[338,224,255,230],[225,335],[339,226],[227,348],[341,350,349,228,229],[351,229],[223,360],[363],[232],[],[89,257],[90,258],[222,208,215,205,230,221,218,212],[89],[90],[90,237],[90,238,240,209],[],[239],[243,213,239],[241,213,239],[242],[216,242,246,247],[],[216,242,244],[245],[252,219,250,251,245],[],[248,219,245],[219,251,245],[249,254],[],[253],[255,253],[],[],[207],[263,262],[265],[264,237],[],[],[],[],[211,210],[],[94,271,270],[272,239],[274,240,273],[],[275],[],[],[277,278],[],[],[214],[],[94,282,283],[242,284],[285],[],[],[294,291,290,288,40,292,287,289],[],[],[290],[],[295,296],[],[],[297],[],[],[298],[299,300],[],[302,301,125],[127],[243,303],[],[217],[307,244],[110],[],[94,310,309],[311,245],[312,313,246],[],[],[247,314],[],[220],[248,318],[110],[],[320,94,321],[249,322],[325,250,323,324],[],[],[326,327],[252,329],[328,251],[],[],[],[94,254,331],[332,253],[],[225,229,226],[335],[337],[334,335],[335],[],[343],[334],[340],[341,340],[344,340,345],[340],[346,334,347],[],[],[228],[],[],[353,352],[],[336,125,354],[355,125,356],[357,125,358],[127],[127],[236,359],[],[362,361,256,342],[],[],[364,278],[]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr AND ","Throw Stmt ","If Stmt ","Field Access Expr ","Name Expr CodegenAccess ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","FINAL","Void Type ","Simple Name init ","Parameter ClassInfo classInfo ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr classInfo ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Class Or Interface Type ClassInfo ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Field Access Expr ","Simple Name clazz ","Variable Declaration Expr ","Simple Name desc ","Name Expr desc ","Simple Name lang ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Variable Declarator ClassDescriptor desc = ","Class Or Interface Type ClassDescriptor ","Method Call Expr ","Name Expr ClassDescriptor ","Simple Name getDecodingClassDescriptor ","Boolean Literal Expr true ","true","Block Stmt ","Simple Name entry ","Simple Name param ","Class Or Interface Type Binding ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Expression Stmt ","Simple Name addBinding ","Simple Name classInfo ","Simple Name binding ","Method Declaration ","Throw Stmt ","Field Access Expr ","ASSIGN","This Expr ","Simple Name desc ","ThisExpr","Block Stmt ","Binary Expr AND ","AND","Binary Expr EQUALS ","Binary Expr EQUALS ","Binary Expr EQUALS ","Field Access Expr ","EQUALS","Null Literal Expr ","Simple Name nextToken ","Class Or Interface Type JsonException ","Simple Name ctor ","NullLiteralExpr","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name ctor ","Simple Name ctor ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name staticFactory ","Simple Name ctor ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Field Access Expr ","StringLiteralExpr","Simple Name clazz ","Block Stmt ","Simple Name value ","Simple Name field ","Class Or Interface Type Binding ","Simple Name fields ","Method Call Expr ","Switch Entry Stmt ","Block Stmt ","Name Expr setter ","Simple Name setter ","Class Or Interface Type Binding ","Simple Name setters ","Method Call Expr ","Simple Name addBinding ","Block Stmt ","Name Expr setter ","Simple Name setter ","Class Or Interface Type WrapperDescriptor ","Simple Name bindingTypeWrappers ","Block Stmt ","Name Expr param ","Simple Name count ","Class Or Interface Type Binding ","Simple Name parameters ","Method Call Expr ","Simple Name addBinding ","Block Stmt ","Name Expr requiredIdx ","GREATER","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Expression Stmt ","Return Stmt ","Binary Expr SIGNED_RIGHT_SHIFT ","Field Access Expr ","SIGNED_RIGHT_SHIFT","Enclosed Expr ","Simple Name head ","Simple Name MAX_VALUE ","Binary Expr MINUS ","Integer Literal Expr Note Zero  ","MINUS","Name Expr requiredIdx ","Block Stmt ","Unary Expr ! ","OR","Unary Expr ! ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name isEmpty ","Field Access Expr ","Simple Name parameters ","Name Expr iter ","Method Call Expr ","Class Or Interface Type HashMap ","Simple Name isEmpty ","Simple Name bindingTypeWrappers ","Assign Expr ASSIGN ","Name Expr tempCount ","Name Expr tempIdx ","Assign Expr ASSIGN ","Name Expr tempCacheKey ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getCanonicalName ","Assign Expr ASSIGN ","Name Expr JsonIteratorPool ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name getCanonicalName ","If Stmt ","Binary Expr EQUALS ","Unary Expr ++ ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Method Call Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Throw Stmt ","Expression Stmt ","Expression Stmt ","Name Expr iter ","Simple Name unreadByte ","Parameter ClassInfo classInfo ","Parameter final Binding binding ","Block Stmt ","Name Expr classInfo ","Name Expr binding ","Unary Expr ++ ","Name Expr binding ","Name Expr requiredIdx ","Name Expr keyType ","Return Stmt ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr JsoniterSpi ","Name Expr binding ","Simple Name element ","Name Expr element ","Name Expr Codegen ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr tempIdx ","Name Expr binding ","Name Expr binding ","Field Access Expr ","Parameter byte b4 ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Zero IntegerLiteralExpr","ReturnStmt","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr ASSIGN ","Expression Stmt ","Binary Expr LEFT_SHIFT ","Simple Name mask ","Long Literal Expr Note Zero  ","LEFT_SHIFT","LongLiteralExpr","Unary Expr ++ ","Name Expr requiredIdx ","POSTFIX_INCREMENT","Block Stmt ","Method Call Expr ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr Decoder Optional.empty Optional.empty ","Name Expr decoder ","Class Or Interface Type Decoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Simple Name rewrap ","Name Expr result ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","IOException","Block Stmt ","Class Or Interface Type JsonIterator ","Simple Name iter ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name name ","Block Stmt ","Method Call Expr ","Null Literal Expr ","Simple Name decoder ","Assign Expr ASSIGN ","Array Access Expr n++ ","Method Call Expr ","Simple Name decoder ","Simple Name getDecoder ","Method Call Expr ","Simple Name decoderCacheKey ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Unary Expr -- ","Assign Expr ASSIGN ","Binary Expr EQUALS ","Method Call Expr ","Name Expr encoder ","Simple Name getDecoder ","Method Call Expr ","Field Access Expr ","Field Access Expr ","Simple Name getDecoderCacheKey ","Simple Name valueTypeLiteral ","Simple Name valueType ","Assign Expr ASSIGN ","Field Access Expr ","Name Expr ctx ","Block Stmt ","Name Expr fromName ","Name Expr notFirst ","Name Expr fromName ","Class Or Interface Type String ","Simple Name fromNames ","Variable Declaration Expr ","Simple Name slice ","Name Expr slice ","Name Expr slice ","Variable Declarator Slice slice = ","Class Or Interface Type Slice ","Method Call Expr ","Name Expr Slice ","Simple Name make ","Block Stmt ","Name Expr allBindings ","Simple Name containsKey ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name clazz ","Method Call Expr ","Method Call Expr ","Simple Name put ","Unary Expr ++ ","Name Expr tempIdx "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"addBinding-ReflectionObjectDecoder-ClassInfo-Binding","callMethodNameReferTo":{"115":"srcmainjavacomjsoniterspiJsoniterSpi.java-getDecoder-JsoniterSpi-String","150":"srcmainjavacomjsoniterspiSlice.java-make-Slice-String","126":"srcmainjavacomjsoniterCodegen.java-getDecoder-Codegen-String-Type"},"num":170,"succs":[[1,58],[3,60,59,61,2],[3,26,66],[67,4],[37,68,5,7],[6,69],[77,7],[8,80],[40,10,81,9],[10,82],[11,108],[110,60,12,109,13],[13,113],[14,120],[122,60,15,16,121],[124,16],[17,135],[18,19,138],[143,19,54,25],[20,140],[144,21],[22,153],[146,155,154,23,24],[156,24],[18,165],[168],[28,31,32,29,27,30],[],[29],[],[34,56],[36,57],[17,3,10,0,25,16,13,7],[34],[],[36],[],[36,35],[36,37,39,4],[],[38],[42,8,38],[40,8,38],[41],[11,41,45,46],[],[11,41,43],[44],[51,14,49,50,44],[],[47,14,44],[14,50,44],[48,53],[],[52],[54,52],[],[],[2],[63,62],[],[65],[64,35],[],[],[],[],[6,5],[],[71,72,70],[73,38],[],[75,39,74],[],[76],[],[],[78,79],[],[],[9],[],[71,83,84],[41,85],[86],[],[],[96,92,91,93,89,94,90,88],[],[],[91],[],[97,98],[95],[],[],[99],[],[],[100],[101,102],[],[105,103,104],[106],[],[42,107],[],[],[12],[111,43],[112],[],[],[71,115,114],[116,44],[117,118,45],[],[],[46,119],[],[15],[47,123],[112],[],[125,71,126],[48,127],[130,49,128,129],[],[],[131,132],[51,134],[133,50],[],[],[],[71,53,136],[137,52],[],[20,21,24],[140],[142],[139,140],[140],[],[148],[139],[145],[146,145],[149,145,150],[145],[151,139,152],[],[],[23],[],[],[158,157],[],[141,104,159],[160,104,161],[162,104,163],[106],[106],[33,164],[],[167,166,55,147],[],[],[169,79],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Unary Expr ++ ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Method Call Expr ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Throw Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","Name Expr iter ","Simple Name unreadByte ","Parameter ClassInfo classInfo ","Parameter final Binding binding ","Block Stmt ","Name Expr classInfo ","Simple Name classInfo ","Name Expr binding ","Simple Name binding ","Unary Expr ++ ","Name Expr binding ","Name Expr requiredIdx ","Name Expr keyType ","Return Stmt ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr JsoniterSpi ","Name Expr binding ","Simple Name element ","Name Expr element ","Name Expr Codegen ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr tempIdx ","Name Expr binding ","Name Expr binding ","Field Access Expr ","Parameter byte b4 ","Block Stmt ","Field Access Expr ","EQUALS","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Zero IntegerLiteralExpr","ReturnStmt","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr ASSIGN ","Expression Stmt ","ASSIGN","Binary Expr LEFT_SHIFT ","Simple Name mask ","Long Literal Expr Note Zero  ","LEFT_SHIFT","LongLiteralExpr","Unary Expr ++ ","Name Expr requiredIdx ","POSTFIX_INCREMENT","Block Stmt ","Method Call Expr ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr Decoder Optional.empty Optional.empty ","Name Expr decoder ","Class Or Interface Type Decoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Simple Name rewrap ","Name Expr result ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Class Or Interface Type JsonIterator ","Simple Name iter ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Field Access Expr ","StringLiteralExpr","Simple Name name ","Block Stmt ","Method Call Expr ","Null Literal Expr ","Simple Name decoder ","NullLiteralExpr","Assign Expr ASSIGN ","Array Access Expr n++ ","Method Call Expr ","Simple Name decoder ","Simple Name getDecoder ","Method Call Expr ","Simple Name decoderCacheKey ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Unary Expr -- ","Assign Expr ASSIGN ","Binary Expr EQUALS ","Method Call Expr ","Name Expr encoder ","Simple Name getDecoder ","Method Call Expr ","Field Access Expr ","Field Access Expr ","Simple Name getDecoderCacheKey ","Simple Name valueTypeLiteral ","Simple Name valueType ","Assign Expr ASSIGN ","Field Access Expr ","Name Expr ctx ","Block Stmt ","Name Expr fromName ","Name Expr notFirst ","Name Expr fromName ","Class Or Interface Type String ","Simple Name fromNames ","Variable Declaration Expr ","Simple Name slice ","Name Expr slice ","Name Expr slice ","Variable Declarator Slice slice = ","Class Or Interface Type Slice ","Method Call Expr ","Name Expr Slice ","Simple Name make ","Block Stmt ","Name Expr allBindings ","Simple Name containsKey ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Field Access Expr ","Simple Name clazz ","Method Call Expr ","Method Call Expr ","Simple Name put ","Unary Expr ++ ","Name Expr tempIdx "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"create-ReflectionObjectDecoder-","callMethodNameReferTo":{},"num":33,"succs":[[14,7,1],[16,7,17,2],[3,5,22],[23,24,5,4],[9,27,26],[6],[9,26,29],[8],[9,26,31],[11,10,13,12],[],[12],[],[0],[2],[1],[18,19],[],[20,21],[],[],[],[4],[25,15],[],[],[],[28],[],[30],[],[32],[]],"attribute":["If Stmt ","Method Call Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Block Stmt ","Return Stmt ","Block Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Decoder ","Name Expr String ","Block Stmt ","Block Stmt ","Name Expr desc ","Field Access Expr ","Simple Name isEmpty ","Binary Expr EQUALS ","Simple Name parameters ","Name Expr desc ","Simple Name ctor ","Block Stmt ","Field Access Expr ","Simple Name isEmpty ","Simple Name bindingTypeWrappers ","ReturnStmt","Object Creation Expr OnlyField Optional.empty Optional.empty ","Simple Name valueType ","Object Creation Expr WithWrapper Optional.empty Optional.empty ","Class Or Interface Type WithWrapper ","Object Creation Expr WithCtor Optional.empty Optional.empty ","Class Or Interface Type WithCtor "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"decode-ReflectionObjectDecoder.OnlyField-JsonIterator","callMethodNameReferTo":{},"num":622,"succs":[[1,4,19,2,18,20],[22,6,21],[3,27,28],[29],[31,32,5],[33],[9,12,8,10,14,11,7],[],[9],[],[16,17],[89,13],[],[],[0],[24,16],[],[],[1],[2,26],[4,30],[],[15,25,23],[],[],[88,90,84,85,87,86,11],[3],[],[],[],[5],[],[],[35,34],[],[],[37,104],[40,105,91,38],[106,39],[40,25,109,21],[111,41],[42,136],[51,137,43,138],[44,141],[50,143,45,144,142],[48,146,46],[48,131,149,47,148],[152,50],[49],[50,163],[51,25,21,116],[52,174],[53,185],[54,197],[209,55],[58,227,56],[228,58,212,131,57],[62,229],[59,62],[237,60],[238,62,61,213],[62,239],[243,63],[251,64],[65,75,131,253,252],[257,66],[67,260],[68,263,70],[131,219,69,264,70],[265,74],[71,74],[72,268],[73,220,269,74],[270,74],[273,63],[76,277],[278,279,190,82,77],[80,78,280],[131,79,80,283,282],[82,286],[81],[292,82],[298,83],[25,21,123],[],[86],[],[103,24],[],[],[53,54,52,40,51,36,75,55,82,83,63,41],[24],[37,24,91],[92,24],[93,24],[24,94],[95,24],[233,96,24],[24,97,247],[102,98,24],[24,99],[233,100,24],[100,101,24,247],[],[38,39],[],[92,108,107],[],[],[110],[],[124],[113,93,114,94],[],[],[112,167],[112,115],[112,167,116],[112,248,117],[112,167,118,120],[112,248,118,119],[112,167,120],[112,300,121],[112,122],[112,125,126],[112],[128,127,129],[131,130,132],[134],[135,114,94],[113,93,133],[],[110],[],[],[],[50,43],[139,95,140],[],[],[],[45],[],[],[145],[],[47],[46],[151,150],[110],[],[],[154,153],[],[156,155,157],[158],[],[160,162,159],[],[],[145,161],[],[314,313,84,315,312],[164,165,166,115,170],[],[171,168,147],[169,173,162,172],[],[],[],[359,84,356,358,355,360,11,361,357],[],[],[145,161],[182],[176],[],[175,176,235,178],[179,101,176,180],[202,204,234],[177,176,235],[177,176,301],[183,176,184],[176],[110],[193],[187],[],[187,186,189],[68,217,220,72],[188],[76,190,188,161],[76,190,191,188,161],[187,195,194],[187],[196],[],[205],[96,199],[],[198],[198,234,200],[198,100,204,201,203],[],[202,179],[198,207,206],[198],[96,208,199],[],[223],[200,211],[],[210],[212,210,56],[213,210,60,56],[214,168,210,56],[249,215,210,56],[204,216,222,210,218],[],[217],[217,68,219],[217,68,168,189],[249,217,68,219,221],[224,225,210],[210],[226,200,211],[],[57],[110],[175,230,231],[],[236,177,97,201,232],[],[],[407],[410],[401,397,398,395,400,84,396,399,11],[61],[],[186,240,241],[],[214,242],[],[245,244,215,117,170],[],[169,98,216,118,246,250],[],[],[],[],[463,460,84,458,462,11,459,461,457],[67,65,66],[255,99,254],[256],[],[],[],[202,230,258],[100,259,203],[],[230,217,261],[204,262,218],[],[69],[110],[230,266,178],[179,236,101,180,267],[],[73],[],[188,240,271],[272,189],[],[274,221,275,170,119],[],[169,102,276,222,250,120],[],[77],[],[],[79],[78],[284,285],[110],[],[],[288,287],[],[290,156,289],[158],[191,162,291],[],[295,293,121,294,170],[],[296,168,281],[192,169,162,297],[],[],[122,181,299,302],[],[],[],[512,510,509,508,84,11,513,511],[320,304],[306,305,328],[334,306,335,311],[307,330],[308,336],[309,305,329,337],[310,338],[345,305],[323,162,21],[317,313,316],[],[319,161],[303,311,304],[],[],[161],[],[324],[322],[],[321,322],[326,325,322],[322],[327],[],[307],[330],[333],[329,308,330],[331,308,330],[330],[],[],[309,310],[],[341],[331],[339],[339,343,342],[339],[331,344],[],[346,318,348,340,347,321],[],[],[349,332],[],[351,353,372],[278,352,373,374,353],[376],[354],[380],[356],[],[167,369],[370,168],[169,371],[],[350],[167],[167,362],[168],[364,351,168],[364,365,351,168],[169],[169,367],[],[],[],[352],[375,364],[110],[],[378,377,362,367],[365,379],[],[],[382,363,381,368],[383,366],[],[],[385,418],[392,433,386],[387,419,392],[434,388],[441,389],[390,131,408,391,442],[391,443],[446,394],[393],[451,394],[236,411,21],[402,404,396,403],[],[233,412],[234,413],[235,414],[],[384,385,394],[],[],[],[233],[233,405],[234],[235],[389,408,235],[409],[235],[],[],[415,416,417],[],[],[],[422],[420,421],[],[],[419,424,423],[419],[427,426,425],[428,420],[],[429,138],[],[431,430],[432,421],[],[],[387,388,391],[437],[405],[435],[439,435,438],[435],[440,405],[],[390],[110],[230,409,444],[445],[],[436,447,448,410],[],[449,407,450],[],[576,577,579,7,578],[406,452],[],[454,473],[455,456,474,467],[456,475],[482,21,250],[458],[],[470,247],[248,471],[249,472],[],[453,456],[247],[484,464,247],[248],[249],[249,454,467],[249,485,468],[],[],[],[455],[],[476,477,464,478],[],[],[480,479,466],[481,468],[],[],[486,469,465,483],[],[],[],[586,589,588,84,585,11,587,590],[525,488],[131,526,516,490,489],[302,21,490],[527,491],[500,531,492,530],[493,532,498],[494,131,534,498,533],[496,536,495],[517,540,496,500],[538,497],[541,495],[499],[500,545],[549,502,501],[554,502,553],[551,503],[505,555,504],[505,560,519,501],[506,557],[561,507],[504,570],[509],[],[520,300],[301,521],[],[500,487,490],[167,300],[300,514],[301],[516,301],[169,517,516,301],[518,301],[],[523,524,522],[],[],[],[489],[110],[492],[491],[493,491],[],[],[494],[528,535],[110],[],[497],[538],[539],[538],[],[542,543],[],[156,544,537],[158],[518,514,546,547,170],[],[529,168,548],[],[503],[551],[552],[551],[],[],[506,507],[557],[559],[557,556],[557],[],[564],[556],[562],[566,562,565],[562],[567,568],[],[556,569],[],[572,515,573,571,550],[],[574,558],[563,575],[],[],[],[578],[],[580],[581,21,450],[158],[595,583],[584,600],[486,598,21],[586],[],[484,593],[594,485],[],[584,582,583],[484,605],[485],[],[],[597],[591,592,597],[599],[596],[597],[230,596,601],[591,606,603,602],[592,604],[],[],[],[612,610,609,7,11,611,607,608],[],[609],[],[613,605],[],[614],[],[615],[616,617],[],[619,618,156],[158],[620,621],[],[]],"attribute":["Try Stmt ","Return Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Method Declaration Throws ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Catch Clause ","Catch Clause ","ReturnStmt","Method Call Expr ","Simple Name decode_ ","Simple Name iter ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr GREATER ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Variable Declarator int left = ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Method Call Expr ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Class Or Interface Type Object ","Simple Name decode_ ","Parameter JsonIterator iter ","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Simple Name toString ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name resetExistingObject ","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","String Literal Expr Not Empty  ","Name Expr CodegenAccess ","Name Expr CodegenAccess ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator Object obj = ","Simple Name append ","Conditional Expr CodegenAccess.existingObject(iter) == null ? createNewObject() : CodegenAccess.resetExistingObject(iter) ","Binary Expr EQUALS ","Method Call Expr ","Method Call Expr ","Method Call Expr ","EQUALS","Simple Name iter ","Simple Name existingObject ","Simple Name createNewObject ","Simple Name resetExistingObject ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Block Stmt ","Simple Name jsoniterObj ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Block Stmt ","Name Expr desc ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name onMissingProperties ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Method Call Expr ","StringLiteralExpr","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Simple Name tracker ","Method Declaration ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Method Call Expr ","Simple Name obj ","Simple Name binding ","Simple Name value ","Method Declaration Throws ","Simple Name onMissingProperties ","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Name Expr cache ","Simple Name extra ","Name Expr extra ","Name Expr extra ","Name Expr fieldName ","Name Expr extra ","Boolean Literal Expr false ","Variable Declarator Map<String, Object> extra = ","Class Or Interface Type Map ","Null Literal Expr ","Variable Declaration Expr ","Name Expr tracker ","Simple Name tracker ","Name Expr tracker ","Name Expr binding ","Name Expr tracker ","Name Expr tracker ","Name Expr tracker ","Variable Declarator long tracker = ","Name Expr ctor ","Long Literal Expr Zero  ","Zero LongLiteralExpr","Variable Declaration Expr ","Simple Name fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Name Expr fieldName ","Name Expr fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Variable Declarator Slice fieldName = ","Class Or Interface Type Slice ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Variable Declaration Expr ","Simple Name binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name get ","Block Stmt ","Name Expr eLen ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name onUnknownProperty ","Simple Name iter ","Simple Name fieldName ","Simple Name extra ","Method Declaration Throws ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","BINARY_OR","Field Access Expr ","Simple Name mask ","Method Call Expr ","Simple Name setToBinding ","Method Call Expr ","Simple Name decodeBinding ","Simple Name iter ","Simple Name obj ","Simple Name binding ","Method Declaration Throws ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name get ","Block Stmt ","Name Expr ctor ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name onUnknownProperty ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr IterImplSkip ","Method Call Expr ","Simple Name decodeBinding ","Block Stmt ","NOT_EQUALS","Name Expr expectedTracker ","Block Stmt ","Name Expr desc ","Field Access Expr ","Name Expr iter ","Integer Literal Expr Note Zero  ","Simple Name onMissingProperties ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name collectMissingFields ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Method Call Expr ","Simple Name onMissingProperties ","Simple Name collectMissingFields ","Method Call Expr ","Simple Name setExtra ","Simple Name obj ","Simple Name extra ","Method Declaration Throws ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name collectMissingFields ","Parameter long tracker ","Block Stmt ","Name Expr iter ","Class Or Interface Type String ","Name Expr tracker ","Primitive Type long ","Variable Declaration Expr ","Name Expr missingFields ","Simple Name missingFields ","Name Expr missingFields ","Variable Declarator List<String> missingFields = ","Class Or Interface Type List ","Object Creation Expr ArrayList<String> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Name Expr allBindings ","Simple Name values ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Variable Declaration Expr ","Simple Name head ","Name Expr mask ","Variable Declarator long mask = ","Name Expr iter ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name addMissingField ","Field Access Expr ","Simple Name name ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name setToBinding ","Parameter Object obj ","Parameter Binding binding ","Parameter Object value ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr value ","Name Expr value ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name set ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Name Expr copied ","Expression Stmt ","If Stmt ","Name Expr shouldReadValue ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Map ","Simple Name onUnknownProperty ","Parameter JsonIterator iter ","Parameter Slice fieldName ","Parameter Map<String, Object> extra ","Class Or Interface Type IOException ","Block Stmt ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Name Expr iter ","Name Expr iter ","Name Expr fieldName ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type JsonIterator ","Class Or Interface Type Slice ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name shouldReadValue ","Name Expr desc ","Name Expr desc ","Variable Declarator boolean shouldReadValue = ","Primitive Type boolean ","Binary Expr OR ","Field Access Expr ","OR","Unary Expr ! ","Simple Name asExtraForUnknownProperties ","Method Call Expr ","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Block Stmt ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name toString ","Method Declaration ","Name Expr JsoniterSpi ","Simple Name skip ","If Stmt ","Field Access Expr ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Object obj ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Block Stmt ","Simple Name valueCanReuse ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name setExistingObject ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name field ","Method Call Expr ","Simple Name decodeBinding ","Simple Name iter ","Simple Name binding ","Method Declaration Throws ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Field Access Expr ","If Stmt ","Binary Expr EQUALS ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Throw Stmt ","Block Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name setExtra ","Parameter Object obj ","Parameter Map<String, Object> extra ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type Object ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Block Stmt ","Null Literal Expr ","Block Stmt ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Simple Name asExtraForUnknownProperties ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr fieldName ","Simple Name fieldName ","Class Or Interface Type String ","Simple Name keySet ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type Method ","Simple Name tail ","Simple Name keyValueTypeWrappers ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Simple Name invoke ","Method Call Expr ","Method Call Expr ","Simple Name getKey ","Simple Name object ","Marker Annotation Expr @Override ","Simple Name length ","Simple Name toString ","Block Stmt ","Expression Stmt ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr value ","Simple Name value ","Name Expr value ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name decode ","Simple Name decoder ","Simple Name iter ","Method Declaration Throws ","Marker Annotation Expr @Override ","Simple Name rewrap ","Name Expr result ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type JsonIterator ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Field Access Expr ","Name Expr binding ","Simple Name name "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"decode_-ReflectionObjectDecoder.OnlyField-JsonIterator","callMethodNameReferTo":{"97":"srcmainjavacomjsoniterCodegenAccess.java-resetExistingObject-CodegenAccess-JsonIterator","98":"srcmainjavacomjsoniterCodegenAccess.java-existingObject-CodegenAccess-JsonIterator","226":"srcmainjavacomjsoniterCodegenAccess.java-readObjectFieldAsSlice-CodegenAccess-JsonIterator","73":"srcmainjavacomjsoniterCodegenAccess.java-resetExistingObject-CodegenAccess-JsonIterator","105":"srcmainjavacomjsoniterCodegenAccess.java-readObjectStart-CodegenAccess-JsonIterator","220":"srcmainjavacomjsoniterCodegenAccess.java-nextToken-CodegenAccess-JsonIterator","175":"srcmainjavacomjsoniterCodegenAccess.java-readObjectFieldAsSlice-CodegenAccess-JsonIterator"},"num":592,"succs":[[1,71],[4,72,57,2],[73,3],[4,48,77,76],[79,5],[6,104],[15,105,7,106],[8,109],[14,111,9,112,110],[12,114,10],[12,99,117,11,116],[120,14],[13],[14,131],[15,48,76,84],[16,142],[17,153],[18,165],[177,19],[22,195,20],[196,22,180,99,21],[26,197],[23,26],[205,24],[206,26,25,181],[26,207],[211,27],[219,28],[29,39,99,221,220],[225,30],[31,228],[32,231,34],[99,33,187,232,34],[233,38],[35,38],[36,236],[37,188,237,38],[238,38],[241,27],[40,245],[246,247,158,46,41],[44,42,248],[99,43,44,251,250],[46,254],[45],[260,46],[266,47],[48,76,91],[54,56,49,50,52,51,53],[],[51],[],[70,58],[55,369],[],[],[17,18,4,16,15,19,39,0,46,27,47,5],[58],[],[1,58,57],[59,58],[60,58],[58,61],[62,58],[201,63,58],[64,58,215],[69,65,58],[58,66],[201,67,58],[67,68,58,215],[],[2,3],[],[59,75,74],[],[],[],[78],[],[92],[81,60,82,61],[],[],[80,135],[80,83],[135,80,84],[80,216,85],[135,80,86,88],[80,216,86,87],[135,80,88],[80,268,89],[80,90],[80,93,94],[80],[96,95,97],[99,98,100],[102],[103,82,61],[81,60,101],[],[78],[],[],[],[14,7],[107,62,108],[],[],[],[9],[],[],[113],[],[11],[10],[119,118],[78],[],[],[122,121],[],[124,123,125],[126],[],[128,130,127],[],[],[113,129],[],[282,281,49,283,280],[132,133,134,83,138],[],[139,136,115],[137,141,130,140],[],[],[],[327,49,324,326,328,323,53,329,325],[],[],[113,129],[150],[144],[],[143,144,203,146],[147,68,144,148],[170,202,172],[145,144,203],[145,144,269],[151,144,152],[144],[78],[161],[155],[],[155,154,157],[32,185,188,36],[156],[40,158,156,129],[40,159,158,156,129],[155,163,162],[155],[164],[],[173],[63,167],[],[166],[166,202,168],[166,67,172,169,171],[],[170,147],[166,175,174],[166],[63,176,167],[],[191],[168,179],[],[178],[180,178,20],[181,178,20,24],[182,136,178,20],[217,183,178,20],[172,184,190,186,178],[],[185],[185,32,187],[185,32,136,157],[217,32,185,189,187],[192,193,178],[178],[194,168,179],[],[21],[78],[143,198,199],[],[204,145,64,169,200],[],[],[376],[379],[370,363,366,365,364,49,368,367,53],[25],[],[154,208,209],[],[210,182],[],[213,212,183,85,138],[],[137,184,65,86,214,218],[],[],[],[],[432,429,49,431,427,53,428,430,426],[31,29,30],[223,66,222],[224],[],[],[],[170,198,226],[67,227,171],[],[198,185,229],[172,230,186],[],[33],[78],[234,198,146],[147,204,68,148,235],[],[37],[],[156,208,239],[240,157],[],[242,189,243,138,87],[],[137,69,244,190,218,88],[],[41],[],[],[43],[42],[252,253],[78],[],[],[256,255],[],[258,124,257],[126],[159,130,259],[],[263,261,89,262,138],[],[264,136,249],[160,137,130,265],[],[],[90,149,267,270],[],[],[],[481,479,478,49,477,53,480,482],[288,272],[274,273,296],[302,274,303,279],[275,298],[276,304],[277,273,297,305],[278,306],[313,273],[291,130,76],[285,281,284],[],[287,129],[271,279,272],[],[],[129],[],[292],[290],[],[290,289],[294,293,290],[290],[295],[],[275],[298],[301],[297,276,298],[299,276,298],[298],[],[],[277,278],[],[309],[299],[307],[307,311,310],[307],[299,312],[],[314,316,286,308,315,289],[],[],[317,300],[],[319,321,340],[246,320,341,342,321],[344],[322],[348],[324],[],[135,337],[338,136],[137,339],[],[318],[135],[135,330],[136],[332,319,136],[332,333,319,136],[137],[137,335],[],[],[],[320],[343,332],[78],[],[345,346,330,335],[333,347],[],[],[350,331,349,336],[351,334],[],[],[353,387],[360,402,354],[355,388,360],[403,356],[357,410],[358,99,377,359,411],[359,412],[415,362],[361],[420,362],[204,380,76],[371,364,373,372],[],[201,381],[202,382],[203,383],[],[],[352,353,362],[],[],[],[201],[201,374],[202],[203],[357,377,203],[378],[203],[],[],[384,385,386],[],[],[],[391],[389,390],[],[],[388,393,392],[388],[396,395,394],[397,389],[],[398,106],[],[400,399],[401,390],[],[],[355,356,359],[406],[374],[404],[408,404,407],[404],[409,374],[],[358],[78],[198,378,413],[414],[],[416,405,417,379],[],[418,376,419],[],[545,547,549,546,548],[375,421],[],[423,442],[424,425,443,436],[425,444],[451,218,76],[427],[],[439,215],[216,440],[217,441],[],[422,425],[215],[453,433,215],[216],[217],[217,423,436],[217,454,437],[],[],[],[424],[],[445,446,433,447],[],[],[449,448,435],[450,437],[],[],[455,438,434,452],[],[],[],[556,559,558,49,555,53,560,557],[494,457],[99,495,485,459,458],[270,76,459],[496,460],[469,500,499,461],[462,501,467],[463,99,503,467,502],[465,505,464],[486,509,465,469],[507,466],[510,464],[468],[469,514],[518,471,470],[523,471,522],[520,472],[524,474,473],[474,529,488,470],[475,526],[530,476],[473,539],[478],[],[489,268],[269,490],[],[469,456,459],[135,268],[268,483],[269],[485,269],[486,137,485,269],[487,269],[],[492,493,491],[],[],[],[458],[78],[461],[460],[462,460],[],[],[463],[497,504],[78],[],[466],[507],[508],[507],[],[511,512],[],[124,513,506],[126],[487,515,483,516,138],[],[498,136,517],[],[472],[520],[521],[520],[],[],[475,476],[526],[528],[526,525],[526],[],[533],[525],[531],[535,531,534],[531],[536,537],[],[525,538],[],[541,484,542,540,519],[],[543,527],[532,544],[],[],[],[],[548],[],[550],[551,76,419],[126],[565,553],[554,570],[455,568,76],[556],[],[453,563],[564,454],[],[554,552,553],[453,575],[454],[],[],[567],[561,562,567],[569],[566],[567],[198,566,571],[561,576,573,572],[562,574],[],[],[],[582,580,579,53,546,581,577,578],[],[579],[],[583,575],[],[584],[],[585],[586,587],[],[589,588,124],[126],[590,591],[],[]],"attribute":["If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr GREATER ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Variable Declarator int left = ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Method Call Expr ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PRIVATE","Class Or Interface Type Object ","Simple Name decode_ ","Parameter JsonIterator iter ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Simple Name toString ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name resetExistingObject ","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","String Literal Expr Not Empty  ","Name Expr CodegenAccess ","Name Expr CodegenAccess ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator Object obj = ","Simple Name append ","Conditional Expr CodegenAccess.existingObject(iter) == null ? createNewObject() : CodegenAccess.resetExistingObject(iter) ","Binary Expr EQUALS ","Method Call Expr ","Method Call Expr ","Method Call Expr ","EQUALS","Simple Name iter ","Simple Name existingObject ","Simple Name createNewObject ","Simple Name resetExistingObject ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Block Stmt ","Simple Name jsoniterObj ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Block Stmt ","Name Expr desc ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name onMissingProperties ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Method Call Expr ","StringLiteralExpr","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Simple Name tracker ","Method Declaration ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Method Call Expr ","Simple Name obj ","Simple Name binding ","Simple Name value ","Method Declaration Throws ","Simple Name onMissingProperties ","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Name Expr cache ","Simple Name extra ","Name Expr extra ","Name Expr extra ","Name Expr fieldName ","Name Expr extra ","Boolean Literal Expr false ","Variable Declarator Map<String, Object> extra = ","Class Or Interface Type Map ","Null Literal Expr ","Variable Declaration Expr ","Name Expr tracker ","Simple Name tracker ","Name Expr tracker ","Name Expr binding ","Name Expr tracker ","Name Expr tracker ","Name Expr tracker ","Variable Declarator long tracker = ","Name Expr ctor ","Long Literal Expr Zero  ","Zero LongLiteralExpr","Variable Declaration Expr ","Simple Name fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Name Expr fieldName ","Name Expr fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Variable Declarator Slice fieldName = ","Class Or Interface Type Slice ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Variable Declaration Expr ","Simple Name binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name get ","Block Stmt ","Name Expr eLen ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name onUnknownProperty ","Simple Name iter ","Simple Name fieldName ","Simple Name extra ","Method Declaration Throws ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","BINARY_OR","Field Access Expr ","Simple Name mask ","Method Call Expr ","Simple Name setToBinding ","Method Call Expr ","Simple Name decodeBinding ","Simple Name iter ","Simple Name obj ","Simple Name binding ","Method Declaration Throws ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name get ","Block Stmt ","Name Expr ctor ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name onUnknownProperty ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr IterImplSkip ","Method Call Expr ","Simple Name decodeBinding ","Block Stmt ","NOT_EQUALS","Name Expr expectedTracker ","Block Stmt ","Name Expr desc ","Field Access Expr ","Name Expr iter ","Integer Literal Expr Note Zero  ","Simple Name onMissingProperties ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name collectMissingFields ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Method Call Expr ","Simple Name onMissingProperties ","Simple Name collectMissingFields ","Method Call Expr ","Simple Name setExtra ","Simple Name obj ","Simple Name extra ","Method Declaration Throws ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name collectMissingFields ","Parameter long tracker ","Block Stmt ","Name Expr iter ","Class Or Interface Type String ","Name Expr tracker ","Primitive Type long ","Variable Declaration Expr ","Name Expr missingFields ","Simple Name missingFields ","Name Expr missingFields ","Variable Declarator List<String> missingFields = ","Class Or Interface Type List ","Object Creation Expr ArrayList<String> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Name Expr allBindings ","Simple Name values ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Variable Declaration Expr ","Simple Name head ","Name Expr mask ","Variable Declarator long mask = ","Name Expr iter ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name addMissingField ","Field Access Expr ","Simple Name name ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name setToBinding ","Parameter Object obj ","Parameter Binding binding ","Parameter Object value ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr value ","Name Expr value ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name set ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Name Expr copied ","Expression Stmt ","If Stmt ","Name Expr shouldReadValue ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Map ","Simple Name onUnknownProperty ","Parameter JsonIterator iter ","Parameter Slice fieldName ","Parameter Map<String, Object> extra ","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Name Expr iter ","Name Expr iter ","Name Expr fieldName ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type JsonIterator ","Class Or Interface Type Slice ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name shouldReadValue ","Name Expr desc ","Name Expr desc ","Variable Declarator boolean shouldReadValue = ","Primitive Type boolean ","Binary Expr OR ","Field Access Expr ","OR","Unary Expr ! ","Simple Name asExtraForUnknownProperties ","Method Call Expr ","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Block Stmt ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name toString ","Method Declaration ","Name Expr JsoniterSpi ","Simple Name skip ","If Stmt ","Field Access Expr ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Object obj ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Block Stmt ","Simple Name valueCanReuse ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name setExistingObject ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name field ","Method Call Expr ","Simple Name decodeBinding ","Simple Name iter ","Simple Name binding ","Method Declaration Throws ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Field Access Expr ","If Stmt ","Binary Expr EQUALS ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Throw Stmt ","Block Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name setExtra ","Parameter Object obj ","Parameter Map<String, Object> extra ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type Object ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Block Stmt ","Null Literal Expr ","Block Stmt ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Simple Name asExtraForUnknownProperties ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr fieldName ","Simple Name fieldName ","Class Or Interface Type String ","Simple Name keySet ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type Method ","Simple Name tail ","Simple Name keyValueTypeWrappers ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Simple Name invoke ","Method Call Expr ","Method Call Expr ","Simple Name getKey ","Simple Name object ","Marker Annotation Expr @Override ","PUBLIC","Simple Name length ","Simple Name toString ","Block Stmt ","Expression Stmt ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr value ","Simple Name value ","Name Expr value ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name decode ","Simple Name decoder ","Simple Name iter ","Method Declaration Throws ","Marker Annotation Expr @Override ","Simple Name rewrap ","Name Expr result ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type JsonIterator ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Field Access Expr ","Name Expr binding ","Simple Name name "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"decode-ReflectionObjectDecoder.WithCtor-JsonIterator","callMethodNameReferTo":{},"num":623,"succs":[[21,1,4,20,2,19],[23,22,6],[29,28,3],[30],[5,33,32],[34],[11,13,12,9,8,7,10,15],[],[],[10],[],[18,17],[90,14],[],[],[0],[17,25],[],[],[1],[27,2],[31,4],[],[24,26,16],[],[],[89,85,91,86,88,87,12],[3],[],[],[],[5],[],[],[36,35],[],[],[38,105],[41,106,92,39],[107,40],[41,26,110,22],[112,42],[43,137],[52,138,44,139],[45,142],[51,144,46,145,143],[49,147,47],[49,132,150,149,48],[51,153],[50],[51,164],[52,26,22,117],[53,175],[54,186],[55,198],[210,56],[59,228,57],[229,59,132,213,58],[63,230],[60,63],[238,61],[239,63,62,214],[63,240],[244,64],[252,65],[132,66,76,254,253],[258,67],[68,261],[69,264,71],[132,220,70,265,71],[266,75],[72,75],[73,269],[74,221,270,75],[271,75],[274,64],[77,278],[279,280,191,83,78],[81,79,281],[132,80,81,284,283],[83,287],[82],[293,83],[299,84],[26,22,124],[],[87],[],[104,25],[],[],[55,54,41,53,52,76,37,56,83,64,84,42],[25],[38,25,92],[93,25],[94,25],[25,95],[96,25],[234,97,25],[98,25,248],[103,99,25],[25,100],[234,101,25],[101,102,25,248],[],[39,40],[],[93,109,108],[],[],[111],[],[125],[114,94,115,95],[],[],[168,113],[113,116],[113,168,117],[113,249,118],[113,168,119,121],[113,249,119,120],[168,113,121],[113,301,122],[113,123],[113,126,127],[113],[129,128,130],[132,131,133],[135],[136,115,95],[114,94,134],[],[111],[],[],[],[51,44],[140,96,141],[],[],[],[46],[],[],[146],[],[48],[47],[152,151],[111],[],[],[155,154],[],[156,157,158],[159],[],[161,163,160],[],[],[146,162],[],[315,314,85,316,313],[165,166,167,116,171],[],[172,169,148],[170,174,163,173],[],[],[],[360,85,357,359,356,361,12,362,358],[],[],[146,162],[183],[177],[],[176,177,236,179],[180,102,177,181],[203,235,205],[178,177,236],[178,177,302],[184,185,177],[177],[111],[194],[188],[],[188,187,190],[218,69,221,73],[189],[77,191,189,162],[77,191,192,189,162],[188,196,195],[188],[197],[],[206],[97,200],[],[199],[199,235,201],[199,101,205,202,204],[],[180,203],[199,208,207],[199],[97,209,200],[],[224],[201,212],[],[211],[213,211,57],[214,211,57,61],[215,169,211,57],[250,216,211,57],[205,217,223,219,211],[],[218],[69,218,220],[218,69,169,190],[250,218,69,220,222],[226,225,211],[211],[227,201,212],[],[58],[111],[176,231,232],[],[237,178,98,202,233],[],[],[408],[411],[402,398,399,396,401,397,85,400,12],[62],[],[187,241,242],[],[243,215],[],[246,245,216,118,171],[],[170,217,99,119,247,251],[],[],[],[],[464,461,85,459,463,12,460,462,458],[68,66,67],[256,100,255],[257],[],[],[],[203,231,259],[101,260,204],[],[231,218,262],[205,263,219],[],[70],[111],[231,267,179],[180,237,102,181,268],[],[74],[],[189,272,241],[273,190],[],[275,222,276,171,120],[],[170,103,277,223,251,121],[],[78],[],[],[80],[79],[285,286],[111],[],[],[289,288],[],[291,157,290],[159],[192,163,292],[],[296,294,122,295,171],[],[297,169,282],[193,170,163,298],[],[],[123,182,300,303],[],[],[],[513,511,510,85,509,12,514,512],[321,305],[307,306,329],[335,307,336,312],[308,331],[309,337],[310,306,330,338],[311,339],[346,306],[324,163,22],[318,314,317],[],[320,162],[304,312,305],[],[],[162],[],[325],[323],[],[323,322],[327,326,323],[323],[328],[],[308],[331],[334],[330,309,331],[332,309,331],[331],[],[],[310,311],[],[342],[332],[340],[340,344,343],[340],[332,345],[],[347,349,319,341,348,322],[],[],[350,333],[],[352,354,373],[279,353,374,375,354],[377],[355],[381],[357],[],[168,370],[371,169],[170,372],[],[351],[168],[168,363],[169],[365,352,169],[365,366,352,169],[170],[170,368],[],[],[],[353],[376,365],[111],[],[378,379,363,368],[366,380],[],[],[383,364,382,369],[384,367],[],[],[386,419],[393,434,387],[388,420,393],[435,389],[390,442],[391,132,409,392,443],[444,392],[447,395],[394],[452,395],[237,412,22],[403,405,397,404],[],[234,413],[235,414],[236,415],[],[385,386,395],[],[],[],[234],[234,406],[235],[236],[390,409,236],[410],[236],[],[],[416,418,417],[],[],[],[423],[421,422],[],[],[420,425,424],[420],[428,427,426],[429,421],[],[430,139],[],[432,431],[433,422],[],[],[388,389,392],[438],[406],[436],[440,436,439],[436],[441,406],[],[391],[111],[231,410,445],[446],[],[448,437,449,411],[],[450,408,451],[],[577,578,580,8,579],[407,453],[],[455,474],[456,457,475,468],[457,476],[483,22,251],[459],[],[471,248],[249,472],[250,473],[],[454,457],[248],[485,248,465],[249],[250],[250,455,468],[250,486,469],[],[],[],[456],[],[477,478,465,479],[],[],[481,480,467],[482,469],[],[],[487,470,466,484],[],[],[],[587,590,589,586,85,12,588,591],[526,489],[132,527,517,490,491],[303,22,491],[528,492],[501,532,493,531],[494,533,499],[495,132,535,499,534],[497,537,496],[518,541,501,497],[539,498],[542,496],[500],[546,501],[550,503,502],[555,503,554],[552,504],[556,506,505],[506,561,520,502],[507,558],[562,508],[505,571],[510],[],[521,301],[522,302],[],[501,488,491],[168,301],[301,515],[302],[517,302],[170,518,517,302],[519,302],[],[524,525,523],[],[],[],[490],[111],[493],[492],[494,492],[],[],[495],[529,536],[111],[],[498],[539],[540],[539],[],[543,544],[],[157,545,538],[159],[519,547,515,548,171],[],[169,530,549],[],[504],[552],[553],[552],[],[],[507,508],[558],[560],[558,557],[558],[],[565],[557],[563],[567,563,566],[563],[568,569],[],[557,570],[],[573,516,574,572,551],[],[575,559],[564,576],[],[],[],[579],[],[581],[582,22,451],[159],[596,584],[585,601],[487,599,22],[587],[],[485,594],[595,486],[],[585,583,584],[485,606],[486],[],[],[598],[592,593,598],[600],[597],[598],[231,597,602],[592,607,604,603],[593,605],[],[],[],[613,611,610,12,8,612,608,609],[],[610],[],[614,606],[],[615],[],[616],[617,618],[],[620,619,157],[159],[621,622],[],[]],"attribute":["Try Stmt ","Return Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Catch Clause ","Catch Clause ","ReturnStmt","Method Call Expr ","Simple Name decode_ ","Simple Name iter ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr GREATER ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Variable Declarator int left = ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Method Call Expr ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Class Or Interface Type Object ","Simple Name decode_ ","Parameter JsonIterator iter ","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Simple Name toString ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name resetExistingObject ","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","String Literal Expr Not Empty  ","Name Expr CodegenAccess ","Name Expr CodegenAccess ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator Object obj = ","Simple Name append ","Conditional Expr CodegenAccess.existingObject(iter) == null ? createNewObject() : CodegenAccess.resetExistingObject(iter) ","Binary Expr EQUALS ","Method Call Expr ","Method Call Expr ","Method Call Expr ","EQUALS","Simple Name iter ","Simple Name existingObject ","Simple Name createNewObject ","Simple Name resetExistingObject ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Block Stmt ","Simple Name jsoniterObj ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Block Stmt ","Name Expr desc ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name onMissingProperties ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Method Call Expr ","StringLiteralExpr","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Simple Name tracker ","Method Declaration ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Method Call Expr ","Simple Name obj ","Simple Name binding ","Simple Name value ","Method Declaration Throws ","Simple Name onMissingProperties ","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Name Expr cache ","Simple Name extra ","Name Expr extra ","Name Expr extra ","Name Expr fieldName ","Name Expr extra ","Boolean Literal Expr false ","Variable Declarator Map<String, Object> extra = ","Class Or Interface Type Map ","Null Literal Expr ","Variable Declaration Expr ","Name Expr tracker ","Simple Name tracker ","Name Expr tracker ","Name Expr binding ","Name Expr tracker ","Name Expr tracker ","Name Expr tracker ","Variable Declarator long tracker = ","Name Expr ctor ","Long Literal Expr Zero  ","Zero LongLiteralExpr","Variable Declaration Expr ","Simple Name fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Name Expr fieldName ","Name Expr fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Variable Declarator Slice fieldName = ","Class Or Interface Type Slice ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Variable Declaration Expr ","Simple Name binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name get ","Block Stmt ","Name Expr eLen ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name onUnknownProperty ","Simple Name iter ","Simple Name fieldName ","Simple Name extra ","Method Declaration Throws ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","BINARY_OR","Field Access Expr ","Simple Name mask ","Method Call Expr ","Simple Name setToBinding ","Method Call Expr ","Simple Name decodeBinding ","Simple Name iter ","Simple Name obj ","Simple Name binding ","Method Declaration Throws ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name get ","Block Stmt ","Name Expr ctor ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name onUnknownProperty ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr IterImplSkip ","Method Call Expr ","Simple Name decodeBinding ","Block Stmt ","NOT_EQUALS","Name Expr expectedTracker ","Block Stmt ","Name Expr desc ","Field Access Expr ","Name Expr iter ","Integer Literal Expr Note Zero  ","Simple Name onMissingProperties ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name collectMissingFields ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Method Call Expr ","Simple Name onMissingProperties ","Simple Name collectMissingFields ","Method Call Expr ","Simple Name setExtra ","Simple Name obj ","Simple Name extra ","Method Declaration Throws ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name collectMissingFields ","Parameter long tracker ","Block Stmt ","Name Expr iter ","Class Or Interface Type String ","Name Expr tracker ","Primitive Type long ","Variable Declaration Expr ","Name Expr missingFields ","Simple Name missingFields ","Name Expr missingFields ","Variable Declarator List<String> missingFields = ","Class Or Interface Type List ","Object Creation Expr ArrayList<String> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Name Expr allBindings ","Simple Name values ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Variable Declaration Expr ","Simple Name head ","Name Expr mask ","Variable Declarator long mask = ","Name Expr iter ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name addMissingField ","Field Access Expr ","Simple Name name ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name setToBinding ","Parameter Object obj ","Parameter Binding binding ","Parameter Object value ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr value ","Name Expr value ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name set ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Name Expr copied ","Expression Stmt ","If Stmt ","Name Expr shouldReadValue ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Map ","Simple Name onUnknownProperty ","Parameter JsonIterator iter ","Parameter Slice fieldName ","Parameter Map<String, Object> extra ","Class Or Interface Type IOException ","Block Stmt ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Name Expr iter ","Name Expr iter ","Name Expr fieldName ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type JsonIterator ","Class Or Interface Type Slice ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name shouldReadValue ","Name Expr desc ","Name Expr desc ","Variable Declarator boolean shouldReadValue = ","Primitive Type boolean ","Binary Expr OR ","Field Access Expr ","OR","Unary Expr ! ","Simple Name asExtraForUnknownProperties ","Method Call Expr ","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Block Stmt ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name toString ","Method Declaration ","Name Expr JsoniterSpi ","Simple Name skip ","If Stmt ","Field Access Expr ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Object obj ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Block Stmt ","Simple Name valueCanReuse ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name setExistingObject ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name field ","Method Call Expr ","Simple Name decodeBinding ","Simple Name iter ","Simple Name binding ","Method Declaration Throws ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Field Access Expr ","If Stmt ","Binary Expr EQUALS ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Throw Stmt ","Block Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name setExtra ","Parameter Object obj ","Parameter Map<String, Object> extra ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type Object ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Block Stmt ","Null Literal Expr ","Block Stmt ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Simple Name asExtraForUnknownProperties ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr fieldName ","Simple Name fieldName ","Class Or Interface Type String ","Simple Name keySet ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type Method ","Simple Name tail ","Simple Name keyValueTypeWrappers ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Simple Name invoke ","Method Call Expr ","Method Call Expr ","Simple Name getKey ","Simple Name object ","Marker Annotation Expr @Override ","Simple Name length ","Simple Name toString ","Block Stmt ","Expression Stmt ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr value ","Simple Name value ","Name Expr value ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name decode ","Simple Name decoder ","Simple Name iter ","Method Declaration Throws ","Marker Annotation Expr @Override ","Simple Name rewrap ","Name Expr result ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type JsonIterator ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Field Access Expr ","Name Expr binding ","Simple Name name "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"decode_-ReflectionObjectDecoder.WithCtor-JsonIterator","callMethodNameReferTo":{"210":"srcmainjavacomjsoniterCodegenAccess.java-readObjectFieldAsSlice-CodegenAccess-JsonIterator","260":"srcmainjavacomjsoniterCodegenAccess.java-readObjectFieldAsSlice-CodegenAccess-JsonIterator","153":"srcmainjavacomjsoniterCodegenAccess.java-readObjectStart-CodegenAccess-JsonIterator","254":"srcmainjavacomjsoniterCodegenAccess.java-nextToken-CodegenAccess-JsonIterator","95":"srcmainjavacomjsoniterCodegenAccess.java-resetExistingObject-CodegenAccess-JsonIterator"},"num":929,"succs":[[93,1],[94,2,75,4],[95,3],[66,99,98,4],[5,101],[7,103,104,102,6],[7,106],[112,8],[137,9],[115,103,10,12,138],[11,139],[12,143],[13,148],[152,14],[19,15,153,154],[16,157],[158,160,17,159,18],[162,18],[173,66,19,98],[20,178],[21,189],[200,22],[212,23],[24,26,229],[103,26,215,25,230],[30,231],[27,30],[238,28],[30,29,239,216],[30,240],[244,31],[32,253],[103,43,33,255,254],[34,259],[262,35],[36,38,265],[222,103,38,266,37],[267,42],[39,42],[270,40],[271,42,223,41],[272,42],[31,275],[281,44],[283,282,45,46,194],[284,46],[47,290],[301,48],[50,306,49],[50,312,55,313],[51,308],[314,52],[53,323],[54,326,325,324,49],[333,49],[337,56,57],[344,343,64,57],[58,339],[345,59],[355,60],[356,282,56,61,347],[62,357],[63,364],[56,371],[375,65],[66,296,98],[74,69,70,67,68,71,72],[],[69],[],[92,76],[73,567],[],[],[20,19,64,46,21,48,47,55,31,0,23,22,7,43,65,12,13,8,4],[76],[],[76,1,75],[77,76],[76,5,78],[79],[79,80],[81,79],[82,14,79,175],[79,83],[234,79,84],[79,250,85],[90,86,79],[79,87],[234,88,79],[89,88,250,79],[90,79,175],[],[3,2],[],[77,96,97],[],[],[],[100],[],[6],[105,78],[],[100],[],[109,108,107],[110,79],[],[111],[],[],[128],[80,114],[],[113],[115,117,9,113],[],[9,116],[118,116],[116,176,119],[116,120],[90,121,123,116],[251,36,193,220],[122,176],[124,122],[125,122],[126,377,122],[130,129,113],[113],[132,131],[133],[135,114,134],[],[136,80],[],[],[10,11],[100],[108,140,116],[142,141],[],[],[145,146,118,144],[81,147],[],[],[],[151,150,149,119],[],[],[],[15,18],[156,82,155],[],[],[],[17],[],[],[161],[],[163,164],[],[167,165,166],[168],[],[169,170,172],[],[],[161,171],[],[391,390,67,392,389],[177,174,120,83],[],[],[],[446,450,67,445,71,449,448,447],[186],[180],[],[182,236,180,179],[183,89,184,180],[205,235,207],[181,236,180],[181,180,304],[188,187,180],[180],[100],[196],[191],[],[193,191,190],[36,220,223,40],[192],[194,44,192,171],[197,198,191],[191],[199],[],[208],[202,84],[],[201],[235,201,203],[88,201,207,204,206],[],[205,183],[210,201,209],[201],[202,84,211],[],[225],[214,203],[],[213],[24,213,215],[24,28,213,216],[217,24,213],[24,251,213,218],[207,213,224,221,219],[],[220],[222,36,220],[90,222,123,36,220],[227,226,213],[213],[214,228,203],[],[25],[100],[108,232,179],[181,237,204,233,85],[],[],[574],[577],[568,563,564,561,566,562,67,565,71],[29],[],[241,190,242],[],[217,243],[],[245,108,246],[121,247],[86,252,249,219],[248,218],[],[],[],[],[624,627,626,623,67,71,628,625],[34,35,33],[257,87,256],[258],[],[],[],[205,108,260],[88,206,261],[],[108,263,220],[264,207,221],[],[37],[100],[182,108,268],[183,89,237,184,269],[],[41],[],[273,241,192],[274,193],[],[108,277,276],[278,122],[90,280,252,123],[224,279],[],[],[45],[],[],[285,286],[],[288,166,287],[168],[195,289,172],[],[297],[91,124],[303,291],[292,291],[293,291],[294,291,378],[295,291],[299,298,291],[291],[91,177,124,300],[],[185,292,305,302],[],[],[],[670,668,667,666,67,71,671,669],[51,52],[308],[311],[308,307],[53,308,309],[308],[],[],[318],[125,307],[315],[53,316,315],[319,320,315],[315],[125,321],[322,307],[],[54],[282,327,316],[],[329,328,159],[],[331,330],[161],[332,309],[],[],[334,317,293,335],[310,336],[],[],[58,59],[339],[342],[339,338],[340,339],[339],[],[],[350],[126,338],[346],[346,60,347],[346,60,348],[346,352,351],[346],[126,353],[338,354],[],[62,63,61],[],[358,360,359],[362,361],[],[363,340],[],[],[],[367,366,365],[368,369],[],[370,348],[],[],[],[294,349,372,373],[341,374],[],[],[379,295,127,376],[],[],[],[753,755,754,752,67,751,71,756],[397,381],[383,382,405],[411,383,412,388],[384,407],[385,413],[386,382,406,414],[387,415],[422,382],[400,172,98],[394,390,393],[],[396,171],[380,388,381],[],[],[171],[],[401],[399],[],[398,399],[403,402,399],[399],[404],[],[384],[407],[410],[406,385,407],[408,385,407],[407],[],[],[386,387],[],[418],[408],[416],[416,420,419],[416],[408,421],[],[423,395,425,417,424,398],[],[],[426,409],[],[428,459],[461,103,460,429,430],[463,430],[431,468],[432,488],[103,435,489,433,471],[434,490],[435,500],[436,505],[443,437,438,509],[438,515],[510,444,439,519,518],[527,440],[441,542],[282,443,543,530,442],[443,544],[526,438,512],[177,546,98],[446],[],[456,175],[457,176],[],[431,436,444,435,427,430],[175],[428,175,451],[452],[452,453],[176],[],[458],[],[429],[462,451],[100],[],[108,464,465],[466,452],[467],[],[],[479],[453,470],[],[469],[469,473,471,432],[],[432,472],[474,472],[477,475,472],[530,441,528],[548,476],[481,469,480],[469],[483,482],[484],[485,486,470],[],[453,487],[],[],[434,433],[100],[108,491,472],[492,493],[],[],[495,496],[497,498],[],[473,499],[],[],[474,502,503,501],[454,504],[],[],[],[508,506,475,507],[],[],[100],[439,440],[514,511],[],[510,514,511],[514,511,512],[477,513,511],[517,511,516],[511],[161],[],[520,521],[523,522],[],[524,525],[],[],[],[],[531],[529,455,513],[],[528],[533,528,532],[528],[534,455],[536,535],[538,537,513],[],[539,540],[],[529,541],[],[],[442],[],[477,108,545],[514,476],[478,547,549],[],[],[827,67,830,826,828,71,829],[551,585],[558,600,552],[553,586,558],[601,554],[555,608],[556,103,575,609,557],[557,610],[613,560],[559],[618,560],[237,578,98],[569,562,571,570],[],[234,579],[235,580],[236,581],[],[],[550,551,560],[],[],[],[234],[234,572],[235],[236],[555,575,236],[576],[236],[],[],[582,583,584],[],[],[],[589],[587,588],[],[],[586,591,590],[586],[594,593,592],[595,587],[],[596,154],[],[598,597],[599,588],[],[],[553,554,557],[604],[572],[602],[606,602,605],[602],[607,572],[],[556],[100],[108,576,611],[612],[],[603,614,615,577],[],[616,574,617],[],[873,875,877,874,876],[573,619],[],[633,621],[622,638],[252,636,98],[624],[],[250,631],[632,251],[],[622,620,621],[250,643],[251],[],[],[635],[629,630,635],[637],[634],[635],[108,634,639],[629,644,641,640],[630,642],[],[],[],[885,883,882,71,874,884,880,881],[683,646],[103,684,674,648,647],[305,98,648],[685,649],[658,689,650,688],[651,690,656],[652,103,692,656,691],[654,694,653],[675,698,654,658],[696,655],[699,653],[657],[658,703],[711,660,659],[716,660,715],[713,661],[717,663,662],[663,722,677,659],[664,719],[723,665],[662,732],[667],[],[678,303],[679,304],[],[658,645,648],[706,303],[303,672],[304],[674,304],[675,708,674,304],[676,304],[],[681,682,680],[],[],[],[647],[100],[650],[649],[651,649],[],[],[652],[686,693],[100],[],[655],[696],[697],[696],[],[700,701],[],[166,702,695],[168],[676,704,672,705,709],[],[707,687,710],[],[],[],[904,67,903,901,905,900,71,906,902],[],[661],[713],[714],[713],[],[],[664,665],[719],[721],[719,718],[719],[],[726],[718],[724],[728,724,727],[724],[729,730],[],[718,731],[],[734,673,735,733,712],[],[736,720],[725,737],[],[],[739,762,740],[770,769,740],[741,764],[742,771],[785,749,743,744],[791,744],[750,786,518,794,745],[746,798],[747,810],[282,749,748,800,811],[812,749],[788,526,744],[739,814],[752],[],[759,377],[761,378],[],[738],[377],[378],[760],[],[],[741,750,742],[764],[768],[764,766,763],[764,765],[764,766],[764],[],[],[776],[763],[774,772],[747,799,800],[773],[777,772,778],[772],[780,779],[],[],[782,783],[763,784],[],[],[746,745],[790,787],[],[790,786,787],[790,788,787],[789,774,787],[793,787,792],[787],[161],[796,795],[765,797],[],[],[801],[789,766,757],[799],[802,799,803],[799],[757,804],[805,806],[807,789,808],[],[766,809],[],[],[748],[],[813,108,774],[790,773],[775,758,815,816],[817,767],[],[],[819,834],[282,838,820,837,821],[843,98,549,821],[851,824,822],[282,854,855,824,823],[860,98,549],[825],[867,98,549],[827],[],[548,833],[],[818,821],[548],[548,831],[],[820],[819],[819],[840,839],[100],[842,841],[],[],[],[845,844,846],[847,848],[],[850,836],[835,849],[],[],[],[823],[822],[822],[857,856],[100],[859,858],[],[],[],[862,861,863,831],[865,864],[],[100],[852,866],[],[],[868,869,832],[871,870],[],[872,853],[],[],[],[],[876],[],[878],[879,98,617],[168],[],[882],[],[886,643],[],[887],[],[888],[889,890],[],[892,891,166],[168],[893,894],[],[],[896,898,917],[282,897,918,919,898],[921],[899],[925],[901],[],[706,914],[915,707],[708,916],[],[895],[706],[706,907],[707],[909,896,707],[909,910,896,707],[708],[708,912],[],[],[],[897],[920,909],[100],[],[922,923,907,912],[910,924],[],[],[927,908,926,913],[928,911],[],[]],"attribute":["If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr GREATER ","Throw Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Variable Declarator boolean isExpectingLowSurrogate = ","Expression Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Expression Stmt ","Binary Expr EQUALS ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr AND ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PRIVATE","Class Or Interface Type Object ","Simple Name decode_ ","Binary Expr LEFT_SHIFT ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Simple Name readNull ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name resetExistingObject ","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Block Stmt ","Field Access Expr ","EQUALS","Null Literal Expr ","Binary Expr MULTIPLY ","Assign Expr ASSIGN ","Method Call Expr ","ASSIGN","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Binary Expr MULTIPLY ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Simple Name temp ","Name Expr tempCacheKey ","Name Expr temp ","Name Expr temp ","Name Expr tempCount ","Name Expr temp ","Name Expr temp ","Name Expr temp ","Name Expr temp ","Name Expr temp ","Name Expr binding ","Name Expr temp ","Name Expr temp ","Name Expr temp ","Name Expr temp ","Variable Declarator Object[] temp = ","Name Expr IterImpl ","Cast Expr ","Array Type 1 ","Method Call Expr ","Class Or Interface Type Object ","Field Access Expr ","Simple Name get ","Simple Name tempObjects ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Array Creation Expr Object Array Creation Level Not Empty ","Class Or Interface Type Object ","Array Creation Level Dimension NotEmpty ","Method Call Expr ","Field Access Expr ","Simple Name put ","Name Expr tempCacheKey ","Simple Name tempObjects ","Method Call Expr ","Name Expr stream ","Simple Name fill ","Name Expr NOT_SET ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name reusableSlice ","Simple Name readObjectStart ","Block Stmt ","Name Expr requiredIdx ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Method Call Expr ","StringLiteralExpr","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Simple Name tracker ","Method Declaration ","Method Call Expr ","Simple Name createNewObject ","Simple Name iter ","Simple Name temp ","Method Declaration Throws ","Variable Declaration Expr ","Name Expr extra ","Simple Name extra ","Name Expr extra ","Name Expr extra ","Name Expr fieldName ","Name Expr extra ","Name Expr extra ","Variable Declarator Map<String, Object> extra = ","Class Or Interface Type Map ","Simple Name head ","Variable Declaration Expr ","Name Expr tracker ","Simple Name tracker ","Name Expr tracker ","Name Expr binding ","Name Expr tracker ","Name Expr tracker ","Variable Declarator long tracker = ","Primitive Type long ","Long Literal Expr Zero  ","Zero LongLiteralExpr","Variable Declaration Expr ","Simple Name fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Name Expr fieldName ","Name Expr fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Variable Declarator Slice fieldName = ","Class Or Interface Type Slice ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Variable Declaration Expr ","Simple Name binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Integer ","Name Expr current ","Name Expr binding ","Name Expr binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name onUnknownProperty ","Simple Name iter ","Simple Name fieldName ","Simple Name extra ","Method Declaration Throws ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","BINARY_OR","Field Access Expr ","Simple Name mask ","Assign Expr ASSIGN ","Array Access Expr binding.idx ","Method Call Expr ","Field Access Expr ","Simple Name idx ","Simple Name genCollection ","Simple Name iter ","Simple Name binding ","Method Declaration Throws ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name buf ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name onUnknownProperty ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","Field Access Expr ","Simple Name mask ","Assign Expr ASSIGN ","Array Access Expr binding.idx ","Method Call Expr ","Field Access Expr ","Simple Name idx ","Simple Name decodeBinding ","Block Stmt ","NOT_EQUALS","Name Expr expectedTracker ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name collectMissingFields ","Variable Declaration Expr ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator Object obj = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name createNewObject ","Method Call Expr ","Simple Name setExtra ","Simple Name obj ","Simple Name extra ","Method Declaration Throws ","Block Stmt ","Name Expr field ","Simple Name field ","Name Expr field ","Name Expr field ","Class Or Interface Type Binding ","Name Expr desc ","Simple Name fields ","Variable Declaration Expr ","Simple Name val ","Name Expr val ","Name Expr val ","Variable Declarator Object val = ","Class Or Interface Type Object ","Array Access Expr field.idx ","Field Access Expr ","Simple Name idx ","Block Stmt ","Binary Expr NOT_EQUALS ","AND","Binary Expr GREATER ","Name Expr NOT_SET ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Method Call Expr ","Field Access Expr ","Simple Name set ","Simple Name field ","Block Stmt ","Name Expr setter ","Simple Name setter ","Name Expr setter ","Name Expr setter ","Class Or Interface Type Binding ","Name Expr desc ","Simple Name setters ","Variable Declaration Expr ","Simple Name val ","Name Expr val ","Name Expr val ","Name Expr val ","Variable Declarator Object val = ","Class Or Interface Type Object ","Array Access Expr setter.idx ","Field Access Expr ","Name Expr pad ","Block Stmt ","Name Expr NOT_SET ","Method Call Expr ","Class Or Interface Type DateFormat ","Simple Name println ","Field Access Expr ","Name Expr newVal ","Simple Name out ","Simple Name method ","Method Call Expr ","Field Access Expr ","Simple Name println ","Method Call Expr ","Name Expr stream ","Simple Name out ","Simple Name getClass ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Simple Name method ","Method Call Expr ","Simple Name applyWrappers ","Simple Name temp ","Simple Name obj ","Method Declaration Throws ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name collectMissingFields ","Parameter long tracker ","Block Stmt ","Name Expr iter ","Class Or Interface Type String ","Name Expr tracker ","Primitive Type long ","Variable Declaration Expr ","Name Expr missingFields ","Simple Name missingFields ","Name Expr missingFields ","Variable Declarator List<String> missingFields = ","Class Or Interface Type List ","Object Creation Expr ArrayList<String> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Name Expr allBindings ","Simple Name values ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Variable Declaration Expr ","Simple Name head ","Name Expr mask ","Variable Declarator long mask = ","Name Expr iter ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name addMissingField ","Field Access Expr ","Simple Name name ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Unary Expr ++ ","Return Stmt ","Class Or Interface Type Object ","Simple Name createNewObject ","Parameter JsonIterator iter ","Parameter Object[] temp ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr temp ","Class Or Interface Type JsonIterator ","Array Type 1 ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name tempObjects ","Assign Expr ASSIGN ","Field Access Expr ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Simple Name tempObjects ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Simple Name ctorArgs ","Name Expr ctorArgsCacheKey ","Name Expr ctorArgs ","Name Expr ctorArgs ","Name Expr desc ","Name Expr ctorArgs ","Name Expr ctorArgs ","Name Expr ctorArgs ","Name Expr arg ","Name Expr ctorArgs ","Variable Declarator Object[] ctorArgs = ","Array Type 1 ","Cast Expr ","Array Type 1 ","Method Call Expr ","Class Or Interface Type Object ","Field Access Expr ","Simple Name get ","Simple Name tempObjects ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Array Creation Expr Object Array Creation Level Not Empty ","Class Or Interface Type Object ","Array Creation Level Dimension NotEmpty ","Method Call Expr ","Field Access Expr ","Simple Name size ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name put ","Name Expr ctorArgsCacheKey ","Simple Name tempObjects ","Method Call Expr ","Name Expr Arrays ","Simple Name fill ","Null Literal Expr ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Method Call Expr ","Field Access Expr ","Simple Name size ","Field Access Expr ","Simple Name parameters ","Name Expr desc ","Simple Name ctor ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name arg ","Name Expr desc ","Name Expr arg ","Variable Declarator Object arg = ","Class Or Interface Type Object ","Array Access Expr desc.ctor.parameters.get(i).idx ","Field Access Expr ","Method Call Expr ","Simple Name idx ","Field Access Expr ","Simple Name get ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Block Stmt ","Name Expr NOT_SET ","Assign Expr ASSIGN ","Array Access Expr i ","Method Call Expr ","Simple Name createNewObject ","Simple Name args ","Method Declaration Throws ","Expression Stmt ","If Stmt ","Name Expr shouldReadValue ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Map ","Simple Name onUnknownProperty ","Parameter JsonIterator iter ","Parameter Slice fieldName ","Parameter Map<String, Object> extra ","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Name Expr iter ","Name Expr iter ","Name Expr fieldName ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type JsonIterator ","Class Or Interface Type Slice ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name shouldReadValue ","Name Expr desc ","Name Expr desc ","Variable Declarator boolean shouldReadValue = ","Primitive Type boolean ","Binary Expr OR ","Field Access Expr ","OR","Unary Expr ! ","Simple Name asExtraForUnknownProperties ","Method Call Expr ","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Block Stmt ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name toString ","Method Declaration ","Name Expr JsoniterSpi ","Simple Name skip ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr value ","Simple Name value ","Name Expr value ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name decode ","Simple Name decoder ","Simple Name iter ","Method Declaration Throws ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Field Access Expr ","If Stmt ","Binary Expr EQUALS ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Throw Stmt ","Block Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name setExtra ","Parameter Object obj ","Parameter Map<String, Object> extra ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type Object ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Block Stmt ","Null Literal Expr ","Block Stmt ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Simple Name asExtraForUnknownProperties ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr fieldName ","Simple Name fieldName ","Class Or Interface Type String ","Simple Name keySet ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Simple Name obj ","Simple Name binding ","Simple Name value ","Method Declaration Throws ","Simple Name onExtraProperties ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type Method ","Simple Name tail ","Simple Name keyValueTypeWrappers ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Simple Name invoke ","Method Call Expr ","Method Call Expr ","Simple Name getKey ","Simple Name object ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Void Type ","Simple Name applyWrappers ","Parameter Object[] temp ","Parameter Object obj ","Class Or Interface Type Exception ","Block Stmt ","Name Expr temp ","Name Expr obj ","Array Type 1 ","Class Or Interface Type Object ","Class Or Interface Type Object ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Name Expr wrapper ","Name Expr wrapper ","Name Expr wrapper ","Class Or Interface Type WrapperDescriptor ","Name Expr desc ","Simple Name bindingTypeWrappers ","Variable Declaration Expr ","Simple Name args ","Name Expr args ","Name Expr arg ","Name Expr args ","Variable Declarator Object[] args = ","Array Type 1 ","Array Creation Expr Object Array Creation Level Not Empty ","Class Or Interface Type Object ","Array Creation Level Dimension NotEmpty ","Method Call Expr ","Field Access Expr ","Simple Name size ","Simple Name parameters ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Method Call Expr ","Field Access Expr ","Simple Name size ","Simple Name parameters ","Variable Declaration Expr ","Simple Name arg ","Name Expr arg ","Variable Declarator Object arg = ","Class Or Interface Type Object ","Array Access Expr wrapper.parameters.get(i).idx ","Field Access Expr ","Method Call Expr ","Simple Name idx ","Field Access Expr ","Simple Name get ","Simple Name parameters ","Block Stmt ","Name Expr NOT_SET ","Assign Expr ASSIGN ","Array Access Expr i ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Simple Name method ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Block Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name createNewObject ","Method Call Expr ","Class Or Interface Type Exception ","Block Stmt ","Name Expr args ","Name Expr args ","Class Or Interface Type Object ","Block Stmt ","Name Expr desc ","Name Expr desc ","Field Access Expr ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name objectFactory ","Name Expr desc ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name create ","Field Access Expr ","Field Access Expr ","Simple Name objectFactory ","Simple Name ctor ","Simple Name clazz ","Block Stmt ","Name Expr desc ","Name Expr desc ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name staticFactory ","Name Expr desc ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Null Literal Expr ","Field Access Expr ","Simple Name staticFactory ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name newInstance ","Field Access Expr ","Simple Name ctor ","Simple Name ctor ","Marker Annotation Expr @Override ","PUBLIC","Simple Name length ","Simple Name toString ","Block Stmt ","Expression Stmt ","String Literal Expr Not Empty  ","Marker Annotation Expr @Override ","Simple Name rewrap ","Name Expr result ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type JsonIterator ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Field Access Expr ","Name Expr binding ","Simple Name name ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name setToBinding ","Parameter Object obj ","Parameter Binding binding ","Parameter Object value ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr value ","Name Expr value ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name set ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Name Expr copied "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"decode-ReflectionObjectDecoder.WithWrapper-JsonIterator","callMethodNameReferTo":{},"num":623,"succs":[[19,1,21,20,4,2],[6,23,22],[3,29,28],[30],[5,33,32],[34],[15,9,10,12,8,7,13,11],[],[],[10],[],[18,17],[90,14],[],[],[0],[17,25],[],[],[1],[27,2],[4,31],[],[24,26,16],[],[],[89,85,91,86,88,87,12],[3],[],[],[],[5],[],[],[35,36],[],[],[38,105],[41,106,92,39],[107,40],[41,26,110,22],[112,42],[43,137],[52,138,44,139],[45,142],[51,144,46,145,143],[49,147,47],[49,132,150,149,48],[51,153],[50],[51,164],[52,26,22,117],[53,175],[54,186],[55,198],[210,56],[59,228,57],[229,59,132,213,58],[63,230],[60,63],[238,61],[239,63,62,214],[63,240],[244,64],[252,65],[132,66,76,254,253],[258,67],[68,261],[69,264,71],[132,220,70,265,71],[266,75],[72,75],[73,269],[74,221,270,75],[271,75],[274,64],[77,278],[279,280,191,83,78],[81,79,281],[132,80,81,284,283],[83,287],[82],[293,83],[299,84],[26,22,124],[],[87],[],[104,25],[],[],[55,54,41,53,52,76,37,56,83,64,84,42],[25],[38,25,92],[93,25],[94,25],[25,95],[96,25],[234,97,25],[98,25,248],[103,99,25],[25,100],[234,101,25],[101,102,25,248],[],[39,40],[],[93,109,108],[],[],[111],[],[125],[114,94,115,95],[],[],[168,113],[113,116],[113,168,117],[113,249,118],[113,168,119,121],[113,249,119,120],[168,113,121],[113,301,122],[113,123],[113,126,127],[113],[129,128,130],[132,131,133],[135],[136,115,95],[114,94,134],[],[111],[],[],[],[51,44],[140,96,141],[],[],[],[46],[],[],[146],[],[48],[47],[152,151],[111],[],[],[155,154],[],[156,157,158],[159],[],[161,163,160],[],[],[146,162],[],[315,314,85,316,313],[165,166,167,116,171],[],[172,169,148],[170,174,163,173],[],[],[],[360,85,357,359,356,361,12,362,358],[],[],[146,162],[183],[177],[],[176,177,236,179],[180,102,177,181],[203,235,205],[178,177,236],[178,177,302],[184,185,177],[177],[111],[194],[188],[],[188,187,190],[218,69,221,73],[189],[77,191,189,162],[77,191,192,189,162],[188,196,195],[188],[197],[],[206],[97,200],[],[199],[199,235,201],[199,101,205,202,204],[],[180,203],[199,208,207],[199],[97,209,200],[],[224],[201,212],[],[211],[213,211,57],[214,211,57,61],[215,169,211,57],[250,216,211,57],[205,217,223,219,211],[],[218],[69,218,220],[218,69,169,190],[250,218,69,220,222],[226,225,211],[211],[227,201,212],[],[58],[111],[176,231,232],[],[237,178,98,202,233],[],[],[408],[411],[402,398,399,396,401,397,85,400,12],[62],[],[187,241,242],[],[243,215],[],[246,245,216,118,171],[],[170,217,99,119,247,251],[],[],[],[],[464,461,85,459,463,12,460,462,458],[68,66,67],[256,100,255],[257],[],[],[],[203,231,259],[101,260,204],[],[231,218,262],[205,263,219],[],[70],[111],[231,267,179],[180,237,102,181,268],[],[74],[],[189,272,241],[273,190],[],[275,222,276,171,120],[],[170,103,277,223,251,121],[],[78],[],[],[80],[79],[285,286],[111],[],[],[289,288],[],[291,157,290],[159],[192,163,292],[],[296,294,122,295,171],[],[297,169,282],[193,170,163,298],[],[],[123,182,300,303],[],[],[],[513,511,510,85,509,12,514,512],[321,305],[307,306,329],[335,307,336,312],[308,331],[309,337],[310,306,330,338],[311,339],[346,306],[324,163,22],[318,314,317],[],[320,162],[304,312,305],[],[],[162],[],[325],[323],[],[323,322],[327,326,323],[323],[328],[],[308],[331],[334],[330,309,331],[332,309,331],[331],[],[],[310,311],[],[342],[332],[340],[340,344,343],[340],[332,345],[],[347,349,319,341,348,322],[],[],[350,333],[],[352,354,373],[279,353,374,375,354],[377],[355],[381],[357],[],[168,370],[371,169],[170,372],[],[351],[168],[168,363],[169],[365,352,169],[365,366,352,169],[170],[170,368],[],[],[],[353],[376,365],[111],[],[378,379,363,368],[366,380],[],[],[383,364,382,369],[384,367],[],[],[386,419],[393,434,387],[388,420,393],[435,389],[390,442],[391,132,409,392,443],[444,392],[447,395],[394],[452,395],[237,412,22],[403,405,397,404],[],[234,413],[235,414],[236,415],[],[385,386,395],[],[],[],[234],[234,406],[235],[236],[390,409,236],[410],[236],[],[],[416,418,417],[],[],[],[423],[421,422],[],[],[420,425,424],[420],[428,427,426],[429,421],[],[430,139],[],[432,431],[433,422],[],[],[388,389,392],[438],[406],[436],[440,436,439],[436],[441,406],[],[391],[111],[231,410,445],[446],[],[448,437,449,411],[],[450,408,451],[],[577,578,580,8,579],[407,453],[],[455,474],[456,457,475,468],[457,476],[483,22,251],[459],[],[471,248],[249,472],[250,473],[],[454,457],[248],[485,248,465],[249],[250],[250,455,468],[250,486,469],[],[],[],[456],[],[477,478,465,479],[],[],[481,480,467],[482,469],[],[],[487,470,466,484],[],[],[],[587,590,589,586,85,12,588,591],[526,489],[132,527,517,490,491],[303,22,491],[528,492],[501,532,493,531],[494,533,499],[495,132,535,499,534],[497,537,496],[518,541,501,497],[539,498],[542,496],[500],[546,501],[550,503,502],[555,503,554],[552,504],[556,506,505],[506,561,520,502],[507,558],[562,508],[505,571],[510],[],[521,301],[522,302],[],[501,488,491],[168,301],[301,515],[302],[517,302],[170,518,517,302],[519,302],[],[524,525,523],[],[],[],[490],[111],[493],[492],[494,492],[],[],[495],[529,536],[111],[],[498],[539],[540],[539],[],[543,544],[],[157,545,538],[159],[519,547,515,548,171],[],[169,530,549],[],[504],[552],[553],[552],[],[],[507,508],[558],[560],[558,557],[558],[],[565],[557],[563],[567,563,566],[563],[568,569],[],[557,570],[],[573,516,574,572,551],[],[575,559],[564,576],[],[],[],[579],[],[581],[582,22,451],[159],[596,584],[585,601],[487,599,22],[587],[],[485,594],[595,486],[],[585,583,584],[485,606],[486],[],[],[598],[592,593,598],[600],[597],[598],[231,597,602],[592,607,604,603],[593,605],[],[],[],[613,611,610,12,8,612,608,609],[],[610],[],[614,606],[],[615],[],[616],[617,618],[],[620,619,157],[159],[621,622],[],[]],"attribute":["Try Stmt ","Return Stmt ","Parameter RuntimeException e ","Throw Stmt ","Parameter Exception e ","Throw Stmt ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Catch Clause ","Catch Clause ","ReturnStmt","Method Call Expr ","Simple Name decode_ ","Simple Name iter ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type RuntimeException ","Simple Name e ","Name Expr e ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr GREATER ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Variable Declarator int left = ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Method Call Expr ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Class Or Interface Type Object ","Simple Name decode_ ","Parameter JsonIterator iter ","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Simple Name toString ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name resetExistingObject ","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","String Literal Expr Not Empty  ","Name Expr CodegenAccess ","Name Expr CodegenAccess ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator Object obj = ","Simple Name append ","Conditional Expr CodegenAccess.existingObject(iter) == null ? createNewObject() : CodegenAccess.resetExistingObject(iter) ","Binary Expr EQUALS ","Method Call Expr ","Method Call Expr ","Method Call Expr ","EQUALS","Simple Name iter ","Simple Name existingObject ","Simple Name createNewObject ","Simple Name resetExistingObject ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr CodegenAccess ","Simple Name readObjectStart ","Block Stmt ","Simple Name jsoniterObj ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Block Stmt ","Name Expr desc ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name onMissingProperties ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Method Call Expr ","StringLiteralExpr","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Simple Name tracker ","Method Declaration ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Method Call Expr ","Simple Name obj ","Simple Name binding ","Simple Name value ","Method Declaration Throws ","Simple Name onMissingProperties ","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Name Expr cache ","Simple Name extra ","Name Expr extra ","Name Expr extra ","Name Expr fieldName ","Name Expr extra ","Boolean Literal Expr false ","Variable Declarator Map<String, Object> extra = ","Class Or Interface Type Map ","Null Literal Expr ","Variable Declaration Expr ","Name Expr tracker ","Simple Name tracker ","Name Expr tracker ","Name Expr binding ","Name Expr tracker ","Name Expr tracker ","Name Expr tracker ","Variable Declarator long tracker = ","Name Expr ctor ","Long Literal Expr Zero  ","Zero LongLiteralExpr","Variable Declaration Expr ","Simple Name fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Name Expr fieldName ","Name Expr fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Variable Declarator Slice fieldName = ","Class Or Interface Type Slice ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Variable Declaration Expr ","Simple Name binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Binding ","Method Call Expr ","Simple Name get ","Block Stmt ","Name Expr eLen ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name onUnknownProperty ","Simple Name iter ","Simple Name fieldName ","Simple Name extra ","Method Declaration Throws ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","BINARY_OR","Field Access Expr ","Simple Name mask ","Method Call Expr ","Simple Name setToBinding ","Method Call Expr ","Simple Name decodeBinding ","Simple Name iter ","Simple Name obj ","Simple Name binding ","Method Declaration Throws ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name get ","Block Stmt ","Name Expr ctor ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name onUnknownProperty ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr IterImplSkip ","Method Call Expr ","Simple Name decodeBinding ","Block Stmt ","NOT_EQUALS","Name Expr expectedTracker ","Block Stmt ","Name Expr desc ","Field Access Expr ","Name Expr iter ","Integer Literal Expr Note Zero  ","Simple Name onMissingProperties ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name collectMissingFields ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Method Call Expr ","Simple Name onMissingProperties ","Simple Name collectMissingFields ","Method Call Expr ","Simple Name setExtra ","Simple Name obj ","Simple Name extra ","Method Declaration Throws ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name collectMissingFields ","Parameter long tracker ","Block Stmt ","Name Expr iter ","Class Or Interface Type String ","Name Expr tracker ","Primitive Type long ","Variable Declaration Expr ","Name Expr missingFields ","Simple Name missingFields ","Name Expr missingFields ","Variable Declarator List<String> missingFields = ","Class Or Interface Type List ","Object Creation Expr ArrayList<String> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Name Expr allBindings ","Simple Name values ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Variable Declaration Expr ","Simple Name head ","Name Expr mask ","Variable Declarator long mask = ","Name Expr iter ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name addMissingField ","Field Access Expr ","Simple Name name ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name setToBinding ","Parameter Object obj ","Parameter Binding binding ","Parameter Object value ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr value ","Name Expr value ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name set ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Name Expr copied ","Expression Stmt ","If Stmt ","Name Expr shouldReadValue ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Map ","Simple Name onUnknownProperty ","Parameter JsonIterator iter ","Parameter Slice fieldName ","Parameter Map<String, Object> extra ","Class Or Interface Type IOException ","Block Stmt ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Name Expr iter ","Name Expr iter ","Name Expr fieldName ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type JsonIterator ","Class Or Interface Type Slice ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name shouldReadValue ","Name Expr desc ","Name Expr desc ","Variable Declarator boolean shouldReadValue = ","Primitive Type boolean ","Binary Expr OR ","Field Access Expr ","OR","Unary Expr ! ","Simple Name asExtraForUnknownProperties ","Method Call Expr ","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Block Stmt ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name toString ","Method Declaration ","Name Expr JsoniterSpi ","Simple Name skip ","If Stmt ","Field Access Expr ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Object obj ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Block Stmt ","Simple Name valueCanReuse ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name setExistingObject ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name field ","Method Call Expr ","Simple Name decodeBinding ","Simple Name iter ","Simple Name binding ","Method Declaration Throws ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Field Access Expr ","If Stmt ","Binary Expr EQUALS ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Throw Stmt ","Block Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name setExtra ","Parameter Object obj ","Parameter Map<String, Object> extra ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type Object ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Block Stmt ","Null Literal Expr ","Block Stmt ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Simple Name asExtraForUnknownProperties ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr fieldName ","Simple Name fieldName ","Class Or Interface Type String ","Simple Name keySet ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type Method ","Simple Name tail ","Simple Name keyValueTypeWrappers ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Simple Name invoke ","Method Call Expr ","Method Call Expr ","Simple Name getKey ","Simple Name object ","Marker Annotation Expr @Override ","Simple Name length ","Simple Name toString ","Block Stmt ","Expression Stmt ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr value ","Simple Name value ","Name Expr value ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name decode ","Simple Name decoder ","Simple Name iter ","Method Declaration Throws ","Marker Annotation Expr @Override ","Simple Name rewrap ","Name Expr result ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type JsonIterator ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Field Access Expr ","Name Expr binding ","Simple Name name "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"decode_-ReflectionObjectDecoder.WithWrapper-JsonIterator","callMethodNameReferTo":{"120":"srcmainjavacomjsoniterCodegenAccess.java-readObjectStart-CodegenAccess-JsonIterator","296":"srcmainjavacomjsoniterCodegenAccess.java-nextToken-CodegenAccess-JsonIterator","237":"srcmainjavacomjsoniterCodegenAccess.java-readObjectFieldAsSlice-CodegenAccess-JsonIterator","302":"srcmainjavacomjsoniterCodegenAccess.java-readObjectFieldAsSlice-CodegenAccess-JsonIterator","95":"srcmainjavacomjsoniterCodegenAccess.java-resetExistingObject-CodegenAccess-JsonIterator"},"num":781,"succs":[[93,1],[4,75,2,94],[3,95],[4,99,66,98],[5,101],[6,119],[7,120,15,121],[8,124],[126,125,9,14,127],[12,129,10],[12,11,132,133,131],[136,14],[13],[147,14],[104,66,15,98],[16,158],[169,17],[181,18],[20,132,182,19,183],[20,185],[21,191],[22,212],[194,25,132,23,213],[24,214],[25,218],[223,26],[227,27],[28,239],[262,31,29],[132,242,30,263,31],[264,35],[32,35],[271,33],[243,35,34,272],[273,35],[38,277,36],[37,280,38,245,278],[281,40],[39],[40,291],[295,41],[132,297,296,42,56],[301,43],[304,44],[307,45,47],[132,308,252,46,47],[51,309],[51,48],[312,49],[51,313,253,50],[51,314],[52,317,54],[254,53,280,54,318],[319,40],[55],[40,325],[57,329],[330,174,58,331,63],[61,59,332],[60,132,61,334,335],[338,63],[62],[344,63],[350,64],[65,355],[66,114,98],[68,69,67,74,71,70,72],[],[69],[],[92,76],[73,458],[],[],[21,5,20,25,4,0,40,27,15,16,28,65,26,63,17,56,64],[76],[],[75,76,1],[76,77],[78,76],[79,76,18],[80],[81,80],[80,82],[267,80,83],[80,84,287],[80,287,85],[80,86,91],[80,87],[267,88,80],[88,80,287],[88,89,80,90,287],[],[3,2],[],[96,97,77],[],[],[],[100],[],[115],[151,103],[],[103,102],[103,104,288],[151,103,105],[103,106,288],[103,110,288,107],[151,103,107],[103,288,108,109,107],[151,103,110],[103,352,111],[103,112,358],[103,113],[103,116,117],[103],[118],[],[7,14],[122,123,78],[],[],[],[9],[],[],[128],[],[11],[10],[134,135],[],[100],[],[],[138,137],[],[140,141,139],[142],[],[144,146,143],[],[],[128,145],[],[371,370,67,372,369],[149,150,102,154,148],[],[155,152,130],[153,156,146,157],[],[],[],[416,67,413,415,412,417,71,418,414],[],[],[128,145],[166],[160],[],[162,159,269,160],[163,89,164,160],[234,268,232],[161,269,160],[161,353,160],[167,168,160],[160],[100],[177],[171],[],[170,171,173],[45,49,250,253],[172],[57,174,172,145],[174,57,172,145,175],[171,179,178],[171],[180],[],[19],[79,184],[100],[],[186,187,188],[189,80],[],[190],[],[],[203],[81,193],[],[192],[22,196,194,192],[],[22,195],[195,197],[195,198,200],[201,195,108,199,90],[289,254,52,45,250],[195,357,199],[192,204,205],[192],[206,207],[208],[210,193,209],[],[81,211],[],[],[23,24],[100],[195,187,215],[217,216],[],[],[221,220,197,219],[222,82],[],[],[],[198,224,225,226],[],[],[],[235],[83,229],[],[228],[268,228,230],[88,234,233,231,228],[],[163,232],[236,228,237],[228],[83,238,229],[],[258],[230,241],[],[240],[240,242,29],[243,240,29,33],[240,244,29,279],[240,29,245,36],[289,246,240,29,36],[240,152,247,29,36],[289,240,248,29,36],[234,240,249,251,257],[],[250],[45,252,250],[45,173,250,279],[201,52,45,108,250,90],[254,52,45,152,250],[289,256,52,45,252,250,255],[259,240,260],[240],[261,230,241],[],[30],[100],[159,187,265],[266,270,84,231,161],[],[],[465],[468],[459,455,452,454,67,457,453,456,71],[34],[],[170,275,274],[],[244,276],[],[37],[],[],[511,514,67,513,512],[187,282,283],[199,284],[105,247,286,290,85],[246,285],[],[],[],[],[],[539,536,67,534,538,71,535,537,533],[292,248,293,106,154],[],[153,249,294,86,290,107],[],[43,42,44],[298,87,299],[300],[],[],[],[302,187,232],[88,233,303],[],[187,305,250],[234,306,251],[],[46],[100],[162,187,310],[163,270,89,311,164],[],[50],[],[172,274,315],[173,316],[],[53],[],[320,187,321],[322,200],[201,324,108,290,90],[323,255],[],[],[256,327,326,109,154],[],[153,110,328,257,290,91],[],[58],[],[],[60],[59],[336,337],[100],[],[],[340,339],[],[341,140,342],[142],[343,146,175],[],[346,345,347,111,154],[],[348,333,152],[176,153,349,146],[],[],[351,354,112,165],[],[],[],[588,586,585,67,584,71,587,589],[202,113,359,356],[],[],[],[667,669,668,666,67,71,665,670],[377,361],[363,362,385],[391,363,392,368],[364,387],[365,393],[366,362,386,394],[367,395],[402,362],[380,146,98],[374,370,373],[],[376,145],[360,368,361],[],[],[145],[],[381],[379],[],[378,379],[383,382,379],[379],[384],[],[364],[387],[390],[386,365,387],[388,365,387],[387],[],[],[366,367],[],[398],[388],[396],[396,400,399],[396],[388,401],[],[403,405,375,397,404,378],[],[],[406,389],[],[408,410,429],[330,409,430,431,410],[433],[411],[437],[413],[],[151,426],[427,152],[153,428],[],[407],[151],[151,419],[152],[421,408,152],[421,422,408,152],[153],[153,424],[],[],[],[409],[432,421],[100],[],[434,435,419,424],[422,436],[],[],[439,420,438,425],[440,423],[],[],[442,476],[449,491,443],[444,477,449],[492,445],[446,499],[447,132,466,448,500],[448,501],[504,451],[450],[509,451],[270,469,98],[460,453,462,461],[],[267,470],[268,471],[269,472],[],[],[441,442,451],[],[],[],[267],[267,463],[268],[269],[446,466,269],[467],[269],[],[],[473,474,475],[],[],[],[480],[478,479],[],[],[477,482,481],[477],[485,484,483],[486,478],[],[487,121],[],[489,488],[490,479],[],[],[444,445,448],[495],[463],[493],[497,493,496],[493],[498,463],[],[447],[100],[187,467,502],[503],[],[505,494,506,468],[],[507,465,508],[],[734,736,738,735,737],[464,510],[],[512],[],[518,279],[515],[280,98,519],[279],[516,279],[],[522,521,520],[132,523,524],[],[132,526,527],[525,516],[100],[],[528,517],[100],[],[549,530],[531,532,550,543],[532,551],[558,98,290],[534],[],[546,287],[288,547],[289,548],[],[529,532],[287],[560,540,287],[288],[289],[289,530,543],[289,561,544],[],[],[],[531],[],[552,553,540,554],[],[],[556,555,542],[557,544],[],[],[562,545,541,559],[],[],[],[745,748,747,67,744,71,746,749],[601,564],[132,602,592,565,566],[354,98,566],[603,567],[576,607,606,568],[569,608,574],[570,132,610,574,609],[572,612,571],[593,616,572,576],[614,573],[617,571],[575],[576,621],[625,578,577],[630,578,629],[627,579],[631,581,580],[581,636,595,577],[582,633],[637,583],[580,646],[585],[],[596,352],[597,353],[],[576,563,566],[151,352],[352,590],[353],[592,353],[593,153,592,353],[594,353],[],[599,600,598],[],[],[],[565],[100],[568],[567],[569,567],[],[],[570],[604,611],[100],[],[573],[614],[615],[614],[],[618,619],[],[140,620,613],[142],[594,622,590,623,154],[],[152,605,624],[],[579],[627],[628],[627],[],[],[582,583],[633],[635],[633,632],[633],[],[640],[632],[638],[642,638,641],[638],[643,644],[],[632,645],[],[648,591,649,647,626],[],[650,634],[639,651],[],[],[653,676,654],[684,683,654],[655,678],[656,685],[699,663,657,658],[705,658],[664,700,708,709,659],[660,714],[661,726],[330,663,662,716,727],[728,663],[702,713,658],[653,730],[666],[],[673,357],[675,358],[],[652],[357],[358],[674],[],[],[655,664,656],[678],[682],[678,680,677],[678,679],[678,680],[678],[],[],[690],[677],[688,686],[661,715,716],[687],[691,686,692],[686],[694,693],[],[],[696,697],[677,698],[],[],[660,659],[704,701],[],[704,700,701],[704,702,701],[703,688,701],[707,701,706],[701],[128],[],[711,710],[712,679],[],[],[],[717],[703,680,671],[715],[718,715,719],[715],[671,720],[721,722],[703,723,724],[],[680,725],[],[],[662],[],[729,187,688],[704,687],[689,672,731,732],[733,681],[],[],[],[],[737],[],[739],[740,98,508],[142],[754,742],[743,759],[562,757,98],[745],[],[560,752],[753,561],[],[743,741,742],[560,764],[561],[],[],[756],[750,751,756],[758],[755],[756],[187,755,760],[750,765,762,761],[751,763],[],[],[],[771,769,768,735,71,770,767,766],[],[768],[],[772,764],[],[773],[],[774],[775,776],[],[778,777,140],[142],[779,780],[],[]],"attribute":["If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr GREATER ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Block Stmt ","Expression Stmt ","While Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","If Stmt ","Field Access Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PRIVATE","Class Or Interface Type Object ","Class Or Interface Type Integer ","Parameter JsonIterator iter ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Simple Name readNull ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name resetExistingObject ","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Primitive Type int ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator Object obj = ","Simple Name offset ","Method Call Expr ","Simple Name createNewObject ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name skipStartedAt ","Simple Name readObjectStart ","Block Stmt ","Name Expr requiredIdx ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Block Stmt ","Name Expr desc ","Field Access Expr ","EQUALS","Null Literal Expr ","Name Expr desc ","Simple Name onMissingProperties ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Method Call Expr ","StringLiteralExpr","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Simple Name tracker ","Method Declaration ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Method Call Expr ","Simple Name obj ","Simple Name binding ","Simple Name value ","Method Declaration Throws ","Simple Name onMissingProperties ","Simple Name collectMissingFields ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Name Expr extra ","Simple Name extra ","Name Expr extra ","Name Expr extra ","Name Expr fieldName ","Name Expr extra ","Name Expr extra ","Variable Declarator Map<String, Object> extra = ","Class Or Interface Type Map ","Null Literal Expr ","Variable Declaration Expr ","Name Expr tracker ","Simple Name tracker ","Name Expr tracker ","Name Expr binding ","Name Expr tracker ","Name Expr tracker ","Name Expr tracker ","Variable Declarator long tracker = ","Primitive Type long ","Long Literal Expr Zero  ","Zero LongLiteralExpr","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name tempObjects ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Simple Name tempObjects ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Simple Name temp ","Name Expr tempCacheKey ","Name Expr temp ","Name Expr temp ","Name Expr tempCount ","Name Expr temp ","Name Expr temp ","Name Expr temp ","Name Expr temp ","Name Expr binding ","Name Expr temp ","Variable Declarator Object[] temp = ","Array Type 1 ","Cast Expr ","Array Type 1 ","Method Call Expr ","Class Or Interface Type Object ","Field Access Expr ","Simple Name get ","Simple Name tempObjects ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Array Creation Expr Object Array Creation Level Not Empty ","Class Or Interface Type Object ","Array Creation Level Dimension NotEmpty ","Method Call Expr ","Field Access Expr ","Simple Name put ","Name Expr tempCacheKey ","Simple Name tempObjects ","Method Call Expr ","Name Expr Arrays ","Simple Name fill ","Name Expr NOT_SET ","Variable Declaration Expr ","Simple Name fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Name Expr fieldName ","Name Expr fieldName ","Name Expr CodegenAccess ","Name Expr fieldName ","Variable Declarator Slice fieldName = ","Class Or Interface Type Slice ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Variable Declaration Expr ","Simple Name binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr allBindings ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Variable Declarator Binding binding = ","Class Or Interface Type Integer ","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name onUnknownProperty ","Simple Name iter ","Simple Name fieldName ","Simple Name extra ","Method Declaration Throws ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","BINARY_OR","Field Access Expr ","Simple Name mask ","Block Stmt ","Simple Name canNotSetDirectly ","Simple Name binding ","Method Declaration ","Assign Expr ASSIGN ","Array Access Expr binding.idx ","Method Call Expr ","Field Access Expr ","Simple Name idx ","Simple Name decodeBinding ","Simple Name iter ","Simple Name obj ","Simple Name binding ","Method Declaration Throws ","Method Call Expr ","Simple Name setToBinding ","Method Call Expr ","Simple Name decodeBinding ","Block Stmt ","Method Call Expr ","Char Literal Expr ',' ","Name Expr CodegenAccess ","Simple Name nextToken ","','","Assign Expr ASSIGN ","Method Call Expr ","Simple Name readObjectFieldAsSlice ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name onUnknownProperty ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Assign Expr BINARY_OR ","Field Access Expr ","Simple Name mask ","Block Stmt ","Simple Name canNotSetDirectly ","Assign Expr ASSIGN ","Array Access Expr binding.idx ","Method Call Expr ","Field Access Expr ","Simple Name idx ","Simple Name decodeBinding ","Method Call Expr ","Simple Name setToBinding ","Method Call Expr ","Simple Name decodeBinding ","Block Stmt ","NOT_EQUALS","Name Expr expectedTracker ","Block Stmt ","Name Expr desc ","Field Access Expr ","Null Literal Expr ","Name Expr desc ","Simple Name onMissingProperties ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name collectMissingFields ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Method Call Expr ","Simple Name onMissingProperties ","Simple Name collectMissingFields ","Method Call Expr ","Simple Name setExtra ","Simple Name obj ","Simple Name extra ","Method Declaration Throws ","Method Call Expr ","Simple Name applyWrappers ","Simple Name temp ","Simple Name obj ","Method Declaration Throws ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type List ","Simple Name collectMissingFields ","Parameter long tracker ","Block Stmt ","Name Expr iter ","Class Or Interface Type String ","Name Expr tracker ","Primitive Type long ","Variable Declaration Expr ","Name Expr missingFields ","Simple Name missingFields ","Name Expr missingFields ","Variable Declarator List<String> missingFields = ","Class Or Interface Type List ","Object Creation Expr ArrayList<String> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Name Expr allBindings ","Simple Name values ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Variable Declaration Expr ","Simple Name head ","Name Expr mask ","Variable Declarator long mask = ","Name Expr iter ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name addMissingField ","Field Access Expr ","Simple Name name ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name setToBinding ","Parameter Object obj ","Parameter Binding binding ","Parameter Object value ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr value ","Name Expr value ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name set ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Name Expr copied ","Expression Stmt ","If Stmt ","Name Expr shouldReadValue ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Map ","Simple Name onUnknownProperty ","Parameter JsonIterator iter ","Parameter Slice fieldName ","Parameter Map<String, Object> extra ","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Name Expr iter ","Name Expr iter ","Name Expr fieldName ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type JsonIterator ","Class Or Interface Type Slice ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name shouldReadValue ","Name Expr desc ","Name Expr desc ","Variable Declarator boolean shouldReadValue = ","Primitive Type boolean ","Binary Expr OR ","Field Access Expr ","OR","Unary Expr ! ","Simple Name asExtraForUnknownProperties ","Method Call Expr ","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Block Stmt ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name readAny ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name toString ","Method Declaration ","Name Expr JsoniterSpi ","Simple Name skip ","Primitive Type boolean ","Simple Name canNotSetDirectly ","Parameter Binding binding ","Block Stmt ","Return Stmt ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Binary Expr AND ","Binary Expr EQUALS ","AND","Binary Expr EQUALS ","Field Access Expr ","Null Literal Expr ","Simple Name field ","Field Access Expr ","Null Literal Expr ","Simple Name method ","If Stmt ","Field Access Expr ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Object obj ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Block Stmt ","Simple Name valueCanReuse ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name setExistingObject ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name field ","Method Call Expr ","Simple Name decodeBinding ","Simple Name iter ","Simple Name binding ","Method Declaration Throws ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Field Access Expr ","If Stmt ","Binary Expr EQUALS ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Throw Stmt ","Block Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name setExtra ","Parameter Object obj ","Parameter Map<String, Object> extra ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type Object ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Block Stmt ","Null Literal Expr ","Block Stmt ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Simple Name asExtraForUnknownProperties ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr fieldName ","Simple Name fieldName ","Class Or Interface Type String ","Simple Name keySet ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type Method ","Simple Name tail ","Simple Name keyValueTypeWrappers ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Simple Name invoke ","Method Call Expr ","Method Call Expr ","Simple Name getKey ","Simple Name object ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Void Type ","Simple Name applyWrappers ","Parameter Object[] temp ","Parameter Object obj ","Class Or Interface Type Exception ","Block Stmt ","Name Expr temp ","Name Expr obj ","Array Type 1 ","Class Or Interface Type Object ","Class Or Interface Type Object ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Name Expr wrapper ","Name Expr wrapper ","Name Expr wrapper ","Class Or Interface Type WrapperDescriptor ","Name Expr desc ","Simple Name bindingTypeWrappers ","Variable Declaration Expr ","Simple Name args ","Name Expr args ","Name Expr arg ","Name Expr args ","Variable Declarator Object[] args = ","Array Type 1 ","Array Creation Expr Object Array Creation Level Not Empty ","Class Or Interface Type Object ","Array Creation Level Dimension NotEmpty ","Method Call Expr ","Field Access Expr ","Simple Name size ","Simple Name parameters ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Method Call Expr ","Field Access Expr ","Simple Name size ","Simple Name parameters ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name arg ","Name Expr arg ","Variable Declarator Object arg = ","Class Or Interface Type Object ","Array Access Expr wrapper.parameters.get(i).idx ","Field Access Expr ","Method Call Expr ","Simple Name idx ","Field Access Expr ","Simple Name get ","Simple Name parameters ","Block Stmt ","Name Expr NOT_SET ","Assign Expr ASSIGN ","Array Access Expr i ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Simple Name method ","Marker Annotation Expr @Override ","PUBLIC","Simple Name length ","Simple Name toString ","Block Stmt ","Expression Stmt ","String Literal Expr Not Empty  ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr value ","Simple Name value ","Name Expr value ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name decode ","Simple Name decoder ","Simple Name iter ","Method Declaration Throws ","Marker Annotation Expr @Override ","Simple Name rewrap ","Name Expr result ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type JsonIterator ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Field Access Expr ","Name Expr binding ","Simple Name name "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"setToBinding-ReflectionObjectDecoder-Object-Binding-Object","callMethodNameReferTo":{},"num":43,"succs":[[1,3,29],[31,2,30,32,3],[35],[4],[39],[11,6,10,8,7,13,12,15,9],[],[8],[],[17,26],[27,20],[24,28],[14],[],[],[0],[17],[],[17,16],[20],[],[19,1,20],[19,21,1,20],[24],[],[24,23],[],[],[],[2],[33,19],[],[34],[],[],[36,37,16,23],[21,38],[],[],[41,18,40,25],[42,22],[],[]],"attribute":["If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","Void Type ","Simple Name setToBinding ","Parameter Object obj ","Parameter Binding binding ","Parameter Object value ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr value ","Simple Name value ","Name Expr value ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Null Literal Expr ","Simple Name field ","NullLiteralExpr","Method Call Expr ","Field Access Expr ","Simple Name set ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Name Expr copied "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"setExtra-ReflectionObjectDecoder-Object-Map<String,Object>","callMethodNameReferTo":{"101":"srcmainjavacomjsoniteranyAny.java-object-Any-"},"num":139,"succs":[[44,1],[45,46,34,2,3],[21,48,3],[49,4],[13,53,5,52],[6,54,11],[7,45,56,11,55],[9,58,8],[36,62,9,13],[60,10],[63,8],[12],[13,69],[77,15,14],[82,15,81],[79,16],[18,83,17],[18,88,38,14],[19,85],[89,20],[17,98],[28,25,24,23,22,27,26,30],[],[24],[],[39,32],[35,40],[29],[],[],[13,0,3],[72,32],[],[32,31],[35],[],[34,35],[36,74,34,35],[37,35],[],[42,43,41],[],[],[],[2],[],[47],[],[],[5],[4],[6,4],[],[],[7],[50,57],[47],[],[10],[60],[61],[60],[],[64,65],[],[67,66,59],[68],[],[],[37,31,70,71,75],[],[73,51,76],[],[],[],[113,22,112,110,114,109,27,115,111],[],[16],[79],[80],[79],[],[],[19,20],[85],[87],[85,84],[85],[],[92],[84],[90],[94,90,93],[90],[96,95],[],[84,97],[],[100,33,101,99,78],[],[102,86],[91,103],[],[],[105,107,126],[128,106,127,129,107],[131],[108],[135],[110],[],[72,123],[124,73],[74,125],[],[104],[72],[72,116],[73],[118,105,73],[118,119,105,73],[74],[74,121],[],[],[],[106],[130,118],[],[47],[],[133,132,116,121],[119,134],[],[],[137,117,136,122],[138,120],[],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Field Access Expr ","If Stmt ","Binary Expr EQUALS ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Throw Stmt ","Block Stmt ","Expression Stmt ","For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","Void Type ","Simple Name setExtra ","Parameter Object obj ","Parameter Map<String, Object> extra ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Name Expr extra ","Simple Name extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type Object ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Block Stmt ","Name Expr iter ","Name Expr desc ","Name Expr desc ","Simple Name asExtraForUnknownProperties ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name onExtraProperties ","Block Stmt ","Name Expr fieldName ","Simple Name fieldName ","Class Or Interface Type String ","Simple Name keySet ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr","Method Call Expr ","Simple Name setToBinding ","Field Access Expr ","Simple Name obj ","Simple Name binding ","Simple Name value ","Method Declaration Throws ","Simple Name onExtraProperties ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Class Or Interface Type Method ","Simple Name tail ","Simple Name keyValueTypeWrappers ","Block Stmt ","Name Expr entry ","Simple Name entry ","Name Expr entry ","Class Or Interface Type Entry ","Simple Name entrySet ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Simple Name getValue ","Method Call Expr ","Simple Name invoke ","Method Call Expr ","Method Call Expr ","Simple Name getKey ","Simple Name object ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name setToBinding ","Parameter Object obj ","Parameter Binding binding ","Parameter Object value ","Class Or Interface Type Exception ","Block Stmt ","Name Expr obj ","Name Expr obj ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr value ","Name Expr value ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Null Literal Expr ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name set ","Simple Name field ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Name Expr copied "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"canNotSetDirectly-ReflectionObjectDecoder-Binding","callMethodNameReferTo":{},"num":24,"succs":[[2,5,1,4,3],[],[3],[],[10,8],[6],[0,11,12],[8],[],[7,8],[],[],[15,14,13],[17,16,18],[],[17,21,22],[19,7],[],[20],[],[],[23,9],[20],[]],"attribute":["Method Declaration ","PRIVATE","Primitive Type boolean ","Simple Name canNotSetDirectly ","Parameter Binding binding ","Block Stmt ","Return Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Class Or Interface Type Binding ","ReturnStmt","Binary Expr AND ","Binary Expr EQUALS ","AND","Binary Expr EQUALS ","Field Access Expr ","EQUALS","Null Literal Expr ","Simple Name field ","NullLiteralExpr","Field Access Expr ","Null Literal Expr ","Simple Name method "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"decodeBinding-ReflectionObjectDecoder-JsonIterator-Binding","callMethodNameReferTo":{},"num":52,"succs":[[19,1],[2,24],[3,22,32],[6,10,8,5,4,9,12,7],[],[6],[],[14,17],[18,16],[11,39],[],[],[2,0,1],[14,30],[],[16],[],[],[],[21],[13,15,21],[23],[20],[21],[25,20,26],[],[13,31,28,27],[15,29],[],[],[],[40,37,36,34,9,38,35,33],[],[],[],[36],[],[41,30],[],[],[42],[],[43],[44,45],[],[48,46,47],[49],[],[50,51],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PRIVATE","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Binding binding ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr binding ","Simple Name binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr value ","Simple Name value ","Name Expr value ","Class Or Interface Type Object ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name decode ","Simple Name decoder ","Simple Name iter ","Method Declaration Throws ","ReturnStmt","Marker Annotation Expr @Override ","PUBLIC","Simple Name rewrap ","Name Expr result ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","IOException","Block Stmt ","Class Or Interface Type JsonIterator ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Field Access Expr ","StringLiteralExpr","Name Expr binding ","Simple Name name "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"decodeBinding-ReflectionObjectDecoder-JsonIterator-Object-Binding","callMethodNameReferTo":{"29":"srcmainjavacomjsoniterCodegenAccess.java-setExistingObject-CodegenAccess-JsonIterator-Object"},"num":87,"succs":[[1,27],[2,3,28,20],[3,29],[37,4,36],[14,9,5,7,12,11,8,10,6],[],[7],[],[24,16],[19,25],[21,26],[13,74],[],[],[0,3],[16],[],[39,15,16],[19],[],[21],[],[21,1,20],[21,40,22],[],[],[],[2],[],[30,31,15,32],[],[],[34,33,18],[35,22],[],[],[],[41,23,17,38],[],[],[],[46,49,48,5,45,11,50,47],[55,43],[44,60],[41,58,36],[46],[],[39,53],[54,40],[],[44,42,43],[39,66],[40],[],[],[57],[51,52,57],[59],[56],[57],[61,56,62],[],[51,67,64,63],[52,65],[],[],[],[75,72,71,69,11,73,70,68],[],[],[71],[],[76,66],[],[],[77],[],[78],[79,80],[],[83,81,82],[84],[],[85,86],[],[],[]],"attribute":["If Stmt ","Field Access Expr ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PRIVATE","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Object obj ","Parameter Binding binding ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr obj ","Simple Name obj ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Object ","Class Or Interface Type Binding ","Block Stmt ","Simple Name valueCanReuse ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name setExistingObject ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name field ","ReturnStmt","Method Call Expr ","Simple Name decodeBinding ","Simple Name iter ","Simple Name binding ","Method Declaration Throws ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name decodeBinding ","Parameter JsonIterator iter ","Parameter Binding binding ","Class Or Interface Type Exception ","Block Stmt ","Name Expr iter ","Name Expr binding ","Class Or Interface Type JsonIterator ","Class Or Interface Type Binding ","Variable Declaration Expr ","Name Expr value ","Simple Name value ","Name Expr value ","Class Or Interface Type Object ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name decode ","Simple Name decoder ","Simple Name iter ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Simple Name rewrap ","Name Expr result ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","IOException","Block Stmt ","Class Or Interface Type JsonIterator ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Field Access Expr ","StringLiteralExpr","Name Expr binding ","Simple Name name "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"onUnknownProperty-ReflectionObjectDecoder-JsonIterator-Slice-Map<String,Object>","callMethodNameReferTo":{},"num":89,"succs":[[1,41],[8,57,2],[3,42,8],[58,4],[65,5],[6,66,30,7,67],[7,69],[73,10],[9],[78,10],[11,34,80],[21,16,13,15,19,12,14,17,18],[],[22,24,14,23],[],[26,35],[29,36],[31,37],[20],[],[],[0,1,10],[],[],[],[26],[],[26,25],[29],[28],[31],[33],[5,30,31],[32],[31],[],[],[38,40,39],[],[],[],[45],[43,44],[],[],[42,47,46],[42],[50,49,48],[51,43],[],[52,53],[],[55,54],[],[56,44],[],[],[3,4,7],[61],[25],[59],[63,59,62],[59],[64,25],[],[6],[],[68],[],[70,32,71],[],[72],[],[74,60,75,33],[],[76,28,77],[],[81,83,85,82,84],[27,79],[],[],[],[],[84],[],[86],[87,80,77],[88],[]],"attribute":["Expression Stmt ","If Stmt ","Name Expr shouldReadValue ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PRIVATE","Class Or Interface Type Map ","Simple Name onUnknownProperty ","Parameter JsonIterator iter ","Parameter Slice fieldName ","Parameter Map<String, Object> extra ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr fieldName ","Simple Name fieldName ","Name Expr extra ","Simple Name extra ","Name Expr extra ","Name Expr extra ","Name Expr extra ","Class Or Interface Type JsonIterator ","Class Or Interface Type Slice ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name shouldReadValue ","Name Expr desc ","Name Expr desc ","Variable Declarator boolean shouldReadValue = ","Primitive Type boolean ","Binary Expr OR ","Field Access Expr ","OR","Unary Expr ! ","Simple Name asExtraForUnknownProperties ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Block Stmt ","Variable Declaration Expr ","Simple Name value ","Name Expr value ","Variable Declarator Any value = ","Class Or Interface Type Any ","Method Call Expr ","Simple Name readAny ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Simple Name put ","Method Call Expr ","Simple Name toString ","Method Declaration ","Name Expr JsoniterSpi ","Simple Name skip ","ReturnStmt","Marker Annotation Expr @Override ","PUBLIC","Simple Name length ","Simple Name toString ","Block Stmt ","Expression Stmt ","String Literal Expr Not Empty  ","StringLiteralExpr"]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"collectMissingFields-ReflectionObjectDecoder-long","callMethodNameReferTo":{"45":"srcmainjavacomjsoniterCodegenAccess.java-addMissingField-CodegenAccess-List-long-long-String"},"num":51,"succs":[[20,1],[3,2,28],[34,3,35,8],[4,30],[5,36],[6,2,29,37],[7,38],[45,2],[23,9,50],[13,12,10,14,11],[],[16,12,15],[],[19,18],[0,8,1],[],[],[18],[],[],[24],[22],[],[21,22],[26,25,22],[22],[27],[],[4],[30],[33],[29,5,30],[31,5,30],[30],[],[],[6,7],[],[41],[31],[39],[39,43,42],[39],[31,44],[],[46,17,48,40,47,21],[],[],[49,32],[],[]],"attribute":["Variable Declaration Expr ","For Each Stmt ","Method Call Expr ","Variable Declaration Expr ","If Stmt ","Field Access Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","Class Or Interface Type List ","Simple Name collectMissingFields ","Parameter long tracker ","Block Stmt ","Name Expr iter ","Class Or Interface Type String ","Name Expr tracker ","Simple Name tracker ","Primitive Type long ","Variable Declaration Expr ","Name Expr missingFields ","Simple Name missingFields ","Name Expr missingFields ","Variable Declarator List<String> missingFields = ","Class Or Interface Type List ","Object Creation Expr ArrayList<String> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Name Expr allBindings ","Simple Name values ","Block Stmt ","Simple Name asMissingWhenNotPresent ","Variable Declaration Expr ","Simple Name head ","Name Expr mask ","Variable Declarator long mask = ","Name Expr iter ","Field Access Expr ","Simple Name mask ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name addMissingField ","Field Access Expr ","Simple Name name ","ReturnStmt"]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"applyWrappers-ReflectionObjectDecoder-Object[]-Object","callMethodNameReferTo":{},"num":91,"succs":[[1,30,2],[38,37,2],[3,32],[4,39],[53,11,5,6],[59,6],[12,54,7,63,64],[8,69],[9,81],[82,11,10,71,83],[84,11],[56,68,6],[1,87],[17,20,18,16,14,19,15,22],[],[16],[],[27,24],[29,26],[21],[],[],[0],[24],[],[26],[],[28],[],[],[3,12,4],[32],[36],[32,34,31],[32,33],[32,34],[32],[],[],[44],[31],[40,42],[9,70,71],[41],[45,40,46],[40],[48,47],[],[],[50,51],[31,52],[],[],[8,7],[58,55],[],[58,54,55],[58,56,55],[57,42,55],[61,55,60],[55],[62],[],[],[66,65],[33,67],[],[],[],[72],[57,34,23],[70],[73,70,74],[70],[23,75],[76,77],[78,57,79],[],[34,80],[],[],[10],[],[],[85,86,42],[58,41],[],[43,25,88,89],[90,35],[],[]],"attribute":["For Each Stmt ","Field Access Expr ","Variable Declaration Expr ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Unary Expr ++ ","Expression Stmt ","Method Declaration Throws ","PRIVATE","Void Type ","Simple Name applyWrappers ","Parameter Object[] temp ","Parameter Object obj ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr temp ","Simple Name temp ","Name Expr obj ","Simple Name obj ","Array Type 1 ","Class Or Interface Type Object ","Class Or Interface Type Object ","Block Stmt ","Name Expr wrapper ","Simple Name wrapper ","Name Expr wrapper ","Name Expr wrapper ","Name Expr wrapper ","Class Or Interface Type WrapperDescriptor ","Name Expr desc ","Simple Name bindingTypeWrappers ","Variable Declaration Expr ","Simple Name args ","Name Expr args ","Name Expr arg ","Name Expr args ","Variable Declarator Object[] args = ","Array Type 1 ","Array Creation Expr Object Array Creation Level Not Empty ","Class Or Interface Type Object ","Array Creation Level Dimension NotEmpty ","Method Call Expr ","Field Access Expr ","Simple Name size ","Simple Name parameters ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Method Call Expr ","Field Access Expr ","Simple Name size ","Simple Name parameters ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name arg ","Name Expr arg ","Variable Declarator Object arg = ","Class Or Interface Type Object ","Array Access Expr wrapper.parameters.get(i).idx ","Field Access Expr ","Method Call Expr ","Simple Name idx ","Field Access Expr ","Simple Name get ","Simple Name parameters ","Block Stmt ","NOT_EQUALS","Name Expr NOT_SET ","Assign Expr ASSIGN ","Array Access Expr i ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Simple Name method "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"createNewObject-ReflectionObjectDecoder-JsonIterator-Object[]","callMethodNameReferTo":{},"num":190,"succs":[[1,38],[41,40,39,2,3],[44,3],[4,50],[5,70],[40,8,71,6,53],[7,72],[8,82],[9,87],[16,10,11,91],[11,97],[92,12,17,102,101],[110,13],[14,125],[16,126,127,113,15],[16,128],[109,11,94],[18,131,130],[21,19,27,20,24,25,23,22],[],[21],[],[35,29],[36,34],[26],[],[],[4,9,17,8,0,3],[29],[],[1,29,28],[30],[30,31],[34],[],[],[37],[],[2],[42,28],[],[43],[],[],[46,45,47],[48,30],[],[49],[],[],[61],[31,52],[],[51],[51,55,53,5],[],[5,54],[56,54],[59,57,54],[113,14,111],[133,58],[63,51,62],[51],[65,64],[66],[67,68,52],[],[31,69],[],[],[7,6],[43],[46,73,54],[74,75],[],[],[77,78],[79,80],[],[55,81],[],[],[56,84,85,83],[32,86],[],[],[],[90,88,57,89],[],[],[43],[12,13],[96,93],[],[92,96,93],[96,93,94],[59,95,93],[99,93,98],[93],[100],[],[],[103,104],[106,105],[],[107,108],[],[],[],[],[114],[112,33,95],[],[111],[116,111,115],[111],[117,33],[119,118],[121,120,95],[],[122,123],[],[112,124],[],[],[15],[],[],[59,46,129],[96,58],[],[60,132,134],[],[],[144,19,145,143,147,24,146],[136,151],[126,155,137,154,138],[160,130,138,134],[168,141,139],[126,171,172,141,140],[177,130,134],[142],[184,130,134],[144],[],[133,150],[],[135,138],[133],[133,148],[],[137],[136],[136],[157,156],[43],[159,158],[],[],[],[162,161,163],[165,164],[],[167,153],[152,166],[],[],[],[140],[139],[139],[174,173],[43],[176,175],[],[],[],[179,178,148,180],[182,181],[],[43],[169,183],[],[],[185,149,186],[188,187],[],[189,170],[],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Unary Expr ++ ","Return Stmt ","Method Declaration Throws ","PRIVATE","Class Or Interface Type Object ","Simple Name createNewObject ","Parameter JsonIterator iter ","Parameter Object[] temp ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr temp ","Simple Name temp ","Class Or Interface Type JsonIterator ","Array Type 1 ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","EQUALS","Null Literal Expr ","Simple Name tempObjects ","NullLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Simple Name tempObjects ","Class Or Interface Type HashMap ","Variable Declaration Expr ","Simple Name ctorArgs ","Name Expr ctorArgsCacheKey ","Name Expr ctorArgs ","Name Expr ctorArgs ","Name Expr desc ","Name Expr ctorArgs ","Name Expr ctorArgs ","Name Expr ctorArgs ","Name Expr arg ","Name Expr ctorArgs ","Variable Declarator Object[] ctorArgs = ","Array Type 1 ","Cast Expr ","Array Type 1 ","Method Call Expr ","Class Or Interface Type Object ","Field Access Expr ","Simple Name get ","Simple Name tempObjects ","Block Stmt ","Null Literal Expr ","Assign Expr ASSIGN ","Array Creation Expr Object Array Creation Level Not Empty ","Class Or Interface Type Object ","Array Creation Level Dimension NotEmpty ","Method Call Expr ","Field Access Expr ","Simple Name size ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name put ","Name Expr ctorArgsCacheKey ","Simple Name tempObjects ","Method Call Expr ","Name Expr Arrays ","Simple Name fill ","Null Literal Expr ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Method Call Expr ","Field Access Expr ","Simple Name size ","Field Access Expr ","Simple Name parameters ","Name Expr desc ","Simple Name ctor ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name arg ","Name Expr desc ","Name Expr arg ","Variable Declarator Object arg = ","Class Or Interface Type Object ","Array Access Expr desc.ctor.parameters.get(i).idx ","Field Access Expr ","Method Call Expr ","Simple Name idx ","Field Access Expr ","Simple Name get ","Field Access Expr ","Simple Name parameters ","Simple Name ctor ","Block Stmt ","NOT_EQUALS","Name Expr NOT_SET ","Assign Expr ASSIGN ","Array Access Expr i ","ReturnStmt","Method Call Expr ","Simple Name createNewObject ","Simple Name args ","Method Declaration Throws ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Block Stmt ","Return Stmt ","Class Or Interface Type Object ","Simple Name createNewObject ","Method Call Expr ","Class Or Interface Type Exception ","Block Stmt ","Name Expr args ","Name Expr args ","Class Or Interface Type Object ","Block Stmt ","Name Expr desc ","Name Expr desc ","Field Access Expr ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name objectFactory ","Name Expr desc ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name create ","Field Access Expr ","Field Access Expr ","Simple Name objectFactory ","Simple Name ctor ","Simple Name clazz ","Block Stmt ","Name Expr desc ","Name Expr desc ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name staticFactory ","Name Expr desc ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Null Literal Expr ","Field Access Expr ","Simple Name staticFactory ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name newInstance ","Field Access Expr ","Simple Name ctor ","Simple Name ctor "]}
{"fileName":"srcmainjavacomjsoniterReflectionObjectDecoder.java","version":"0.9.22","methodName":"createNewObject-ReflectionObjectDecoder-Object","callMethodNameReferTo":{},"num":63,"succs":[[1,21],[25,26,2,24,3],[33,32,3,8],[41,6,4],[25,44,45,6,5],[50,32,8],[7],[57,32,8],[11,9,12,10,16,13,14],[],[11],[],[18,20],[15],[],[],[0,3],[18],[],[18,17],[],[2],[1],[1],[28,27],[],[31],[30,29],[],[],[],[],[],[35,34,36],[37,38],[],[40,23],[22,39],[],[],[],[5],[4],[4],[47,46],[31],[49,48],[],[],[],[52,51,53,17],[55,54],[],[31],[42,56],[],[],[58,59,19],[61,60],[],[62,43],[],[]],"attribute":["If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Block Stmt ","Return Stmt ","Method Declaration Throws ","PRIVATE","Class Or Interface Type Object ","Simple Name createNewObject ","Method Call Expr ","Throws","Class Or Interface Type Exception ","Exception","Block Stmt ","Name Expr args ","Simple Name args ","Name Expr args ","Class Or Interface Type Object ","Block Stmt ","Name Expr desc ","Name Expr desc ","Field Access Expr ","NOT_EQUALS","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name objectFactory ","Name Expr desc ","Simple Name ctor ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Field Access Expr ","Simple Name create ","Field Access Expr ","Field Access Expr ","Simple Name objectFactory ","Simple Name ctor ","Simple Name clazz ","Block Stmt ","Name Expr desc ","Name Expr desc ","Field Access Expr ","Null Literal Expr ","Field Access Expr ","Simple Name staticFactory ","Name Expr desc ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name invoke ","Null Literal Expr ","Field Access Expr ","Simple Name staticFactory ","Simple Name ctor ","Method Call Expr ","Field Access Expr ","Simple Name newInstance ","Field Access Expr ","Simple Name ctor ","Simple Name ctor "]}
