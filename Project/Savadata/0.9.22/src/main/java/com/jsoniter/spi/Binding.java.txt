{"fileName":"srcmainjavacomjsoniterspiBinding.java","version":"0.9.22","hasMethodName":["decoderCacheKey-Binding-","encoderCacheKey-Binding-","substituteTypeVariables-Binding-Map<String,Type>-Type","translateTypeVariable-Binding-Map<String,Type>-TypeVariable","getAnnotation-Binding-Class<T>","equals-Binding-Object","hashCode-Binding-","toString-Binding-"]}
{"fileName":"srcmainjavacomjsoniterspiBinding.java","version":"0.9.22","methodName":"decoderCacheKey-Binding-","callMethodNameReferTo":{"10":"srcmainjavacomjsoniterspiTypeLiteral.java-getDecoderCacheKey-TypeLiteral-"},"num":21,"succs":[[2,1,3,4],[],[3],[],[5],[0,7,6],[],[8,9,10],[11,9,12],[],[17,18],[13,14],[16],[15],[],[],[],[19,20],[],[15],[]],"attribute":["Method Declaration ","PUBLIC","Class Or Interface Type String ","Simple Name decoderCacheKey ","Block Stmt ","Return Stmt ","ReturnStmt","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Method Call Expr ","Field Access Expr ","String Literal Expr Not Empty  ","This Expr ","Name Expr iter ","ThisExpr","StringLiteralExpr","Field Access Expr ","Simple Name getDecoderCacheKey ","This Expr ","Simple Name clazzTypeLiteral "]}
{"fileName":"srcmainjavacomjsoniterspiBinding.java","version":"0.9.22","methodName":"encoderCacheKey-Binding-","callMethodNameReferTo":{"10":"srcmainjavacomjsoniterspiTypeLiteral.java-getEncoderCacheKey-TypeLiteral-"},"num":21,"succs":[[4,2,1,3],[],[3],[],[5],[0,7,6],[],[9,8,10],[11,9,12],[],[17,18],[13,14],[16],[15],[],[],[],[19,20],[],[15],[]],"attribute":["Method Declaration ","PUBLIC","Class Or Interface Type String ","Simple Name encoderCacheKey ","Block Stmt ","Return Stmt ","ReturnStmt","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Method Call Expr ","Field Access Expr ","String Literal Expr Not Empty  ","Simple Name size ","Simple Name name ","ThisExpr","StringLiteralExpr","Field Access Expr ","Simple Name getEncoderCacheKey ","This Expr ","Simple Name clazzTypeLiteral "]}
{"fileName":"srcmainjavacomjsoniterspiBinding.java","version":"0.9.22","methodName":"substituteTypeVariables-Binding-Map<String,Type>-Type","callMethodNameReferTo":{"98":"srcmainjavacomjsoniterspiGenericsHelper.java-createParameterizedType-GenericsHelper-Type[]-Type-Type","124":"srcmainjavacomjsoniterspiGenericsHelper.java-createGenericArrayType-GenericsHelper-Type"},"num":208,"succs":[[44,1],[31,3,2,46,45],[3,49,19,48],[4,56],[57,34,5,45,13],[59,6],[68,7],[11,79,9,8],[9,84],[89,80,10,88,12],[92,11],[82,91,9],[98,19,48,13],[14,105],[15,18,106,45,36],[108,16],[115,17],[18,124,19,48],[38,19,48],[23,24,26,20,25,22,21],[21],[],[23],[],[39,28],[32,43],[3,18,0,13],[52,28],[],[27,28],[29,28],[32],[],[31,32,1],[33,32],[32,4,34],[35,32],[32,14,36],[32,37],[41,42,40],[],[],[],[],[2],[167,47,107,58],[],[],[],[50,54,51,27],[],[33,53,55],[],[],[142,144,143,20,140,141,21],[],[6,7,5,12],[],[],[64],[35],[60],[60,61],[60,62],[66,60,65],[60],[35,67],[],[75],[61],[71,69],[72,73,29,69],[71,70,69],[82,83,81],[71],[76,77,69],[69],[78,61],[],[10],[83,81],[],[83,80,81],[72,73,29,81],[86,85,81],[81],[87],[],[],[90,70],[],[],[94,95,93],[71,83],[],[97,19,96,29],[],[32,72,73],[101,100,74,102,99],[],[],[103,62],[63,104],[],[],[15,16,17],[],[],[111],[37],[109],[113,112,109],[109],[37,114],[],[118],[110,30],[116],[119,116,120],[116],[122,121,19,30],[],[32,123,110],[],[126,117,125],[],[],[128,154],[162,129],[131,130,163,164],[131,54,168,48],[132,170],[133,177],[134,196],[198,197,135,179,136],[200,136,54,48],[202,137],[138,203,139,180,45],[139,54,204,48],[182,54,48],[141],[],[52,149],[53,153],[133,132,128,131,127,136,139],[52],[145,52],[53],[53,147],[151,152,150],[],[],[],[],[158],[147],[155],[155,156],[160,155,159],[155],[147,161],[],[130],[165],[],[166,45,156],[],[],[169],[],[173],[157],[171],[174,171,175],[171],[157,176],[],[183],[145,172,148],[178],[179,178],[180,178,137],[181,178],[185,184,178],[178],[145,187,186],[],[188,189,190],[192,189,191],[],[195,172],[193,148],[194],[],[],[],[135],[],[199],[],[201],[],[138],[],[206,146,54,205],[],[53,181,207],[]],"attribute":["For Each Stmt ","Instance Of Expr ","Return Stmt ","If Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Unary Expr ++ ","Return Stmt ","For Each Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Return Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Name Expr iter ","Simple Name substituteTypeVariables ","Parameter Map<String, Type> lookup ","Parameter Type type ","Block Stmt ","Name Expr lookup ","Simple Name lookup ","Name Expr lookup ","Name Expr lookup ","Name Expr type ","Simple Name type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type Type ","Block Stmt ","InstanceOfExpr","Class Or Interface Type TypeVariable ","TypeVariable","ReturnStmt","Method Call Expr ","Simple Name translateTypeVariable ","Cast Expr ","Simple Name lookup ","Simple Name var ","Method Declaration ","Class Or Interface Type TypeVariable ","Block Stmt ","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Name Expr pType ","Name Expr pType ","Name Expr pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Parameter JsonStream stream ","Variable Declaration Expr ","Simple Name args ","Name Expr args ","Name Expr args ","Name Expr args ","Name Expr i ","Name Expr args ","Variable Declarator Type[] args = ","Name Expr stream ","Method Call Expr ","Simple Name getActualTypeArguments ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Class Or Interface Type T ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Field Access Expr ","Simple Name length ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Method Call Expr ","Simple Name substituteTypeVariables ","Array Access Expr i ","Method Call Expr ","Method Call Expr ","Simple Name createParameterizedType ","Method Call Expr ","Method Call Expr ","Simple Name getOwnerType ","Simple Name getRawType ","Block Stmt ","Class Or Interface Type GenericArrayType ","GenericArrayType","Assign Expr ASSIGN ","Simple Name gaType ","Name Expr gaType ","Variable Declarator GenericArrayType gaType = ","Class Or Interface Type GenericArrayType ","Cast Expr ","Class Or Interface Type GenericArrayType ","Variable Declaration Expr ","Simple Name componentType ","Name Expr componentType ","Variable Declarator Type componentType = ","Void Type ","Method Call Expr ","Simple Name substituteTypeVariables ","Method Call Expr ","Simple Name getGenericComponentType ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createGenericArrayType ","Expression Stmt ","If Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Method Call Expr ","If Stmt ","Instance Of Expr ","Method Call Expr ","Return Stmt ","Boolean Literal Expr true ","Simple Name translateTypeVariable ","Parameter Map<String, Type> lookup ","Parameter TypeVariable var ","Block Stmt ","String Literal Expr Not Empty  ","Name Expr lookup ","Name Expr val ","Name Expr var ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type TypeVariable ","Variable Declaration Expr ","Simple Name declaredBy ","Name Expr declaredBy ","Name Expr declaredBy ","Variable Declarator GenericDeclaration declaredBy = ","Method Call Expr ","Method Call Expr ","Simple Name getGenericDeclaration ","Block Stmt ","Enclosed Expr ","LOGICAL_COMPLEMENT","Instance Of Expr ","Class Or Interface Type Class ","Class","Class Expr Object.class ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name actualType ","Name Expr actualType ","Name Expr actualType ","Name Expr actualType ","Name Expr actualType ","Variable Declarator Type actualType = ","Class Or Interface Type Type ","Method Call Expr ","Simple Name get ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name getName ","StringLiteralExpr","Simple Name getCanonicalName ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Class Expr Object.class ","Class Or Interface Type String ","Block Stmt ","Class Or Interface Type TypeVariable ","Method Call Expr ","Simple Name translateTypeVariable ","Cast Expr ","Class Or Interface Type TypeVariable "]}
{"fileName":"srcmainjavacomjsoniterspiBinding.java","version":"0.9.22","methodName":"translateTypeVariable-Binding-Map<String,Type>-TypeVariable","callMethodNameReferTo":{},"num":89,"succs":[[1,32],[40,2],[4,3,41,42],[4,13,47,48],[5,50],[6,57],[7,76],[78,77,8,59,9],[80,9,13,47],[82,10],[11,83,12,60,44],[12,13,85,47],[62,13,47],[20,18,19,14,16,17,15],[15],[],[17],[],[22,27],[25,31],[6,5,1,4,0,12,9],[22],[],[21,22],[25],[],[25,24],[29,30,28],[],[],[],[],[36],[24],[33],[33,34],[38,33,37],[33],[24,39],[],[3],[43],[],[45,34,44],[46,84],[],[],[],[49],[],[53],[35],[51],[54,51,55],[51],[35,56],[],[63],[21,52,26],[58],[59,58],[60,58,10],[61,58],[65,64,58],[58],[21,67,66],[],[68,69,70],[72,69,71],[],[75,52],[73,26],[74],[],[],[],[8],[],[79],[],[81],[],[11],[],[],[87,23,13,86],[],[25,61,88],[]],"attribute":["Expression Stmt ","If Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Method Call Expr ","If Stmt ","Instance Of Expr ","Method Call Expr ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Boolean Literal Expr true ","Simple Name translateTypeVariable ","Parameter Map<String, Type> lookup ","Parameter TypeVariable var ","Block Stmt ","String Literal Expr Not Empty  ","Simple Name lookup ","Name Expr lookup ","Name Expr val ","Simple Name var ","Name Expr var ","Class Or Interface Type Map ","Simple Name Map ","Class Or Interface Type String ","Class Or Interface Type Type ","Class Or Interface Type TypeVariable ","Variable Declaration Expr ","Simple Name declaredBy ","Name Expr declaredBy ","Name Expr declaredBy ","Variable Declarator GenericDeclaration declaredBy = ","Method Call Expr ","Method Call Expr ","Simple Name getGenericDeclaration ","Block Stmt ","Enclosed Expr ","LOGICAL_COMPLEMENT","Instance Of Expr ","InstanceOfExpr","Class Or Interface Type Class ","Class","ReturnStmt","Class Expr Object.class ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Cast Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name actualType ","Name Expr actualType ","Name Expr actualType ","Name Expr actualType ","Name Expr actualType ","Variable Declarator Type actualType = ","Class Or Interface Type Type ","Method Call Expr ","Simple Name get ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Method Call Expr ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name getName ","StringLiteralExpr","Simple Name getCanonicalName ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Class Expr Object.class ","Class Or Interface Type String ","Block Stmt ","Class Or Interface Type TypeVariable ","TypeVariable","Method Call Expr ","Simple Name translateTypeVariable ","Cast Expr ","Class Or Interface Type TypeVariable "]}
{"fileName":"srcmainjavacomjsoniterspiBinding.java","version":"0.9.22","methodName":"getAnnotation-Binding-Class<T>","callMethodNameReferTo":{},"num":42,"succs":[[21,1],[2,24,23,22,3],[10,3,27,26],[28,4,5],[9,5],[30,6],[7,33],[16,35,4,8,34],[10,37,4,26],[10,39,26],[12,13,14,11,15],[],[13],[],[17,18],[9,0,3],[17],[],[20,19],[],[],[2],[],[],[25],[],[],[25],[6],[30],[32],[7,30,29],[30],[8],[],[36,29],[],[31,38],[],[25],[],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","For Each Stmt ","Name Expr annotations ","Variable Declaration Expr ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type T ","Simple Name getAnnotation ","Parameter Class<T> annotationClass ","Block Stmt ","Name Expr annotationClass ","Simple Name annotationClass ","Class Or Interface Type Class ","Simple Name Class ","Class Or Interface Type T ","Block Stmt ","Name Expr noIndention ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Null Literal Expr ","Block Stmt ","Name Expr annotation ","Simple Name annotation ","Name Expr annotation ","Class Or Interface Type Annotation ","Block Stmt ","Simple Name isAssignableFrom ","Method Call Expr ","Simple Name getClass ","Cast Expr ","Class Or Interface Type T ","Null Literal Expr ","Type Parameter T ","Class Or Interface Type Annotation "]}
{"fileName":"srcmainjavacomjsoniterspiBinding.java","version":"0.9.22","methodName":"equals-Binding-Object","callMethodNameReferTo":{},"num":99,"succs":[[17,1],[2,27,28,21],[18,3],[34,4,35,33],[5,45],[6,19],[58,57,7,59],[20,8],[74,9,73,72],[86,10,30],[15,16,13,12,11,14],[],[],[14],[],[26,22],[2,4,5,0,7,9],[10,30,31],[10,30,43],[71,10,30],[10,85,30],[22],[],[21,22],[23,22],[24,22],[],[29],[],[],[],[32],[],[28,23,36],[],[39,38,40],[37],[],[41],[],[42,24],[],[],[44],[],[53],[25],[46],[47,46],[46,48],[46,49],[46,50],[46,51],[46,55,54],[46],[25,56],[],[39,60,61],[62,63],[39,69,68],[],[37],[64,10,66,65],[],[],[],[47,67,22],[],[70,48],[37],[],[44],[39,76,75],[77,63],[39,82,83],[],[37],[78,79,80,10],[],[],[81,49,22],[],[50,84],[37],[],[44],[88,89,87],[39,90,91],[93,94,92,10],[97,28,96],[],[37],[],[],[51,95,22],[],[98,52],[37],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr OR ","Expression Stmt ","If Stmt ","Conditional Expr clazz != null ? !clazz.equals(binding.clazz) : binding.clazz != null ","If Stmt ","Conditional Expr method != null ? !method.equals(binding.method) : binding.method != null ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Decoder ","Name Expr String ","Parameter Object o ","Block Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Return Stmt ","Integer Literal Expr Note Zero  ","Name Expr v ","Name Expr c ","Name Expr o ","Name Expr o ","Name Expr String ","Name Expr desc ","EQUALS","ThisExpr","ReturnStmt","Boolean Literal Expr true ","true","Simple Name fillCache ","OR","Binary Expr NOT_EQUALS ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","NOT_EQUALS","Method Call Expr ","Simple Name getClass ","Simple Name getClass ","Boolean Literal Expr false ","false","Method Call Expr ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Name Expr binding ","Return Stmt ","Class Or Interface Type Binding ","Cast Expr ","Class Or Interface Type Binding ","Class Or Interface Type StringBuilder ","Unary Expr ! ","Binary Expr NOT_EQUALS ","Name Expr clazz ","Name Expr keys ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr entry ","Name Expr source ","Field Access Expr ","Simple Name clazz ","Field Access Expr ","Null Literal Expr ","Simple Name clazz ","Boolean Literal Expr false ","Binary Expr NOT_EQUALS ","Unary Expr ! ","Binary Expr NOT_EQUALS ","Simple Name append ","Null Literal Expr ","Method Call Expr ","Name Expr result ","Simple Name equals ","Field Access Expr ","Simple Name method ","Field Access Expr ","Null Literal Expr ","Simple Name method ","Boolean Literal Expr false ","Conditional Expr name != null ? name.equals(binding.name) : binding.name == null ","Binary Expr NOT_EQUALS ","Method Call Expr ","Binary Expr EQUALS ","Name Expr name ","Null Literal Expr ","Name Expr name ","Simple Name equals ","Field Access Expr ","Simple Name iter ","Field Access Expr ","Null Literal Expr ","Simple Name name "]}
{"fileName":"srcmainjavacomjsoniterspiBinding.java","version":"0.9.22","methodName":"hashCode-Binding-","callMethodNameReferTo":{},"num":61,"succs":[[10,1],[34,2],[49,3],[4,22,60],[7,5,8,9,6],[],[],[8],[],[1,3,0,2],[23],[13,12],[],[],[15,11,17,16],[11],[],[],[14,19,20,21],[14],[],[],[18],[11,25,24],[11],[26,28,27],[29,12,30],[13,32,4],[33],[],[31],[],[],[],[35,14,36],[],[39,38,37],[15,40,41],[],[43],[42],[],[],[46,44,45],[29,47,16],[48,17,4],[33],[31],[],[35,18,50],[38,51,52],[19,53,41],[54],[42],[57,55,56],[29,20,58],[59,4,21],[33],[31],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type int ","Simple Name hashCode ","Block Stmt ","Variable Declaration Expr ","Simple Name result ","Name Expr clazz ","Name Expr clazz ","Simple Name append ","Simple Name decode ","Name Expr method ","Name Expr method ","Simple Name append ","Name Expr result ","Name Expr name ","Name Expr name ","Name Expr result ","Variable Declarator int result = ","Class Or Interface Type Any ","Conditional Expr clazz != null ? clazz.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Simple Name hashCode ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Binary Expr PLUS ","Binary Expr MULTIPLY ","PLUS","Enclosed Expr ","Integer Literal Expr Note Zero  ","MULTIPLY","IntegerLiteralExpr","Conditional Expr method != null ? method.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Simple Name iter ","Simple Name hashCode ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr MULTIPLY ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Conditional Expr name != null ? name.hashCode() : 0 ","Binary Expr NOT_EQUALS ","Method Call Expr ","Integer Literal Expr Zero  ","Null Literal Expr ","Simple Name hashCode ","ReturnStmt"]}
{"fileName":"srcmainjavacomjsoniterspiBinding.java","version":"0.9.22","methodName":"toString-Binding-","callMethodNameReferTo":{},"num":29,"succs":[[3,1,5,2,4],[],[],[4],[],[6],[8,0,7],[],[11,10,9],[10,12,13],[],[28],[15,10,14],[],[16,10,17],[26],[18,10,19],[27],[10,20,21],[],[22,23,10],[26],[24,10,25],[],[26],[26],[],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type String ","Simple Name toString ","Block Stmt ","Return Stmt ","ReturnStmt","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Name Expr pos ","Binary Expr PLUS ","Name Expr valueType ","Binary Expr PLUS ","Simple Name fillCacheUntil ","Binary Expr PLUS ","Name Expr iter ","Binary Expr PLUS ","Name Expr name ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Boolean Literal Expr false ","String Literal Expr Not Empty  ","Simple Name dotFound ","StringLiteralExpr","'''","'}'"]}
