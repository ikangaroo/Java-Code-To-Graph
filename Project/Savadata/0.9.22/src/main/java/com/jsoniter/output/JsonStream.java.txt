{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","hasMethodName":["reset-JsonStream-OutputStream","ensure-JsonStream-int","growAtLeast-JsonStream-int","write-JsonStream-int","write-JsonStream-byte-byte","write-JsonStream-byte-byte-byte","write-JsonStream-byte-byte-byte-byte","write-JsonStream-byte-byte-byte-byte-byte","write-JsonStream-byte-byte-byte-byte-byte-byte","write-JsonStream-byte[]-int-int","flush-JsonStream-","close-JsonStream-","flushBuffer-JsonStream-","writeVal-JsonStream-String","writeRaw-JsonStream-String","writeRaw-JsonStream-String-int","writeVal-JsonStream-Boolean","writeVal-JsonStream-boolean","writeTrue-JsonStream-","writeFalse-JsonStream-","writeVal-JsonStream-Short","writeVal-JsonStream-short","writeVal-JsonStream-Integer","writeVal-JsonStream-int","writeVal-JsonStream-Long","writeVal-JsonStream-long","writeVal-JsonStream-Float","writeVal-JsonStream-float","writeVal-JsonStream-Double","writeVal-JsonStream-double","writeVal-JsonStream-Any","writeNull-JsonStream-","writeEmptyObject-JsonStream-","writeEmptyArray-JsonStream-","writeArrayStart-JsonStream-","writeMore-JsonStream-","writeIndention-JsonStream-","writeIndention-JsonStream-int","writeArrayEnd-JsonStream-","writeObjectStart-JsonStream-","writeObjectField-JsonStream-String","writeObjectField-JsonStream-Object","writeObjectField-JsonStream-Object-Encoder","writeObjectEnd-JsonStream-","writeVal-JsonStream-Object","writeVal-JsonStream-TypeLiteral<T>-T","writeVal-JsonStream-Type-T","currentConfig-JsonStream-","serialize-JsonStream-Config-Object-OutputStream","serialize-JsonStream-Object-OutputStream","serialize-JsonStream-Config-TypeLiteral-Object-OutputStream","serialize-JsonStream-TypeLiteral-Object-OutputStream","serialize-JsonStream-Type-Object-OutputStream","serialize-JsonStream-Config-Object","serialize-JsonStream-Object","serialize-JsonStream-Config-TypeLiteral-Object","serialize-JsonStream-TypeLiteral-Object","serialize-JsonStream-boolean-Type-Object","setMode-JsonStream-EncodingMode","setIndentionStep-JsonStream-int","registerNativeEncoder-JsonStream-Class-Encoder.ReflectionEncoder","buffer-JsonStream-"]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"reset-JsonStream-OutputStream","callMethodNameReferTo":{},"num":23,"succs":[[11,1],[17],[7,6,4,5,3],[],[5],[],[9,10],[0,1],[9],[],[],[13,12,8],[15,14],[],[16],[],[],[13,18,19],[21,20],[22],[16],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Simple Name out ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","Zero IntegerLiteralExpr"]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"ensure-JsonStream-int","callMethodNameReferTo":{},"num":164,"succs":[[20,1],[2,31],[16,24,3,32],[4,33],[6,36,34,35,5],[6,38],[41],[10,11,13,9,12,15,8],[],[10],[],[19,17],[14],[],[],[0,1],[17],[],[2,16,43,17],[],[25],[22,23],[],[],[21],[21,27,26],[21],[23,28,29],[30,22],[],[],[6,3],[],[5],[],[],[37],[],[40,39],[],[51,53,50,12,8,52],[44,42,18],[],[],[83,85,86,82,84,8],[54,46],[55,56,48,47,57],[40,48,59],[49,60],[71],[51],[],[],[49,48,45],[47],[],[],[58],[],[],[64,62,65,63,61,69],[],[],[66],[70,67],[68],[],[],[],[132,134,137,138,136,133,12,131,135,8],[],[72,73,74],[],[],[70],[90,76],[77,100],[78,93,79,32,87],[79,101],[102,80],[116,81],[125],[8],[84],[],[89,43],[79,75,81,76,80],[43],[43,77,87],[],[96],[92],[],[91],[91,93,77,88],[94],[91,97,98],[91],[92,99],[],[78],[73,94,88],[107],[104,95],[],[103],[103,105],[103,109,108],[103],[110,111],[],[],[113,95,114],[104,115],[],[],[121,119,118,122,117,105,120],[],[],[],[70],[70],[124,123],[],[],[73,106,126],[],[145,128],[129,148],[130,154],[159],[8],[133],[],[66,142],[67,143],[68,144],[],[129,128,130,127],[66],[67],[68],[],[],[],[147,146,7],[],[37,17],[73,139,149],[150,151],[],[153,152],[],[],[140,73,155],[157,156],[],[153,158],[],[141,73,160],[161,162],[],[153,163],[]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","FINAL","Void Type ","Simple Name ensure ","Parameter int minimal ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr current ","Simple Name minimal ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","ASSIGN","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","PUBLIC","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"growAtLeast-JsonStream-int","callMethodNameReferTo":{},"num":58,"succs":[[18,1],[2,28],[3,21,4,29,14],[4,30],[32,5],[46,6],[56],[10,12,13,8,11,9],[9],[],[11],[],[17,15],[4,0,6,1,5],[15],[],[15,2,14],[],[24],[20],[],[19],[19,21,2,16],[22],[19,25,26],[19],[20,27],[],[3],[],[31,22,16],[],[37],[34,23],[],[33],[33,35],[33,39,38],[33],[40,41],[],[],[43,23,44],[34,45],[],[],[49,51,48,52,47,50,35],[],[],[],[53],[53],[55,54],[],[],[],[31,36,57],[]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","FINAL","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Class Or Interface Type Encoder ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","LESS","Name Expr JsonIteratorPool ","ASSIGN","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Zero IntegerLiteralExpr","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"write-JsonStream-int","callMethodNameReferTo":{},"num":185,"succs":[[1,15],[21],[11,5,7,9,3,8,4,6],[4],[],[6],[],[13,14],[10],[],[],[0,1],[13],[],[],[16,19,17],[],[20,18],[],[38,39,40,37,8,41,4],[],[22,23,24],[26,25],[],[12,29],[],[28,27],[],[],[],[45,31],[32,56],[42,49,33,57],[34,58],[36,61,59,60,35],[36,62],[65],[38],[],[44,18],[],[30,31],[18],[32,42,67,18],[],[50],[47,48],[],[],[46],[46,52,51],[46],[53,48,54],[55,47],[],[],[36,33],[],[35],[],[],[20],[64,63],[],[75,77,74,8,4,76],[66,68,43],[],[],[106,109,108,105,107,4],[78,70],[79,80,72,71,81],[64,72,83],[73,84],[95],[75],[],[],[73,72,69],[71],[],[],[82],[],[],[88,86,89,85,87,93],[],[],[90],[94,91],[92],[],[],[],[154,159,156,158,160,155,3,8,157,4],[],[96,23,97],[],[94],[113,99],[100,123],[101,116,102,57,110],[102,124],[125,103],[139,104],[148],[4],[107],[],[112,67],[102,98,104,99,103],[67],[67,100,110],[],[119],[115],[],[114],[114,116,100,111],[117],[114,120,121],[114],[115,122],[],[101],[23,117,111],[130],[127,118],[],[126],[126,128],[126,132,131],[126],[133,134],[],[],[136,118,137],[127,138],[],[],[144,142,141,145,140,143,128],[],[],[],[94],[94],[147,146],[],[],[23,129,149],[],[167,151],[152,170],[153,175],[180],[155],[],[90,164],[91,165],[92,166],[],[152,151,150,153],[90],[91],[92],[],[],[],[169,168,19],[],[20,18],[23,161,171],[172,173],[],[28,174],[],[162,23,176],[178,177],[],[28,179],[],[163,23,181],[182,183],[],[28,184],[]],"attribute":["Name Expr JsonStream ","Expression Stmt ","Method Declaration ","PUBLIC","FINAL","Void Type ","Simple Name write ","Parameter int b ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr b ","Simple Name b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Primitive Type byte ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"write-JsonStream-byte-byte","callMethodNameReferTo":{},"num":193,"succs":[[20,1],[26,2],[33],[9,6,8,13,11,4,10,7,5],[5],[],[7],[],[15,18],[19,17],[12],[],[],[1,0,2],[15],[],[17],[],[],[],[21,24,22],[],[25,23],[],[46,47,48,45,10,49,5],[],[28,14,27],[30,29],[],[],[32,31],[],[],[34,28,16],[35,36],[],[32,37],[],[53,39],[40,64],[50,57,41,65],[42,66],[44,69,67,68,43],[44,70],[73],[46],[],[52,23],[],[38,39],[23],[40,50,75,23],[],[58],[55,56],[],[],[54],[54,60,59],[54],[56,61,62],[63,55],[],[],[44,41],[],[43],[],[],[25],[72,71],[],[83,85,82,10,5,84],[74,76,51],[],[],[114,117,116,113,115,5],[86,78],[87,88,80,79,89],[72,80,91],[81,92],[103],[83],[],[],[81,80,77],[79],[],[],[90],[],[],[96,94,97,95,93,101],[],[],[98],[102,99],[100],[],[],[],[162,167,164,166,168,163,10,4,165,5],[],[104,28,105],[],[102],[121,107],[108,131],[109,124,110,65,118],[110,132],[133,111],[147,112],[156],[5],[115],[],[120,75],[110,106,112,107,111],[75],[75,108,118],[],[127],[123],[],[122],[122,124,108,119],[125],[122,128,129],[122],[123,130],[],[109],[28,125,119],[138],[135,126],[],[134],[134,136],[134,140,139],[134],[141,142],[],[],[144,126,145],[135,146],[],[],[150,152,149,153,148,136,151],[],[],[],[102],[102],[155,154],[],[],[28,137,157],[],[175,159],[160,178],[161,183],[188],[163],[],[98,172],[99,173],[100,174],[],[160,159,158,161],[98],[99],[100],[],[],[],[177,176,24],[],[25,23],[28,169,179],[180,181],[],[32,182],[],[170,28,184],[186,185],[],[32,187],[],[171,28,189],[190,191],[],[32,192],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","FINAL","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr b1 ","Simple Name b1 ","Simple Name as ","Simple Name b2 ","Primitive Type byte ","Primitive Type byte ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Expression Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr encoder ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"write-JsonStream-byte-byte-byte","callMethodNameReferTo":{},"num":164,"succs":[[25,1],[2,31],[3,38],[43],[7,9,13,11,15,8,5,12,10,6],[6],[],[8],[],[17,22],[19,23],[21,24],[14],[],[],[2,1,0,3],[17],[],[19],[],[21],[],[],[],[],[27,26,29],[],[30,28],[],[56,57,58,55,12,59,6],[],[33,16,32],[34,35],[],[],[37,36],[],[],[18,33,39],[41,40],[],[37,42],[],[20,33,44],[45,46],[],[37,47],[],[63,49],[50,74],[60,67,51,75],[52,76],[54,79,77,78,53],[54,80],[83],[56],[],[28,62],[],[48,49],[28],[50,60,85,28],[],[68],[65,66],[],[],[64],[64,70,69],[64],[66,71,72],[73,65],[],[],[54,51],[],[53],[],[],[30],[82,81],[],[93,95,92,12,6,94],[84,86,61],[],[],[120,122,123,119,121,6],[96,88],[97,98,90,89,99],[82,90,101],[91,102],[109],[93],[],[],[91,90,87],[89],[],[],[100],[],[],[106,104,107,105,103,4],[],[],[17],[108,19],[21],[],[110,33,111],[],[108],[127,113],[114,137],[115,130,116,75,124],[116,138],[139,117],[118,153],[162],[6],[121],[],[126,85],[116,112,118,113,117],[85],[85,114,124],[],[133],[129],[],[128],[128,130,114,125],[131],[128,134,135],[128],[129,136],[],[115],[33,131,125],[144],[141,132],[],[140],[140,142],[140,146,145],[140],[147,148],[],[],[150,132,151],[141,152],[],[],[158,156,155,159,154,142,157],[],[],[],[108],[108],[161,160],[],[],[33,143,163],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr b1 ","Simple Name b1 ","Name Expr b2 ","Simple Name b2 ","Name Expr b3 ","Simple Name b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Method Declaration ","ASSIGN","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"write-JsonStream-byte-byte-byte-byte","callMethodNameReferTo":{},"num":213,"succs":[[1,30],[36,2],[3,43],[48,4],[53],[13,17,12,9,11,6,14,15,10,8,7],[7],[],[9],[],[19,26],[21,27],[28,23],[25,29],[16],[],[],[1,3,4,0,2],[19],[],[21],[],[23],[],[25],[],[],[],[],[],[34,31,32],[],[35,33],[],[66,67,68,65,14,69,7],[],[38,37,18],[39,40],[],[],[41,42],[],[],[38,44,20],[46,45],[],[42,47],[],[38,49,22],[51,50],[],[42,52],[],[38,54,24],[55,56],[],[57,42],[],[73,59],[60,84],[70,77,61,85],[62,86],[64,89,87,88,63],[64,90],[93],[66],[],[33,72],[],[58,59],[33],[60,70,95,33],[],[78],[75,76],[],[],[74],[74,80,79],[74],[76,81,82],[83,75],[],[],[64,61],[],[63],[],[],[35],[92,91],[],[103,105,102,14,7,104],[94,96,71],[],[],[134,136,137,133,135,7],[106,98],[107,108,100,99,109],[92,100,111],[101,112],[123],[103],[],[],[101,100,97],[99],[],[],[110],[],[],[116,114,117,115,113,121],[],[],[118],[122,119],[120],[],[],[],[182,184,187,186,188,183,14,6,185,7],[],[124,38,125],[],[122],[141,127],[128,151],[129,144,130,85,138],[130,152],[153,131],[132,167],[176],[7],[135],[],[140,95],[130,126,132,127,131],[95],[95,128,138],[],[147],[143],[],[142],[142,144,128,139],[145],[142,148,149],[142],[143,150],[],[129],[38,145,139],[158],[155,146],[],[154],[154,156],[154,160,159],[154],[161,162],[],[],[164,146,165],[155,166],[],[],[170,172,169,173,168,171,156],[],[],[],[122],[122],[175,174],[],[],[38,157,177],[],[195,179],[180,198],[181,203],[208],[183],[],[118,192],[119,193],[120,194],[],[180,179,178,181],[118],[119],[120],[],[],[],[197,196,34],[],[35,33],[38,189,199],[200,201],[],[42,202],[],[190,38,204],[206,205],[],[42,207],[],[191,38,209],[210,211],[],[42,212],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr b1 ","Simple Name b1 ","Name Expr b2 ","Simple Name b2 ","Name Expr b3 ","Simple Name b3 ","Name Expr b4 ","Simple Name b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"write-JsonStream-byte-byte-byte-byte-byte","callMethodNameReferTo":{},"num":223,"succs":[[35,1],[41,2],[3,48],[53,4],[58,5],[63],[15,19,10,12,9,13,7,11,16,17,14,8],[8],[],[10],[],[30,21],[23,31],[32,25],[27,33],[29,34],[18],[],[],[1,3,0,2,5,4],[21],[],[23],[],[25],[],[27],[],[29],[],[],[],[],[],[],[37,39,36],[],[40,38],[],[76,77,78,75,16,79,8],[],[20,43,42],[44,45],[],[],[47,46],[],[],[22,43,49],[51,50],[],[47,52],[],[43,54,24],[55,56],[],[57,47],[],[59,43,26],[60,61],[],[62,47],[],[43,64,28],[65,66],[],[47,67],[],[83,69],[70,94],[80,87,71,95],[72,96],[74,99,97,98,73],[74,100],[103],[76],[],[38,82],[],[68,69],[38],[70,80,105,38],[],[88],[85,86],[],[],[84],[84,90,89],[84],[86,91,92],[93,85],[],[],[74,71],[],[73],[],[],[40],[102,101],[],[113,115,112,16,8,114],[104,106,81],[],[],[144,146,147,143,145,8],[116,108],[117,118,110,109,119],[102,110,121],[111,122],[133],[113],[],[],[111,110,107],[109],[],[],[120],[],[],[126,124,127,123,125,131],[],[],[128],[132,129],[130],[],[],[],[192,194,197,196,198,193,16,7,195,8],[],[134,43,135],[],[132],[151,137],[138,161],[139,154,140,95,148],[140,162],[163,141],[142,177],[186],[8],[145],[],[150,105],[140,136,142,137,141],[105],[105,138,148],[],[157],[153],[],[152],[152,154,138,149],[155],[152,158,159],[152],[153,160],[],[139],[43,155,149],[168],[165,156],[],[164],[164,166],[164,170,169],[164],[171,172],[],[],[174,156,175],[165,176],[],[],[182,180,179,183,178,181,166],[],[],[],[132],[132],[185,184],[],[],[43,167,187],[],[205,189],[190,208],[191,213],[218],[193],[],[128,202],[129,203],[130,204],[],[190,189,188,191],[128],[129],[130],[],[],[],[207,206,39],[],[40,38],[43,199,209],[210,211],[],[47,212],[],[200,43,214],[216,215],[],[47,217],[],[201,43,219],[220,221],[],[47,222],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Parameter byte b5 ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr b1 ","Simple Name b1 ","Name Expr b2 ","Simple Name b2 ","Name Expr b3 ","Simple Name b3 ","Name Expr b4 ","Simple Name b4 ","Name Expr b5 ","Simple Name b5 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Return Stmt ","Simple Name append ","Integer Literal Expr Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Array Access Expr count++ ","ASSIGN","Name Expr buf ","Return Stmt ","Name Expr count ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr keyType ","Name Expr cache ","Assign Expr ASSIGN ","Expression Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Unary Expr ++ ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"write-JsonStream-byte-byte-byte-byte-byte-byte","callMethodNameReferTo":{},"num":233,"succs":[[40,1],[46,2],[53,3],[4,58],[63,5],[6,68],[73],[17,13,15,12,19,16,14,18,8,10,11,9,21],[9],[],[11],[],[34,23],[35,25],[36,27],[37,29],[38,31],[33,39],[20],[],[],[0,6,1,4,2,3,5],[23],[],[25],[],[27],[],[29],[],[31],[],[33],[],[],[],[],[],[],[],[42,41,44],[],[45,43],[],[86,87,88,85,18,89,9],[],[48,47,22],[49,50],[],[],[52,51],[],[],[48,54,24],[55,56],[],[57,52],[],[48,26,59],[61,60],[],[52,62],[],[48,28,64],[65,66],[],[67,52],[],[48,30,69],[70,71],[],[52,72],[],[48,74,32],[75,76],[],[77,52],[],[93,79],[80,104],[90,97,81,105],[82,106],[84,109,107,108,83],[84,110],[113],[86],[],[43,92],[],[78,79],[43],[80,90,115,43],[],[98],[95,96],[],[],[94],[94,100,99],[94],[101,96,102],[103,95],[],[],[84,81],[],[83],[],[],[45],[112,111],[],[125,123,122,18,9,124],[114,116,91],[],[],[154,156,157,153,155,9],[126,118],[127,128,120,119,129],[112,120,131],[121,132],[143],[123],[],[],[121,120,117],[119],[],[],[130],[],[],[136,134,137,135,133,141],[],[],[138],[142,139],[140],[],[],[],[202,207,204,206,208,203,18,8,205,9],[],[144,48,145],[],[142],[161,147],[148,171],[149,164,150,105,158],[150,172],[173,151],[152,187],[196],[9],[155],[],[160,115],[150,146,152,147,151],[115],[115,148,158],[],[167],[163],[],[162],[162,164,148,159],[165],[162,168,169],[162],[163,170],[],[149],[48,165,159],[178],[175,166],[],[174],[174,176],[174,180,179],[174],[181,182],[],[],[184,166,185],[175,186],[],[],[190,192,189,193,188,176,191],[],[],[],[142],[142],[195,194],[],[],[48,177,197],[],[215,199],[200,218],[201,223],[228],[203],[],[138,212],[139,213],[140,214],[],[200,199,201,198],[138],[139],[140],[],[],[],[217,216,44],[],[45,43],[48,209,219],[220,221],[],[52,222],[],[210,48,224],[226,225],[],[52,227],[],[211,48,229],[230,231],[],[52,232],[]],"attribute":["Return Stmt ","Expression Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Method Call Expr ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name write ","Parameter byte b1 ","Name Expr intHash ","Parameter byte b3 ","Parameter byte b4 ","Parameter byte b5 ","Simple Name isEmpty ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr b1 ","Simple Name b1 ","Name Expr b2 ","Simple Name b2 ","Name Expr b3 ","Simple Name b3 ","Name Expr b4 ","Simple Name b4 ","Name Expr b5 ","Simple Name b5 ","Name Expr b6 ","Simple Name b6 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name ensure ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Array Access Expr count++ ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Class Or Interface Type Any ","Simple Name element ","Name Expr count ","Assign Expr ASSIGN ","Expression Stmt ","Name Expr buf ","Name Expr element ","Name Expr count ","Method Call Expr ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name level ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"write-JsonStream-byte[]-int-int","callMethodNameReferTo":{},"num":232,"succs":[[3,41,1],[44,3,45,43,2],[11,47],[4],[5,51],[53,12,54,6,34],[7,60],[35,53,11,8,61],[63,9],[10,66],[11,14,72],[12,73],[75,13],[80],[25,17,23,21,18,15,22,20,19,16],[16],[],[18],[],[27],[39,30],[40,33],[24],[],[],[0,12,13],[68,27],[],[27,26],[69,30],[],[29,30],[49,33],[],[33],[5,33,34],[7,35,5,70,33,32],[36,33],[33,37],[],[],[2],[1],[],[],[46],[],[50,48,32],[],[],[91,92,93,90,22,94,16],[11,6],[5],[],[57,55,56],[59,58],[],[],[],[],[10,8,9],[62,52],[],[65,64],[],[127,129,126,22,16,128],[67,42,29,36,26,71],[],[],[],[],[148,150,153,152,154,149,15,22,151,16],[],[65,74],[],[31,76,79,28,78,77,37],[],[],[],[],[82,81,38],[],[],[98,84],[85,108],[95,102,86,109],[87,110],[89,113,111,112,88],[89,115],[117],[91],[],[97,49],[],[83,84],[49],[85,95,119,49],[],[103],[100,101],[],[],[99],[99,105,104],[99],[101,106,56],[107,100],[],[89,86],[],[88],[],[],[114],[],[65,116],[],[118,120,96],[],[],[188,190,191,187,189,16],[130,122],[131,44,124,123,132],[65,124,72],[125,133],[140],[127],[],[],[125,124,121],[123],[],[46],[137,135,138,136,134,71],[],[],[68],[139,69],[70],[],[141,142,143],[],[],[139],[161,145],[146,164],[147,170],[175],[149],[],[68,158],[69,159],[70,160],[],[146,145,147,144],[68],[69],[70],[],[],[],[163,162,50],[],[114,49],[142,155,165],[166,167],[],[169,168],[],[],[156,142,171],[173,172],[],[169,174],[],[157,142,176],[177,178],[],[169,179],[],[195,181],[182,205],[183,198,184,109,192],[184,206],[207,185],[221,186],[230],[16],[189],[],[194,119],[184,180,186,181,185],[119],[119,182,192],[],[201],[197],[],[196],[196,198,182,193],[199],[196,202,203],[196],[197,204],[],[183],[142,199,193],[212],[209,200],[],[208],[208,210],[208,214,213],[208],[215,216],[],[],[218,200,219],[209,220],[],[],[226,224,223,227,222,210,225],[],[],[],[139],[139],[229,228],[],[],[142,211,231],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","If Stmt ","Binary Expr GREATER_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name write ","Parameter byte[] b ","Parameter int off ","Parameter int len ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr b ","Simple Name b ","Name Expr b ","Name Expr off ","Simple Name off ","Name Expr off ","Name Expr len ","Simple Name len ","Name Expr ctx ","Name Expr len ","Name Expr len ","Name Expr obj ","Class Or Interface Type Any ","Primitive Type int ","Primitive Type int ","Block Stmt ","Name Expr out ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name ensure ","Simple Name minimal ","Method Declaration Throws ","Block Stmt ","Name Expr buf ","GREATER_EQUALS","Binary Expr MINUS ","Field Access Expr ","MINUS","Name Expr count ","Name Expr buf ","Name Expr String ","Block Stmt ","Field Access Expr ","Simple Name length ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Simple Name write ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","ReturnStmt","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Simple Name append ","Method Call Expr ","Name Expr buf ","Name Expr count ","Assign Expr PLUS ","Name Expr count ","PLUS","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","ASSIGN","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"flush-JsonStream-","callMethodNameReferTo":{},"num":176,"succs":[[10,1],[13],[9,7,5,4,3,6],[21],[5],[],[8],[],[],[0,1],[12,11],[],[25,23,22,6,21,24],[15,14,2],[],[],[26,17],[27,28,19,18,29],[12,19,31],[20,32],[43],[],[23],[],[],[20,19,16],[18],[],[],[30],[],[],[36,34,37,35,33,41],[],[],[38],[42,39],[40],[],[],[],[51,56,53,55,57,52,6,3,54,21],[],[44,45,46],[],[],[42],[64,48],[49,70],[50,76],[81],[52],[],[38,61],[39,62],[40,63],[],[49,48,47,50],[38],[39],[40],[],[],[],[66,65,68],[],[69,67],[],[94,95,96,93,6,97,21],[],[45,58,71],[72,73],[],[75,74],[],[],[59,45,77],[79,78],[],[75,80],[],[60,45,82],[83,84],[],[75,85],[],[101,87],[88,112],[98,105,89,113],[90,114],[92,117,115,116,91],[92,118],[120],[94],[],[100,67],[],[86,87],[67],[88,98,122,67],[],[106],[103,104],[],[],[102],[102,108,107],[102],[104,109,110],[111,103],[],[],[92,89],[],[91],[],[],[69],[12,119],[],[121,123,99],[],[],[132,134,135,131,133,21],[139,125],[126,149],[127,142,128,113,136],[128,150],[151,129],[165,130],[174],[21],[133],[],[138,122],[128,124,130,125,129],[122],[122,126,136],[],[145],[141],[],[140],[140,142,126,137],[143],[140,146,147],[140],[141,148],[],[127],[45,143,137],[156],[153,144],[],[152],[152,154],[152,158,157],[152],[159,160],[],[],[162,144,163],[153,164],[],[],[168,170,167,171,166,154,169],[],[],[],[42],[42],[173,172],[],[],[45,155,175],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name flush ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Name Expr JsoniterSpi ","Name Expr ctx ","Simple Name flush ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","FINAL","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","ASSIGN","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"close-JsonStream-","callMethodNameReferTo":{},"num":199,"succs":[[18,1],[19,20,21,2,3],[23,9,3],[4,24],[25,5,6,26,27],[6,29],[32,7],[8,35],[42],[12,13,10,17,11,15,14],[],[50],[13],[],[16],[],[],[8,6,0,7,3],[2],[],[],[22],[],[],[5],[],[],[28],[],[31,30],[],[52,54,51,14,50,53],[33,34,9],[],[],[37,36,38],[39,40],[],[22],[41],[],[],[37,43,44],[],[28],[55,46],[56,20,48,47,57],[31,48,23],[49,58],[68],[],[52],[],[],[49,48,45],[47],[],[22],[62,60,63,59,61,67],[],[],[64],[28,65],[66],[],[],[],[75,80,77,79,81,76,11,14,78,50],[69,37,70],[],[28],[88,72],[73,94],[74,100],[105],[76],[],[64,85],[65,86],[66,87],[],[73,72,74,71],[64],[65],[66],[],[],[],[90,89,92],[],[93,91],[],[118,119,120,117,14,121,50],[],[37,82,95],[96,97],[],[99,98],[],[],[83,37,101],[103,102],[],[99,104],[],[84,37,106],[107,108],[],[99,109],[],[125,111],[112,136],[122,129,113,137],[114,138],[116,140,139,26,115],[116,141],[143],[118],[],[124,91],[],[110,111],[91],[112,122,145,91],[],[130],[127,128],[],[],[126],[126,132,131],[126],[128,133,134],[135,127],[],[],[116,113],[],[115],[],[93],[31,142],[],[144,146,123],[],[],[155,157,158,154,156,50],[162,148],[149,172],[150,165,151,137,159],[151,173],[174,152],[153,188],[197],[50],[156],[],[161,145],[151,147,153,148,152],[145],[145,149,159],[],[168],[164],[],[163],[163,165,149,160],[166],[163,169,170],[163],[164,171],[],[150],[37,166,160],[179],[176,167],[],[175],[175,177],[175,181,180],[175],[182,183],[],[],[185,167,186],[176,187],[],[],[193,191,190,194,189,192,177],[],[],[],[28],[28],[196,195],[],[],[37,178,198],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Void Type ","Simple Name close ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Block Stmt ","Primitive Type int ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr out ","Name Expr cache ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Null Literal Expr ","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","FINAL","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"flushBuffer-JsonStream-","callMethodNameReferTo":{},"num":164,"succs":[[13,1],[14,15,3,2,16],[5,3,18],[4,19],[30],[12,8,7,9,6,10],[],[8],[],[11],[],[],[4,3,0],[2],[],[],[17],[],[],[23,21,24,22,20,28],[],[],[25],[29,26],[27],[],[],[],[39,41,44,43,45,40,38,9,42,6],[],[31,32,33],[],[],[29],[52,35],[36,58],[37,64],[69],[6],[40],[],[25,49],[26,50],[27,51],[],[36,35,37,34],[25],[26],[27],[],[],[],[54,53,56],[],[57,55],[],[82,83,84,81,9,85,6],[],[32,46,59],[60,61],[],[63,62],[],[],[47,32,65],[67,66],[],[63,68],[],[48,32,70],[71,72],[],[63,73],[],[89,75],[76,100],[86,93,77,101],[78,102],[80,105,103,104,79],[80,106],[108],[82],[],[88,55],[],[74,75],[55],[76,86,110,55],[],[94],[91,92],[],[],[90],[90,96,95],[90],[97,92,98],[99,91],[],[],[80,77],[],[79],[],[],[57],[5,107],[],[111,109,87],[],[],[120,123,122,119,121,6],[127,113],[114,137],[115,130,116,101,124],[116,138],[139,117],[153,118],[162],[6],[121],[],[126,110],[116,112,118,113,117],[110],[110,114,124],[],[133],[129],[],[128],[128,130,114,125],[131],[128,134,135],[128],[129,136],[],[115],[32,131,125],[144],[141,132],[],[140],[140,142],[140,146,145],[140],[147,148],[],[],[150,132,151],[141,152],[],[],[156,158,155,159,154,157,142],[],[],[],[29],[29],[161,160],[],[],[32,143,163],[]],"attribute":["If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","FINAL","Void Type ","Simple Name flushBuffer ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","ASSIGN","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","PUBLIC","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-String","callMethodNameReferTo":{},"num":260,"succs":[[19,3,1],[20,21,15,2,3],[23],[4],[26],[9,10,14,12,6,11,8,7],[7],[],[9],[],[16,18],[13],[],[],[0],[16],[],[15,16,1],[],[2],[],[22],[],[25,24],[],[34,32,6,11,33,7,31],[17,29,27,28],[],[],[30],[],[32],[],[],[35],[36],[39,46,37,38,41,40],[],[42,47,48],[50,43,51],[53,54,44],[45,57,56],[],[],[],[],[68,70,67,66,64,11,6,69,65,63,7],[],[49],[],[],[52],[],[],[55],[],[],[55],[59,79],[85,60],[61,92],[97,62],[102],[64],[],[42,75],[43,76],[77,44],[45,78],[],[59,61,62,58,60],[42],[43],[44],[45],[],[],[],[],[83,80,81],[],[84,82],[],[115,116,117,114,11,118,7],[],[87,86,71],[88,89],[],[],[90,91],[],[],[87,93,72],[94,95],[],[91,96],[],[87,98,73],[100,99],[],[91,101],[],[87,103,74],[104,105],[],[106,91],[],[122,108],[109,133],[119,126,110,134],[111,135],[113,138,136,137,112],[113,139],[142],[115],[],[121,82],[],[107,108],[82],[109,119,144,82],[],[127],[124,125],[],[],[123],[123,129,128],[123],[125,130,131],[132,124],[],[],[113,110],[],[112],[],[],[84],[141,140],[],[152,154,151,11,7,153],[143,145,120],[],[],[181,184,183,180,182,7],[155,147],[156,20,149,148,157],[141,149,158],[150,159],[170],[152],[],[],[150,149,146],[148],[],[22],[],[163,161,164,162,160,168],[],[],[165],[169,166],[167],[],[],[],[229,234,231,233,235,230,11,6,232,7],[],[171,87,172],[],[169],[188,174],[175,198],[176,191,177,134,185],[177,199],[200,178],[214,179],[223],[7],[182],[],[187,144],[177,173,179,174,178],[144],[144,175,185],[],[194],[190],[],[189],[189,191,175,186],[192],[189,195,196],[189],[190,197],[],[176],[87,192,186],[205],[202,193],[],[201],[201,203],[201,207,206],[201],[208,209],[],[],[211,193,212],[202,213],[],[],[217,219,216,220,215,203,218],[],[],[],[169],[169],[222,221],[],[],[87,204,224],[],[242,226],[227,245],[228,250],[255],[230],[],[165,239],[166,240],[167,241],[],[227,226,225,228],[165],[166],[167],[],[],[],[244,243,83],[],[84,82],[87,236,246],[247,248],[],[91,249],[],[237,87,251],[253,252],[],[91,254],[],[238,87,256],[257,258],[],[91,259],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Marker Annotation Expr @Override ","Method Declaration Throws ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","ThisExpr","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeRaw-JsonStream-String","callMethodNameReferTo":{},"num":292,"succs":[[5,3,4,6,1,2,9,7],[2],[],[4],[],[11,13],[8],[],[],[14],[11,18],[],[11,10],[],[15],[10,20,17,16],[],[19,21,12],[],[],[45,44,49,48,46,1,6,47,2],[],[63,23],[64,65,28,24,66],[25,68],[26,72],[27,78],[28,20,81],[29,82],[30,93],[94,31],[32,106,39],[56,39,98,33,107],[34,108],[110,35],[117,36],[121,37],[38,127],[130],[41,42,40,43],[41,131],[42,137],[141,43],[20,81],[45],[],[18,61],[19,62],[],[29,28,22],[18],[52,50,18],[51,50,18],[19,70],[19,53],[54,19],[55,19,60],[32,56,19,58],[32,95,98],[32,56,19],[32,57,19,59],[],[],[25,27,26,24],[],[],[67],[],[71,53,69],[],[],[151,152,153,150,6,154,2],[74,54,73,50,76,75],[],[77],[],[],[],[79,80,55],[],[],[],[90],[89,84],[],[83,84],[87,85,84],[112,111],[84],[88,86,84],[91,92,84],[84],[77],[30,31],[100],[97,96],[],[],[95,99],[32,95,58],[101,95,102],[95],[97,103,104],[105,96],[],[],[37,38,34,36,33,35],[],[109,57,58],[],[113],[83,99],[111],[111,114,115],[111],[83,116,99],[],[51,120,85,112,118,119],[],[],[],[123,124,122],[],[],[126,125],[],[],[129,128],[],[188,186,185,6,2,187],[87,123,86],[134],[88,59],[132],[132,136,135],[132],[88,116,59],[89,52,133,140,139,138],[],[],[],[80,142,60],[],[158,144],[145,168],[155,162,146,107],[147,169],[149,172,170,171,148],[149,174],[176],[151],[],[157,70],[],[143,144],[70],[145,155,178,70],[],[163],[160,161],[],[],[159],[159,165,164],[159],[166,161,104],[167,160],[],[149,146],[148],[],[],[173],[],[129,175],[],[177,179,156],[],[],[213,215,216,212,214,2],[189,181],[190,65,183,182,191],[129,183,81],[184,192],[202],[186],[],[],[184,183,180],[182],[],[67],[196,194,197,193,195,201],[],[],[198],[77,199],[200],[],[],[],[260,265,262,266,264,261,6,1,263,2],[203,123,204],[],[77],[220,206],[207,230],[208,223,209,107,217],[209,231],[232,210],[245,211],[254],[2],[214],[],[219,178],[209,205,211,206,210],[178],[178,207,217],[],[226],[222],[],[221],[221,223,207,218],[224],[221,227,228],[221],[222,229],[],[208],[123,224,218],[237],[234,225],[],[233],[233,235],[233,239,238],[233],[240,241],[],[],[243,225,116],[234,244],[],[248,250,247,251,246,249,235],[],[],[],[77],[77],[253,252],[],[],[123,236,255],[],[273,257],[258,276],[259,282],[287],[261],[],[198,270],[199,271],[200,272],[],[258,257,256,259],[198],[199],[200],[],[],[],[275,274,71],[],[173,70],[123,267,277],[278,279],[],[281,280],[],[],[268,123,283],[285,284],[],[281,286],[],[269,123,288],[289,290],[],[281,291],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeRaw ","Parameter String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Name Expr val ","Class Or Interface Type String ","Method Call Expr ","Expression Stmt ","Simple Name writeRaw ","Method Call Expr ","Simple Name val ","Simple Name remaining ","Method Declaration Throws ","Simple Name length ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","For Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Simple Name append ","Block Stmt ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Return Stmt ","Void Type ","Simple Name writeRaw ","Parameter String val ","Parameter int remaining ","Class Or Interface Type IOException ","Block Stmt ","Name Expr val ","Name Expr val ","Name Expr val ","Name Expr remaining ","Name Expr remaining ","Name Expr remaining ","Name Expr remaining ","Name Expr remaining ","Name Expr available ","Name Expr remaining ","Name Expr remaining ","Class Or Interface Type String ","Primitive Type int ","Block Stmt ","Class Or Interface Type Map ","EQUALS","Name Expr type ","NullLiteralExpr","Method Call Expr ","Simple Name ensure ","Simple Name minimal ","Method Declaration Throws ","Method Call Expr ","Simple Name getBytes ","Integer Literal Expr Zero  ","Name Expr buf ","Name Expr count ","Zero IntegerLiteralExpr","Binary Expr EQUALS ","Name Expr count ","PLUS","ReturnStmt","Variable Declaration Expr ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr j ","Name Expr i ","Name Expr i ","Simple Name digit ","Primitive Type int ","Integer Literal Expr Zero  ","Block Stmt ","Variable Declaration Expr ","Simple Name available ","Name Expr buf ","Name Expr count ","Name Expr available ","Name Expr available ","Variable Declarator int available = ","Primitive Type int ","Binary Expr MINUS ","Field Access Expr ","MINUS","Simple Name length ","Block Stmt ","LESS","Assign Expr MINUS ","MINUS","Variable Declaration Expr ","Simple Name j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Binary Expr PLUS ","PLUS","Method Call Expr ","Simple Name getBytes ","Name Expr buf ","Name Expr count ","Binary Expr EQUALS ","Name Expr clazz ","ASSIGN","Field Access Expr ","Primitive Type int ","Simple Name length ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Name Expr cache ","Binary Expr EQUALS ","Integer Literal Expr Zero  ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Binary Expr PLUS ","Method Call Expr ","Simple Name getBytes ","Name Expr buf ","Name Expr count ","Assign Expr PLUS ","Name Expr cache ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","Simple Name length ","Block Stmt ","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeRaw-JsonStream-String-int","callMethodNameReferTo":{},"num":277,"succs":[[48,1],[49,50,6,2,51],[3,53],[4,57],[5,63],[6,22,66],[7,67],[8,78],[79,9],[10,91,17],[41,17,83,92,11],[12,93],[95,13],[102,14],[106,15],[112,16],[115],[19,20,18,21],[19,116],[20,122],[126,21],[22,66],[26,25,32,30,27,29,23,28,24],[24],[],[26],[],[34,46],[38,47],[31],[],[],[7,6,0],[34],[],[36,33,34],[35,33,34],[38,55],[],[38,37],[39,38],[40,38,45],[10,41,38,43],[10,80,83],[10,41,38],[10,42,38,44],[],[],[3,5,4,2],[],[],[52],[],[37,56,54],[],[],[136,137,138,135,29,139,24],[39,59,58,33,61,60],[],[62],[],[],[],[64,65,40],[],[],[],[75],[74,69],[],[68,69],[72,70,69],[97,96],[69],[73,71,69],[76,77,69],[69],[62],[8,9],[85],[82,81],[],[],[80,84],[10,80,43],[86,80,87],[80],[82,88,89],[90,81],[],[],[15,16,12,14,11,13],[],[94,42,43],[],[98],[68,84],[96],[96,99,100],[96],[68,101,84],[],[35,105,70,97,103,104],[],[],[],[108,109,107],[],[],[111,110],[],[],[114,113],[],[173,171,170,29,24,172],[72,108,71],[119],[73,44],[117],[117,121,120],[117],[73,101,44],[74,36,118,125,124,123],[],[],[],[65,127,45],[],[143,129],[130,153],[140,147,131,92],[132,154],[134,157,155,156,133],[134,159],[161],[136],[],[55,142],[],[128,129],[55],[130,140,163,55],[],[148],[145,146],[],[],[144],[144,150,149],[144],[151,146,89],[152,145],[],[134,131],[133],[],[],[158],[],[114,160],[],[162,164,141],[],[],[198,201,200,197,199,24],[174,166],[175,50,168,167,176],[114,168,66],[169,177],[187],[171],[],[],[169,168,165],[167],[],[52],[181,179,182,180,178,186],[],[],[183],[62,184],[185],[],[],[],[245,250,247,249,251,246,29,23,248,24],[188,108,189],[],[62],[205,191],[192,215],[193,208,194,92,202],[194,216],[217,195],[230,196],[239],[24],[199],[],[204,163],[194,190,196,191,195],[163],[163,192,202],[],[211],[207],[],[206],[206,208,192,203],[209],[206,212,213],[206],[207,214],[],[193],[108,209,203],[222],[219,210],[],[218],[218,220],[218,224,223],[218],[225,226],[],[],[228,210,101],[219,229],[],[235,233,232,236,231,234,220],[],[],[],[62],[62],[238,237],[],[],[108,221,240],[],[258,242],[243,261],[244,267],[272],[246],[],[183,255],[184,256],[185,257],[],[243,242,241,244],[183],[184],[185],[],[],[],[260,259,56],[],[158,55],[108,252,262],[263,264],[],[266,265],[],[],[253,108,268],[270,269],[],[266,271],[],[254,108,273],[274,275],[],[266,276],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","For Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Simple Name append ","Block Stmt ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeRaw ","Parameter String val ","Parameter int remaining ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Name Expr val ","Name Expr val ","Name Expr remaining ","Simple Name remaining ","Name Expr remaining ","Name Expr remaining ","Name Expr remaining ","Name Expr remaining ","Name Expr available ","Name Expr remaining ","Name Expr remaining ","Class Or Interface Type String ","Primitive Type int ","Block Stmt ","Class Or Interface Type Map ","EQUALS","Name Expr type ","NullLiteralExpr","Method Call Expr ","Simple Name ensure ","Simple Name minimal ","Method Declaration Throws ","Method Call Expr ","Simple Name getBytes ","Integer Literal Expr Zero  ","Name Expr buf ","Name Expr count ","Zero IntegerLiteralExpr","Binary Expr EQUALS ","Name Expr count ","PLUS","ReturnStmt","Variable Declaration Expr ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr j ","Name Expr i ","Name Expr i ","Simple Name digit ","Primitive Type int ","Integer Literal Expr Zero  ","Block Stmt ","Variable Declaration Expr ","Simple Name available ","Name Expr buf ","Name Expr count ","Name Expr available ","Name Expr available ","Variable Declarator int available = ","Primitive Type int ","Binary Expr MINUS ","Field Access Expr ","MINUS","Simple Name length ","Block Stmt ","LESS","Assign Expr MINUS ","MINUS","Variable Declaration Expr ","Simple Name j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Binary Expr PLUS ","PLUS","Method Call Expr ","Simple Name getBytes ","Name Expr buf ","Name Expr count ","Binary Expr EQUALS ","Name Expr clazz ","ASSIGN","Field Access Expr ","Primitive Type int ","Simple Name length ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Name Expr cache ","Binary Expr EQUALS ","Integer Literal Expr Zero  ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Binary Expr PLUS ","Method Call Expr ","Simple Name getBytes ","Name Expr buf ","Name Expr count ","Assign Expr PLUS ","Name Expr cache ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","Simple Name length ","Block Stmt ","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-Boolean","callMethodNameReferTo":{},"num":371,"succs":[[3,1,22],[3,2,23,19,24],[26],[4],[29,5,7],[1,6,7,19,20],[30],[8],[33],[18,13,12,16,10,15,11,14],[11],[],[13],[],[21,20],[17],[],[],[0],[20],[],[],[2],[],[25],[],[28,27],[],[39,37,10,15,38,11,36],[6],[31,32],[],[66,63,10,15,65,11,64],[34,35],[],[86,88,87,85,10,15,11],[37],[],[],[40],[41],[44,51,42,43,46,45],[],[47,52,53],[55,48,56],[58,59,49],[50,62,61],[],[],[],[],[126,128,125,124,122,10,127,15,123,121,11],[],[54],[],[],[57],[],[],[60],[],[],[60],[64],[],[],[67],[68],[71,51,73,69,72,70],[],[47,75,74],[78,48,77],[80,81,49],[82,50,83],[],[76],[],[],[79],[],[],[57],[],[84],[],[86],[],[],[89],[90],[92,94,95,102,91,96,93],[],[104,103,97],[98,106,107],[99,110,109],[112,100,111],[115,101,114],[],[],[],[],[],[177,179,172,174,171,175,10,15,173,178,176,11],[],[105],[],[],[108],[],[],[60],[],[113],[],[],[84],[117,137],[143,118],[119,150],[155,120],[160],[122],[],[47,133],[48,134],[135,49],[50,136],[],[117,119,120,116,118],[47],[48],[49],[50],[],[],[],[],[141,138,139],[],[142,140],[],[226,227,228,225,15,229,11],[],[145,144,129],[146,147],[],[],[148,149],[],[],[145,151,130],[152,153],[],[149,154],[],[145,156,131],[158,157],[],[149,159],[],[145,161,132],[162,163],[],[164,149],[],[190,166],[193,167],[198,168],[203,169],[208,170],[213],[172],[],[185,97],[186,98],[187,99],[100,188],[189,101],[],[166,168,165,167,170,169],[97],[98],[99],[100],[101],[],[],[],[],[],[192,141,191],[],[142,140],[180,145,194],[195,196],[],[149,197],[],[181,145,199],[201,200],[],[149,202],[],[145,204,182],[205,206],[],[207,149],[],[145,209,183],[210,211],[],[149,212],[],[145,214,184],[215,216],[],[149,217],[],[233,219],[220,244],[230,237,221,245],[222,246],[224,249,247,248,223],[224,250],[253],[226],[],[232,140],[],[218,219],[140],[220,230,255,140],[],[238],[235,236],[],[],[234],[234,240,239],[234],[236,241,242],[243,235],[],[],[224,221],[],[223],[],[],[142],[252,251],[],[265,263,262,15,11,264],[254,256,231],[],[],[292,294,295,291,293,11],[266,258],[267,23,260,259,268],[252,260,269],[261,270],[281],[263],[],[],[261,260,257],[259],[],[25],[],[274,272,275,273,271,279],[],[],[276],[280,277],[278],[],[],[],[340,345,342,344,346,341,10,15,343,11],[],[282,145,283],[],[280],[299,285],[286,309],[287,302,288,245,296],[288,310],[311,289],[290,325],[334],[11],[293],[],[298,255],[288,284,290,285,289],[255],[255,286,296],[],[305],[301],[],[300],[300,302,286,297],[303],[300,306,307],[300],[301,308],[],[287],[145,303,297],[316],[313,304],[],[312],[312,314],[312,318,317],[312],[319,320],[],[],[322,304,323],[313,324],[],[],[328,330,327,331,326,329,314],[],[],[],[280],[280],[333,332],[],[],[145,315,335],[],[353,337],[338,356],[339,361],[366],[341],[],[276,350],[277,351],[278,352],[],[338,337,339,336],[276],[277],[278],[],[],[],[355,354,141],[],[142,140],[145,347,357],[358,359],[],[149,360],[],[348,145,362],[364,363],[],[149,365],[],[349,145,367],[368,369],[],[149,370],[]],"attribute":["If Stmt ","Name Expr noIndention ","Expression Stmt ","Block Stmt ","If Stmt ","Name Expr val ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter Boolean val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Class Or Interface Type Boolean ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Declaration Throws ","Block Stmt ","Method Call Expr ","Simple Name writeTrue ","Method Declaration Throws ","Method Call Expr ","Simple Name writeFalse ","Method Declaration Throws ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","Void Type ","Simple Name writeTrue ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Primitive Type byte ","Char Literal Expr 't' ","'t'","Primitive Type byte ","Char Literal Expr 'r' ","'r'","Primitive Type byte ","Char Literal Expr 'u' ","Primitive Type byte ","Char Literal Expr 'e' ","'e'","Void Type ","Simple Name writeFalse ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Simple Name b5 ","Method Declaration Throws ","Simple Name keys ","Char Literal Expr 'f' ","'f'","Primitive Type byte ","Char Literal Expr 'a' ","'a'","Primitive Type byte ","Char Literal Expr 'l' ","Primitive Type byte ","Char Literal Expr 's' ","'s'","Primitive Type byte ","Char Literal Expr 'e' ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Parameter byte b5 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr b5 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Return Stmt ","Simple Name append ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Return Stmt ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr keyType ","Name Expr cache ","Assign Expr ASSIGN ","Expression Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Unary Expr ++ ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-boolean","callMethodNameReferTo":{},"num":341,"succs":[[1,17,3],[15,2,3],[18],[4],[21],[9,14,6,11,10,8,7,12],[7],[],[9],[],[15,16],[13],[],[],[0],[],[],[2],[19,20],[],[27,24,6,11,26,7,25],[22,23],[],[55,54,53,52,11,6,7],[25],[],[],[28],[29],[39,32,34,30,31,33],[],[35,41,40],[44,36,43],[46,47,37],[49,38,50],[],[],[],[],[94,96,93,90,92,11,6,95,91,89,7],[],[42],[],[],[45],[],[],[48],[],[],[51],[],[53],[],[],[56],[57],[59,61,62,69,58,63,60],[],[71,70,64],[65,73,74],[66,77,76],[80,67,79],[83,68,82],[],[],[],[],[],[145,147,140,142,139,143,11,141,6,146,144,7],[],[72],[],[],[75],[],[],[78],[],[],[81],[],[],[51],[85,105],[111,86],[87,118],[123,88],[128],[90],[],[35,101],[36,102],[103,37],[38,104],[],[85,87,88,84,86],[35],[36],[37],[38],[],[],[],[],[109,106,107],[],[110,108],[],[194,195,196,193,11,197,7],[],[113,112,97],[114,115],[],[],[116,117],[],[],[113,119,98],[120,121],[],[117,122],[],[113,124,99],[126,125],[],[117,127],[],[113,129,100],[130,131],[],[132,117],[],[158,134],[161,135],[136,166],[171,137],[176,138],[181],[140],[],[153,64],[154,65],[155,66],[67,156],[68,157],[],[134,136,133,135,138,137],[64],[65],[66],[67],[68],[],[],[],[],[],[160,159,109],[],[110,108],[148,113,162],[163,164],[],[117,165],[],[149,113,167],[169,168],[],[117,170],[],[113,172,150],[173,174],[],[175,117],[],[113,177,151],[178,179],[],[117,180],[],[113,182,152],[183,184],[],[117,185],[],[201,187],[188,212],[198,205,189,213],[190,214],[192,217,215,216,191],[192,218],[221],[194],[],[108,200],[],[186,187],[108],[188,198,223,108],[],[206],[203,204],[],[],[202],[202,208,207],[202],[204,209,210],[211,203],[],[],[192,189],[],[191],[],[],[110],[220,219],[],[231,233,230,11,7,232],[222,224,199],[],[],[262,265,264,261,263,7],[234,226],[235,236,228,227,237],[220,228,239],[229,240],[251],[231],[],[],[229,228,225],[227],[],[],[238],[],[],[244,242,245,243,241,249],[],[],[246],[250,247],[248],[],[],[],[310,312,315,314,316,311,11,6,313,7],[],[252,113,253],[],[250],[269,255],[256,279],[257,272,258,213,266],[258,280],[281,259],[260,295],[304],[7],[263],[],[268,223],[258,254,260,255,259],[223],[223,256,266],[],[275],[271],[],[270],[270,272,256,267],[273],[270,276,277],[270],[271,278],[],[257],[113,273,267],[286],[283,274],[],[282],[282,284],[282,288,287],[282],[289,290],[],[],[292,274,293],[283,294],[],[],[298,300,297,301,296,284,299],[],[],[],[250],[250],[303,302],[],[],[113,285,305],[],[323,307],[308,326],[309,331],[336],[311],[],[246,320],[247,321],[248,322],[],[308,307,306,309],[246],[247],[248],[],[],[],[325,324,109],[],[110,108],[113,317,327],[328,329],[],[117,330],[],[318,113,332],[334,333],[],[117,335],[],[319,113,337],[338,339],[],[117,340],[]],"attribute":["If Stmt ","Name Expr val ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter boolean val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name val ","Primitive Type boolean ","Block Stmt ","Method Call Expr ","Simple Name writeTrue ","Method Declaration Throws ","Method Call Expr ","Simple Name writeFalse ","Method Declaration Throws ","Void Type ","Simple Name writeTrue ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 't' ","'t'","Primitive Type byte ","Char Literal Expr 'r' ","'r'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Primitive Type byte ","Char Literal Expr 'e' ","'e'","Void Type ","Simple Name writeFalse ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Simple Name b5 ","Method Declaration Throws ","Simple Name keys ","Char Literal Expr 'f' ","'f'","Primitive Type byte ","Char Literal Expr 'a' ","'a'","Primitive Type byte ","Char Literal Expr 'l' ","'l'","Primitive Type byte ","Char Literal Expr 's' ","'s'","Primitive Type byte ","Char Literal Expr 'e' ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Parameter byte b5 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr b5 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Return Stmt ","Simple Name append ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Return Stmt ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr keyType ","Name Expr cache ","Assign Expr ASSIGN ","Expression Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Unary Expr ++ ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeTrue-JsonStream-","callMethodNameReferTo":{},"num":237,"succs":[[8,3,1,5,6,2,4],[2],[],[4],[],[7],[],[],[9],[10],[13,20,15,11,14,12],[],[16,22,21],[25,17,24],[27,28,18],[30,19,31],[],[],[],[],[43,45,42,39,41,44,5,1,40,38,2],[],[23],[],[],[26],[],[],[29],[],[],[32],[],[34,54],[60,35],[36,67],[72,37],[77],[39],[],[16,50],[17,51],[52,18],[19,53],[],[34,36,37,33,35],[16],[17],[18],[19],[],[],[],[],[58,55,56],[],[59,57],[],[90,91,92,89,5,93,2],[],[62,61,46],[63,64],[],[],[65,66],[],[],[62,68,47],[69,70],[],[66,71],[],[62,73,48],[75,74],[],[66,76],[],[62,78,49],[79,80],[],[81,66],[],[97,83],[84,108],[94,101,85,109],[86,110],[88,113,111,112,87],[88,114],[117],[90],[],[57,96],[],[82,83],[57],[84,94,119,57],[],[102],[99,100],[],[],[98],[98,104,103],[98],[100,105,106],[107,99],[],[],[88,85],[],[87],[],[],[59],[116,115],[],[129,127,126,5,2,128],[118,120,95],[],[],[158,160,161,157,159,2],[130,122],[131,132,124,123,133],[116,124,135],[125,136],[147],[127],[],[],[125,124,121],[123],[],[],[134],[],[],[140,138,141,137,139,145],[],[],[142],[146,143],[144],[],[],[],[206,211,208,210,212,207,1,5,209,2],[],[148,62,149],[],[146],[165,151],[152,175],[153,168,154,109,162],[154,176],[177,155],[156,191],[200],[2],[159],[],[164,119],[154,150,156,151,155],[119],[119,152,162],[],[171],[167],[],[166],[166,168,152,163],[169],[166,172,173],[166],[167,174],[],[153],[62,169,163],[182],[179,170],[],[178],[178,180],[178,184,183],[178],[185,186],[],[],[188,170,189],[179,190],[],[],[194,196,193,197,192,195,180],[],[],[],[146],[146],[199,198],[],[],[62,181,201],[],[219,203],[204,222],[205,227],[232],[207],[],[142,216],[143,217],[144,218],[],[204,203,205,202],[142],[143],[144],[],[],[],[221,220,58],[],[59,57],[62,213,223],[224,225],[],[66,226],[],[214,62,228],[230,229],[],[66,231],[],[215,62,233],[234,235],[],[66,236],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeTrue ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 't' ","'t'","Primitive Type byte ","Char Literal Expr 'r' ","'r'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Primitive Type byte ","Char Literal Expr 'e' ","'e'","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeFalse-JsonStream-","callMethodNameReferTo":{},"num":251,"succs":[[8,4,6,3,1,5,2],[2],[],[4],[],[7],[],[],[9],[10],[12,14,15,22,11,16,13],[],[24,23,17],[18,26,27],[19,30,29],[33,20,32],[36,21,35],[],[],[],[],[],[50,52,45,47,44,48,46,1,5,51,49,2],[],[25],[],[],[28],[],[],[31],[],[],[34],[],[],[37],[],[63,39],[69,40],[41,76],[81,42],[86,43],[91],[45],[],[58,17],[18,59],[60,19],[20,61],[21,62],[],[39,41,38,40,43,42],[17],[18],[19],[20],[21],[],[],[],[],[],[65,67,64],[],[68,66],[],[104,105,106,103,5,107,2],[],[53,71,70],[72,73],[],[],[75,74],[],[],[54,71,77],[78,79],[],[75,80],[],[71,82,55],[83,84],[],[85,75],[],[87,71,56],[88,89],[],[90,75],[],[71,92,57],[93,94],[],[75,95],[],[111,97],[98,122],[108,115,99,123],[100,124],[102,127,125,126,101],[102,128],[131],[104],[],[66,110],[],[96,97],[66],[98,108,133,66],[],[116],[113,114],[],[],[112],[112,118,117],[112],[114,119,120],[121,113],[],[],[102,99],[],[101],[],[],[68],[130,129],[],[141,143,140,5,2,142],[132,134,109],[],[],[172,174,175,171,173,2],[144,136],[145,146,138,137,147],[130,138,149],[139,150],[161],[141],[],[],[139,138,135],[137],[],[],[148],[],[],[154,152,155,153,151,159],[],[],[156],[160,157],[158],[],[],[],[220,225,222,226,224,221,1,5,223,2],[],[162,71,163],[],[160],[179,165],[166,189],[167,182,168,123,176],[168,190],[191,169],[170,205],[214],[2],[173],[],[178,133],[168,164,170,165,169],[133],[133,166,176],[],[185],[181],[],[180],[180,182,166,177],[183],[180,186,187],[180],[181,188],[],[167],[71,183,177],[196],[193,184],[],[192],[192,194],[192,198,197],[192],[199,200],[],[],[202,184,203],[193,204],[],[],[210,208,207,211,206,194,209],[],[],[],[160],[160],[213,212],[],[],[71,195,215],[],[233,217],[218,236],[219,241],[246],[221],[],[156,230],[157,231],[158,232],[],[218,217,216,219],[156],[157],[158],[],[],[],[235,234,67],[],[68,66],[71,227,237],[238,239],[],[75,240],[],[228,71,242],[244,243],[],[75,245],[],[229,71,247],[248,249],[],[75,250],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeFalse ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Simple Name b5 ","Method Declaration Throws ","Simple Name keys ","Char Literal Expr 'f' ","'f'","Primitive Type byte ","Char Literal Expr 'a' ","'a'","Primitive Type byte ","Char Literal Expr 'l' ","'l'","Primitive Type byte ","Char Literal Expr 's' ","'s'","Primitive Type byte ","Char Literal Expr 'e' ","'e'","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Parameter byte b5 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr b5 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Return Stmt ","Simple Name append ","Integer Literal Expr Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Array Access Expr count++ ","ASSIGN","Name Expr buf ","Return Stmt ","Name Expr count ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr keyType ","Name Expr cache ","Assign Expr ASSIGN ","Expression Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Unary Expr ++ ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-Short","callMethodNameReferTo":{},"num":283,"succs":[[1,19,3],[20,2,21,3,15],[23],[4],[26],[9,8,12,6,11,7,14,10],[7],[],[9],[],[16,18],[13],[],[],[0],[16],[],[1,16,15],[],[2],[],[22],[],[25,24],[],[35,33,6,11,34,32,7],[30,27,28],[],[17,31,29],[],[65,66,68,67,11,6,64,7],[],[33],[],[],[36],[37],[40,47,38,41,42,39],[],[43,48,49],[51,44,52],[54,55,45],[46,58,57],[],[],[],[],[91,93,90,87,89,6,92,11,88,86,7],[],[50],[],[],[53],[],[],[56],[],[],[56],[72,62,60],[20,73,69,61,62],[74],[63],[76],[65],[],[29,71],[],[59],[29],[69,29,60],[],[61],[22],[25,75],[],[70,79,77,78],[],[],[80],[],[82,102],[108,83],[84,115],[120,85],[125],[87],[],[43,98],[44,99],[100,45],[46,101],[],[82,84,85,81,83],[43],[44],[45],[46],[],[],[],[],[106,103,104],[],[107,105],[],[138,139,140,137,11,141,7],[],[110,109,94],[111,112],[],[],[113,114],[],[],[110,116,95],[118,117],[],[114,119],[],[110,121,96],[123,122],[],[114,124],[],[110,126,97],[127,128],[],[129,114],[],[145,131],[132,156],[142,149,133,157],[134,158],[136,161,159,160,135],[136,162],[165],[138],[],[144,105],[],[130,131],[105],[132,142,167,105],[],[150],[147,148],[],[],[146],[146,152,151],[146],[153,148,154],[155,147],[],[],[136,133],[],[135],[],[],[107],[164,163],[],[177,175,174,11,7,176],[168,166,143],[],[],[204,207,206,203,205,7],[178,170],[179,20,172,171,180],[164,172,181],[173,182],[193],[175],[],[],[173,172,169],[171],[],[22],[],[186,184,187,183,185,191],[],[],[188],[192,189],[190],[],[],[],[252,254,257,256,258,253,6,11,255,7],[],[194,110,195],[],[192],[211,197],[198,221],[199,214,200,157,208],[200,222],[223,201],[202,237],[246],[7],[205],[],[210,167],[200,196,202,197,201],[167],[167,198,208],[],[217],[213],[],[212],[212,214,198,209],[215],[212,218,219],[212],[213,220],[],[199],[110,215,209],[228],[225,216],[],[224],[224,226],[224,230,229],[224],[231,232],[],[],[234,216,235],[225,236],[],[],[242,240,239,243,238,226,241],[],[],[],[192],[192],[245,244],[],[],[110,227,247],[],[265,249],[250,268],[251,273],[278],[253],[],[188,262],[189,263],[190,264],[],[250,249,248,251],[188],[189],[190],[],[],[],[267,266,106],[],[107,105],[110,259,269],[270,271],[],[114,272],[],[260,110,274],[276,275],[],[114,277],[],[261,110,279],[280,281],[],[114,282],[]],"attribute":["If Stmt ","Variable Declarator int sIx = ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter Short val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name sIx ","Simple Name val ","Name Expr eIx ","Class Or Interface Type Short ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Declaration Throws ","Method Call Expr ","Simple Name writeVal ","Method Call Expr ","Simple Name val ","Method Declaration Throws ","Name Expr rendered ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeVal ","Parameter String val ","Class Or Interface Type IOException ","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Marker Annotation Expr @Override ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","ThisExpr","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-short","callMethodNameReferTo":{},"num":274,"succs":[[3,7,9,6,1,4,2,5],[2],[],[4],[],[12,11],[8],[],[],[13],[11],[],[],[14],[16,18,15],[],[19,17,10],[],[26,27,29,28,6,1,2,25],[],[33,23,21],[34,35,30,22,23],[37],[24],[40],[26],[],[17,32],[],[20],[17],[30,17,21],[],[22],[],[36],[],[39,38],[],[48,46,6,1,47,2,45],[31,43,41,42],[],[],[44],[],[46],[],[],[49],[50],[53,60,51,55,54,52],[],[56,61,62],[64,57,65],[67,68,58],[59,71,70],[],[],[],[],[82,84,81,78,80,6,1,83,79,77,2],[],[63],[],[],[66],[],[],[69],[],[],[69],[73,93],[99,74],[75,106],[111,76],[116],[78],[],[56,89],[57,90],[91,58],[59,92],[],[73,75,76,72,74],[56],[57],[58],[59],[],[],[],[],[97,94,95],[],[98,96],[],[129,130,131,128,6,132,2],[],[101,100,85],[102,103],[],[],[104,105],[],[],[101,107,86],[109,108],[],[105,110],[],[101,112,87],[114,113],[],[105,115],[],[101,117,88],[118,119],[],[120,105],[],[136,122],[123,147],[133,140,124,148],[125,149],[127,152,150,151,126],[127,153],[156],[129],[],[135,96],[],[121,122],[96],[123,133,158,96],[],[141],[138,139],[],[],[137],[137,143,142],[137],[144,139,145],[146,138],[],[],[127,124],[],[126],[],[],[98],[155,154],[],[168,166,165,6,2,167],[159,157,134],[],[],[195,198,197,194,196,2],[169,161],[170,34,163,162,171],[155,163,172],[164,173],[184],[166],[],[],[164,163,160],[162],[],[36],[],[177,175,178,174,176,182],[],[],[179],[183,180],[181],[],[],[],[243,245,248,249,247,244,1,6,246,2],[],[185,101,186],[],[183],[202,188],[189,212],[190,205,191,148,199],[191,213],[214,192],[193,228],[237],[2],[196],[],[201,158],[191,187,193,188,192],[158],[158,189,199],[],[208],[204],[],[203],[203,205,189,200],[206],[203,209,210],[203],[204,211],[],[190],[101,206,200],[219],[216,207],[],[215],[215,217],[215,221,220],[215],[222,223],[],[],[225,207,226],[216,227],[],[],[233,231,230,234,229,217,232],[],[],[],[183],[183],[236,235],[],[],[101,218,238],[],[256,240],[241,259],[242,264],[269],[244],[],[179,253],[180,254],[181,255],[],[241,240,242,239],[179],[180],[181],[],[],[],[258,257,97],[],[98,96],[101,250,260],[261,262],[],[105,263],[],[251,101,265],[267,266],[],[105,268],[],[252,101,270],[271,272],[],[105,273],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter short val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Primitive Type short ","Expression Stmt ","Method Call Expr ","Simple Name writeVal ","Cast Expr ","Simple Name val ","Method Declaration Throws ","Primitive Type int ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeVal ","Parameter String val ","Class Or Interface Type IOException ","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Marker Annotation Expr @Override ","Method Declaration Throws ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","ThisExpr","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-Integer","callMethodNameReferTo":{},"num":283,"succs":[[1,3,19],[3,20,15,21,2],[23],[4],[26],[12,9,8,14,6,11,7,10],[7],[],[9],[],[18,16],[13],[],[],[0],[16],[],[1,15,16],[],[2],[],[22],[],[24,25],[],[35,33,6,11,34,32,7],[30,27,28],[],[31,29,17],[],[65,66,68,67,11,6,64,7],[],[33],[],[],[36],[37],[40,47,38,41,42,39],[],[43,48,49],[51,44,52],[54,55,45],[46,58,57],[],[],[],[],[91,93,90,87,89,6,92,11,88,86,7],[],[50],[],[],[53],[],[],[56],[],[],[56],[72,62,60],[20,73,69,61,62],[74],[63],[76],[65],[],[29,71],[],[59],[29],[69,29,60],[],[61],[22],[25,75],[],[70,79,77,78],[],[],[80],[],[82,102],[108,83],[84,115],[120,85],[125],[87],[],[43,98],[44,99],[100,45],[46,101],[],[82,84,85,81,83],[43],[44],[45],[46],[],[],[],[],[106,103,104],[],[107,105],[],[138,139,140,137,11,141,7],[],[110,109,94],[111,112],[],[],[113,114],[],[],[110,116,95],[118,117],[],[114,119],[],[110,121,96],[123,122],[],[114,124],[],[110,126,97],[127,128],[],[129,114],[],[145,131],[132,156],[142,149,133,157],[134,158],[136,161,159,160,135],[136,162],[165],[138],[],[144,105],[],[130,131],[105],[132,142,167,105],[],[150],[147,148],[],[],[146],[146,152,151],[146],[153,148,154],[155,147],[],[],[136,133],[],[135],[],[],[107],[164,163],[],[177,175,174,11,7,176],[168,166,143],[],[],[204,207,206,203,205,7],[178,170],[179,20,172,171,180],[164,172,181],[173,182],[193],[175],[],[],[173,172,169],[171],[],[22],[],[186,184,187,183,185,191],[],[],[188],[192,189],[190],[],[],[],[252,254,257,256,258,253,6,11,255,7],[],[194,110,195],[],[192],[211,197],[198,221],[199,214,200,157,208],[200,222],[223,201],[202,237],[246],[7],[205],[],[210,167],[200,196,202,197,201],[167],[167,198,208],[],[217],[213],[],[212],[212,214,198,209],[215],[212,218,219],[212],[213,220],[],[199],[110,215,209],[228],[225,216],[],[224],[224,226],[224,230,229],[224],[231,232],[],[],[234,216,235],[225,236],[],[],[242,240,239,243,238,226,241],[],[],[],[192],[192],[245,244],[],[],[110,227,247],[],[265,249],[250,268],[251,273],[278],[253],[],[188,262],[189,263],[190,264],[],[250,249,248,251],[188],[189],[190],[],[],[],[267,266,106],[],[107,105],[110,259,269],[270,271],[],[114,272],[],[260,110,274],[276,275],[],[114,277],[],[261,110,279],[280,281],[],[114,282],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name toString ","Parameter Integer val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Name Expr val ","Class Or Interface Type Integer ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Name Expr valueType ","Method Declaration Throws ","Method Call Expr ","Simple Name writeVal ","Method Call Expr ","Simple Name val ","Method Declaration Throws ","Simple Name intValue ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeVal ","Parameter String val ","Class Or Interface Type IOException ","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Marker Annotation Expr @Override ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","ThisExpr","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-int","callMethodNameReferTo":{"14":"srcmainjavacomjsoniteroutputStreamImplNumber.java-writeInt-StreamImplNumber-JsonStream-int"},"num":19,"succs":[[3,4,5,7,6,1,2,9],[2],[],[4],[],[11,12],[8],[],[],[13],[11],[],[],[14],[15,17,16,10],[],[],[18],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter int val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Primitive Type int ","Expression Stmt ","Method Call Expr ","Name Expr StreamImplNumber ","Simple Name writeInt ","This Expr ","ThisExpr"]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-Long","callMethodNameReferTo":{},"num":283,"succs":[[19,3,1],[20,3,2,15,21],[23],[4],[26],[9,12,10,14,8,6,11,7],[7],[],[9],[],[16,18],[13],[],[],[0],[16],[],[16,1,15],[],[2],[],[22],[],[24,25],[],[35,33,6,11,34,32,7],[28,27,30],[],[31,17,29],[],[65,66,68,67,11,6,64,7],[],[33],[],[],[36],[37],[40,47,38,41,42,39],[],[43,48,49],[51,44,52],[54,55,45],[46,58,57],[],[],[],[],[91,93,90,87,89,6,92,11,88,86,7],[],[50],[],[],[53],[],[],[56],[],[],[56],[72,62,60],[20,73,69,61,62],[74],[63],[76],[65],[],[29,71],[],[59],[29],[69,29,60],[],[61],[22],[25,75],[],[70,79,77,78],[],[],[80],[],[82,102],[108,83],[84,115],[120,85],[125],[87],[],[43,98],[44,99],[100,45],[46,101],[],[82,84,85,81,83],[43],[44],[45],[46],[],[],[],[],[106,103,104],[],[107,105],[],[138,139,140,137,11,141,7],[],[110,109,94],[111,112],[],[],[113,114],[],[],[110,116,95],[118,117],[],[114,119],[],[110,121,96],[123,122],[],[114,124],[],[110,126,97],[127,128],[],[129,114],[],[145,131],[132,156],[142,149,133,157],[134,158],[136,161,159,160,135],[136,162],[165],[138],[],[144,105],[],[130,131],[105],[132,142,167,105],[],[150],[147,148],[],[],[146],[146,152,151],[146],[153,148,154],[155,147],[],[],[136,133],[],[135],[],[],[107],[164,163],[],[177,175,174,11,7,176],[168,166,143],[],[],[204,207,206,203,205,7],[178,170],[179,20,172,171,180],[164,172,181],[173,182],[193],[175],[],[],[173,172,169],[171],[],[22],[],[186,184,187,183,185,191],[],[],[188],[192,189],[190],[],[],[],[252,254,257,256,258,253,6,11,255,7],[],[194,110,195],[],[192],[211,197],[198,221],[199,214,200,157,208],[200,222],[223,201],[202,237],[246],[7],[205],[],[210,167],[200,196,202,197,201],[167],[167,198,208],[],[217],[213],[],[212],[212,214,198,209],[215],[212,218,219],[212],[213,220],[],[199],[110,215,209],[228],[225,216],[],[224],[224,226],[224,230,229],[224],[231,232],[],[],[234,216,235],[225,236],[],[],[242,240,239,243,238,226,241],[],[],[],[192],[192],[245,244],[],[],[110,227,247],[],[265,249],[250,268],[251,273],[278],[253],[],[188,262],[189,263],[190,264],[],[250,249,248,251],[188],[189],[190],[],[],[],[267,266,106],[],[107,105],[110,259,269],[270,271],[],[114,272],[],[260,110,274],[276,275],[],[114,277],[],[261,110,279],[280,281],[],[114,282],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter Long val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Name Expr val ","Class Or Interface Type Long ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Array Access Expr d++ ","Method Declaration Throws ","Method Call Expr ","Simple Name writeVal ","Variable Declarator byte c = ","Simple Name val ","Method Declaration Throws ","Simple Name longValue ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeVal ","Parameter String val ","Class Or Interface Type IOException ","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Marker Annotation Expr @Override ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","ThisExpr","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-long","callMethodNameReferTo":{"14":"srcmainjavacomjsoniteroutputStreamImplNumber.java-writeLong-StreamImplNumber-JsonStream-long"},"num":19,"succs":[[4,5,3,7,9,6,1,2],[2],[],[4],[],[12,11],[8],[],[],[13],[11],[],[],[14],[17,10,15,16],[],[],[18],[]],"attribute":["Method Declaration ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter long val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Primitive Type long ","Expression Stmt ","Method Call Expr ","Name Expr StreamImplNumber ","Simple Name writeLong ","This Expr ","ThisExpr"]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-Float","callMethodNameReferTo":{},"num":283,"succs":[[1,19,3],[2,21,20,3,15],[23],[4],[26],[10,8,12,9,14,6,11,7],[7],[],[9],[],[16,18],[13],[],[],[0],[16],[],[1,16,15],[],[2],[],[22],[],[25,24],[],[35,33,6,11,34,32,7],[28,30,27],[],[17,31,29],[],[65,66,68,67,11,6,64,7],[],[33],[],[],[36],[37],[40,47,38,41,42,39],[],[43,48,49],[51,44,52],[54,55,45],[46,58,57],[],[],[],[],[91,93,90,87,89,6,92,11,88,86,7],[],[50],[],[],[53],[],[],[56],[],[],[56],[72,62,60],[20,73,69,61,62],[74],[63],[76],[65],[],[29,71],[],[59],[29],[69,29,60],[],[61],[22],[25,75],[],[70,79,77,78],[],[],[80],[],[82,102],[108,83],[84,115],[120,85],[125],[87],[],[43,98],[44,99],[100,45],[46,101],[],[82,84,85,81,83],[43],[44],[45],[46],[],[],[],[],[106,103,104],[],[107,105],[],[138,139,140,137,11,141,7],[],[110,109,94],[111,112],[],[],[113,114],[],[],[110,116,95],[118,117],[],[114,119],[],[110,121,96],[123,122],[],[114,124],[],[110,126,97],[127,128],[],[129,114],[],[145,131],[132,156],[142,149,133,157],[134,158],[136,161,159,160,135],[136,162],[165],[138],[],[144,105],[],[130,131],[105],[132,142,167,105],[],[150],[147,148],[],[],[146],[146,152,151],[146],[153,148,154],[155,147],[],[],[136,133],[],[135],[],[],[107],[164,163],[],[177,175,174,11,7,176],[168,166,143],[],[],[204,207,206,203,205,7],[178,170],[179,20,172,171,180],[164,172,181],[173,182],[193],[175],[],[],[173,172,169],[171],[],[22],[],[186,184,187,183,185,191],[],[],[188],[192,189],[190],[],[],[],[252,254,257,256,258,253,6,11,255,7],[],[194,110,195],[],[192],[211,197],[198,221],[199,214,200,157,208],[200,222],[223,201],[202,237],[246],[7],[205],[],[210,167],[200,196,202,197,201],[167],[167,198,208],[],[217],[213],[],[212],[212,214,198,209],[215],[212,218,219],[212],[213,220],[],[199],[110,215,209],[228],[225,216],[],[224],[224,226],[224,230,229],[224],[231,232],[],[],[234,216,235],[225,236],[],[],[242,240,239,243,238,226,241],[],[],[],[192],[192],[245,244],[],[],[110,227,247],[],[265,249],[250,268],[251,273],[278],[253],[],[188,262],[189,263],[190,264],[],[250,249,248,251],[188],[189],[190],[],[],[],[267,266,106],[],[107,105],[110,259,269],[270,271],[],[114,272],[],[260,110,274],[276,275],[],[114,277],[],[261,110,279],[280,281],[],[114,282],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Binary Expr EQUALS ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter Float val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Primitive Type int ","Simple Name val ","Name Expr val ","Class Or Interface Type Float ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Declaration Throws ","Method Call Expr ","Simple Name writeVal ","Method Call Expr ","Simple Name val ","Method Declaration Throws ","Simple Name floatValue ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeVal ","Parameter String val ","Class Or Interface Type IOException ","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Marker Annotation Expr @Override ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","ThisExpr","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-float","callMethodNameReferTo":{"14":"srcmainjavacomjsoniteroutputStreamImplNumber.java-writeFloat-StreamImplNumber-JsonStream-float"},"num":19,"succs":[[9,3,7,6,1,4,5,2],[2],[],[4],[],[11,12],[8],[],[],[13],[11],[],[],[14],[17,15,10,16],[],[],[18],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter float val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Primitive Type float ","Expression Stmt ","Method Call Expr ","Name Expr StreamImplNumber ","Simple Name writeFloat ","This Expr ","ThisExpr"]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-Double","callMethodNameReferTo":{},"num":283,"succs":[[1,3,19],[20,2,3,21,15],[23],[4],[26],[14,10,12,9,6,11,8,7],[7],[],[9],[],[18,16],[13],[],[],[0],[16],[],[16,1,15],[],[2],[],[22],[],[25,24],[],[35,33,6,11,34,32,7],[27,28,30],[],[31,29,17],[],[65,66,68,67,11,6,64,7],[],[33],[],[],[36],[37],[40,47,38,41,42,39],[],[43,48,49],[51,44,52],[54,55,45],[46,58,57],[],[],[],[],[91,93,90,87,89,6,92,11,88,86,7],[],[50],[],[],[53],[],[],[56],[],[],[56],[72,62,60],[20,73,69,61,62],[74],[63],[76],[65],[],[29,71],[],[59],[29],[69,29,60],[],[61],[22],[25,75],[],[70,79,77,78],[],[],[80],[],[82,102],[108,83],[84,115],[120,85],[125],[87],[],[43,98],[44,99],[100,45],[46,101],[],[82,84,85,81,83],[43],[44],[45],[46],[],[],[],[],[106,103,104],[],[107,105],[],[138,139,140,137,11,141,7],[],[110,109,94],[111,112],[],[],[113,114],[],[],[110,116,95],[118,117],[],[114,119],[],[110,121,96],[123,122],[],[114,124],[],[110,126,97],[127,128],[],[129,114],[],[145,131],[132,156],[142,149,133,157],[134,158],[136,161,159,160,135],[136,162],[165],[138],[],[144,105],[],[130,131],[105],[132,142,167,105],[],[150],[147,148],[],[],[146],[146,152,151],[146],[153,148,154],[155,147],[],[],[136,133],[],[135],[],[],[107],[164,163],[],[177,175,174,11,7,176],[168,166,143],[],[],[204,207,206,203,205,7],[178,170],[179,20,172,171,180],[164,172,181],[173,182],[193],[175],[],[],[173,172,169],[171],[],[22],[],[186,184,187,183,185,191],[],[],[188],[192,189],[190],[],[],[],[252,254,257,256,258,253,6,11,255,7],[],[194,110,195],[],[192],[211,197],[198,221],[199,214,200,157,208],[200,222],[223,201],[202,237],[246],[7],[205],[],[210,167],[200,196,202,197,201],[167],[167,198,208],[],[217],[213],[],[212],[212,214,198,209],[215],[212,218,219],[212],[213,220],[],[199],[110,215,209],[228],[225,216],[],[224],[224,226],[224,230,229],[224],[231,232],[],[],[234,216,235],[225,236],[],[],[242,240,239,243,238,226,241],[],[],[],[192],[192],[245,244],[],[],[110,227,247],[],[265,249],[250,268],[251,273],[278],[253],[],[188,262],[189,263],[190,264],[],[250,249,248,251],[188],[189],[190],[],[],[],[267,266,106],[],[107,105],[110,259,269],[270,271],[],[114,272],[],[260,110,274],[276,275],[],[114,277],[],[261,110,279],[280,281],[],[114,282],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter Double val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Name Expr val ","Class Or Interface Type Double ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Declaration Throws ","Method Call Expr ","Simple Name writeVal ","Method Call Expr ","Simple Name val ","Method Declaration Throws ","Simple Name doubleValue ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeVal ","Parameter String val ","Class Or Interface Type IOException ","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Marker Annotation Expr @Override ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","ThisExpr","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-double","callMethodNameReferTo":{"14":"srcmainjavacomjsoniteroutputStreamImplNumber.java-writeDouble-StreamImplNumber-JsonStream-double"},"num":19,"succs":[[6,1,7,3,5,4,2,9],[2],[],[4],[],[12,11],[8],[],[],[13],[11],[],[],[14],[15,10,16,17],[],[],[18],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter double val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Primitive Type double ","Expression Stmt ","Method Call Expr ","Name Expr StreamImplNumber ","Simple Name writeDouble ","This Expr ","ThisExpr"]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-Any","callMethodNameReferTo":{},"num":18,"succs":[[9,3,4,6,1,2,5,7],[2],[],[4],[],[11,12],[8],[],[],[13],[11],[],[],[14],[15,16,10],[],[17],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Simple Name head ","Simple Name writeVal ","Parameter Any val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Simple Name val ","Class Or Interface Type Any ","Expression Stmt ","Method Call Expr ","Simple Name writeTo ","This Expr ","ThisExpr"]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeNull-JsonStream-","callMethodNameReferTo":{},"num":236,"succs":[[8,4,1,5,6,3,2],[2],[],[4],[],[7],[],[],[9],[10],[13,20,11,15,14,12],[],[16,21,22],[24,17,25],[27,28,18],[19,31,30],[],[],[],[],[42,44,41,38,40,43,5,1,39,37,2],[],[23],[],[],[26],[],[],[29],[],[],[29],[33,53],[59,34],[35,66],[71,36],[76],[38],[],[16,49],[17,50],[51,18],[19,52],[],[33,35,36,32,34],[16],[17],[18],[19],[],[],[],[],[57,54,55],[],[58,56],[],[89,90,91,88,5,92,2],[],[61,60,45],[62,63],[],[],[64,65],[],[],[61,67,46],[68,69],[],[65,70],[],[61,72,47],[74,73],[],[65,75],[],[61,77,48],[78,79],[],[80,65],[],[96,82],[83,107],[93,100,84,108],[85,109],[87,112,110,111,86],[87,113],[116],[89],[],[56,95],[],[81,82],[56],[83,93,118,56],[],[101],[98,99],[],[],[97],[97,103,102],[97],[99,104,105],[106,98],[],[],[87,84],[],[86],[],[],[58],[115,114],[],[128,126,125,5,2,127],[117,119,94],[],[],[157,159,160,156,158,2],[129,121],[130,131,123,122,132],[115,123,134],[124,135],[146],[126],[],[],[124,123,120],[122],[],[],[133],[],[],[139,137,140,136,138,144],[],[],[141],[145,142],[143],[],[],[],[205,210,207,209,211,206,1,5,208,2],[],[147,61,148],[],[145],[164,150],[151,174],[152,167,153,108,161],[153,175],[176,154],[155,190],[199],[2],[158],[],[163,118],[153,149,155,150,154],[118],[118,151,161],[],[170],[166],[],[165],[165,167,151,162],[168],[165,171,172],[165],[166,173],[],[152],[61,168,162],[181],[178,169],[],[177],[177,179],[177,183,182],[177],[184,185],[],[],[187,169,188],[178,189],[],[],[193,195,192,196,191,194,179],[],[],[],[145],[145],[198,197],[],[],[61,180,200],[],[218,202],[203,221],[204,226],[231],[206],[],[141,215],[142,216],[143,217],[],[203,202,204,201],[141],[142],[143],[],[],[],[220,219,57],[],[58,56],[61,212,222],[223,224],[],[65,225],[],[213,61,227],[229,228],[],[65,230],[],[214,61,232],[233,234],[],[65,235],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeNull ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeEmptyObject-JsonStream-","callMethodNameReferTo":{},"num":209,"succs":[[3,4,6,1,5,8,2],[2],[],[4],[],[7],[],[],[9],[10],[16,12,13,11],[],[14,18,17],[21,20,15],[],[],[29,26,28,31,30,5,1,27,2],[],[19],[],[],[22],[],[36,24],[42,25],[49],[27],[],[14,34],[35,15],[],[24,23,25],[14],[15],[],[],[37,40,38],[],[41,39],[],[62,63,64,61,5,65,2],[],[44,32,43],[46,45],[],[],[48,47],[],[],[50,44,33],[51,52],[],[48,53],[],[69,55],[56,80],[66,73,57,81],[58,82],[60,85,83,84,59],[60,86],[89],[62],[],[68,39],[],[54,55],[39],[56,66,91,39],[],[74],[71,72],[],[],[70],[70,76,75],[70],[72,77,78],[79,71],[],[],[60,57],[],[59],[],[],[41],[88,87],[],[101,99,98,5,2,100],[90,92,67],[],[],[130,133,132,129,131,2],[102,94],[103,104,96,95,105],[88,96,107],[97,108],[119],[99],[],[],[97,96,93],[95],[],[],[106],[],[],[112,110,113,111,109,117],[],[],[114],[118,115],[116],[],[],[],[178,180,183,184,182,179,5,1,181,2],[],[120,44,121],[],[118],[137,123],[124,147],[125,140,126,81,134],[126,148],[149,127],[163,128],[172],[2],[131],[],[136,91],[126,122,128,123,127],[91],[91,124,134],[],[143],[139],[],[138],[138,140,124,135],[141],[138,144,145],[138],[139,146],[],[125],[44,141,135],[154],[151,142],[],[150],[150,152],[150,156,155],[150],[157,158],[],[],[160,142,161],[151,162],[],[],[168,166,165,169,164,167,152],[],[],[],[118],[118],[171,170],[],[],[44,153,173],[],[191,175],[176,194],[177,199],[204],[179],[],[114,188],[115,189],[116,190],[],[176,175,177,174],[114],[115],[116],[],[],[],[193,192,40],[],[41,39],[44,185,195],[196,197],[],[48,198],[],[186,44,200],[202,201],[],[48,203],[],[187,44,205],[206,207],[],[48,208],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeEmptyObject ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Method Declaration ","Primitive Type byte ","Char Literal Expr '{' ","'{'","Primitive Type byte ","Char Literal Expr '}' ","'}'","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Simple Name as ","Primitive Type byte ","Primitive Type byte ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Expression Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr encoder ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeEmptyArray-JsonStream-","callMethodNameReferTo":{},"num":209,"succs":[[4,6,1,5,8,2,3],[2],[],[4],[],[7],[],[],[9],[10],[12,16,11,13],[],[14,18,17],[21,15,20],[],[],[29,26,28,31,30,5,1,27,2],[],[19],[],[],[22],[],[36,24],[42,25],[49],[27],[],[14,34],[35,15],[],[24,23,25],[14],[15],[],[],[37,40,38],[],[41,39],[],[62,63,64,61,5,65,2],[],[44,32,43],[46,45],[],[],[48,47],[],[],[50,44,33],[51,52],[],[48,53],[],[69,55],[56,80],[66,73,57,81],[58,82],[60,85,83,84,59],[60,86],[89],[62],[],[68,39],[],[54,55],[39],[56,66,91,39],[],[74],[71,72],[],[],[70],[70,76,75],[70],[72,77,78],[79,71],[],[],[60,57],[],[59],[],[],[41],[88,87],[],[101,99,98,5,2,100],[90,92,67],[],[],[130,133,132,129,131,2],[102,94],[103,104,96,95,105],[88,96,107],[97,108],[119],[99],[],[],[97,96,93],[95],[],[],[106],[],[],[112,110,113,111,109,117],[],[],[114],[118,115],[116],[],[],[],[178,180,183,184,182,179,5,1,181,2],[],[120,44,121],[],[118],[137,123],[124,147],[125,140,126,81,134],[126,148],[149,127],[163,128],[172],[2],[131],[],[136,91],[126,122,128,123,127],[91],[91,124,134],[],[143],[139],[],[138],[138,140,124,135],[141],[138,144,145],[138],[139,146],[],[125],[44,141,135],[154],[151,142],[],[150],[150,152],[150,156,155],[150],[157,158],[],[],[160,142,161],[151,162],[],[],[168,166,165,169,164,167,152],[],[],[],[118],[118],[171,170],[],[],[44,153,173],[],[191,175],[176,194],[177,199],[204],[179],[],[114,188],[115,189],[116,190],[],[176,175,177,174],[114],[115],[116],[],[],[],[193,192,40],[],[41,39],[44,185,195],[196,197],[],[48,198],[],[186,44,200],[202,201],[],[48,203],[],[187,44,205],[206,207],[],[48,208],[]],"attribute":["Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeEmptyArray ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Method Declaration ","Primitive Type byte ","Primitive Type int ","'['","Primitive Type byte ","Char Literal Expr ']' ","']'","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Simple Name as ","Primitive Type byte ","Primitive Type byte ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Expression Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr encoder ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeArrayStart-JsonStream-","callMethodNameReferTo":{},"num":223,"succs":[[11,1],[19],[10,5,6,8,3,7,4],[4],[],[6],[],[9],[],[],[0,1],[13,14,12],[],[],[16,15],[17,18],[],[],[30,32,31,3],[21,23,20],[],[22,24],[],[49,53,51,52,7,3,4,50],[],[26,33],[36,28,27,37,35],[18,28,39,34],[40,29],[18,46,39],[31],[],[28,25,29],[27],[26],[],[],[38],[],[],[42,41,43],[],[],[45,44],[],[],[],[48,56],[62],[50],[],[22,55],[],[47,48],[22],[],[57,60,58],[],[61,59],[],[78,79,80,77,7,81,4],[],[63,42,64],[66,65],[54,69],[],[68,67],[],[],[],[85,71],[72,96],[82,89,73,97],[74,98],[76,101,99,100,75],[76,102],[105],[78],[],[59,84],[],[70,71],[59],[72,82,107,59],[],[90],[87,88],[],[],[86],[86,92,91],[86],[93,88,94],[95,87],[],[],[76,73],[],[75],[],[],[61],[104,103],[],[117,115,114,7,4,116],[106,108,83],[],[],[144,146,147,143,145,4],[118,110],[119,120,112,111,121],[104,112,39],[113,122],[133],[115],[],[],[113,112,109],[111],[],[],[38],[126,124,127,125,123,131],[],[],[128],[132,129],[130],[],[],[],[192,197,194,196,198,193,7,3,195,4],[],[134,42,135],[],[132],[151,137],[138,161],[139,154,140,97,148],[140,162],[163,141],[142,177],[186],[4],[145],[],[150,107],[140,136,142,137,141],[107],[107,138,148],[],[157],[153],[],[152],[152,154,138,149],[155],[152,158,159],[152],[153,160],[],[139],[42,155,149],[168],[165,156],[],[164],[164,166],[164,170,169],[164],[171,172],[],[],[174,156,175],[165,176],[],[],[180,182,179,183,178,181,166],[],[],[],[132],[132],[185,184],[],[],[42,167,187],[],[205,189],[190,208],[191,213],[218],[193],[],[128,202],[129,203],[130,204],[],[190,189,191,188],[128],[129],[130],[],[],[],[207,206,60],[],[61,59],[42,199,209],[210,211],[],[68,212],[],[200,42,214],[216,215],[],[68,217],[],[201,42,219],[220,221],[],[68,222],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeArrayStart ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Assign Expr PLUS ","Name Expr indention ","PLUS","Method Call Expr ","Method Call Expr ","Simple Name indentionStep ","Simple Name currentConfig ","Method Declaration ","Method Call Expr ","Simple Name write ","Char Literal Expr '[' ","Simple Name b ","Method Declaration ","'['","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Assign Expr ASSIGN ","Name Expr configCache ","ASSIGN","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache ","Name Expr JsonStream ","Expression Stmt ","Void Type ","Simple Name write ","Parameter int b ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Primitive Type byte ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeMore-JsonStream-","callMethodNameReferTo":{},"num":265,"succs":[[1,11],[17],[8,6,5,3,7,10,4],[4],[],[6],[],[9],[],[],[1,0],[13,12,15],[],[14,16],[],[26,22,24,25,3,7,4,23],[],[19,18],[],[46,45,47,3,7,44],[21,29],[35],[23],[],[14,28],[],[20,21],[14],[],[30,33,31],[],[34,32],[],[63,64,65,62,7,66,4],[],[36,37,38],[40,39],[],[27,43],[],[42,41],[],[],[],[45],[],[],[48],[49],[51,53,50],[],[54,52],[],[109,105,107,106,108,7,110],[],[70,56],[57,81],[67,74,58,82],[59,83],[61,86,84,85,60],[61,87],[90],[63],[],[32,69],[],[55,56],[32],[57,67,92,32],[],[75],[72,73],[],[],[71],[71,77,76],[71],[73,78,79],[80,72],[],[],[61,58],[],[60],[],[],[34],[89,88],[],[159,161,158,7,4,160],[91,93,68],[],[],[186,188,189,105,187,4],[95,113],[116,114,96,115,97],[53,117,97],[118,98],[122,99],[100,130],[104,132,101,102],[102,136],[103,139,140,141],[104,146],[135,42,102],[4],[107],[],[52,112],[],[100,94,98,99,97],[52],[],[96],[],[],[54],[],[15,120,119],[],[14,121],[],[127],[124,111],[],[123,32],[125,123],[123,128,129],[123],[124,111,79],[125,131,33],[],[103],[134,135],[],[134,133],[134,138,137],[134],[54],[133,126,82],[],[143,142,82],[],[144,145],[],[],[148,37,147],[150,149],[152],[],[42,151],[],[],[162,154],[163,115,156,155,164],[89,156,117],[157,166],[176],[159],[],[],[157,156,153],[155],[],[165],[],[170,168,171,169,167,175],[],[],[172],[54,173],[174],[],[],[],[234,236,239,238,240,235,7,3,237,4],[177,37,178],[],[54],[193,180],[181,203],[182,196,183,82,190],[183,204],[205,184],[185,219],[228],[187],[],[192,92],[183,179,185,180,184],[92],[92,181,190],[],[199],[195],[],[194],[194,196,181,191],[197],[194,200,201],[194],[195,202],[],[182],[37,197,191],[210],[207,198],[],[206],[206,208],[206,212,211],[206],[213,214],[],[],[216,198,217],[207,218],[],[],[222,224,221,225,220,223,208],[],[],[],[54],[54],[227,226],[],[],[37,209,229],[],[247,231],[232,250],[233,255],[260],[235],[],[172,244],[173,245],[174,246],[],[232,231,233,230],[172],[173],[174],[],[],[],[249,248,33],[],[34,32],[37,241,251],[252,253],[],[42,254],[],[242,37,256],[258,257],[],[42,259],[],[243,37,261],[262,263],[],[42,264],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeMore ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Method Call Expr ","Simple Name write ","Char Literal Expr ',' ","Simple Name b ","Method Declaration ","','","Method Call Expr ","Simple Name writeIndention ","Method Declaration Throws ","Name Expr JsonStream ","Expression Stmt ","Void Type ","Simple Name write ","Parameter int b ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","ASSIGN","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Primitive Type byte ","Void Type ","Simple Name writeIndention ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name writeIndention ","Integer Literal Expr Zero  ","Simple Name delta ","Method Declaration Throws ","Zero IntegerLiteralExpr","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr AND ","Expression Stmt ","Unary Expr ++ ","PRIVATE","Void Type ","Simple Name writeIndention ","Parameter int delta ","Class Or Interface Type IOException ","Block Stmt ","Name Expr delta ","Primitive Type int ","Block Stmt ","Name Expr indention ","EQUALS","Integer Literal Expr Zero  ","ReturnStmt","Method Call Expr ","Simple Name write ","Char Literal Expr 'n' ","'n'","Variable Declaration Expr ","Simple Name toWrite ","Name Expr indention ","Name Expr toWrite ","Name Expr toWrite ","Variable Declarator int toWrite = ","Primitive Type int ","Binary Expr MINUS ","Method Call Expr ","Simple Name ensure ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr LESS ","AND","Binary Expr LESS ","Name Expr count ","Field Access Expr ","Name Expr buf ","Simple Name length ","Assign Expr ASSIGN ","Array Access Expr count++ ","Char Literal Expr ' ' ","Name Expr val ","Unary Expr ++ ","Name Expr count ","' '","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeIndention-JsonStream-","callMethodNameReferTo":{},"num":252,"succs":[[5,3,7,4,1,2],[84],[3],[],[6],[],[],[8],[9],[11,13,10],[],[14,12],[],[30,26,27,28,29,4,31],[],[16,34],[37,35,17,36,18],[13,38,18],[39,19],[45,20],[21,54],[25,58,22,23],[23,62],[24,65,66,67],[25,74],[61,73,23],[84],[28],[],[12,33],[],[21,15,19,18,20],[12],[],[17],[],[],[14],[],[43,41,40],[],[42,44],[],[89,85,87,88,4,1,84,86],[],[50],[47,32],[],[46,56],[48,46],[46,51,52],[46],[47,32,53],[],[48,55,57],[],[],[111,112,113,110,4,114,84],[24],[60,61],[],[60,59],[60,64,63],[60],[14],[59,49,68],[],[70,69,68],[],[],[71,72],[],[],[],[77,76,75],[79,78],[],[81],[],[73,80],[],[],[83,92],[96],[],[86],[],[42,91],[],[82,83],[42],[],[93,57,94],[],[95,56],[],[97,76,98],[100,99],[90,102],[],[73,101],[],[],[118,104],[105,128],[115,122,106,68],[107,129],[109,132,130,131,108],[109,133],[136],[111],[],[117,56],[],[103,104],[56],[105,115,138,56],[],[123],[120,121],[],[],[119],[119,125,124],[119],[126,121,53],[127,120],[],[109,106],[108],[],[],[95],[135,134],[],[146,148,145,4,84,147],[137,139,116],[],[],[173,176,175,26,174,84],[149,141],[150,36,143,142,151],[135,143,38],[144,153],[163],[146],[],[],[144,143,140],[142],[],[152],[],[157,155,158,156,154,162],[],[],[159],[14,160],[161],[],[],[],[221,223,226,227,225,222,4,1,224,84],[164,76,165],[],[14],[180,167],[168,190],[169,183,170,68,177],[170,191],[192,171],[206,172],[215],[174],[],[179,138],[170,166,172,167,171],[138],[138,168,177],[],[186],[182],[],[181],[181,183,168,178],[184],[181,187,188],[181],[182,189],[],[169],[76,184,178],[197],[194,185],[],[193],[193,195],[193,199,198],[193],[200,201],[],[],[203,185,204],[194,205],[],[],[209,211,208,212,207,210,195],[],[],[],[14],[14],[214,213],[],[],[76,196,216],[],[234,218],[219,237],[220,242],[247],[222],[],[159,231],[160,232],[161,233],[],[219,218,220,217],[159],[160],[161],[],[],[],[236,235,57],[],[95,56],[76,228,238],[239,240],[],[73,241],[],[229,76,243],[245,244],[],[73,246],[],[230,76,248],[249,250],[],[73,251],[]],"attribute":["Method Declaration Throws ","PUBLIC","Void Type ","Simple Name writeIndention ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name writeIndention ","Integer Literal Expr Zero  ","Simple Name delta ","Method Declaration Throws ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr AND ","Expression Stmt ","Unary Expr ++ ","PRIVATE","Void Type ","Simple Name writeIndention ","Parameter int delta ","Class Or Interface Type IOException ","Block Stmt ","Name Expr delta ","Primitive Type int ","Block Stmt ","Name Expr indention ","EQUALS","Integer Literal Expr Zero  ","ReturnStmt","Method Call Expr ","Simple Name write ","Char Literal Expr 'n' ","Simple Name b ","Method Declaration ","'n'","Variable Declaration Expr ","Simple Name toWrite ","Name Expr indention ","Name Expr toWrite ","Name Expr toWrite ","Variable Declarator int toWrite = ","Primitive Type int ","Binary Expr MINUS ","MINUS","Method Call Expr ","Simple Name ensure ","Simple Name minimal ","Method Declaration Throws ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr LESS ","AND","Binary Expr LESS ","LESS","Name Expr count ","Field Access Expr ","Name Expr buf ","Simple Name length ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","ASSIGN","Char Literal Expr ' ' ","Name Expr val ","Unary Expr ++ ","Name Expr count ","' '","Name Expr JsonStream ","Expression Stmt ","FINAL","Void Type ","Simple Name write ","Parameter int b ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Primitive Type byte ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","Simple Name length ","Block Stmt ","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeIndention-JsonStream-int","callMethodNameReferTo":{},"num":243,"succs":[[1,23],[26,24,25,2,3],[11,28,3],[29,4],[35,5],[6,44],[10,48,7,8],[8,52],[9,55,56,57],[10,64],[51,63,8],[17,12,13,14,15,16,19],[75],[14],[],[21,22],[18],[],[],[6,0,4,3,5],[21],[],[],[2],[],[],[27],[],[],[33,31,30],[],[32,34],[],[76,80,78,79,74,16,75,77],[],[40],[37,20],[],[36,46],[38,36],[36,41,42],[36],[37,20,43],[],[38,45,47],[],[],[102,103,104,101,16,105,75],[9],[50,51],[],[50,49],[50,54,53],[50],[27],[49,39,58],[],[60,59,58],[],[],[61,62],[],[],[],[67,66,65],[69,68],[],[71],[],[63,70],[],[],[73,83],[87],[75],[],[77],[],[32,82],[],[72,73],[32],[],[84,47,85],[],[86,46],[],[66,88,89],[91,90],[81,93],[],[63,92],[],[],[109,95],[96,119],[106,113,97,58],[98,120],[100,123,121,122,99],[100,124],[127],[102],[],[46,108],[],[94,95],[46],[96,106,129,46],[],[114],[111,112],[],[],[110],[110,116,115],[110],[112,117,43],[118,111],[],[100,97],[99],[],[],[86],[126,125],[],[137,139,136,16,75,138],[128,130,107],[],[],[164,167,166,12,165,75],[140,132],[141,25,134,133,142],[126,134,28],[135,144],[154],[137],[],[],[135,134,131],[133],[],[143],[],[148,146,149,147,145,153],[],[],[150],[27,151],[152],[],[],[],[212,217,214,216,218,213,16,74,215,75],[155,66,156],[],[27],[171,158],[159,181],[160,174,161,58,168],[161,182],[183,162],[197,163],[206],[165],[],[170,129],[161,157,163,158,162],[129],[129,159,168],[],[177],[173],[],[172],[172,174,159,169],[175],[172,178,179],[172],[173,180],[],[160],[66,175,169],[188],[185,176],[],[184],[184,186],[184,190,189],[184],[191,192],[],[],[194,176,195],[185,196],[],[],[200,202,199,203,198,201,186],[],[],[],[27],[27],[205,204],[],[],[66,187,207],[],[225,209],[210,228],[211,233],[238],[213],[],[150,222],[151,223],[152,224],[],[210,209,208,211],[150],[151],[152],[],[],[],[227,226,47],[],[86,46],[66,219,229],[230,231],[],[63,232],[],[220,66,234],[236,235],[],[63,237],[],[221,66,239],[240,241],[],[63,242],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr AND ","Expression Stmt ","Unary Expr ++ ","Method Declaration Throws ","PRIVATE","Void Type ","Simple Name writeIndention ","Parameter int delta ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr delta ","Simple Name delta ","Primitive Type int ","Block Stmt ","Name Expr indention ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","ReturnStmt","Method Call Expr ","Simple Name write ","Char Literal Expr 'n' ","Simple Name b ","Method Declaration ","'n'","Variable Declaration Expr ","Simple Name toWrite ","Name Expr indention ","Name Expr toWrite ","Name Expr toWrite ","Variable Declarator int toWrite = ","Primitive Type int ","Binary Expr MINUS ","MINUS","Method Call Expr ","Simple Name ensure ","Simple Name minimal ","Method Declaration Throws ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr LESS ","AND","Binary Expr LESS ","LESS","Name Expr count ","Field Access Expr ","Name Expr buf ","Simple Name length ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","ASSIGN","Char Literal Expr ' ' ","Name Expr val ","Unary Expr ++ ","Name Expr count ","' '","Name Expr JsonStream ","Expression Stmt ","PUBLIC","FINAL","Void Type ","Simple Name write ","Parameter int b ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Primitive Type byte ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","Simple Name length ","Block Stmt ","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeArrayEnd-JsonStream-","callMethodNameReferTo":{},"num":291,"succs":[[1,13],[24,2],[3,28],[31],[12,8,7,5,9,10,6],[6],[],[8],[],[11],[],[],[3,1,2,0],[17],[26,15],[],[14,15],[18,19,15],[15],[20,21],[23,22],[],[],[42,44,43,5],[14,27,25],[],[],[74,70,71,72,73,9,75],[16,29,30],[],[],[32,35,33],[],[34,36],[],[125,129,127,128,5,9,6,126],[],[38,45],[48,40,39,47,49],[23,40,51,46],[52,41],[23,58,51],[43],[],[40,37,41],[39],[38],[],[],[50],[],[],[54,53,55],[],[],[57,56],[],[],[],[60,78],[81,79,61,80,62],[27,51,62],[83,63],[87,64],[65,96],[69,100,66,67],[67,104],[68,107,108,109],[69,116],[103,115,67],[6],[72],[],[26,77],[],[65,59,63,62,64],[26],[],[61],[],[],[82],[],[35,85,84],[],[34,86],[],[92],[89,76],[],[88,98],[90,88],[88,93,94],[88],[89,76,95],[],[90,97,99],[],[],[151,152,153,150,9,154,6],[68],[102,103],[],[102,101],[102,106,105],[102],[82],[101,91,110],[],[112,111,110],[],[],[113,114],[],[],[],[118,54,117],[120,119],[122],[],[115,121],[],[],[124,132],[136],[126],[],[34,131],[],[123,124],[34],[],[133,99,134],[],[135,98],[],[54,137,138],[140,139],[130,142],[],[115,141],[],[],[158,144],[145,168],[155,162,146,110],[147,169],[149,172,170,171,148],[149,173],[176],[151],[],[157,98],[],[143,144],[98],[145,155,178,98],[],[163],[160,161],[],[],[159],[159,165,164],[159],[166,161,95],[167,160],[],[149,146],[148],[],[],[135],[175,174],[],[186,188,185,9,6,187],[179,177,156],[],[],[212,214,215,70,213,6],[189,181],[190,80,183,182,191],[175,183,51],[184,192],[202],[186],[],[],[184,183,180],[182],[],[50],[196,194,197,195,193,201],[],[],[198],[82,199],[200],[],[],[],[260,265,262,264,266,261,9,5,263,6],[203,54,204],[],[82],[219,206],[207,229],[208,222,209,110,216],[209,230],[231,210],[211,245],[254],[213],[],[218,178],[209,205,211,206,210],[178],[178,207,216],[],[225],[221],[],[220],[220,222,207,217],[223],[220,226,227],[220],[221,228],[],[208],[54,223,217],[236],[233,224],[],[232],[232,234],[232,238,237],[232],[239,240],[],[],[242,224,243],[233,244],[],[],[248,250,247,251,246,249,234],[],[],[],[82],[82],[253,252],[],[],[54,235,255],[],[273,257],[258,276],[259,281],[286],[261],[],[198,270],[199,271],[200,272],[],[258,257,259,256],[198],[199],[200],[],[],[],[275,274,99],[],[135,98],[54,267,277],[278,279],[],[115,280],[],[268,54,282],[284,283],[],[115,285],[],[269,54,287],[288,289],[],[115,290],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeArrayEnd ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr indentionStep ","Simple Name indentionStep ","Name Expr indentionStep ","Variable Declarator int indentionStep = ","Primitive Type int ","Method Call Expr ","Method Call Expr ","Simple Name indentionStep ","Simple Name currentConfig ","Method Declaration ","Method Call Expr ","Simple Name writeIndention ","Simple Name delta ","Method Declaration Throws ","Assign Expr MINUS ","Name Expr indention ","MINUS","Method Call Expr ","Simple Name write ","Char Literal Expr ']' ","Simple Name b ","Method Declaration ","']'","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Assign Expr ASSIGN ","Name Expr configCache ","ASSIGN","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr AND ","Expression Stmt ","Unary Expr ++ ","PRIVATE","Void Type ","Simple Name writeIndention ","Parameter int delta ","Class Or Interface Type IOException ","Block Stmt ","Name Expr delta ","Primitive Type int ","Block Stmt ","Name Expr indention ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name write ","Char Literal Expr 'n' ","'n'","Variable Declaration Expr ","Simple Name toWrite ","Name Expr indention ","Name Expr toWrite ","Name Expr toWrite ","Variable Declarator int toWrite = ","Primitive Type int ","Binary Expr MINUS ","MINUS","Method Call Expr ","Simple Name ensure ","Simple Name minimal ","Method Declaration Throws ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr LESS ","AND","Binary Expr LESS ","LESS","Name Expr count ","Field Access Expr ","Name Expr buf ","Simple Name length ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Char Literal Expr ' ' ","Name Expr val ","Unary Expr ++ ","Name Expr count ","' '","Name Expr JsonStream ","Expression Stmt ","Void Type ","Simple Name write ","Parameter int b ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Primitive Type byte ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","Simple Name length ","Block Stmt ","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeObjectStart-JsonStream-","callMethodNameReferTo":{},"num":229,"succs":[[1,12],[2,22],[25],[6,9,11,4,8,5,7],[5],[],[7],[],[10],[],[],[1,2,0],[15],[14],[],[16,14,17],[14],[18,19],[21,20],[],[],[37,36,38,4],[24,13,23],[],[],[29,27,26],[],[28,30],[],[55,59,57,58,8,4,5,56],[],[32,39],[42,34,33,43,41],[21,34,45,40],[46,35],[21,52,45],[37],[],[34,31,35],[33],[32],[],[],[44],[],[],[48,47,49],[],[],[51,50],[],[],[],[54,62],[68],[56],[],[28,61],[],[53,54],[28],[],[63,66,64],[],[67,65],[],[84,85,86,83,8,87,5],[],[69,48,70],[72,71],[60,75],[],[74,73],[],[],[],[91,77],[78,102],[88,95,79,103],[80,104],[82,107,105,106,81],[82,108],[111],[84],[],[90,65],[],[76,77],[65],[78,88,113,65],[],[96],[93,94],[],[],[92],[92,98,97],[92],[94,99,100],[101,93],[],[],[82,79],[],[81],[],[],[67],[110,109],[],[123,121,120,8,5,122],[112,114,89],[],[],[150,152,153,149,151,5],[124,116],[125,126,118,117,127],[110,118,45],[119,128],[139],[121],[],[],[119,118,115],[117],[],[],[44],[132,130,133,131,129,137],[],[],[134],[138,135],[136],[],[],[],[198,203,200,202,204,199,8,4,201,5],[],[140,48,141],[],[138],[157,143],[144,167],[145,160,146,103,154],[146,168],[169,147],[148,183],[192],[5],[151],[],[156,113],[146,142,148,143,147],[113],[113,144,154],[],[163],[159],[],[158],[158,160,144,155],[161],[158,164,165],[158],[159,166],[],[145],[48,161,155],[174],[171,162],[],[170],[170,172],[170,176,175],[170],[177,178],[],[],[180,162,181],[171,182],[],[],[186,188,185,189,184,187,172],[],[],[],[138],[138],[191,190],[],[],[48,173,193],[],[211,195],[196,214],[197,219],[224],[199],[],[134,208],[135,209],[136,210],[],[196,195,194,197],[134],[135],[136],[],[],[],[213,212,66],[],[67,65],[48,205,215],[216,217],[],[74,218],[],[206,48,220],[222,221],[],[74,223],[],[207,48,225],[226,227],[],[74,228],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeObjectStart ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr indentionStep ","Simple Name indentionStep ","Variable Declarator int indentionStep = ","Primitive Type int ","Method Call Expr ","Method Call Expr ","Simple Name indentionStep ","Simple Name currentConfig ","Method Declaration ","Assign Expr PLUS ","Name Expr indention ","PLUS","Method Call Expr ","Simple Name write ","Char Literal Expr '{' ","Simple Name b ","Method Declaration ","'{'","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Assign Expr ASSIGN ","Name Expr configCache ","ASSIGN","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache ","Name Expr JsonStream ","Expression Stmt ","Void Type ","Simple Name write ","Parameter int b ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Primitive Type byte ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeObjectField-JsonStream-String","callMethodNameReferTo":{},"num":343,"succs":[[19,1],[4,2,23],[4,24,26,25,3],[28],[5],[41],[15,10,13,9,12,7,11,8],[8],[],[10],[],[18,17],[14],[],[],[1,0],[21,17],[],[],[20,16,22],[],[],[52,53,55,54,12,7,51,8],[3],[],[],[27],[],[29,31,34,30],[],[32,36,35],[39,33,38],[],[],[77,74,76,79,78,7,12,75,8],[],[37],[],[],[40],[],[42,45,43],[],[44,37],[],[108,104,106,107,7,12,8,105],[59,49,47],[60,61,56,48,49],[63],[50],[66],[52],[],[21,58],[],[46],[21],[56,21,47],[],[48],[],[62],[],[65,64],[],[124,122,7,12,123,8,121],[57,69,67,68],[],[],[70],[],[84,72],[90,73],[97],[75],[],[32,82],[83,33],[],[72,71,73],[32],[33],[],[],[85,88,86],[],[89,87],[],[156,157,158,155,12,159,8],[],[92,80,91],[94,93],[],[],[96,95],[],[],[98,92,81],[99,100],[],[96,101],[],[103,111],[114],[105],[],[44,110],[],[102,103],[44],[],[112,88,113],[],[89,87],[115,92,116],[118,117],[109,120],[],[96,119],[],[],[122],[],[],[125],[126],[129,136,127,131,130,128],[],[132,137,138],[140,133,141],[143,144,134],[135,147,146],[],[],[],[],[196,198,195,192,194,197,12,7,193,191,8],[],[139],[],[],[142],[],[],[145],[],[],[145],[163,149],[150,174],[160,167,151,175],[152,176],[154,178,177,25,153],[154,179],[182],[156],[],[162,87],[],[148,149],[87],[150,160,184,87],[],[168],[165,166],[],[],[164],[164,170,169],[164],[166,171,172],[173,165],[],[],[154,151],[],[153],[],[89],[181,180],[],[238,236,235,12,8,237],[183,185,161],[],[],[264,266,267,263,265,8],[187,207],[210,188],[189,215],[220,190],[225],[192],[],[132,203],[133,204],[205,134],[135,206],[],[187,189,190,186,188],[132],[133],[134],[135],[],[],[],[],[88,208,209],[],[89,87],[92,211,199],[212,213],[],[214,96],[],[92,216,200],[218,217],[],[96,219],[],[92,221,201],[223,222],[],[96,224],[],[92,226,202],[227,228],[],[229,96],[],[239,231],[240,60,233,232,241],[181,233,242],[234,243],[253],[236],[],[],[234,233,230],[232],[],[62],[],[247,245,248,246,244,252],[],[],[249],[27,250],[251],[],[],[],[312,317,314,316,318,313,7,12,315,8],[254,92,255],[],[27],[271,257],[258,281],[259,274,260,175,268],[260,282],[283,261],[262,297],[306],[8],[265],[],[270,184],[260,256,262,257,261],[184],[184,258,268],[],[277],[273],[],[272],[272,274,258,269],[275],[272,278,279],[272],[273,280],[],[259],[92,275,269],[288],[285,276],[],[284],[284,286],[284,290,289],[284],[291,292],[],[],[294,276,295],[285,296],[],[],[302,300,299,303,298,286,301],[],[],[],[27],[27],[305,304],[],[],[92,287,307],[],[325,309],[310,328],[311,333],[338],[313],[],[249,322],[250,323],[251,324],[],[310,309,311,308],[249],[250],[251],[],[],[],[327,326,88],[],[89,87],[92,319,329],[330,331],[],[96,332],[],[320,92,334],[336,335],[],[96,337],[],[321,92,339],[340,341],[],[96,342],[]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeObjectField ","Parameter String field ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr field ","Simple Name field ","Class Or Interface Type String ","Method Call Expr ","Simple Name writeVal ","Simple Name val ","Method Declaration Throws ","Block Stmt ","Name Expr indention ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Method Declaration ","Primitive Type byte ","Char Literal Expr ':' ","':'","Primitive Type byte ","Char Literal Expr ' ' ","' '","Method Call Expr ","Simple Name write ","Char Literal Expr ':' ","Simple Name b ","Method Declaration ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeVal ","Parameter String val ","Class Or Interface Type IOException ","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Marker Annotation Expr @Override ","Method Declaration Throws ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","ThisExpr","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Simple Name as ","Primitive Type byte ","Primitive Type byte ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Expression Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr encoder ","Name Expr count ","Name Expr JsonStream ","Expression Stmt ","Void Type ","Simple Name write ","Parameter int b ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Return Stmt ","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Primitive Type byte ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeObjectField-JsonStream-Object","callMethodNameReferTo":{"22":"srcmainjavacomjsoniteroutputMapKeyEncoders.java-registerOrGetExisting-MapKeyEncoders-Type"},"num":277,"succs":[[1,16],[26],[7,9,11,3,8,6,5,4],[4],[],[6],[],[13,15],[10],[],[],[0,1],[13],[],[13,12,28],[],[20],[12,18],[],[29,17],[17,21,22],[17],[24,23,18],[],[12,25],[],[19,14,27,30],[],[],[],[37,41,38,39,42,8,3,4,40],[32,47],[35,33,51],[35,34,52,53,54],[56],[36],[69],[38],[],[45,28],[29,46],[],[32,31],[28],[29],[],[],[44,43,48,49],[],[50],[],[34],[],[],[55],[],[59,62,57,58],[],[60,63,64],[66,61,67],[],[],[80,77,79,82,81,8,3,78,4],[],[65],[],[],[68],[],[71,73,70],[],[72,65],[],[111,107,109,110,8,3,4,108],[87,75],[93,76],[100],[78],[],[60,85],[86,61],[],[75,74,76],[60],[61],[],[],[88,91,89],[],[92,90],[],[132,133,134,131,8,135,4],[],[95,83,94],[97,96],[],[],[99,98],[],[],[101,95,84],[102,103],[],[99,104],[],[106,114],[117],[108],[],[72,113],[],[105,106],[72],[],[115,91,116],[],[92,90],[95,118,119],[121,120],[112,123],[],[99,122],[],[],[139,125],[126,150],[136,143,127,151],[128,152],[130,154,153,53,129],[130,155],[158],[132],[],[138,90],[],[124,125],[90],[126,136,160,90],[],[144],[141,142],[],[],[140],[140,146,145],[140],[142,147,148],[149,141],[],[],[130,127],[],[129],[],[92],[157,156],[],[168,170,167,8,4,169],[159,161,137],[],[],[198,200,201,197,199,4],[171,163],[172,173,165,164,174],[157,165,176],[166,177],[187],[168],[],[],[166,165,162],[164],[],[],[175],[],[],[181,179,182,178,180,186],[],[],[183],[55,184],[185],[],[],[],[246,248,251,252,250,247,8,3,249,4],[188,95,189],[],[55],[205,191],[192,215],[193,208,194,151,202],[194,216],[217,195],[196,231],[240],[4],[199],[],[204,160],[194,190,196,191,195],[160],[160,192,202],[],[211],[207],[],[206],[206,208,192,203],[209],[206,212,213],[206],[207,214],[],[193],[95,209,203],[222],[219,210],[],[218],[218,220],[218,224,223],[218],[225,226],[],[],[228,210,229],[219,230],[],[],[234,236,233,237,232,220,235],[],[],[],[55],[55],[239,238],[],[],[95,221,241],[],[259,243],[244,262],[245,267],[272],[247],[],[183,256],[184,257],[185,258],[],[244,243,245,242],[183],[184],[185],[],[],[],[261,260,91],[],[92,90],[95,253,263],[264,265],[],[99,266],[],[254,95,268],[270,269],[],[99,271],[],[255,95,273],[274,275],[],[99,276],[]],"attribute":["Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeObjectField ","Parameter Object key ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr key ","Simple Name key ","Name Expr key ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name encoder ","Name Expr MapKeyEncoders ","Name Expr encoder ","Variable Declarator Encoder encoder = ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name registerOrGetExisting ","Method Call Expr ","Simple Name getClass ","Method Call Expr ","Simple Name writeObjectField ","Simple Name key ","Simple Name keyEncoder ","Method Declaration Throws ","Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Block Stmt ","Expression Stmt ","Void Type ","Simple Name writeObjectField ","Parameter Object key ","Parameter Encoder keyEncoder ","Class Or Interface Type IOException ","Block Stmt ","Name Expr key ","Name Expr keyEncoder ","Class Or Interface Type Object ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name encode ","This Expr ","ThisExpr","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Method Declaration ","Primitive Type byte ","Char Literal Expr ':' ","':'","Primitive Type byte ","Char Literal Expr ' ' ","' '","Method Call Expr ","Simple Name write ","Char Literal Expr ':' ","Simple Name b ","Method Declaration ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Simple Name as ","Primitive Type byte ","Primitive Type byte ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Expression Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr encoder ","Name Expr count ","Name Expr JsonStream ","Expression Stmt ","Void Type ","Simple Name write ","Parameter int b ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Return Stmt ","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Primitive Type byte ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeObjectField-JsonStream-Object-Encoder","callMethodNameReferTo":{},"num":253,"succs":[[1,23],[4,2,27],[4,28,3,29,30],[32],[5],[45],[9,14,10,11,7,13,16,8,12],[8],[],[10],[],[21,18],[20,22],[15],[],[],[1,0],[18],[],[20],[],[],[],[19,17,24,25],[],[26],[],[3],[],[],[31],[],[35,38,33,34],[],[36,39,40],[42,37,43],[],[],[56,53,55,58,57,13,7,54,8],[],[41],[],[],[44],[],[49,47,46],[],[48,41],[],[83,87,85,86,13,7,8,84],[63,51],[69,52],[76],[54],[],[36,61],[62,37],[],[51,50,52],[36],[37],[],[],[64,67,65],[],[68,66],[],[108,109,110,107,13,111,8],[],[71,59,70],[73,72],[],[],[75,74],[],[],[77,71,60],[78,79],[],[75,80],[],[82,90],[93],[84],[],[48,89],[],[81,82],[48],[],[91,67,92],[],[68,66],[94,71,95],[97,96],[88,99],[],[75,98],[],[],[115,101],[102,126],[112,119,103,127],[104,128],[106,130,129,29,105],[106,131],[134],[108],[],[114,66],[],[100,101],[66],[102,112,136,66],[],[120],[117,118],[],[],[116],[116,122,121],[116],[118,123,124],[125,117],[],[],[106,103],[],[105],[],[68],[133,132],[],[146,144,143,13,8,145],[135,137,113],[],[],[174,176,177,173,175,8],[147,139],[148,149,141,140,150],[133,141,152],[142,153],[163],[144],[],[],[142,141,138],[140],[],[],[151],[],[],[157,155,158,156,154,162],[],[],[159],[31,160],[161],[],[],[],[222,227,224,228,226,223,13,7,225,8],[164,71,165],[],[31],[181,167],[168,191],[169,184,170,127,178],[170,192],[193,171],[207,172],[216],[8],[175],[],[180,136],[170,166,172,167,171],[136],[136,168,178],[],[187],[183],[],[182],[182,184,168,179],[185],[182,188,189],[182],[183,190],[],[169],[71,185,179],[198],[195,186],[],[194],[194,196],[194,200,199],[194],[201,202],[],[],[204,186,205],[195,206],[],[],[210,212,209,213,208,211,196],[],[],[],[31],[31],[215,214],[],[],[71,197,217],[],[235,219],[220,238],[221,243],[248],[223],[],[159,232],[160,233],[161,234],[],[220,219,218,221],[159],[160],[161],[],[],[],[237,236,67],[],[68,66],[71,229,239],[240,241],[],[75,242],[],[230,71,244],[246,245],[],[75,247],[],[231,71,249],[250,251],[],[75,252],[]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Block Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeObjectField ","Parameter Object key ","Parameter Encoder keyEncoder ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr key ","Simple Name key ","Name Expr keyEncoder ","Simple Name keyEncoder ","Class Or Interface Type Object ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name encode ","This Expr ","ThisExpr","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Method Declaration ","Primitive Type byte ","Char Literal Expr ':' ","':'","Primitive Type byte ","Char Literal Expr ' ' ","' '","Method Call Expr ","Simple Name write ","Char Literal Expr ':' ","Simple Name b ","Method Declaration ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Simple Name as ","Primitive Type byte ","Primitive Type byte ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Expression Stmt ","ASSIGN","Name Expr buf ","Unary Expr ++ ","Name Expr count ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr encoder ","Name Expr count ","Name Expr JsonStream ","Expression Stmt ","Void Type ","Simple Name write ","Parameter int b ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Return Stmt ","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Primitive Type byte ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeObjectEnd-JsonStream-","callMethodNameReferTo":{},"num":291,"succs":[[1,13],[2,24],[28,3],[31],[8,7,10,12,5,9,6],[6],[],[8],[],[11],[],[],[1,2,3,0],[17],[26,15],[],[14,15],[15,19,18],[15],[20,21],[23,22],[],[],[42,44,43,5],[14,27,25],[],[],[74,70,71,72,73,9,75],[30,16,29],[],[],[33,35,32],[],[34,36],[],[125,129,127,128,5,9,6,126],[],[38,45],[48,40,39,47,49],[23,40,51,46],[52,41],[23,58,51],[43],[],[40,37,41],[39],[38],[],[],[50],[],[],[54,53,55],[],[],[57,56],[],[],[],[60,78],[81,79,61,80,62],[27,51,62],[83,63],[87,64],[65,96],[69,100,66,67],[67,104],[68,107,108,109],[69,116],[103,115,67],[6],[72],[],[26,77],[],[65,59,63,62,64],[26],[],[61],[],[],[82],[],[35,85,84],[],[34,86],[],[92],[89,76],[],[88,98],[90,88],[88,93,94],[88],[89,76,95],[],[90,97,99],[],[],[151,152,153,150,9,154,6],[68],[102,103],[],[102,101],[102,106,105],[102],[82],[101,91,110],[],[112,111,110],[],[],[113,114],[],[],[],[118,54,117],[120,119],[122],[],[115,121],[],[],[124,132],[136],[126],[],[34,131],[],[123,124],[34],[],[133,99,134],[],[135,98],[],[54,137,138],[140,139],[130,142],[],[115,141],[],[],[158,144],[145,168],[155,162,146,110],[147,169],[149,172,170,171,148],[149,173],[176],[151],[],[157,98],[],[143,144],[98],[145,155,178,98],[],[163],[160,161],[],[],[159],[159,165,164],[159],[166,161,95],[167,160],[],[149,146],[148],[],[],[135],[175,174],[],[186,188,185,9,6,187],[179,177,156],[],[],[212,214,215,70,213,6],[189,181],[190,80,183,182,191],[175,183,51],[184,192],[202],[186],[],[],[184,183,180],[182],[],[50],[196,194,197,195,193,201],[],[],[198],[82,199],[200],[],[],[],[260,265,262,264,266,261,9,5,263,6],[203,54,204],[],[82],[219,206],[207,229],[208,222,209,110,216],[209,230],[231,210],[211,245],[254],[213],[],[218,178],[209,205,211,206,210],[178],[178,207,216],[],[225],[221],[],[220],[220,222,207,217],[223],[220,226,227],[220],[221,228],[],[208],[54,223,217],[236],[233,224],[],[232],[232,234],[232,238,237],[232],[239,240],[],[],[242,224,243],[233,244],[],[],[248,250,247,251,246,249,234],[],[],[],[82],[82],[253,252],[],[],[54,235,255],[],[273,257],[258,276],[259,281],[286],[261],[],[198,270],[199,271],[200,272],[],[258,257,259,256],[198],[199],[200],[],[],[],[275,274,99],[],[135,98],[54,267,277],[278,279],[],[115,280],[],[268,54,282],[284,283],[],[115,285],[],[269,54,287],[288,289],[],[115,290],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","FINAL","Void Type ","Simple Name writeObjectEnd ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Name Expr indentionStep ","Simple Name indentionStep ","Name Expr indentionStep ","Variable Declarator int indentionStep = ","Primitive Type int ","Method Call Expr ","Method Call Expr ","Simple Name indentionStep ","Simple Name currentConfig ","Method Declaration ","Method Call Expr ","Simple Name writeIndention ","Simple Name delta ","Method Declaration Throws ","Assign Expr MINUS ","Name Expr indention ","MINUS","Method Call Expr ","Simple Name write ","Char Literal Expr '}' ","Simple Name b ","Method Declaration ","'}'","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Assign Expr ASSIGN ","Name Expr configCache ","ASSIGN","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr AND ","Expression Stmt ","Unary Expr ++ ","PRIVATE","Void Type ","Simple Name writeIndention ","Parameter int delta ","Class Or Interface Type IOException ","Block Stmt ","Name Expr delta ","Primitive Type int ","Block Stmt ","Name Expr indention ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name write ","Char Literal Expr 'n' ","'n'","Variable Declaration Expr ","Simple Name toWrite ","Name Expr indention ","Name Expr toWrite ","Name Expr toWrite ","Variable Declarator int toWrite = ","Primitive Type int ","Binary Expr MINUS ","MINUS","Method Call Expr ","Simple Name ensure ","Simple Name minimal ","Method Declaration Throws ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr LESS ","AND","Binary Expr LESS ","LESS","Name Expr count ","Field Access Expr ","Name Expr buf ","Simple Name length ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","Array Access Expr count++ ","Char Literal Expr ' ' ","Name Expr val ","Unary Expr ++ ","Name Expr count ","' '","Name Expr JsonStream ","Expression Stmt ","Void Type ","Simple Name write ","Parameter int b ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b ","Primitive Type int ","Class Or Interface Type lang ","Simple Name append ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr IterImpl ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Primitive Type byte ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","Simple Name length ","Block Stmt ","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-Object","callMethodNameReferTo":{"49":"srcmainjavacomjsoniteroutputCodegen.java-getEncoder-Codegen-String-Type"},"num":302,"succs":[[22,1],[24,2,23,4,17],[3,26],[4,7,29],[5,30],[6,38],[48],[10,14,11,8,12,13,16,9],[9],[],[11],[],[18,21],[15],[],[],[5,6,4,0],[18],[],[18,17],[18,19],[],[3,2],[],[25],[],[27,28],[],[58,56,8,13,57,55,9],[],[34],[19],[31],[32,31],[36,35,31],[31],[37,19],[],[41],[32],[39],[43,39,42],[39],[44,32,45],[46,47],[],[],[87,89,88,8],[49,51,50,20],[40,52,33,53],[],[54],[],[],[],[56],[],[],[59],[60],[63,70,61,65,64,62],[],[66,71,72],[74,67,75],[77,78,68],[69,81,80],[],[],[],[],[112,114,111,108,110,8,113,13,109,107,9],[],[73],[],[],[76],[],[],[79],[],[],[79],[83,90],[93,85,84,92,94],[47,85,29,91],[95,86],[47,101,29],[88],[],[85,82,86],[84],[83],[],[],[25],[97,96,98],[],[],[100,99],[],[],[],[103,123],[129,104],[105,135],[140,106],[145],[108],[],[66,119],[67,120],[121,68],[69,122],[],[103,105,106,102,104],[66],[67],[68],[69],[],[],[],[],[127,124,125],[],[128,126],[],[158,159,160,157,13,161,9],[],[97,130,115],[131,132],[],[133,134],[],[],[97,136,116],[137,138],[],[134,139],[],[97,141,117],[143,142],[],[134,144],[],[97,146,118],[147,148],[],[149,134],[],[165,151],[152,176],[162,169,153,177],[154,178],[156,181,179,180,155],[156,182],[185],[158],[],[164,126],[],[150,151],[126],[152,162,187,126],[],[170],[167,168],[],[],[166],[166,172,171],[166],[173,168,174],[175,167],[],[],[156,153],[],[155],[],[],[128],[184,183],[],[195,197,194,13,9,196],[186,188,163],[],[],[223,225,226,222,224,9],[198,190],[199,23,192,191,200],[184,192,29],[193,201],[212],[195],[],[],[193,192,189],[191],[],[25],[205,203,206,204,202,210],[],[],[207],[211,208],[209],[],[],[],[271,276,273,275,277,272,13,8,274,9],[],[213,97,214],[],[211],[230,216],[217,240],[218,233,219,177,227],[219,241],[242,220],[221,256],[265],[9],[224],[],[229,187],[219,215,221,216,220],[187],[187,217,227],[],[236],[232],[],[231],[231,233,217,228],[234],[231,237,238],[231],[232,239],[],[218],[97,234,228],[247],[244,235],[],[243],[243,245],[243,249,248],[243],[250,251],[],[],[253,235,254],[244,255],[],[],[259,261,258,262,257,260,245],[],[],[],[211],[211],[264,263],[],[],[97,246,266],[],[284,268],[269,287],[270,292],[297],[272],[],[207,281],[208,282],[209,283],[],[269,268,270,267],[207],[208],[209],[],[],[],[286,285,127],[],[128,126],[97,278,288],[289,290],[],[134,291],[],[279,97,293],[295,294],[],[134,296],[],[280,97,298],[299,300],[],[134,301],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter Object obj ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name end ","Simple Name obj ","Name Expr obj ","Name Expr obj ","Class Or Interface Type Object ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Declaration Throws ","ReturnStmt","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class<?> clazz = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getClass ","Variable Declaration Expr ","Simple Name cacheKey ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Simple Name append ","Method Call Expr ","Method Call Expr ","Simple Name getEncoderCacheKey ","Simple Name currentConfig ","Method Declaration ","Method Call Expr ","Method Call Expr ","Simple Name encode ","This Expr ","Name Expr Codegen ","Simple Name getEncoder ","ThisExpr","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","Assign Expr ASSIGN ","Name Expr configCache ","ASSIGN","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-TypeLiteral<T>-T","callMethodNameReferTo":{"48":"srcmainjavacomjsoniterspiConfig.java-getEncoderCacheKey-Config-Type","53":"srcmainjavacomjsoniteroutputCodegen.java-getEncoder-Codegen-String-Type"},"num":310,"succs":[[3,1,28],[2,29,3,30,21],[32],[5,6,4],[5,35],[6,43],[52],[13,17,15,11,8,14,9,12,10],[9],[],[11],[],[24,19],[22,27],[16],[],[],[0],[19],[],[18,19],[22],[],[22,1,21],[26,25],[],[],[],[2],[31],[],[],[34,33],[],[65,63,8,14,64,62,9],[38],[37],[],[40,39,37],[37],[42,41],[],[94,96,95,8],[46],[36,18],[44],[47,44,48],[44],[36,49,50],[],[51,18],[],[55,53,54,23],[56,58,57,45],[],[60],[],[],[59,20],[],[],[],[63],[],[],[66],[67],[70,77,68,71,69,72],[],[73,78,79],[81,74,82],[84,85,75],[76,88,87],[],[],[],[],[120,122,119,118,116,8,121,14,117,115,9],[],[80],[],[],[83],[],[],[86],[],[],[86],[90,97],[100,92,91,99,101],[42,92,102,98],[103,93],[42,109,102],[95],[],[92,89,93],[91],[90],[],[],[31],[],[105,104,106],[],[],[108,107],[],[],[],[111,131],[137,112],[113,143],[148,114],[153],[116],[],[73,127],[74,128],[129,75],[76,130],[],[111,113,114,110,112],[73],[74],[75],[76],[],[],[],[],[135,132,133],[],[136,134],[],[166,167,168,165,14,169,9],[],[105,138,123],[139,140],[],[141,142],[],[],[105,144,124],[145,146],[],[142,147],[],[105,149,125],[151,150],[],[142,152],[],[105,154,126],[155,156],[],[157,142],[],[173,159],[160,184],[170,177,161,185],[162,186],[164,189,187,188,163],[164,190],[193],[166],[],[172,134],[],[158,159],[134],[160,170,195,134],[],[178],[175,176],[],[],[174],[174,180,179],[174],[181,176,182],[183,175],[],[],[164,161],[],[163],[],[],[136],[192,191],[],[203,205,202,14,9,204],[194,196,171],[],[],[231,233,234,230,232,9],[206,198],[207,30,200,199,208],[192,200,102],[201,209],[220],[203],[],[],[201,200,197],[199],[],[31],[213,211,214,212,210,218],[],[],[215],[219,216],[217],[],[],[],[279,284,281,283,285,280,14,8,282,9],[],[221,105,222],[],[219],[238,224],[225,248],[226,241,227,185,235],[227,249],[250,228],[229,264],[273],[9],[232],[],[237,195],[227,223,229,224,228],[195],[195,225,235],[],[244],[240],[],[239],[239,241,225,236],[242],[239,245,246],[239],[240,247],[],[226],[105,242,236],[255],[252,243],[],[251],[251,253],[251,257,256],[251],[258,259],[],[],[261,243,262],[252,263],[],[],[267,269,266,270,265,268,253],[],[],[],[219],[219],[272,271],[],[],[105,254,274],[],[292,276],[277,295],[278,300],[305],[280],[],[215,289],[216,290],[217,291],[],[277,276,278,275],[215],[216],[217],[],[],[],[294,293,135],[],[136,134],[105,286,296],[297,298],[],[142,299],[],[287,105,301],[303,302],[],[142,304],[],[288,105,306],[307,308],[],[142,309],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","This Expr ","Simple Name writeVal ","Parameter TypeLiteral<T> typeLiteral ","Parameter T obj ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr typeLiteral ","Simple Name typeLiteral ","Name Expr typeLiteral ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Class Or Interface Type TypeLiteral ","Simple Name TypeLiteral ","Class Or Interface Type T ","Class Or Interface Type T ","Block Stmt ","This Expr ","EQUALS","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Declaration Throws ","Variable Declaration Expr ","String Literal Expr Not Empty  ","Simple Name config ","Variable Declarator Config config = ","Class Or Interface Type Config ","Method Call Expr ","Simple Name currentConfig ","Method Declaration ","Variable Declaration Expr ","Simple Name cacheKey ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getEncoderCacheKey ","Method Call Expr ","Simple Name getType ","Method Call Expr ","Method Call Expr ","Simple Name encode ","This Expr ","Name Expr Codegen ","Simple Name getEncoder ","Method Call Expr ","Simple Name getType ","ThisExpr","Type Parameter T ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","ReturnStmt","Assign Expr ASSIGN ","Name Expr configCache ","ASSIGN","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"writeVal-JsonStream-Type-T","callMethodNameReferTo":{"49":"srcmainjavacomjsoniteroutputCodegen.java-getEncoder-Codegen-String-Type","46":"srcmainjavacomjsoniterspiConfig.java-getEncoderCacheKey-Config-Type"},"num":304,"succs":[[26,3,1],[21,28,27,3,2],[30],[4,5,6],[33,5],[6,41],[48],[10,11,17,15,8,14,13,9,12],[9],[],[11],[],[24,19],[25,22],[16],[],[],[0],[19],[],[18,19],[22],[],[21,22,1],[],[],[2],[29],[],[],[32,31],[],[59,57,14,8,58,56,9],[36],[35],[],[37,38,35],[35],[40,39],[],[89,88,90,8],[44],[34,18],[42],[45,46,42],[42],[34,18,47],[],[50,23,49,51],[53,52,20,43],[],[54],[],[],[],[],[57],[],[],[60],[61],[64,71,62,65,66,63],[],[67,72,73],[75,68,76],[78,79,69],[70,82,81],[],[],[],[],[114,116,113,112,110,14,8,115,111,109,9],[],[74],[],[],[77],[],[],[80],[],[],[80],[84,91],[94,86,85,95,93],[40,86,96,92],[97,87],[40,103,96],[89],[],[86,83,87],[85],[84],[],[],[29],[],[99,98,100],[],[],[102,101],[],[],[],[105,125],[131,106],[107,137],[142,108],[147],[110],[],[67,121],[68,122],[123,69],[70,124],[],[105,107,108,104,106],[67],[68],[69],[70],[],[],[],[],[129,126,127],[],[130,128],[],[160,161,162,159,14,163,9],[],[99,132,117],[133,134],[],[135,136],[],[],[99,138,118],[140,139],[],[136,141],[],[99,143,119],[145,144],[],[136,146],[],[99,148,120],[149,150],[],[151,136],[],[167,153],[154,178],[164,171,155,179],[156,180],[158,183,181,182,157],[158,184],[187],[160],[],[128,166],[],[152,153],[128],[154,164,189,128],[],[172],[169,170],[],[],[168],[168,174,173],[168],[170,175,176],[177,169],[],[],[158,155],[],[157],[],[],[130],[186,185],[],[199,197,196,14,9,198],[188,190,165],[],[],[225,227,228,224,226,9],[200,192],[201,28,194,193,202],[186,194,96],[195,203],[214],[197],[],[],[195,194,191],[193],[],[29],[207,205,208,204,206,212],[],[],[209],[213,210],[211],[],[],[],[273,278,275,277,279,274,8,14,276,9],[],[215,99,216],[],[213],[232,218],[219,242],[220,235,221,179,229],[221,243],[244,222],[223,258],[267],[9],[226],[],[231,189],[221,217,223,218,222],[189],[189,219,229],[],[238],[234],[],[233],[233,235,219,230],[236],[233,239,240],[233],[234,241],[],[220],[99,236,230],[249],[246,237],[],[245],[245,247],[245,251,250],[245],[252,253],[],[],[255,237,256],[246,257],[],[],[263,261,260,264,259,247,262],[],[],[],[213],[213],[266,265],[],[],[99,248,268],[],[286,270],[271,289],[272,294],[299],[274],[],[209,283],[210,284],[211,285],[],[271,270,269,272],[209],[210],[211],[],[],[],[288,287,129],[],[130,128],[99,280,290],[291,292],[],[136,293],[],[281,99,295],[297,296],[],[136,298],[],[282,99,300],[301,302],[],[136,303],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","FINAL","Void Type ","Simple Name writeVal ","Parameter Type type ","Parameter T obj ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr type ","Simple Name type ","Name Expr type ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Class Or Interface Type Type ","Class Or Interface Type T ","Block Stmt ","Null Literal Expr ","EQUALS","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Declaration Throws ","Variable Declaration Expr ","Name Expr config ","Simple Name config ","Variable Declarator Config config = ","Class Or Interface Type Config ","Method Call Expr ","Simple Name currentConfig ","Method Declaration ","Variable Declaration Expr ","Simple Name cacheKey ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getEncoderCacheKey ","Method Call Expr ","Method Call Expr ","Simple Name encode ","This Expr ","Name Expr Codegen ","Simple Name getEncoder ","ThisExpr","Type Parameter T ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","ReturnStmt","Assign Expr ASSIGN ","Name Expr configCache ","ASSIGN","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"currentConfig-JsonStream-","callMethodNameReferTo":{"20":"srcmainjavacomjsoniterspiJsoniterSpi.java-getCurrentConfig-JsoniterSpi-"},"num":24,"succs":[[1,10],[13,3,2,12,14],[5,3,16,11],[17,4],[5,23,16],[8,9,7,6],[],[8],[],[3,0,4],[2],[1],[],[],[15],[],[],[19,18,20],[],[],[22,21],[],[],[]],"attribute":["If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Assign Expr ASSIGN ","Name Expr configCache ","ASSIGN","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"serialize-JsonStream-Config-Object-OutputStream","callMethodNameReferTo":{"32":"srcmainjavacomjsoniterspiJsoniterSpi.java-clearCurrentConfig-JsoniterSpi-","22":"srcmainjavacomjsoniterspiJsoniterSpi.java-setCurrentConfig-JsoniterSpi-Config"},"num":396,"succs":[[22,1],[26,2,25],[27,3],[32],[8,11,7,5,12,10,6,9],[114,6],[],[8],[],[19,14],[16,20],[18,21],[0,1],[14],[],[16,29],[],[18,30],[],[],[],[],[24,13,23],[],[],[2],[3],[28,17,31,15],[],[],[],[46,5,48,44,47,45,6],[34,33],[],[],[36,53],[64,37,65,41,66,43],[67,38,68],[69,39],[40,73,43],[77,43],[42,82,81],[83,43],[86],[45],[],[51,29],[52,30],[35,36],[75,29],[71,30],[],[],[60],[55],[],[54],[54,56],[54,57],[54,58],[54,62,61],[54],[63,55],[],[37],[80,41],[43],[38,39],[40],[70,72,50,56],[],[],[94,93,91,92,5],[76,74,57,49],[],[],[116,117,121,119,118,5,115,114],[78,58,79],[],[146,147,145,149,148,118,5],[42],[],[],[84,85],[],[],[87,88,59],[],[],[97,90],[103],[92],[],[71,96],[89,90],[71],[],[99,98,95],[101,100],[],[102],[],[],[99,104,105],[107,106],[108],[102],[],[],[125,112,110],[126,127,122,111,112],[129],[113],[132],[],[116],[],[75,124],[120],[],[],[109],[75],[122,75,110],[],[111],[],[128],[],[131,130],[],[175,173,5,118,174,114,172],[123,135,133,134],[],[],[102],[150,137],[151,126,152,138,139],[153,139,79],[140,154],[155,142,141,156,157],[142,158],[161,143],[144,164],[169],[],[147],[],[],[144,142,136,143,139],[138],[],[128],[],[141],[],[],[108],[160,159],[],[205,207,204,118,114,206],[162,163,79],[],[],[99,165,166],[167,168],[128],[102],[],[99,170,171],[],[108],[173],[],[],[176],[177],[180,187,178,181,179,182],[],[183,188,189],[191,184,192],[194,195,185],[186,198,197],[],[],[],[],[234,236,233,230,232,5,235,118,231,229,114],[],[190],[],[],[193],[],[],[196],[],[],[196],[208,200],[209,126,202,201,210],[160,202,153],[203,211],[221],[205],[],[],[203,202,199],[201],[],[128],[215,213,216,212,214,220],[],[],[217],[108,218],[219],[],[],[],[276,281,278,282,280,277,5,118,279,114],[222,99,223],[],[108],[225,245],[251,226],[227,257],[262,228],[267],[230],[],[183,241],[184,242],[243,185],[186,244],[],[225,227,228,224,226],[183],[184],[185],[186],[],[],[],[],[249,246,247],[],[250,248],[],[315,316,317,314,118,318,114],[],[99,252,237],[253,254],[],[255,256],[],[],[99,258,238],[260,259],[],[256,261],[],[99,263,239],[265,264],[],[256,266],[],[99,268,240],[269,270],[],[271,256],[],[289,273],[274,292],[275,297],[302],[277],[],[217,286],[218,287],[219,288],[],[274,273,272,275],[217],[218],[219],[],[],[],[291,290,249],[],[250,248],[99,283,293],[294,295],[],[256,296],[],[284,99,298],[300,299],[],[256,301],[],[285,99,303],[304,305],[],[256,306],[],[322,308],[309,333],[319,326,310,334],[311,335],[313,337,336,156,312],[313,338],[340],[315],[],[321,248],[],[307,308],[248],[309,319,342,248],[],[327],[324,325],[],[],[323],[323,329,328],[323],[330,325,331],[332,324],[],[],[313,310],[],[312],[],[250],[160,339],[],[343,341,320],[],[],[352,355,354,351,353,114],[359,345],[346,369],[347,362,348,334,356],[348,370],[371,349],[350,385],[394],[114],[353],[],[358,342],[348,344,350,345,349],[342],[342,346,356],[],[365],[361],[],[360],[360,362,346,357],[363],[360,366,367],[360],[361,368],[],[347],[99,363,357],[376],[373,364],[],[372],[372,374],[372,378,377],[372],[379,380],[],[],[382,364,383],[373,384],[],[],[388,390,387,391,386,389,374],[],[],[],[108],[108],[393,392],[],[],[99,375,395],[]],"attribute":["Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name serialize ","Parameter Config config ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr config ","Simple Name config ","Name Expr obj ","Simple Name obj ","Name Expr out ","Simple Name out ","Class Or Interface Type Config ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name serialize ","Simple Name obj ","Simple Name out ","Method Declaration ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name clearCurrentConfig ","Expression Stmt ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr obj ","Name Expr out ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Variable Declaration Expr ","Simple Name stream ","Name Expr JsonStreamPool ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Variable Declarator JsonStream stream = ","Class Or Interface Type JsonStream ","Method Call Expr ","Simple Name borrowJsonStream ","Block Stmt ","Catch Clause ","Block Stmt ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name reset ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Simple Name val ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonStreamPool ","Simple Name returnJsonStream ","Expression Stmt ","Expression Stmt ","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","FINAL","Void Type ","Simple Name writeVal ","Parameter String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Marker Annotation Expr @Override ","Method Declaration Throws ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Marker Annotation Expr @Override ","Void Type ","Simple Name close ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Primitive Type int ","Null Literal Expr ","ReturnStmt","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr out ","Name Expr cache ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name out ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"serialize-JsonStream-Object-OutputStream","callMethodNameReferTo":{"32":"srcmainjavacomjsoniteroutputJsonStreamPool.java-borrowJsonStream-JsonStreamPool-","131":"srcmainjavacomjsoniteroutputJsonStream.java-close-JsonStream-","39":"srcmainjavacomjsoniteroutputJsonStream.java-reset-JsonStream-OutputStream","56":"srcmainjavacomjsoniteroutputJsonStreamPool.java-returnJsonStream-JsonStreamPool-JsonStream","43":"srcmainjavacomjsoniteroutputJsonStream.java-writeVal-JsonStream-String","47":"srcmainjavacomjsoniteroutputJsonStream.java-close-JsonStream-"},"num":366,"succs":[[1,23],[34,2,35,6,36,8],[37,3,38],[39,4],[5,43,8],[47,8],[7,52,51],[53,8],[56],[14,10,16,15,12,11,13],[84,11],[],[13],[],[21,18],[22,20],[0,1],[45,18],[],[41,20],[],[],[],[30],[25],[],[24],[24,26],[24,27],[24,28],[24,32,31],[24],[33,25],[],[2],[50,6],[8],[3,4],[5],[40,42,19,26],[],[],[64,63,61,62,10],[46,44,17,27],[],[],[86,87,91,89,88,10,84,85],[48,28,49],[],[116,117,115,119,10,88,118],[7],[],[],[54,55],[],[],[57,58,29],[],[],[67,60],[73],[62],[],[41,66],[59,60],[41],[],[69,68,65],[71,70],[],[72],[],[],[69,74,75],[77,76],[78],[72],[],[],[95,82,80],[96,97,92,81,82],[99],[83],[102],[],[86],[],[94,45],[90],[],[],[79],[45],[92,45,80],[],[81],[],[98],[],[101,100],[],[145,143,88,10,144,84,142],[93,105,103,104],[],[],[72],[120,107],[121,96,122,108,109],[123,109,49],[110,124],[125,112,111,126,127],[112,128],[131,113],[114,134],[139],[],[117],[],[],[114,112,106,113,109],[108],[],[98],[],[111],[],[],[78],[130,129],[],[177,175,174,88,84,176],[132,133,49],[],[],[69,135,136],[137,138],[98],[72],[],[69,140,141],[],[78],[143],[],[],[146],[147],[150,157,148,151,149,152],[],[153,158,159],[161,154,162],[164,165,155],[156,168,167],[],[],[],[],[204,206,203,202,200,88,10,205,201,199,84],[],[160],[],[],[163],[],[],[166],[],[],[166],[178,170],[179,96,172,171,180],[130,172,123],[173,181],[191],[175],[],[],[173,172,169],[171],[],[98],[185,183,186,184,182,190],[],[],[187],[78,188],[189],[],[],[],[246,251,248,250,252,247,88,10,249,84],[192,69,193],[],[78],[195,215],[221,196],[197,227],[232,198],[237],[200],[],[153,211],[154,212],[213,155],[156,214],[],[195,197,198,194,196],[153],[154],[155],[156],[],[],[],[],[219,216,217],[],[220,218],[],[285,286,287,284,88,288,84],[],[69,222,207],[223,224],[],[225,226],[],[],[69,228,208],[229,230],[],[226,231],[],[69,233,209],[235,234],[],[226,236],[],[69,238,210],[239,240],[],[241,226],[],[259,243],[244,262],[245,267],[272],[247],[],[187,256],[188,257],[189,258],[],[244,243,242,245],[187],[188],[189],[],[],[],[261,260,219],[],[220,218],[69,253,263],[264,265],[],[226,266],[],[254,69,268],[270,269],[],[226,271],[],[255,69,273],[274,275],[],[226,276],[],[292,278],[279,303],[289,296,280,304],[281,305],[283,307,306,126,282],[283,308],[310],[285],[],[218,291],[],[277,278],[218],[279,289,312,218],[],[297],[294,295],[],[],[293],[293,299,298],[293],[295,300,301],[302,294],[],[],[283,280],[],[282],[],[220],[130,309],[],[311,313,290],[],[],[322,325,324,321,323,84],[329,315],[316,339],[317,332,318,304,326],[318,340],[341,319],[355,320],[364],[84],[323],[],[328,312],[318,314,320,315,319],[312],[312,316,326],[],[335],[331],[],[330],[330,332,316,327],[333],[330,336,337],[330],[331,338],[],[317],[69,333,327],[346],[343,334],[],[342],[342,344],[342,348,347],[342],[349,350],[],[],[352,334,353],[343,354],[],[],[360,358,357,361,356,359,344],[],[],[],[78],[78],[363,362],[],[],[69,345,365],[]],"attribute":["Expression Stmt ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name serialize ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr out ","Simple Name out ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Variable Declaration Expr ","Simple Name stream ","Name Expr JsonStreamPool ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Variable Declarator JsonStream stream = ","Class Or Interface Type JsonStream ","Method Call Expr ","Simple Name borrowJsonStream ","Block Stmt ","Catch Clause ","Block Stmt ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name reset ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Simple Name val ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonStreamPool ","Simple Name returnJsonStream ","Expression Stmt ","Expression Stmt ","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","FINAL","Void Type ","Simple Name writeVal ","Parameter String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Marker Annotation Expr @Override ","Method Declaration Throws ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Marker Annotation Expr @Override ","Void Type ","Simple Name close ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Primitive Type int ","Null Literal Expr ","ReturnStmt","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr out ","Name Expr cache ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name out ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"serialize-JsonStream-Config-TypeLiteral-Object-OutputStream","callMethodNameReferTo":{"66":"srcmainjavacomjsoniterspiJsoniterSpi.java-clearCurrentConfig-JsoniterSpi-","37":"srcmainjavacomjsoniterspiJsoniterSpi.java-clearCurrentConfig-JsoniterSpi-","56":"srcmainjavacomjsoniterspiJsoniterSpi.java-setCurrentConfig-JsoniterSpi-Config","26":"srcmainjavacomjsoniterspiJsoniterSpi.java-setCurrentConfig-JsoniterSpi-Config"},"num":430,"succs":[[1,26],[30,2,29],[31,3],[37],[8,11,12,9,10,5,7,6,13],[148,6],[],[8],[],[15,22],[17,23],[19,24],[21,25],[1,0],[15],[],[17,33],[],[34,19],[],[21,35],[],[],[],[],[],[27,28,14],[],[],[2],[3],[36,18,32,16,20],[],[],[],[],[45,48,44,5,49,47,6,46],[39,38],[],[],[56,41],[60,42,59],[61,43],[66],[45],[],[53,33],[34,54],[35,55],[40,41],[33],[34,63],[35,64],[],[],[],[58,50,57],[],[],[42],[43],[62,52,65,51],[],[],[],[80,82,5,81,78,6,79],[68,67],[],[],[70,87],[98,71,99,75,100,77],[101,72,102],[103,73],[74,107,77],[111,77],[76,116,115],[117,77],[120],[79],[],[85,63],[86,64],[69,70],[109,63],[105,64],[],[],[94],[89],[],[88],[88,90],[88,91],[88,92],[88,96,95],[88],[97,89],[],[71],[114,75],[77],[72,73],[74],[104,106,84,90],[],[],[128,127,125,5,126],[110,108,83,91],[],[],[150,151,155,153,5,152,149,148],[112,92,113],[],[180,181,179,183,152,182,5],[76],[],[],[118,119],[],[],[121,122,93],[],[],[131,124],[137],[126],[],[105,130],[123,124],[105],[],[133,132,129],[135,134],[],[136],[],[],[133,138,139],[141,140],[142],[136],[],[],[159,146,144],[160,161,156,145,146],[163],[147],[166],[],[150],[],[109,158],[154],[],[],[143],[109],[156,109,144],[],[145],[],[162],[],[165,164],[],[209,207,152,5,208,148,206],[157,169,167,168],[],[],[136],[184,171],[185,160,186,172,173],[187,113,173],[174,188],[189,176,175,190,191],[176,192],[195,177],[178,198],[203],[],[181],[],[],[178,176,170,177,173],[172],[],[162],[],[175],[],[],[142],[194,193],[],[239,241,238,152,148,240],[196,197,113],[],[],[133,199,200],[201,202],[162],[136],[],[133,204,205],[],[142],[207],[],[],[210],[211],[214,221,212,215,213,216],[],[217,222,223],[225,218,226],[228,229,219],[220,232,231],[],[],[],[],[268,270,267,266,264,152,5,269,265,263,148],[],[224],[],[],[227],[],[],[230],[],[],[230],[242,234],[243,160,236,235,244],[194,236,187],[237,245],[255],[239],[],[],[237,236,233],[235],[],[162],[249,247,250,246,248,254],[],[],[251],[142,252],[253],[],[],[],[310,315,312,314,316,311,5,152,313,148],[256,133,257],[],[142],[259,279],[285,260],[261,291],[296,262],[301],[264],[],[217,275],[218,276],[277,219],[220,278],[],[259,261,262,258,260],[217],[218],[219],[220],[],[],[],[],[283,280,281],[],[284,282],[],[349,350,351,348,152,352,148],[],[133,286,271],[287,288],[],[289,290],[],[],[133,292,272],[293,294],[],[290,295],[],[133,297,273],[299,298],[],[290,300],[],[133,302,274],[303,304],[],[305,290],[],[323,307],[308,326],[309,331],[336],[311],[],[251,320],[252,321],[253,322],[],[308,307,309,306],[251],[252],[253],[],[],[],[325,324,283],[],[284,282],[133,317,327],[328,329],[],[290,330],[],[318,133,332],[334,333],[],[290,335],[],[319,133,337],[338,339],[],[290,340],[],[356,342],[343,367],[353,360,344,368],[345,369],[347,371,370,190,346],[347,372],[374],[349],[],[355,282],[],[341,342],[282],[343,353,376,282],[],[361],[358,359],[],[],[357],[357,363,362],[357],[359,364,365],[366,358],[],[],[347,344],[],[346],[],[284],[194,373],[],[375,377,354],[],[],[386,388,389,385,387,148],[393,379],[380,403],[381,396,382,368,390],[382,404],[405,383],[384,419],[428],[148],[387],[],[392,376],[382,378,384,379,383],[376],[376,380,390],[],[399],[395],[],[394],[394,396,380,391],[397],[394,400,401],[394],[395,402],[],[381],[133,397,391],[410],[407,398],[],[406],[406,408],[406,412,411],[406],[413,414],[],[],[416,398,417],[407,418],[],[],[422,424,421,425,420,423,408],[],[],[],[142],[142],[427,426],[],[],[133,409,429],[]],"attribute":["Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name serialize ","Parameter Config config ","Parameter TypeLiteral typeLiteral ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr config ","Simple Name config ","Name Expr typeLiteral ","Simple Name typeLiteral ","Name Expr obj ","Simple Name obj ","Name Expr out ","Simple Name out ","Class Or Interface Type Config ","Class Or Interface Type TypeLiteral ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name serialize ","Simple Name config ","Simple Name obj ","Simple Name out ","Method Declaration ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name clearCurrentConfig ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Config config ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr config ","Name Expr obj ","Name Expr out ","Class Or Interface Type Config ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name serialize ","Simple Name obj ","Simple Name out ","Method Declaration ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name clearCurrentConfig ","Expression Stmt ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr obj ","Name Expr out ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Variable Declaration Expr ","Simple Name stream ","Name Expr JsonStreamPool ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Variable Declarator JsonStream stream = ","Class Or Interface Type JsonStream ","Method Call Expr ","Simple Name borrowJsonStream ","Block Stmt ","Catch Clause ","Block Stmt ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name reset ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Simple Name val ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonStreamPool ","Simple Name returnJsonStream ","Expression Stmt ","Expression Stmt ","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","FINAL","Void Type ","Simple Name writeVal ","Parameter String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Marker Annotation Expr @Override ","Method Declaration Throws ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Marker Annotation Expr @Override ","Void Type ","Simple Name close ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Primitive Type int ","Null Literal Expr ","ReturnStmt","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr out ","Name Expr cache ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name out ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"serialize-JsonStream-TypeLiteral-Object-OutputStream","callMethodNameReferTo":{"36":"srcmainjavacomjsoniteroutputJsonStreamPool.java-borrowJsonStream-JsonStreamPool-","52":"srcmainjavacomjsoniteroutputJsonStream.java-close-JsonStream-","166":"srcmainjavacomjsoniteroutputJsonStream.java-close-JsonStream-","43":"srcmainjavacomjsoniteroutputJsonStream.java-reset-JsonStream-OutputStream","61":"srcmainjavacomjsoniteroutputJsonStreamPool.java-returnJsonStream-JsonStreamPool-JsonStream","47":"srcmainjavacomjsoniteroutputJsonStream.java-writeVal-JsonStream-TypeLiteral<T>-T"},"num":420,"succs":[[27,1],[39,40,6,2,38,8],[42,41,3],[4,43],[5,8,47],[52,8],[56,7,57],[8,58],[61],[16,13,17,14,10,15,11,12],[91,11],[],[13],[],[19,24],[25,21],[23,26],[0,1],[19,49],[],[50,21],[],[23,45],[],[],[],[],[34],[29],[],[28],[28,30],[31,28],[28,32],[36,35,28],[28],[29,37],[],[2],[55,6],[8],[4,3],[5],[44,46,30,22],[],[],[69,68,66,10,67],[31,51,18,48,20],[],[],[],[95,99,97,93,96,10,91,92,94],[53,32,54],[],[151,152,150,154,10,153,96],[7],[],[],[60,59],[],[],[62,33,63],[],[],[72,65],[78],[67],[],[45,71],[64,65],[45],[],[74,73,70],[76,75],[],[77],[],[],[74,79,80],[82,81],[83],[77],[],[],[87,85,108],[86,109,87,110,102],[112],[89,90,88],[89,115],[90,123],[132],[],[93],[],[104,49],[50,107],[98],[],[],[84],[49],[100,49],[50],[50,85,102],[106,105],[],[],[],[86],[111],[],[],[114,113],[],[180,178,96,10,179,177,91],[118],[117],[],[120,119,117],[117],[122,121],[],[209,211,210,10],[126],[116,100],[124],[124,127,128],[124],[116,129,130],[],[131,100],[],[135,133,134,103],[136,138,137,125],[],[77],[],[],[139,101],[],[],[155,142],[156,110,157,143,144],[158,144,54],[145,159],[160,147,146,161,162],[147,163],[166,148],[149,169],[174],[],[152],[],[],[149,147,141,148,144],[143],[],[111],[],[146],[],[],[83],[165,164],[],[229,231,228,96,91,230],[167,168,54],[],[],[74,170,171],[172,173],[111],[77],[],[74,175,176],[],[83],[178],[],[],[181],[182],[185,192,183,184,187,186],[],[188,193,194],[196,189,197],[199,200,190],[191,203,202],[],[],[],[],[258,260,257,254,256,96,10,259,255,253,91],[],[195],[],[],[198],[],[],[201],[],[],[201],[205,212],[215,207,206,214,216],[122,207,158,213],[217,208],[122,222,158],[210],[],[207,204,208],[206],[205],[],[],[111],[74,218,219],[],[221,220],[],[],[],[232,224],[233,110,226,225,234],[165,226,158],[227,235],[245],[229],[],[],[227,226,223],[225],[],[111],[239,237,240,238,236,244],[],[],[241],[83,242],[243],[],[],[],[300,302,305,304,306,301,10,96,303,91],[246,74,247],[],[83],[249,269],[275,250],[251,281],[286,252],[291],[254],[],[188,265],[189,266],[267,190],[191,268],[],[249,251,252,248,250],[188],[189],[190],[191],[],[],[],[],[273,270,271],[],[274,272],[],[339,340,341,338,96,342,91],[],[74,276,261],[277,278],[],[279,280],[],[],[74,282,262],[283,284],[],[280,285],[],[74,287,263],[289,288],[],[280,290],[],[74,292,264],[293,294],[],[295,280],[],[313,297],[298,316],[299,321],[326],[301],[],[241,310],[242,311],[243,312],[],[298,297,296,299],[241],[242],[243],[],[],[],[315,314,273],[],[274,272],[74,307,317],[318,319],[],[280,320],[],[308,74,322],[324,323],[],[280,325],[],[309,74,327],[328,329],[],[280,330],[],[346,332],[333,357],[343,350,334,358],[335,359],[337,361,360,161,336],[337,362],[364],[339],[],[272,345],[],[331,332],[272],[333,343,366,272],[],[351],[348,349],[],[],[347],[347,353,352],[347],[354,349,355],[356,348],[],[],[337,334],[],[336],[],[274],[165,363],[],[367,365,344],[],[],[376,379,378,375,377,91],[383,369],[370,393],[371,386,372,358,380],[372,394],[395,373],[374,409],[418],[91],[377],[],[382,366],[372,368,374,369,373],[366],[366,370,380],[],[389],[385],[],[384],[384,386,370,381],[387],[384,390,391],[384],[385,392],[],[371],[74,387,381],[400],[397,388],[],[396],[396,398],[396,402,401],[396],[403,404],[],[],[406,388,407],[397,408],[],[],[414,412,411,415,410,398,413],[],[],[],[83],[83],[417,416],[],[],[74,399,419],[]],"attribute":["Expression Stmt ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name serialize ","Parameter TypeLiteral typeLiteral ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr typeLiteral ","Simple Name typeLiteral ","Name Expr obj ","Simple Name obj ","Name Expr out ","Simple Name out ","Class Or Interface Type TypeLiteral ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Variable Declaration Expr ","Simple Name stream ","Name Expr JsonStreamPool ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Variable Declarator JsonStream stream = ","Class Or Interface Type JsonStream ","Method Call Expr ","Simple Name borrowJsonStream ","Block Stmt ","Catch Clause ","Block Stmt ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name reset ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Simple Name typeLiteral ","Simple Name obj ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonStreamPool ","Simple Name returnJsonStream ","Expression Stmt ","Expression Stmt ","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","FINAL","This Expr ","Simple Name writeVal ","Parameter TypeLiteral<T> typeLiteral ","Parameter T obj ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr typeLiteral ","Name Expr typeLiteral ","Name Expr obj ","Name Expr obj ","Class Or Interface Type TypeLiteral ","Simple Name TypeLiteral ","Class Or Interface Type T ","Class Or Interface Type T ","Block Stmt ","This Expr ","EQUALS","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Declaration Throws ","Variable Declaration Expr ","String Literal Expr Not Empty  ","Simple Name config ","Variable Declarator Config config = ","Class Or Interface Type Config ","Method Call Expr ","Simple Name currentConfig ","Method Declaration ","Variable Declaration Expr ","Simple Name cacheKey ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getEncoderCacheKey ","Method Call Expr ","Simple Name getType ","Method Call Expr ","Method Call Expr ","Simple Name encode ","This Expr ","Name Expr Codegen ","Simple Name getEncoder ","Method Call Expr ","Simple Name getType ","Type Parameter T ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Marker Annotation Expr @Override ","Void Type ","Simple Name close ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Primitive Type int ","Null Literal Expr ","ReturnStmt","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr out ","Name Expr cache ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name out ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","Assign Expr ASSIGN ","Name Expr configCache ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"serialize-JsonStream-Type-Object-OutputStream","callMethodNameReferTo":{"36":"srcmainjavacomjsoniteroutputJsonStreamPool.java-borrowJsonStream-JsonStreamPool-","166":"srcmainjavacomjsoniteroutputJsonStream.java-close-JsonStream-","43":"srcmainjavacomjsoniteroutputJsonStream.java-reset-JsonStream-OutputStream","61":"srcmainjavacomjsoniteroutputJsonStreamPool.java-returnJsonStream-JsonStreamPool-JsonStream","47":"srcmainjavacomjsoniteroutputJsonStream.java-writeVal-JsonStream-TypeLiteral<T>-T"},"num":420,"succs":[[1,27],[2,38,39,6,8,40],[3,41,42],[43,4],[5,47,8],[52,8],[7,56,57],[58,8],[61],[17,13,14,15,16,10,11,12],[91,11],[],[13],[],[24,19],[25,21],[26,23],[1,0],[19,49],[],[50,21],[],[45,23],[],[],[],[],[34],[29],[],[28],[30,28],[31,28],[28,32],[35,28,36],[28],[37,29],[],[2],[55,6],[8],[3,4],[5],[30,44,46,22],[],[],[69,68,66,10,67],[31,18,20,51,48],[],[],[],[95,99,97,93,96,10,91,92,94],[53,32,54],[],[151,152,150,154,10,153,96],[7],[],[],[59,60],[],[],[62,63,33],[],[],[72,65],[78],[67],[],[45,71],[64,65],[45],[],[74,73,70],[76,75],[],[77],[],[],[74,79,80],[82,81],[83],[77],[],[],[87,85,108],[86,109,87,110,102],[112],[89,90,88],[89,115],[90,123],[132],[],[93],[],[104,49],[50,107],[98],[],[],[84],[49],[100,49],[50],[50,85,102],[106,105],[],[],[],[86],[111],[],[],[114,113],[],[180,178,96,10,179,177,91],[118],[117],[],[120,119,117],[117],[122,121],[],[209,211,210,10],[126],[116,100],[124],[124,127,128],[124],[116,129,130],[],[131,100],[],[135,133,134,103],[136,138,137,125],[],[77],[],[],[139,101],[],[],[155,142],[156,110,157,143,144],[158,144,54],[145,159],[160,147,146,161,162],[147,163],[166,148],[149,169],[174],[],[152],[],[],[149,147,141,148,144],[143],[],[111],[],[146],[],[],[83],[165,164],[],[229,231,228,96,91,230],[167,168,54],[],[],[74,170,171],[172,173],[111],[77],[],[74,175,176],[],[83],[178],[],[],[181],[182],[185,192,183,184,187,186],[],[188,193,194],[196,189,197],[199,200,190],[191,203,202],[],[],[],[],[258,260,257,254,256,96,10,259,255,253,91],[],[195],[],[],[198],[],[],[201],[],[],[201],[205,212],[215,207,206,214,216],[122,207,158,213],[217,208],[122,222,158],[210],[],[207,204,208],[206],[205],[],[],[111],[74,218,219],[],[221,220],[],[],[],[232,224],[233,110,226,225,234],[165,226,158],[227,235],[245],[229],[],[],[227,226,223],[225],[],[111],[239,237,240,238,236,244],[],[],[241],[83,242],[243],[],[],[],[300,302,305,304,306,301,10,96,303,91],[246,74,247],[],[83],[249,269],[275,250],[251,281],[286,252],[291],[254],[],[188,265],[189,266],[267,190],[191,268],[],[249,251,252,248,250],[188],[189],[190],[191],[],[],[],[],[273,270,271],[],[274,272],[],[339,340,341,338,96,342,91],[],[74,276,261],[277,278],[],[279,280],[],[],[74,282,262],[283,284],[],[280,285],[],[74,287,263],[289,288],[],[280,290],[],[74,292,264],[293,294],[],[295,280],[],[313,297],[298,316],[299,321],[326],[301],[],[241,310],[242,311],[243,312],[],[298,297,296,299],[241],[242],[243],[],[],[],[315,314,273],[],[274,272],[74,307,317],[318,319],[],[280,320],[],[308,74,322],[324,323],[],[280,325],[],[309,74,327],[328,329],[],[280,330],[],[346,332],[333,357],[343,350,334,358],[335,359],[337,361,360,161,336],[337,362],[364],[339],[],[272,345],[],[331,332],[272],[333,343,366,272],[],[351],[348,349],[],[],[347],[347,353,352],[347],[354,349,355],[356,348],[],[],[337,334],[],[336],[],[274],[165,363],[],[367,365,344],[],[],[376,379,378,375,377,91],[383,369],[370,393],[371,386,372,358,380],[372,394],[395,373],[374,409],[418],[91],[377],[],[382,366],[372,368,374,369,373],[366],[366,370,380],[],[389],[385],[],[384],[384,386,370,381],[387],[384,390,391],[384],[385,392],[],[371],[74,387,381],[400],[397,388],[],[396],[396,398],[396,402,401],[396],[403,404],[],[],[406,388,407],[397,408],[],[],[414,412,411,415,410,398,413],[],[],[],[83],[83],[417,416],[],[],[74,399,419],[]],"attribute":["Expression Stmt ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name serialize ","Parameter Type type ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr type ","Simple Name type ","Name Expr obj ","Simple Name obj ","Name Expr out ","Simple Name out ","Class Or Interface Type Type ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Variable Declaration Expr ","Simple Name stream ","Name Expr JsonStreamPool ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Variable Declarator JsonStream stream = ","Class Or Interface Type JsonStream ","Method Call Expr ","Simple Name borrowJsonStream ","Block Stmt ","Catch Clause ","Block Stmt ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name reset ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Simple Name typeLiteral ","Simple Name obj ","Method Declaration Throws ","Field Access Expr ","Simple Name close ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonStreamPool ","Simple Name returnJsonStream ","Expression Stmt ","Expression Stmt ","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","FINAL","This Expr ","Simple Name writeVal ","Parameter TypeLiteral<T> typeLiteral ","Parameter T obj ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr typeLiteral ","Name Expr typeLiteral ","Name Expr obj ","Name Expr obj ","Class Or Interface Type TypeLiteral ","Simple Name TypeLiteral ","Class Or Interface Type T ","Class Or Interface Type T ","Block Stmt ","This Expr ","EQUALS","NullLiteralExpr","Method Call Expr ","Simple Name writeNull ","Method Declaration Throws ","Variable Declaration Expr ","String Literal Expr Not Empty  ","Simple Name config ","Variable Declarator Config config = ","Class Or Interface Type Config ","Method Call Expr ","Simple Name currentConfig ","Method Declaration ","Variable Declaration Expr ","Simple Name cacheKey ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getEncoderCacheKey ","Method Call Expr ","Simple Name getType ","Method Call Expr ","Method Call Expr ","Simple Name encode ","This Expr ","Name Expr Codegen ","Simple Name getEncoder ","Method Call Expr ","Simple Name getType ","Type Parameter T ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Marker Annotation Expr @Override ","Void Type ","Simple Name close ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Primitive Type int ","Null Literal Expr ","ReturnStmt","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr out ","Name Expr cache ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name out ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","Assign Expr ASSIGN ","Name Expr configCache ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"serialize-JsonStream-Config-Object","callMethodNameReferTo":{"65":"srcmainjavacomjsoniterspiJsoniterSpi.java-clearCurrentConfig-JsoniterSpi-","20":"srcmainjavacomjsoniterspiJsoniterSpi.java-setCurrentConfig-JsoniterSpi-Config","36":"srcmainjavacomjsoniterspiJsoniterSpi.java-clearCurrentConfig-JsoniterSpi-","55":"srcmainjavacomjsoniterspiJsoniterSpi.java-setCurrentConfig-JsoniterSpi-Config"},"num":428,"succs":[[20,1],[2,24,23],[26,4,3,25],[36],[11,9,5,10,8,7,6],[6,147],[],[8],[],[13,18],[16,19],[1,0],[13],[],[13,12],[16],[],[15,32,16],[],[],[22,21,12],[],[],[2],[3],[],[33,28,27,17,29],[],[14,34,30],[31,15,35],[],[],[],[44,47,43,5,48,46,6,45],[],[],[38,37],[],[],[55,40],[59,41,58],[60,42],[65],[44],[],[52,30],[31,53],[32,54],[39,40],[30],[31,62],[32,63],[],[],[],[57,49,56],[],[],[41],[42],[61,51,64,50],[],[],[],[79,81,5,77,80,6,78],[67,66],[],[],[69,86],[97,98,70,74,99,76],[100,71,101],[102,72],[73,106,76],[110,76],[75,115,114],[116,76],[119],[78],[],[84,62],[85,63],[68,69],[108,62],[104,63],[],[],[93],[88],[],[87],[87,89],[87,90],[87,91],[87,95,94],[87],[96,88],[],[70],[113,74],[76],[71,72],[73],[103,105,83,89],[],[],[127,126,124,5,125],[109,107,82,90],[],[],[149,150,154,152,5,151,147,148],[111,91,112],[],[179,180,178,182,181,151,5],[75],[],[],[117,118],[],[],[120,121,92],[],[],[130,123],[136],[125],[],[104,129],[122,123],[104],[],[132,131,128],[134,133],[],[135],[],[],[132,137,138],[140,139],[141],[135],[],[],[158,145,143],[159,160,155,144,145],[162],[146],[165],[],[149],[],[157,108],[153],[],[],[142],[108],[155,108,143],[],[144],[],[161],[],[164,163],[],[207,205,151,5,206,147,204],[156,168,166,167],[],[],[135],[183,170],[184,159,185,171,172],[25,172,112],[173,186],[187,175,174,188,189],[175,190],[193,176],[177,196],[201],[],[180],[],[],[177,175,169,176,172],[171],[],[161],[174],[],[],[141],[192,191],[],[237,239,236,151,147,238],[194,195,112],[],[],[132,197,198],[199,200],[161],[135],[],[132,202,203],[],[141],[205],[],[],[208],[209],[212,219,210,213,214,211],[],[215,220,221],[223,216,224],[226,227,217],[218,230,229],[],[],[],[],[266,268,265,262,264,5,267,151,263,261,147],[],[222],[],[],[225],[],[],[228],[],[],[228],[240,232],[241,159,234,233,242],[192,234,25],[235,243],[253],[237],[],[],[235,234,231],[233],[],[161],[247,245,248,246,244,252],[],[],[249],[141,250],[251],[],[],[],[308,310,313,312,314,309,5,151,311,147],[254,132,255],[],[141],[257,277],[283,258],[259,289],[294,260],[299],[262],[],[215,273],[216,274],[275,217],[218,276],[],[257,259,260,256,258],[215],[216],[217],[218],[],[],[],[],[281,278,279],[],[282,280],[],[347,348,349,346,151,350,147],[],[132,284,269],[285,286],[],[287,288],[],[],[132,290,270],[292,291],[],[288,293],[],[132,295,271],[297,296],[],[288,298],[],[132,300,272],[301,302],[],[303,288],[],[321,305],[306,324],[307,329],[334],[309],[],[249,318],[250,319],[251,320],[],[306,305,307,304],[249],[250],[251],[],[],[],[323,322,281],[],[282,280],[132,315,325],[326,327],[],[288,328],[],[316,132,330],[332,331],[],[288,333],[],[317,132,335],[336,337],[],[288,338],[],[354,340],[341,365],[351,358,342,366],[343,367],[345,369,368,188,344],[345,370],[372],[347],[],[280,353],[],[339,340],[280],[341,351,374,280],[],[359],[356,357],[],[],[355],[355,361,360],[355],[357,362,363],[364,356],[],[],[345,342],[],[344],[],[282],[192,371],[],[375,373,352],[],[],[384,387,386,383,385,147],[391,377],[378,401],[379,394,380,366,388],[380,402],[403,381],[417,382],[426],[147],[385],[],[390,374],[380,376,382,377,381],[374],[374,378,388],[],[397],[393],[],[392],[392,394,378,389],[395],[392,398,399],[392],[393,400],[],[379],[132,395,389],[408],[405,396],[],[404],[404,406],[404,410,409],[404],[411,412],[],[],[414,396,415],[405,416],[],[],[420,422,419,423,418,421,406],[],[],[],[141],[141],[425,424],[],[],[132,407,427],[]],"attribute":["Expression Stmt ","Try Stmt ","Return Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name serialize ","Parameter Config config ","Parameter Object obj ","Block Stmt ","Name Expr config ","Simple Name config ","Name Expr config ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Class Or Interface Type Config ","Class Or Interface Type Object ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig ","Block Stmt ","Block Stmt ","ReturnStmt","Method Call Expr ","Simple Name serialize ","Method Call Expr ","Method Call Expr ","Simple Name config ","Simple Name obj ","Simple Name out ","Method Declaration ","Simple Name escapeUnicode ","Simple Name getClass ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name clearCurrentConfig ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Config config ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr config ","Name Expr obj ","Name Expr out ","Class Or Interface Type Config ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name serialize ","Simple Name obj ","Simple Name out ","Method Declaration ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name clearCurrentConfig ","Expression Stmt ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr obj ","Name Expr out ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Variable Declaration Expr ","Simple Name stream ","Name Expr JsonStreamPool ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Variable Declarator JsonStream stream = ","Class Or Interface Type JsonStream ","Method Call Expr ","Simple Name borrowJsonStream ","Block Stmt ","Catch Clause ","Block Stmt ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name reset ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Simple Name val ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonStreamPool ","Simple Name returnJsonStream ","Expression Stmt ","Expression Stmt ","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","FINAL","Void Type ","Simple Name writeVal ","Parameter String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Marker Annotation Expr @Override ","Method Declaration Throws ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Marker Annotation Expr @Override ","Void Type ","Simple Name close ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Primitive Type int ","Null Literal Expr ","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr out ","Name Expr cache ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name out ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"serialize-JsonStream-Object","callMethodNameReferTo":{"21":"srcmainjavacomjsoniterspiJsoniterSpi.java-getCurrentConfig-JsoniterSpi-"},"num":415,"succs":[[3,6,4,5,1,2],[2,134],[],[4],[],[11,9],[7],[0,13,12],[9],[],[8,19,9],[],[],[14,20,16,15,10],[],[22,21,17],[18,8,25],[],[],[],[31,34,30,1,35,33,2,32],[24,23],[],[],[],[],[42,27],[46,28,45],[47,29],[52],[31],[],[39,17],[18,40],[19,41],[26,27],[17],[18,49],[19,50],[],[],[],[44,36,43],[],[],[28],[29],[48,38,51,37],[],[],[],[66,68,1,64,67,65,2],[54,53],[],[],[56,73],[84,57,85,61,86,63],[87,58,88],[89,59],[93,60,63],[97,63],[62,102,101],[103,63],[106],[65],[],[71,49],[72,50],[55,56],[95,49],[91,50],[],[],[80],[75],[],[74],[74,76],[74,77],[74,78],[74,82,81],[74],[83,75],[],[57],[100,61],[63],[58,59],[60],[90,92,70,76],[],[],[114,113,111,1,112],[96,94,69,77],[],[],[136,137,141,139,1,138,134,135],[98,78,99],[],[166,167,165,169,168,138,1],[62],[],[],[104,105],[],[],[107,108,79],[],[],[117,110],[123],[112],[],[91,116],[109,110],[91],[],[119,118,115],[121,120],[],[122],[],[],[119,124,125],[127,126],[128],[122],[],[],[145,132,130],[146,147,142,131,132],[149],[133],[152],[],[136],[],[144,95],[140],[],[],[129],[95],[142,95,130],[],[131],[],[148],[],[151,150],[],[194,192,138,1,193,191,134],[143,155,153,154],[],[],[122],[170,157],[171,146,172,158,159],[12,159,99],[160,173],[174,162,161,175,176],[162,177],[180,163],[164,183],[188],[],[167],[],[],[164,162,156,163,159],[158],[],[148],[161],[],[],[128],[179,178],[],[224,226,223,138,134,225],[181,182,99],[],[],[119,184,185],[186,187],[148],[122],[],[119,189,190],[],[128],[192],[],[],[195],[196],[199,206,197,200,201,198],[],[202,207,208],[210,203,211],[213,214,204],[205,217,216],[],[],[],[],[253,255,252,249,251,1,254,138,250,248,134],[],[209],[],[],[212],[],[],[215],[],[],[215],[227,219],[228,146,221,220,229],[179,221,12],[222,230],[240],[224],[],[],[222,221,218],[220],[],[148],[234,232,235,233,231,239],[],[],[236],[128,237],[238],[],[],[],[295,297,300,299,301,296,1,138,298,134],[241,119,242],[],[128],[244,264],[270,245],[246,276],[281,247],[286],[249],[],[202,260],[203,261],[262,204],[205,263],[],[244,246,247,243,245],[202],[203],[204],[205],[],[],[],[],[268,265,266],[],[269,267],[],[334,335,336,333,138,337,134],[],[119,271,256],[272,273],[],[274,275],[],[],[119,277,257],[279,278],[],[275,280],[],[119,282,258],[284,283],[],[275,285],[],[119,287,259],[288,289],[],[290,275],[],[308,292],[293,311],[294,316],[321],[296],[],[236,305],[237,306],[238,307],[],[293,292,294,291],[236],[237],[238],[],[],[],[310,309,268],[],[269,267],[119,302,312],[313,314],[],[275,315],[],[303,119,317],[319,318],[],[275,320],[],[304,119,322],[323,324],[],[275,325],[],[341,327],[328,352],[338,345,329,353],[330,354],[332,356,355,175,331],[332,357],[359],[334],[],[267,340],[],[326,327],[267],[328,338,361,267],[],[346],[343,344],[],[],[342],[342,348,347],[342],[344,349,350],[351,343],[],[],[332,329],[],[331],[],[269],[179,358],[],[360,362,339],[],[],[371,374,373,370,372,134],[378,364],[365,388],[366,381,367,353,375],[367,389],[390,368],[369,404],[413],[134],[372],[],[377,361],[367,363,369,364,368],[361],[361,365,375],[],[384],[380],[],[379],[379,381,365,376],[382],[379,385,386],[379],[380,387],[],[366],[119,382,376],[395],[392,383],[],[391],[391,393],[391,397,396],[391],[398,399],[],[],[401,383,402],[392,403],[],[],[407,409,406,410,405,408,393],[],[],[],[128],[128],[412,411],[],[],[119,394,414],[]],"attribute":["Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name serialize ","Parameter Object obj ","Block Stmt ","Return Stmt ","Name Expr obj ","Simple Name obj ","Name Expr obj ","Class Or Interface Type Object ","ReturnStmt","Method Call Expr ","Simple Name serialize ","Method Call Expr ","Method Call Expr ","Simple Name config ","Simple Name obj ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name escapeUnicode ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Simple Name getClass ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Config config ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr config ","Name Expr obj ","Name Expr out ","Class Or Interface Type Config ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name serialize ","Simple Name obj ","Simple Name out ","Method Declaration ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name clearCurrentConfig ","Expression Stmt ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr obj ","Name Expr out ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Variable Declaration Expr ","Simple Name stream ","Name Expr JsonStreamPool ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Variable Declarator JsonStream stream = ","Class Or Interface Type JsonStream ","Method Call Expr ","Simple Name borrowJsonStream ","Block Stmt ","Catch Clause ","Block Stmt ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name reset ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Simple Name val ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonStreamPool ","Simple Name returnJsonStream ","Expression Stmt ","Expression Stmt ","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","FINAL","Void Type ","Simple Name writeVal ","Parameter String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Marker Annotation Expr @Override ","Method Declaration Throws ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Marker Annotation Expr @Override ","Void Type ","Simple Name close ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Primitive Type int ","Null Literal Expr ","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr out ","Name Expr cache ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name out ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"serialize-JsonStream-Config-TypeLiteral-Object","callMethodNameReferTo":{"68":"srcmainjavacomjsoniterspiJsoniterSpi.java-clearCurrentConfig-JsoniterSpi-","23":"srcmainjavacomjsoniterspiJsoniterSpi.java-setCurrentConfig-JsoniterSpi-Config","39":"srcmainjavacomjsoniterspiJsoniterSpi.java-clearCurrentConfig-JsoniterSpi-","58":"srcmainjavacomjsoniterspiJsoniterSpi.java-setCurrentConfig-JsoniterSpi-Config"},"num":431,"succs":[[1,23],[2,27,26],[4,3,29,28],[39],[8,9,10,7,5,12,11,6],[6,150],[],[8],[],[14,20],[21,17],[19,22],[1,0],[14],[],[13,14],[17],[],[19,35],[],[],[],[],[13,25,24],[],[],[2],[3],[],[36,31,32,30,18],[],[15,37,33],[34,16,38],[],[],[],[47,50,46,5,51,6,49,48],[],[],[41,40],[],[],[58,43],[62,44,61],[63,45],[68],[47],[],[55,33],[34,56],[35,57],[42,43],[33],[34,65],[35,66],[],[],[],[60,52,59],[],[],[44],[45],[64,54,67,53],[],[],[],[82,5,84,80,83,6,81],[70,69],[],[],[72,89],[100,73,101,77,102,79],[103,74,104],[105,75],[109,76,79],[113,79],[78,118,117],[119,79],[122],[81],[],[87,65],[88,66],[71,72],[111,65],[107,66],[],[],[96],[91],[],[90],[90,92],[90,93],[90,94],[90,98,97],[90],[99,91],[],[73],[116,77],[79],[74,75],[76],[106,108,86,92],[],[],[130,129,127,5,128],[112,110,85,93],[],[],[152,153,157,155,5,154,150,151],[114,94,115],[],[182,183,181,185,5,184,154],[78],[],[],[120,121],[],[],[123,124,95],[],[],[133,126],[139],[128],[],[107,132],[125,126],[107],[],[135,134,131],[137,136],[],[138],[],[],[135,140,141],[143,142],[144],[138],[],[],[161,148,146],[162,163,158,147,148],[165],[149],[168],[],[152],[],[160,111],[156],[],[],[145],[111],[158,111,146],[],[147],[],[164],[],[167,166],[],[210,208,154,5,209,207,150],[159,171,169,170],[],[],[138],[186,173],[187,162,188,174,175],[28,115,175],[176,189],[190,177,178,191,192],[178,193],[196,179],[180,199],[204],[],[183],[],[],[180,178,172,179,175],[174],[],[164],[177],[],[],[144],[195,194],[],[242,240,239,154,150,241],[197,198,115],[],[],[135,200,201],[202,203],[164],[138],[],[135,205,206],[],[144],[208],[],[],[211],[212],[215,222,213,216,214,217],[],[218,223,224],[226,219,227],[229,230,220],[221,233,232],[],[],[],[],[269,271,268,267,265,5,270,154,266,264,150],[],[225],[],[],[228],[],[],[231],[],[],[231],[243,235],[244,162,237,236,245],[195,237,28],[238,246],[256],[240],[],[],[238,237,234],[236],[],[164],[250,248,251,249,247,255],[],[],[252],[144,253],[254],[],[],[],[311,313,316,315,317,312,5,154,314,150],[257,135,258],[],[144],[260,280],[286,261],[262,292],[297,263],[302],[265],[],[218,276],[219,277],[278,220],[221,279],[],[260,262,263,259,261],[218],[219],[220],[221],[],[],[],[],[284,281,282],[],[285,283],[],[350,351,352,349,154,353,150],[],[135,287,272],[288,289],[],[290,291],[],[],[135,293,273],[295,294],[],[291,296],[],[135,298,274],[300,299],[],[291,301],[],[135,303,275],[304,305],[],[306,291],[],[324,308],[309,327],[310,332],[337],[312],[],[252,321],[253,322],[254,323],[],[309,308,307,310],[252],[253],[254],[],[],[],[326,325,284],[],[285,283],[135,318,328],[329,330],[],[291,331],[],[319,135,333],[335,334],[],[291,336],[],[320,135,338],[339,340],[],[291,341],[],[357,343],[344,368],[354,361,345,369],[346,370],[348,372,371,191,347],[348,373],[375],[350],[],[356,283],[],[342,343],[283],[344,354,377,283],[],[362],[359,360],[],[],[358],[358,364,363],[358],[360,365,366],[367,359],[],[],[348,345],[],[347],[],[285],[195,374],[],[376,378,355],[],[],[387,389,390,386,388,150],[394,380],[381,404],[382,397,383,369,391],[383,405],[406,384],[385,420],[429],[150],[388],[],[393,377],[383,379,385,380,384],[377],[377,381,391],[],[400],[396],[],[395],[395,397,381,392],[398],[395,401,402],[395],[396,403],[],[382],[135,398,392],[411],[408,399],[],[407],[407,409],[407,413,412],[407],[414,415],[],[],[417,399,418],[408,419],[],[],[425,423,422,426,421,409,424],[],[],[],[144],[144],[428,427],[],[],[135,410,430],[]],"attribute":["Expression Stmt ","Try Stmt ","Return Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name serialize ","Parameter Config config ","Parameter TypeLiteral typeLiteral ","Parameter Object obj ","Block Stmt ","Name Expr config ","Simple Name config ","Name Expr config ","Name Expr typeLiteral ","Simple Name typeLiteral ","Name Expr obj ","Simple Name obj ","Class Or Interface Type Config ","Class Or Interface Type TypeLiteral ","Class Or Interface Type Object ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig ","Block Stmt ","Block Stmt ","ReturnStmt","Method Call Expr ","Simple Name serialize ","Method Call Expr ","Method Call Expr ","Simple Name config ","Simple Name obj ","Simple Name out ","Method Declaration ","Simple Name escapeUnicode ","Simple Name getType ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name clearCurrentConfig ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Config config ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr config ","Name Expr obj ","Name Expr out ","Class Or Interface Type Config ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name serialize ","Simple Name obj ","Simple Name out ","Method Declaration ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name clearCurrentConfig ","Expression Stmt ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr obj ","Name Expr out ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Variable Declaration Expr ","Simple Name stream ","Name Expr JsonStreamPool ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Variable Declarator JsonStream stream = ","Class Or Interface Type JsonStream ","Method Call Expr ","Simple Name borrowJsonStream ","Block Stmt ","Catch Clause ","Block Stmt ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name reset ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Simple Name val ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonStreamPool ","Simple Name returnJsonStream ","Expression Stmt ","Expression Stmt ","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","FINAL","Void Type ","Simple Name writeVal ","Parameter String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Marker Annotation Expr @Override ","Method Declaration Throws ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Marker Annotation Expr @Override ","Void Type ","Simple Name close ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Primitive Type int ","Null Literal Expr ","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr out ","Name Expr cache ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name out ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"serialize-JsonStream-TypeLiteral-Object","callMethodNameReferTo":{"24":"srcmainjavacomjsoniterspiJsoniterSpi.java-getCurrentConfig-JsoniterSpi-"},"num":418,"succs":[[7,5,3,4,6,1,2],[2,137],[],[4],[],[10,13],[12,14],[8],[16,0,15],[10],[],[12,22],[],[],[],[],[19,23,11,17,18],[],[25,24,20],[21,28,9],[],[],[],[34,37,33,1,38,2,36,35],[27,26],[],[],[],[],[45,30],[49,31,48],[50,32],[55],[34],[],[42,20],[21,43],[22,44],[29,30],[20],[21,52],[22,53],[],[],[],[47,39,46],[],[],[31],[32],[51,41,54,40],[],[],[],[69,1,71,67,70,2,68],[57,56],[],[],[59,76],[87,60,88,64,89,66],[90,61,91],[92,62],[63,96,66],[100,66],[65,105,104],[106,66],[109],[68],[],[74,52],[75,53],[58,59],[98,52],[94,53],[],[],[83],[78],[],[77],[77,79],[77,80],[77,81],[77,85,84],[77],[86,78],[],[60],[103,64],[66],[61,62],[63],[93,95,73,79],[],[],[117,116,114,1,115],[99,97,72,80],[],[],[139,140,144,142,141,1,137,138],[101,81,102],[],[169,170,168,172,1,171,141],[65],[],[],[107,108],[],[],[110,111,82],[],[],[120,113],[126],[115],[],[94,119],[112,113],[94],[],[122,121,118],[124,123],[],[125],[],[],[122,127,128],[130,129],[131],[125],[],[],[148,135,133],[149,150,145,134,135],[152],[136],[155],[],[139],[],[147,98],[143],[],[],[132],[98],[145,98,133],[],[134],[],[151],[],[154,153],[],[197,195,141,1,196,194,137],[146,158,156,157],[],[],[125],[173,160],[174,149,175,161,162],[15,162,102],[163,176],[177,164,165,178,179],[165,180],[183,166],[167,186],[191],[],[170],[],[],[167,165,159,166,162],[161],[],[151],[164],[],[],[131],[182,181],[],[227,229,226,141,137,228],[184,185,102],[],[],[122,187,188],[189,190],[151],[125],[],[122,192,193],[],[131],[195],[],[],[198],[199],[202,209,200,203,204,201],[],[205,210,211],[213,206,214],[216,217,207],[208,220,219],[],[],[],[],[256,258,255,254,252,1,257,141,253,251,137],[],[212],[],[],[215],[],[],[218],[],[],[218],[230,222],[231,149,224,223,232],[182,224,15],[225,233],[243],[227],[],[],[225,224,221],[223],[],[151],[237,235,238,236,234,242],[],[],[239],[131,240],[241],[],[],[],[298,303,300,304,302,299,1,141,301,137],[244,122,245],[],[131],[247,267],[273,248],[249,279],[284,250],[289],[252],[],[205,263],[206,264],[265,207],[208,266],[],[247,249,250,246,248],[205],[206],[207],[208],[],[],[],[],[271,268,269],[],[272,270],[],[337,338,339,336,141,340,137],[],[122,274,259],[275,276],[],[277,278],[],[],[122,280,260],[282,281],[],[278,283],[],[122,285,261],[287,286],[],[278,288],[],[122,290,262],[291,292],[],[293,278],[],[311,295],[296,314],[297,319],[324],[299],[],[239,308],[240,309],[241,310],[],[296,295,297,294],[239],[240],[241],[],[],[],[313,312,271],[],[272,270],[122,305,315],[316,317],[],[278,318],[],[306,122,320],[322,321],[],[278,323],[],[307,122,325],[326,327],[],[278,328],[],[344,330],[331,355],[341,348,332,356],[333,357],[335,359,358,178,334],[335,360],[362],[337],[],[343,270],[],[329,330],[270],[331,341,364,270],[],[349],[346,347],[],[],[345],[345,351,350],[345],[347,352,353],[354,346],[],[],[335,332],[],[334],[],[272],[182,361],[],[363,365,342],[],[],[374,377,376,373,375,137],[381,367],[368,391],[369,384,370,356,378],[370,392],[393,371],[372,407],[416],[137],[375],[],[380,364],[370,366,372,367,371],[364],[364,368,378],[],[387],[383],[],[382],[382,384,368,379],[385],[382,388,389],[382],[383,390],[],[369],[122,385,379],[398],[395,386],[],[394],[394,396],[394,400,399],[394],[401,402],[],[],[404,386,405],[395,406],[],[],[410,412,409,413,408,411,396],[],[],[],[131],[131],[415,414],[],[],[122,397,417],[]],"attribute":["Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name serialize ","Parameter TypeLiteral typeLiteral ","Parameter Object obj ","Block Stmt ","Return Stmt ","Name Expr typeLiteral ","Simple Name typeLiteral ","Name Expr obj ","Simple Name obj ","Class Or Interface Type TypeLiteral ","Simple Name length ","ReturnStmt","Method Call Expr ","Simple Name serialize ","Method Call Expr ","Method Call Expr ","Simple Name config ","Simple Name obj ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name escapeUnicode ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Simple Name getType ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Config config ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr config ","Name Expr obj ","Name Expr out ","Class Or Interface Type Config ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name serialize ","Simple Name obj ","Simple Name out ","Method Declaration ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name clearCurrentConfig ","Expression Stmt ","Try Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Void Type ","Simple Name serialize ","Parameter Object obj ","Parameter OutputStream out ","Block Stmt ","Name Expr obj ","Name Expr out ","Class Or Interface Type Object ","Class Or Interface Type OutputStream ","Variable Declaration Expr ","Simple Name stream ","Name Expr JsonStreamPool ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Variable Declarator JsonStream stream = ","Class Or Interface Type JsonStream ","Method Call Expr ","Simple Name borrowJsonStream ","Block Stmt ","Catch Clause ","Block Stmt ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name reset ","Simple Name out ","Method Declaration ","Method Call Expr ","Simple Name writeVal ","Simple Name val ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonStreamPool ","Simple Name returnJsonStream ","Expression Stmt ","Expression Stmt ","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","FINAL","Void Type ","Simple Name writeVal ","Parameter String val ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr val ","Name Expr val ","Class Or Interface Type String ","Block Stmt ","EQUALS","Null Literal Expr ","NullLiteralExpr","Method Call Expr ","Marker Annotation Expr @Override ","Method Declaration Throws ","Expression Stmt ","Name Expr StreamImplString ","Simple Name writeString ","This Expr ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Marker Annotation Expr @Override ","Void Type ","Simple Name close ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Primitive Type int ","Null Literal Expr ","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr out ","Name Expr cache ","Assign Expr ASSIGN ","Field Access Expr ","Null Literal Expr ","This Expr ","Simple Name out ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"serialize-JsonStream-boolean-Type-Object","callMethodNameReferTo":{"82":"srcmainjavacomjsoniteroutputJsonStreamPool.java-returnJsonStream-JsonStreamPool-JsonStream","52":"srcmainjavacomjsoniteroutputJsonStream.java-writeVal-JsonStream-TypeLiteral<T>-T","41":"srcmainjavacomjsoniteroutputJsonStreamPool.java-borrowJsonStream-JsonStreamPool-","46":"srcmainjavacomjsoniteroutputJsonStream.java-reset-JsonStream-OutputStream"},"num":405,"succs":[[1,29],[44,43,11,2,45,9],[3,46],[52,4],[5,7,57],[21,7,6],[12,11,58,59],[8],[12,67,11,58],[10,78,77],[11,79],[82],[18,19,20,15,17,13,16,14],[111,14],[],[16],[],[21,26],[27,23],[28,25],[1,0],[],[23,54],[],[55,25],[],[],[],[],[39],[31],[],[30],[30,32],[30,33],[30,34],[30,33],[35,30,36],[30,37],[30,41,40],[30],[42,31],[],[3,2,4],[76,9],[11],[32,50,47,48],[],[51,49],[],[90,89,87,88,13],[],[22,53,56,24,33],[],[],[],[115,119,117,113,116,13,114,111,112],[6],[],[63,61,62,60],[],[34,64],[65],[35,66],[],[],[],[72,69,70,71,68],[],[36,73],[65],[37,74],[75],[],[],[],[10],[],[],[80,81],[],[],[83,84,38],[],[],[93,86],[99],[88],[],[49,92],[85,86],[49],[],[95,94,91],[97,96],[],[98],[],[],[95,100,101],[103,102],[65],[98],[],[107,105,128],[106,107,129,130,122],[131],[109,110,108],[109,134],[110,142],[151],[],[113],[],[124,54],[55,127],[118],[],[],[104],[54],[120,54],[55],[55,105,122],[126,125],[],[],[],[106],[51],[],[133,132],[],[163,161,116,13,162,160,111],[137],[136],[],[139,138,136],[136],[141,140],[],[193,192,194,13],[145],[135,120],[143],[143,146,147],[143],[135,148,149],[],[150,120],[],[154,152,153,123],[155,157,156,144],[],[98],[],[],[158,121],[],[],[161],[],[],[164],[165],[168,175,166,169,167,170],[],[171,176,177],[179,172,180],[182,183,173],[174,186,185],[],[],[],[],[216,218,215,212,214,217,13,116,213,211,111],[],[178],[],[],[181],[],[],[184],[],[],[184],[188,195],[198,190,189,199,197],[141,190,58,196],[200,191],[141,205,58],[193],[],[190,187,191],[189],[188],[],[],[51],[95,201,202],[],[204,203],[],[],[],[207,227],[233,208],[209,239],[244,210],[249],[212],[],[171,223],[172,224],[225,173],[174,226],[],[207,209,210,206,208],[171],[172],[173],[174],[],[],[],[],[231,228,229],[],[232,230],[],[262,263,264,261,116,265,111],[],[95,234,219],[235,236],[],[237,238],[],[],[95,240,220],[241,242],[],[238,243],[],[95,245,221],[247,246],[],[238,248],[],[95,250,222],[251,252],[],[253,238],[],[269,255],[256,280],[266,273,257,281],[258,282],[260,285,283,284,259],[260,286],[289],[262],[],[230,268],[],[254,255],[230],[256,266,291,230],[],[274],[271,272],[],[],[270],[270,276,275],[270],[272,277,278],[279,271],[],[],[260,257],[],[259],[],[],[232],[288,287],[],[301,299,298,116,111,300],[290,292,267],[],[],[326,328,329,325,327,111],[302,294],[303,130,296,295,304],[288,296,58],[297,305],[315],[299],[],[],[297,296,293],[295],[],[51],[309,307,310,308,306,314],[],[],[311],[65,312],[313],[],[],[],[374,376,379,378,380,375,13,116,377,111],[316,95,317],[],[65],[333,319],[320,343],[321,336,322,281,330],[322,344],[345,323],[324,359],[368],[111],[327],[],[332,291],[322,318,324,319,323],[291],[291,320,330],[],[339],[335],[],[334],[334,336,320,331],[337],[334,340,341],[334],[335,342],[],[321],[95,337,331],[350],[347,338],[],[346],[346,348],[346,352,351],[346],[353,354],[],[],[356,338,357],[347,358],[],[],[364,362,361,365,360,363,348],[],[],[],[65],[65],[367,366],[],[],[95,349,369],[],[387,371],[372,390],[373,395],[400],[375],[],[311,384],[312,385],[313,386],[],[372,371,373,370],[311],[312],[313],[],[],[],[389,388,231],[],[232,230],[95,381,391],[392,393],[],[238,394],[],[382,95,396],[398,397],[],[238,399],[],[383,95,401],[402,403],[],[238,404],[]],"attribute":["Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Name Expr escapeUnicode ","Return Stmt ","Block Stmt ","Return Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type String ","Simple Name serialize ","Parameter boolean escapeUnicode ","Parameter Type type ","Parameter Object obj ","Block Stmt ","Simple Name escapeUnicode ","Name Expr type ","Simple Name type ","Name Expr obj ","Simple Name obj ","Primitive Type boolean ","Class Or Interface Type Type ","Class Or Interface Type Object ","Variable Declaration Expr ","Simple Name stream ","Name Expr JsonStreamPool ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Name Expr stream ","Variable Declarator JsonStream stream = ","Class Or Interface Type JsonStream ","Method Call Expr ","Simple Name borrowJsonStream ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Simple Name reset ","Null Literal Expr ","Simple Name out ","Method Declaration ","NullLiteralExpr","Method Call Expr ","Simple Name writeVal ","Simple Name typeLiteral ","Simple Name obj ","Method Declaration Throws ","Block Stmt ","ReturnStmt","Object Creation Expr String Optional.empty Optional.empty ","Class Or Interface Type String ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name buf ","Zero IntegerLiteralExpr","Simple Name count ","Object Creation Expr String Optional.empty Optional.empty ","Class Or Interface Type String ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","String Literal Expr Not Empty  ","Simple Name buf ","Simple Name count ","StringLiteralExpr","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonStreamPool ","Simple Name returnJsonStream ","Expression Stmt ","Expression Stmt ","Void Type ","Class Or Interface Type Slice ","Parameter OutputStream out ","Block Stmt ","Primitive Type int ","Class Or Interface Type OutputStream ","Assign Expr ASSIGN ","Class Or Interface Type CtMethod ","ASSIGN","This Expr ","Simple Name out ","ThisExpr","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Primitive Type long ","Simple Name count ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","FINAL","This Expr ","Simple Name writeVal ","Parameter TypeLiteral<T> typeLiteral ","Parameter T obj ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr typeLiteral ","Name Expr typeLiteral ","Name Expr obj ","Name Expr obj ","Class Or Interface Type TypeLiteral ","Simple Name TypeLiteral ","Class Or Interface Type T ","Class Or Interface Type T ","Block Stmt ","This Expr ","EQUALS","Method Call Expr ","Simple Name writeNull ","Method Declaration Throws ","Variable Declaration Expr ","String Literal Expr Not Empty  ","Simple Name config ","Variable Declarator Config config = ","Class Or Interface Type Config ","Method Call Expr ","Simple Name currentConfig ","Method Declaration ","Variable Declaration Expr ","Simple Name cacheKey ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Class Or Interface Type String ","Method Call Expr ","Simple Name getEncoderCacheKey ","Method Call Expr ","Simple Name getType ","Method Call Expr ","Method Call Expr ","Simple Name encode ","This Expr ","Name Expr Codegen ","Simple Name getEncoder ","Method Call Expr ","Simple Name getType ","Type Parameter T ","Void Type ","Simple Name writeNull ","Class Or Interface Type IOException ","Block Stmt ","Expression Stmt ","Method Call Expr ","Simple Name write ","Cast Expr ","Cast Expr ","Cast Expr ","Cast Expr ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Simple Name b4 ","Method Declaration Throws ","Primitive Type byte ","Char Literal Expr 'n' ","'n'","Primitive Type byte ","Char Literal Expr 'u' ","'u'","Simple Name data ","Primitive Type int ","'l'","Primitive Type byte ","Char Literal Expr 'l' ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Config ","Simple Name currentConfig ","Block Stmt ","Block Stmt ","Name Expr configCache ","Name Expr configCache ","NOT_EQUALS","Null Literal Expr ","Assign Expr ASSIGN ","Name Expr configCache ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name getCurrentConfig ","Name Expr configCache ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Parameter byte b4 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Name Expr b4 ","Name Expr iter ","Simple Name head ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Simple Name minimal ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Return Stmt ","Name Expr buf ","Unary Expr ++ ","Name Expr cache ","POSTFIX_INCREMENT","Expression Stmt ","Array Access Expr count++ ","Primitive Type int ","Unary Expr ++ ","Simple Name bound ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr buf ","Name Expr binding ","Name Expr count ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name ensure ","Parameter int minimal ","Class Or Interface Type IOException ","Block Stmt ","Name Expr current ","Primitive Type boolean ","Primitive Type int ","Variable Declaration Expr ","Switch Entry Stmt ","Primitive Type int ","Name Expr count ","Switch Entry Stmt ","Variable Declarator int available = ","Name Expr ctx ","Binary Expr MINUS ","Class Or Interface Type JsonStream ","MINUS","Simple Name length ","Block Stmt ","LESS","Block Stmt ","Name Expr count ","GREATER","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name flushBuffer ","Method Declaration Throws ","Method Call Expr ","Name Expr jsoniterObj ","Class Or Interface Type Encoder ","Method Declaration ","If Stmt ","Name Expr jsoniterObj ","Return Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name flushBuffer ","Class Or Interface Type IOException ","Block Stmt ","Block Stmt ","Name Expr out ","Null Literal Expr ","Method Call Expr ","Name Expr ctx ","Name Expr cache ","Simple Name add ","Integer Literal Expr Zero  ","Name Expr count ","Simple Name b1 ","Simple Name b2 ","Simple Name b3 ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr count ","Integer Literal Expr Zero  ","Expression Stmt ","If Stmt ","Binary Expr LESS ","Name Expr CodegenImplNative ","Expression Stmt ","Expression Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name growAtLeast ","Parameter int minimal ","Block Stmt ","Name Expr minimal ","Name Expr minimal ","Simple Name obj ","Variable Declaration Expr ","Simple Name toGrow ","Name Expr buf ","Name Expr toGrow ","Name Expr toGrow ","Name Expr toGrow ","Variable Declarator int toGrow = ","Primitive Type int ","Field Access Expr ","Simple Name length ","Block Stmt ","Name Expr JsonIteratorPool ","Variable Declaration Expr ","Method Call Expr ","Name Expr buf ","Name Expr stream ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Simple Name append ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Simple Name length ","Method Call Expr ","Simple Name append ","Simple Name arraycopy ","Name Expr buf ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr buf ","Simple Name length ","Return Stmt ","Name Expr buf ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Void Type ","Simple Name write ","Parameter byte b1 ","Parameter byte b2 ","Parameter byte b3 ","Class Or Interface Type IOException ","Block Stmt ","Name Expr b1 ","Name Expr b2 ","Name Expr b3 ","Primitive Type byte ","Primitive Type byte ","Primitive Type byte ","Method Call Expr ","Simple Name append ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Method Declaration ","Class Or Interface Type Any ","Unary Expr ++ ","Simple Name value ","Assign Expr ASSIGN ","Class Or Interface Type JsonProperty ","Name Expr buf ","Unary Expr ++ ","Name Expr count ","Assign Expr ASSIGN ","Array Access Expr count++ ","Name Expr ctx ","Name Expr encoder ","Name Expr lines "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"setMode-JsonStream-EncodingMode","callMethodNameReferTo":{"25":"srcmainjavacomjsoniterspiJsoniterSpi.java-getDefaultConfig-JsoniterSpi-","28":"srcmainjavacomjsoniterspiJsoniterSpi.java-setDefaultConfig-JsoniterSpi-Config","31":"srcmainjavacomjsoniterspiJsoniterSpi.java-setCurrentConfig-JsoniterSpi-Config"},"num":34,"succs":[[13,1],[2,28],[31],[9,7,4,6,5,8],[5],[],[7],[],[11,12],[2,1,0],[11],[],[],[18],[15,10],[],[14],[14,16],[19,14,20],[14],[21,22],[24,10,23],[],[26,25],[],[15,27],[],[],[29,30,16],[],[],[33,17,32],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name setMode ","Parameter EncodingMode mode ","Block Stmt ","Name Expr mode ","Simple Name mode ","Class Or Interface Type EncodingMode ","Variable Declaration Expr ","Simple Name newConfig ","Name Expr JsoniterSpi ","Name Expr newConfig ","Name Expr newConfig ","Variable Declarator Config newConfig = ","Class Or Interface Type Config ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name encodingMode ","Method Call Expr ","Simple Name copyBuilder ","Simple Name getDefaultConfig ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setDefaultConfig ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"setIndentionStep-JsonStream-int","callMethodNameReferTo":{"25":"srcmainjavacomjsoniterspiJsoniterSpi.java-getDefaultConfig-JsoniterSpi-","28":"srcmainjavacomjsoniterspiJsoniterSpi.java-setDefaultConfig-JsoniterSpi-Config","31":"srcmainjavacomjsoniterspiJsoniterSpi.java-setCurrentConfig-JsoniterSpi-Config"},"num":34,"succs":[[13,1],[28,2],[31],[9,6,7,8,4,5],[5],[],[7],[],[11,12],[0,1,2],[11],[],[],[18],[10,15],[],[14],[16,14],[14,19,20],[14],[21,22],[10,24,23],[],[26,25],[],[27,15],[],[],[29,16,30],[],[],[32,33,17],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name setIndentionStep ","Parameter int indentionStep ","Block Stmt ","Name Expr indentionStep ","Simple Name indentionStep ","Primitive Type int ","Variable Declaration Expr ","Simple Name newConfig ","Name Expr JsoniterSpi ","Name Expr newConfig ","Name Expr newConfig ","Variable Declarator Config newConfig = ","Class Or Interface Type Config ","Method Call Expr ","Method Call Expr ","Simple Name build ","Method Call Expr ","Simple Name indentionStep ","Method Call Expr ","Simple Name copyBuilder ","Simple Name getDefaultConfig ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setDefaultConfig ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name setCurrentConfig "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"registerNativeEncoder-JsonStream-Class-Encoder.ReflectionEncoder","callMethodNameReferTo":{},"num":22,"succs":[[3,7,6,1,4,5,2],[2],[],[4],[],[9,12],[11,13],[16],[9],[],[11],[],[],[15,14],[],[],[17],[10,8,19,18],[20,21],[],[],[]],"attribute":["Method Declaration ","PUBLIC","STATIC","Name Expr iter ","Simple Name registerNativeEncoder ","Parameter Class clazz ","Parameter Encoder.ReflectionEncoder encoder ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr encoder ","Simple Name encoder ","Class Or Interface Type Class ","Class Or Interface Type ReflectionEncoder ","Class Or Interface Type Encoder ","Simple Name ReflectionEncoder ","Expression Stmt ","Method Call Expr ","Field Access Expr ","Simple Name put ","Name Expr CodegenImplNative ","Simple Name NATIVE_ENCODERS "]}
{"fileName":"srcmainjavacomjsoniteroutputJsonStream.java","version":"0.9.22","methodName":"buffer-JsonStream-","callMethodNameReferTo":{},"num":13,"succs":[[3,1,2,4],[],[3],[],[5],[0,7,6],[],[8,11,10,9],[],[],[12],[],[]],"attribute":["Method Declaration ","PUBLIC","Class Or Interface Type Slice ","Simple Name buffer ","Block Stmt ","Return Stmt ","ReturnStmt","Object Creation Expr Slice Optional.empty Optional.empty ","Class Or Interface Type Slice ","Name Expr buf ","Integer Literal Expr Zero  ","Name Expr count ","Zero IntegerLiteralExpr"]}
