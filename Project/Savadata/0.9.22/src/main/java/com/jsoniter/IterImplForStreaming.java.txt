{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","hasMethodName":["readObjectFieldAsHash-IterImplForStreaming-JsonIterator","readObjectFieldAsSlice-IterImplForStreaming-JsonIterator","skipArray-IterImplForStreaming-JsonIterator","skipObject-IterImplForStreaming-JsonIterator","skipString-IterImplForStreaming-JsonIterator","skipUntilBreak-IterImplForStreaming-JsonIterator","skipNumber-IterImplForStreaming-JsonIterator","readSlice-IterImplForStreaming-JsonIterator","nextToken-IterImplForStreaming-JsonIterator","loadMore-IterImplForStreaming-JsonIterator","keepSkippedBytesThenRead-IterImplForStreaming-JsonIterator","readByte-IterImplForStreaming-JsonIterator","readAny-IterImplForStreaming-JsonIterator","copySkippedBytes-IterImplForStreaming-JsonIterator","skipFixedBytes-IterImplForStreaming-JsonIterator-int","updateStringCopyBound-IterImplForStreaming-JsonIterator-int","readStringSlowPath-IterImplForStreaming-JsonIterator-int","readLongSlowPath-IterImplForStreaming-JsonIterator-long","readIntSlowPath-IterImplForStreaming-JsonIterator-int","readDoubleSlowPath-IterImplForStreaming-JsonIterator","readNumber-IterImplForStreaming-JsonIterator","readDouble-IterImplForStreaming-JsonIterator","readLong-IterImplForStreaming-JsonIterator-byte","readInt-IterImplForStreaming-JsonIterator-byte","assertNotLeadingZero-IterImplForStreaming-JsonIterator"]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readObjectFieldAsHash-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":483,"succs":[[1,50],[52,53,51,2,3],[58,3],[63,4],[5,73],[74,6],[7,84],[15,8,92],[9,16,86,93,94],[97,10],[102,11],[104,103,12,78,13],[16,105],[14,106],[15,108],[96,87,8],[111,17],[79,112,103,23,18],[113,19],[20,119],[22,52,120,121,21],[22,124],[129,23,26,128],[131,24],[25,132,133],[137],[30,31,34,36,32,27,33,28,29],[28],[29],[],[31],[],[38,49],[35],[],[],[4,0,3],[38,55],[],[37,38,1],[38,39,43,48],[38,43,42,40],[38,43,41],[38,44,42],[76,85],[55,43],[45,43,20],[43,46,135],[47,43,24],[],[2],[37,56,54],[],[57],[],[],[166,168,33,164,165,29,28,167],[],[59,39,60,61],[],[62],[62],[],[69],[68,65,66,67],[75,78],[],[64],[67],[70,66,71],[66],[72],[],[7,5,16,23,6],[80],[76,65,42,77],[85,87],[],[75],[65,75],[81,82,77],[77],[83],[],[88],[40],[76,85],[85,86],[90,85,89],[85],[91,40],[],[9,14,13,10],[],[95,41],[],[],[98,99,75],[],[76,100],[101,42],[],[12],[],[57],[],[107,65,64],[],[110,109,67],[],[72],[22,18,19],[57],[98,115,114],[43,116],[44,118,117],[],[],[72],[21],[45,122,56],[123],[],[],[126,46,127,125],[],[62],[62],[],[68,130],[],[25],[136,47,134],[],[],[],[229,33,27,232,233,231,28,29,230],[139,140,138,48],[],[62],[62],[142,176],[143,177,160,144],[182,144],[186,179,145,161,93],[188,146],[147,148,154,152,157,150],[189,148,154,152,157,150],[196,149,150],[197],[151,196,152],[198],[153,196,154],[199],[155,156,196],[200],[201,160],[158,196,159],[202,159],[190,56,160,128],[144,96,180],[207,162],[163,208,133],[56,128,210],[165],[],[175,55],[],[141],[172,55,174],[172,55,169],[172,55,170],[173,55,171],[181,178],[172,135],[],[142,161],[145,146],[169],[173,178],[179,178],[180,178],[183,184,178],[178],[169,185],[],[170,187],[],[191],[171,181],[147,189],[189,192,193],[189],[194,181],[171,195],[],[],[],[],[],[],[],[204,98,203],[172,205],[206,173,117],[],[72],[163],[136,174,209],[],[83],[244,212],[245,214,213,103,246],[214,136,249,128],[251,215],[52,217,252,253,216],[136,217,257,128],[261,218],[219,225,274],[275,225,263,220,93],[223,276,221],[222,103,277,223,264],[136,279,128,228],[224],[280,228],[227,226],[227,285],[289,228],[136,128,292],[230],[],[243,135],[],[214,217,218,228,211],[135],[234,135],[259,235,135,215],[236,135],[135,237],[238,135],[238,135],[242,240,239],[262,219,263,265],[],[213],[234,247],[248],[],[],[250],[],[216],[235,254],[255,256],[],[72],[],[236,260,258],[],[],[324,321,323,322,319,320,33,28],[266],[238,237],[262],[262,219,263],[262,219,264,221],[262,267,268],[262],[271,269,270],[237,272],[],[238,273],[],[],[220],[72],[222],[256,278],[72],[250],[282,239,281,283],[],[62],[117,265,284],[62],[286,98,287],[240,288],[83],[],[242,98,290],[241,291],[],[293],[],[295,354],[296,366],[297,373,303],[375,298,374,376,303],[387,299],[402,300],[409,301],[417,302],[307,420],[306,304,305],[305,432],[306,438],[307,448],[460,308],[464,315,309],[315,362,465,310,93],[311,466,313],[103,467,312,363,313],[469,260,318,128],[314],[470,318],[316,317],[475,317],[478,318],[260,482,128],[28],[321],[],[259,353],[],[294,296,307,295,318,308],[259],[259,325],[259,326],[259,297,327],[259,328,297],[259,297,329],[259,297,330],[259,331,297],[259,334,297,332],[388,389],[297,333],[335,297,333],[336,297,333],[259,297,327],[259,297,338],[259,297,339],[259,297,340],[259,341,297],[259,342,297],[259,343,297],[259,337,297,344],[259,345],[346],[349,346],[370,361],[347,352,351,348],[349,370,361],[362,309,359,364],[],[358],[335,337,356,357,336,358],[367,369],[367,356],[365],[343,355,344,345,361,360,358],[370,371],[370,357,360],[359],[362,309,359],[363,311,309,359],[358],[368],[368,330,329],[372],[367],[368,338,339],[370],[368],[299,300,298,301,302],[103,377,378],[],[380,381,93],[379,325],[83],[],[382,326],[384,385,383],[],[386,327],[],[72],[],[390],[328],[388],[388,391,392],[388],[393,394],[],[],[398,397,396],[399,400],[],[72],[328,401],[],[],[98,367,403],[404,406,405],[407,329],[],[408,330],[],[],[411,413,389,414,410,369,412],[],[],[331,415],[416,332],[83],[],[],[98,334,418],[419,333],[],[98,355,421],[356,425,424,423,422],[335,426],[],[427,336],[428,357,405],[],[],[430,429],[337,431],[],[],[98,370,433],[435,434,405],[436,338],[437,339],[],[],[440,439,443,371,444,441,442],[],[],[340,445],[341,446],[342,447],[83],[],[],[],[98,449,359],[452,453,360,451,450],[343,454],[],[455,344],[456,361,405],[],[],[457,458],[459,345],[],[],[461,98,462],[346,463],[83],[],[310],[72],[312],[256,468],[72],[250],[472,347,473,471],[],[62],[474,117,364],[62],[98,349,476],[477,348],[],[98,480,479],[350,481],[352,117,351],[],[293]],"attribute":["If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Expression Stmt ","For Stmt ","Expression Stmt ","Method Call Expr ","Method Declaration ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Class Or Interface Type String ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Unary Expr ! ","Throw Stmt ","Method Declaration Throws ","PUBLIC","STATIC","FINAL","Primitive Type int ","Simple Name readObjectFieldAsHash ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr size ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Null Literal Expr ","Name Expr pool ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Method Call Expr ","NOT_EQUALS","Char Literal Expr ''' ","Simple Name nextToken ","Simple Name iter ","Method Declaration Throws ","'''","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Name Expr iter ","Name Expr c ","Simple Name hash ","Name Expr hash ","Name Expr hash ","Variable Declarator long hash = ","Primitive Type long ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Variable Declaration Expr ","Name Expr c ","Name Expr i ","Simple Name c ","Simple Name e ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Name Expr e ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr i ","Name Expr i ","Name Expr i ","Return Stmt ","Simple Name val ","Field Access Expr ","Simple Name head ","Block Stmt ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Assign Expr ASSIGN ","ASSIGN","Array Access Expr i ","Field Access Expr ","Simple Name buf ","Block Stmt ","EQUALS","Char Literal Expr ''' ","break;","Simple Name addMethod ","XOR","Assign Expr MULTIPLY ","MULTIPLY","Integer Literal Expr Note Zero  ","Block Stmt ","Char Literal Expr ''' ","Assign Expr ASSIGN ","Field Access Expr ","Binary Expr PLUS ","Name Expr iter ","PLUS","Name Expr i ","Block Stmt ","Method Call Expr ","Char Literal Expr ':' ","Simple Name nextToken ","':'","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","ReturnStmt","Cast Expr ","Primitive Type int ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr ' ' ","Switch Entry Stmt ","Primitive Type char ","Switch Entry Stmt ","Char Literal Expr 't' ","Switch Entry Stmt ","Char Literal Expr 'r' ","Continue Stmt ","Switch Entry Stmt ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Return Stmt ","Primitive Type byte ","Simple Name nextToken ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Primitive Type byte ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Unary Expr ++ ","Field Access Expr ","Simple Name head ","Field Access Expr ","Simple Name tail ","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","SwitchEntryStmt","' '","'n'","'t'","'r'","continue;","Assign Expr ASSIGN ","Switch Entry Stmt ","Binary Expr PLUS ","Simple Name head ","Integer Literal Expr Note Zero  ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Integer Literal Expr Zero  ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readObjectFieldAsSlice-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{"97":"srcmainjavacomjsoniterspiSlice.java-reset-Slice-byte[]-int-int","3":"srcmainjavacomjsoniterCodegenAccess.java-skipWhitespacesWithoutLoadMore-CodegenAccess-JsonIterator","358":"srcmainjavacomjsoniterspiSlice.java-reset-Slice-byte[]-int-int","73":"srcmainjavacomjsoniterspiSlice.java-tail-Slice-","75":"srcmainjavacomjsoniterspiSlice.java-head-Slice-","92":"srcmainjavacomjsoniterspiSlice.java-head-Slice-","220":"srcmainjavacomjsoniterspiSlice.java-reset-Slice-byte[]-int-int"},"num":707,"succs":[[1,39],[54,2],[3,62],[13,31,63,4,64],[65,5],[6,55,10],[7,66],[8,78],[9,88],[97,10],[11,102],[13,12,103,104],[13,108],[113,14],[59,114,115,16,15],[16,121],[17,125],[18,47,129],[26,28,23,22,24,25,19,21,20],[20],[21],[],[23],[],[30,38],[27],[],[],[1,2,13,17,0,16],[30,52],[],[29,30],[30,3,31,106],[11,30,3,32],[33,30],[30,34],[30,14,35],[36,30],[],[48],[29],[40],[40,41],[42,40],[40,43],[40,44],[45,40],[40,46],[49,40,50],[40],[29,53,51],[],[],[163,160,159,162,25,20,21,161],[56],[41],[58,57,55],[55],[59,60,41],[],[61],[],[10,4],[],[],[6,9,8,7],[70],[42,43],[67],[67,68],[71,67,72],[67],[75,73,74],[42,76],[],[43,77],[],[],[83],[68],[79],[80,79],[79,81],[79,85,84],[79],[87,86],[],[],[93,69,80,92,91,90,89],[],[],[94,44],[45,95],[96],[],[],[],[46,100,81,98,99],[],[96],[82,101],[],[12],[107,32,105],[],[],[],[385,388,25,19,389,387,21,20,386],[111,33,109,110],[],[112],[112],[],[15],[116,117],[120],[118,34],[35,119],[],[],[],[36,124,122,123],[],[112],[112],[126,127],[37,128],[],[],[],[131,189],[191,59,190,133,132],[133,197],[201,134],[215,135],[59,139,216,136,204],[220,137],[230,138],[234,53,139,129],[236,140],[141,260],[142,270],[143,271],[145,144,272,104],[145,274],[278,146],[281,152,147],[283,282,152,148,208],[149,285],[302,150],[309,151],[321],[154,156,158,153,157,155],[154,322],[338,155],[156,345],[355,157],[158,358],[53,365,129],[160],[],[188,52],[],[140,141,133,139,130,134],[194,52],[164,131,52],[165,52],[166,52],[167,52],[168,52],[171,169,52],[205,202,135],[170],[172,170],[173,170],[174,170],[175,170],[184,187,176,170,106],[184,143,170,177],[184,178,170],[179,184,170],[184,170,180],[184,181,170],[184,179,170],[185,183,170],[206,210,208,147],[184],[184,186,182],[],[132],[164,195,192,193],[196],[],[],[],[474,476,25,473,472,21,20,475],[],[198,200,165,199],[],[112],[112],[211],[203,166],[],[202],[202,135,204],[171,179,185,202,207],[],[206],[206,208,147],[209,206,147],[212,202,213],[202],[203,214,166],[],[137,136,138],[217,218],[219],[],[],[222,225,224,223,221],[167,226],[],[168,227],[228,169],[205,229,74],[],[],[],[219],[171,232,231],[233,170],[],[],[172,235],[],[250],[174,173],[237],[238,237],[239,237,249],[240,237],[237,241],[242,237],[237,245,243],[288,286],[239,237],[246,237],[247,237],[237,248,244],[237,252,251],[237],[253,254],[],[],[256,257,74],[258,173],[259,174],[],[],[266,263,264,238,265,261,262],[],[],[267,175],[268,176],[96],[239,269],[],[],[],[145,142,146],[144],[107,273,177],[],[277,178,275,276],[],[112],[112],[232,206,279],[179,207,280],[],[149,148,150,151],[],[218,284],[219],[289],[240,180],[286],[287,286],[291,290,286],[286],[293,292],[],[],[295,297,296],[240,298],[],[300,299],[],[301,180],[],[],[303,304,307,287,241,306,305],[],[],[96],[96],[308,242],[],[312,311,310,313,314,288,315],[],[],[316,181],[96],[317,243],[318,319],[],[],[320,182],[],[],[232,245,244],[328],[246,209],[323],[324,323],[323,325],[326,323],[330,329,323],[323],[332,331],[],[],[334,335,74],[209,296,336],[219],[246,337],[],[247,340,342,343,324,339,341],[],[],[96],[96],[248,344],[],[351,348,350,346,347,349,325],[],[],[352,183],[96],[353,249],[210,354,74],[],[],[219],[356,232,185],[184,357],[],[359,360,326,361,362],[186,363],[],[96],[327,364],[],[],[366,187],[],[400,368],[401,370,369,282,402],[370,107,404,129],[406,371],[59,407,373,408,372],[107,373,411,129],[415,374],[375,381,428],[430,381,417,376,429],[379,431,377],[378,282,432,379,418],[107,434,129,384],[380],[435,384],[383,382],[383,440],[444,384],[107,129,447],[386],[],[399,106],[],[370,373,374,384,367],[106],[390,106],[413,391,106,371],[392,106],[106,393],[394,106],[394,106],[398,396,395],[416,375,417,419],[],[369],[390,403],[61],[],[405],[],[372],[391,409],[410,218],[],[219],[392,414,412],[],[],[549,546,548,547,545,544,25,20],[420],[394,393],[416],[416,375,417],[416,375,418,377],[416,421,422],[416],[425,423,424],[393,426],[],[394,427],[],[],[376],[],[219],[378],[218,433],[219],[405],[437,395,436,438],[],[112],[296,419,439],[112],[441,232,442],[396,443],[96],[],[398,232,445],[397,446],[],[448],[],[450,484],[451,485,468,452],[490,452],[494,487,453,469,429],[496,454],[455,456,462,460,465,458],[497,456,462,460,465,458],[504,457,458],[505],[459,504,460],[506],[461,504,462],[507],[463,464,504],[508],[509,468],[466,504,467],[510,467],[498,195,468,129],[452,127,488],[515,470],[471,516,104],[195,129,518],[473],[],[483,194],[],[449],[480,194,482],[480,194,477],[480,194,478],[481,194,479],[489,486],[480,106],[],[450,469],[453,454],[477],[481,486],[487,486],[488,486],[491,492,486],[486],[477,493],[],[478,495],[],[499],[479,489],[455,497],[497,500,501],[497],[502,489],[479,503],[],[],[],[],[],[],[],[512,232,511],[480,513],[514,481,296],[],[219],[471],[107,482,517],[],[96],[520,579],[521,591],[522,598,528],[600,523,601,599,528],[612,524],[627,525],[633,526],[641,527],[532,644],[531,529,530],[530,656],[531,662],[532,672],[684,533],[688,540,534],[540,587,689,535,429],[536,690,538],[282,691,537,588,538],[693,414,543,129],[539],[694,543],[541,542],[699,542],[702,543],[414,706,129],[20],[546],[],[413,578],[],[519,521,532,520,543,533],[413],[413,550],[413,551],[413,522,552],[413,553,522],[413,522,554],[413,522,555],[413,556,522],[413,559,522,557],[613,614],[522,558],[560,522,558],[561,522,558],[413,522,552],[413,522,563],[413,522,564],[413,522,565],[413,566,522],[413,567,522],[413,568,522],[413,562,522,569],[413,570],[571],[571,574],[595,586],[572,577,573,576],[574,595,586],[587,534,584,589],[],[583],[560,562,581,582,561,583],[592,594],[592,581],[590],[568,580,570,569,586,583,585],[595,596],[595,582,585],[584],[587,534,584],[588,536,534,584],[583],[593],[593,555,554],[597],[592],[593,563,564],[595],[593],[524,525,523,527,526],[282,602,603],[],[605,606,429],[604,550],[96],[],[607,551],[609,610,608],[],[552,611],[],[219],[],[615],[553],[613],[613,616,617],[613],[618,619],[],[],[623,622,621],[624,625],[],[219],[553,626],[],[],[592,232,628],[629,630,74],[631,554],[632,555],[],[],[637,635,614,634,638,594,636],[],[],[556,639],[640,557],[96],[],[],[232,559,642],[643,558],[],[232,580,645],[581,649,648,647,646],[560,650],[],[651,561],[652,582,74],[],[],[654,653],[562,655],[],[],[232,595,657],[659,658,74],[660,563],[661,564],[],[],[664,663,667,596,668,665,666],[],[],[565,669],[566,670],[567,671],[96],[],[],[],[232,673,584],[676,677,585,675,674],[568,678],[],[679,569],[680,586,74],[],[],[681,682],[683,570],[],[],[685,232,686],[571,687],[96],[],[535],[219],[537],[218,692],[219],[405],[696,572,697,695],[],[112],[698,296,589],[112],[232,574,700],[701,573],[],[232,704,703],[575,705],[577,296,576],[],[448]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","If Stmt ","Switch Entry Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Throw Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","STATIC","FINAL","Class Or Interface Type Slice ","Simple Name readObjectFieldAsSlice ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type java ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Simple Name field ","Name Expr field ","Name Expr entry ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr field ","Name Expr lines ","Variable Declarator Slice field = ","Class Or Interface Type Slice ","Method Call Expr ","Simple Name readSlice ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name notCopied ","Variable Declarator boolean notCopied = ","Primitive Type boolean ","Simple Name CodegenAccess ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Block Stmt ","Return Stmt ","Simple Name skipWhitespacesWithoutLoadMore ","Block Stmt ","Variable Declaration Expr ","Simple Name len ","Name Expr len ","Name Expr len ","Variable Declarator int len = ","Primitive Type int ","Binary Expr MINUS ","Method Call Expr ","MINUS","Method Call Expr ","Simple Name tail ","Simple Name head ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Simple Name create ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Class Or Interface Type JsonIterator ","Method Call Expr ","Integer Literal Expr Zero  ","Simple Name data ","Null Literal Expr ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name reset ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Array Access Expr iter.head ","Char Literal Expr ':' ","Field Access Expr ","Field Access Expr ","Simple Name buf ","Simple Name head ","':'","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Unary Expr ++ ","Class Or Interface Type lang ","POSTFIX_INCREMENT","Simple Name lang ","ReturnStmt","If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","If Stmt ","Unary Expr ! ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type Slice ","Simple Name readSlice ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr sLen ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr end ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr end ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Method Call Expr ","Char Literal Expr ''' ","Name Expr IterImpl ","Simple Name nextToken ","Simple Name iter ","Method Declaration Throws ","'''","Method Call Expr ","Name Expr TypeLiteral ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name end ","Name Expr IterImplString ","Name Expr end ","Name Expr end ","Primitive Type int ","Name Expr IterImplString ","Name Expr end ","Name Expr end ","Name Expr end ","Variable Declarator int end = ","Primitive Type int ","Method Call Expr ","Simple Name findSliceEnd ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Method Call Expr ","Field Access Expr ","Simple Name reset ","Field Access Expr ","Field Access Expr ","Binary Expr MINUS ","Simple Name reusableSlice ","Simple Name buf ","Simple Name head ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name head ","Field Access Expr ","Simple Name reusableSlice ","Variable Declaration Expr ","Simple Name write ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Simple Name field ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Variable Declarator byte[] part1 = ","Name Expr writer ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name head ","Method Call Expr ","Name Expr writer ","Binary Expr LESS ","Name Expr rendered ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name buf ","Simple Name head ","Simple Name length ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Expression Stmt ","Method Call Expr ","Simple Name findSliceEnd ","Block Stmt ","EQUALS","Unary Expr - ","Name Expr i ","Variable Declaration Expr ","Simple Name part2 ","Name Expr part2 ","Name Expr part2 ","Variable Declarator byte[] part2 = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Field Access Expr ","Simple Name length ","Field Access Expr ","Simple Name length ","Simple Name buf ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Field Access Expr ","Simple Name buf ","Simple Name length ","Field Access Expr ","Simple Name length ","Simple Name buf ","Field Access Expr ","Variable Declaration Expr ","Simple Name part2 ","Name Expr part2 ","Name Expr part2 ","Name Expr part2 ","Name Expr part2 ","Variable Declarator byte[] part2 = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MINUS ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Binary Expr MINUS ","Simple Name buf ","Simple Name length ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Method Call Expr ","Field Access Expr ","Simple Name reset ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name reusableSlice ","Simple Name length ","Field Access Expr ","Simple Name reusableSlice ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","LESS","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr ' ' ","Switch Entry Stmt ","Primitive Type char ","Switch Entry Stmt ","Char Literal Expr 't' ","Switch Entry Stmt ","Char Literal Expr 'r' ","Continue Stmt ","Switch Entry Stmt ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Return Stmt ","Primitive Type byte ","Simple Name nextToken ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Primitive Type byte ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Unary Expr ++ ","Field Access Expr ","Simple Name head ","Field Access Expr ","Simple Name tail ","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","SwitchEntryStmt","' '","'n'","'t'","'r'","continue;","Assign Expr ASSIGN ","Switch Entry Stmt ","Binary Expr PLUS ","Simple Name head ","Integer Literal Expr Note Zero  ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Integer Literal Expr Zero  ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"skipArray-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":505,"succs":[[51,1],[60,2],[25,61,4,3],[67,4],[5,26,63,72,71],[7,17,13,6],[7,65,17,13,110],[10,11,75,12,8,9],[76],[10,77],[11,84],[12,88],[25,26,94],[16,14,75,15],[95],[16,96],[25,26,94],[19,20,18,75,24],[97],[20,98],[21,100],[22,101,102,24,55],[104,23],[29,24,109],[25,26,94],[74,4,64],[27,112],[28,113,114],[29,109],[38,36,32,35,33,34,30,31],[31],[],[33],[],[50,40],[37],[],[],[1,0],[49,47,40],[],[47,39,40],[41,47,40],[42,47,44,40],[62,66,65],[86,43],[43,45],[48,46,43],[66],[47,116],[],[56],[53,55],[],[53,52],[53,54],[53,57,58],[53],[59],[],[2,26],[5],[39],[62,66,48],[62,66,63],[62,66,64],[62,44,46],[69,62,68],[62],[70,39],[],[],[41,73],[],[],[],[],[78,79,80],[81,43],[],[44,82,83],[],[],[59],[87,85,45],[],[],[143,147,35,145,146,144,30,31],[79,66,89],[90,92,91],[46,93],[],[59],[],[],[],[52,74],[],[99,54],[],[22,23],[],[103],[],[105,79,106],[107,47],[108,48,82],[],[59],[],[42,111],[],[28],[117,49,115],[],[],[],[256,35,260,255,259,258,31,30,257],[119,160],[120,161],[140,121,169],[140,164,101,170,122],[123,173],[187,124],[194,125],[195,126],[197,127,196,198,129],[128,207],[134,94],[130,210],[211,131],[213,133,197,132,212],[134,94],[220,134],[135,221],[136,222,137,114],[224,137],[229,138],[139,188],[230],[142,141],[142,234],[87,109],[144],[],[159,86],[],[118],[86,157],[86,157,148],[86,157,149,153],[86,157,150],[86,157,151],[86,157,152],[86,157,116,153],[154,86,135,157],[86,157,155],[86,156,148,158],[164,121,162],[],[120,119],[165],[148,163],[],[162],[167,166,162],[162],[168,148,163],[],[122,124,123,134,137],[172,171],[59],[],[181],[149],[180,174],[175,174],[176,174],[177,174],[178,174],[179,174],[183,174,182],[174],[184,185,91],[186,149],[59],[],[190],[189],[],[191,192,189],[189],[193],[],[133,125,130,129],[128,127],[199,175,71],[],[202,203,201],[150,200],[],[176,204],[],[206],[205,151],[],[],[208,79,188],[209],[],[177,99],[132],[214,178,71],[202,216,217],[152,215],[],[179,218],[206],[219,153],[],[180,99],[136],[154,117,223],[],[225,227,226,155],[],[228],[228],[],[139],[79,231,232],[233,156],[59],[],[79,235,158],[236,157],[],[271,238],[272,240,239,101,273],[240,117,276,109],[277,241],[202,243,278,279,242],[117,243,282,109],[286,244],[245,251,299],[300,251,288,246,71],[249,301,247],[248,101,302,249,289],[117,304,109,254],[250],[305,254],[253,252],[253,310],[314,254],[117,109,317],[30],[257],[],[270,116],[],[240,243,244,254,237],[116],[261,116],[284,262,116,241],[263,116],[116,264],[265,116],[265,116],[267,269,266],[287,245,288,290],[],[239],[261,274],[275],[],[],[209],[242],[262,280],[281,172],[],[59],[263,285,283],[],[],[348,345,346,347,343,344,35,30],[291],[265,264],[287],[287,245,288],[287,245,289,247],[287,292,293],[287],[296,294,295],[264,297],[],[265,298],[],[],[246],[59],[248],[172,303],[59],[209],[307,266,306,308],[],[228],[82,290,309],[228],[311,79,312],[267,313],[103],[],[269,79,315],[268,316],[],[193],[319,378],[320,390],[321,397,327],[197,322,399,398,327],[410,323],[425,324],[431,325],[439,326],[331,442],[330,328,329],[329,454],[330,460],[331,470],[482,332],[486,339,333],[339,386,487,334,71],[335,488,337],[101,489,336,387,337],[491,285,342,109],[338],[492,342],[340,341],[497,341],[500,342],[285,504,109],[30],[345],[],[284,377],[],[318,320,331,319,342,332],[284],[284,349],[284,350],[284,321,351],[284,352,321],[284,321,353],[284,321,354],[284,355,321],[284,358,321,356],[411,412],[321,357],[359,321,357],[360,321,357],[284,321,351],[284,321,362],[284,321,363],[284,321,364],[284,365,321],[284,366,321],[284,367,321],[284,361,368,321],[284,369],[370],[373,370],[394,385],[371,376,375,372],[394,373,385],[386,333,383,388],[],[382],[361,359,380,381,360,382],[391,393],[391,380],[389],[367,379,368,369,385,384,382],[394,395],[394,381,384],[383],[386,333,383],[387,335,333,383],[382],[392],[392,354,353],[396],[391],[392,362,363],[394],[392],[323,324,322,326,325],[101,400,401],[403,404,71],[402,349],[103],[],[405,350],[407,408,406],[],[351,409],[],[59],[],[413],[352],[411],[411,415,414],[411],[416,417],[],[],[421,420,419],[422,423],[],[59],[352,424],[],[],[79,391,426],[427,428,91],[429,353],[430,354],[],[],[435,433,412,432,436,393,434],[],[],[355,437],[438,356],[103],[],[],[79,358,440],[441,357],[],[79,379,443],[380,447,446,445,444],[359,448],[],[449,360],[450,381,91],[],[],[452,451],[361,453],[],[],[79,394,455],[457,456,91],[458,362],[459,363],[],[],[462,461,465,395,466,463,464],[],[],[364,467],[365,468],[366,469],[103],[],[],[],[79,471,383],[474,475,473,384,472],[367,476],[],[477,368],[478,385,91],[],[],[479,480],[481,369],[],[],[483,79,484],[370,485],[103],[],[334],[59],[336],[172,490],[59],[209],[494,371,495,493],[],[228],[496,82,388],[228],[79,373,498],[499,372],[],[79,502,501],[374,503],[376,82,375],[],[193]],"attribute":["Return Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Switch Stmt ","Array Access Expr i ","Switch Entry Stmt ","Char Literal Expr ''' ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '[' ","Simple Name calcHash ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr ']' ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Primitive Type double ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Return Stmt ","Method Declaration Throws ","STATIC","FINAL","Void Type ","Simple Name skipArray ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Class Or Interface Type JsonIterator ","Method Declaration ","Name Expr level ","Simple Name level ","Name Expr level ","Name Expr level ","Marker Annotation Expr @Override ","Primitive Type int ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr e ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","SwitchEntryStmt","'''","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Binary Expr PLUS ","Simple Name head ","PLUS","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name skipString ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name head ","break;","'['","Unary Expr ++ ","']'","Unary Expr -- ","POSTFIX_DECREMENT","Block Stmt ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Binary Expr PLUS ","Simple Name head ","Integer Literal Expr Note Zero  ","ReturnStmt","Field Access Expr ","Simple Name buf ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","For Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Break Stmt ","Name Expr iter ","If Stmt ","Binary Expr OR ","Break Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Throw Stmt ","If Stmt ","Name Expr escaped ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Void Type ","Simple Name skipString ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr code ","Name Expr end ","Class Or Interface Type JsonIterator ","Block Stmt ","Variable Declaration Expr ","Simple Name end ","Name Expr IterImplSkip ","Name Expr end ","Variable Declarator int end = ","Primitive Type int ","Method Call Expr ","Simple Name findStringEnd ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","MINUS","Variable Declaration Expr ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr i ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Binary Expr MINUS ","Field Access Expr ","Simple Name e ","Simple Name tail ","Variable Declaration Expr ","Name Expr escaped ","Simple Name escaped ","Variable Declarator boolean escaped = ","Primitive Type boolean ","Boolean Literal Expr true ","true","Block Stmt ","Block Stmt ","Binary Expr LESS ","OR","Binary Expr NOT_EQUALS ","Field Access Expr ","Simple Name head ","Array Access Expr j ","NOT_EQUALS","Char Literal Expr '' ","Field Access Expr ","Simple Name buf ","''","Assign Expr ASSIGN ","Super Expr ","false","Unary Expr -- ","Block Stmt ","Binary Expr LESS ","Binary Expr NOT_EQUALS ","Field Access Expr ","Simple Name head ","Array Access Expr j ","Char Literal Expr '' ","Field Access Expr ","Simple Name buf ","Unary Expr -- ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Name Expr lastParsedPos ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name head ","Return Stmt ","Field Access Expr ","Null Literal Expr ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","Block Stmt ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"skipObject-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":505,"succs":[[51,1],[60,2],[61,25,3,4],[67,4],[26,63,72,5,71],[13,7,6,17],[110,13,7,17,65],[12,10,9,11,75,8],[76],[10,77],[84,11],[12,88],[25,26,94],[14,75,16,15],[95],[96,16],[26,25,94],[18,19,20,75,24],[97],[20,98],[21,100],[101,55,102,24,22],[23,104],[29,24,109],[26,25,94],[74,64,4],[27,112],[113,28,114],[29,109],[38,33,32,35,36,34,30,31],[31],[],[33],[],[40,50],[37],[],[],[0,1],[47,40,49],[],[47,40,39],[47,40,41],[47,42,40,44],[66,65,62],[43,86],[43,45],[43,46,48],[66],[47,116],[],[56],[55,53],[],[52,53],[54,53],[57,58,53],[53],[59],[],[26,2],[5],[39],[48,66,62],[63,66,62],[64,66,62],[46,44,62],[68,69,62],[62],[70,39],[],[],[73,41],[],[],[],[],[79,80,78],[43,81],[],[83,44,82],[],[],[59],[87,45,85],[],[],[143,147,35,145,146,144,30,31],[79,66,89],[90,92,91],[46,93],[],[59],[],[],[],[52,74],[],[54,99],[],[23,22],[],[103],[],[79,105,106],[47,107],[82,48,108],[],[59],[],[111,42],[],[28],[117,49,115],[],[],[],[256,35,260,255,259,258,31,30,257],[119,160],[120,161],[140,121,169],[140,164,101,170,122],[123,173],[187,124],[194,125],[195,126],[197,127,196,198,129],[128,207],[134,94],[130,210],[211,131],[213,133,197,132,212],[134,94],[220,134],[135,221],[136,222,137,114],[224,137],[229,138],[139,188],[230],[142,141],[142,234],[87,109],[144],[],[159,86],[],[118],[86,157],[86,157,148],[86,157,149,153],[86,157,150],[86,157,151],[86,157,152],[86,157,116,153],[154,86,135,157],[86,157,155],[86,156,148,158],[164,121,162],[],[120,119],[165],[148,163],[],[162],[167,166,162],[162],[168,148,163],[],[122,124,123,134,137],[172,171],[59],[],[181],[149],[180,174],[175,174],[176,174],[177,174],[178,174],[179,174],[183,174,182],[174],[184,185,91],[186,149],[59],[],[190],[189],[],[191,192,189],[189],[193],[],[133,125,130,129],[128,127],[199,175,71],[],[202,203,201],[150,200],[],[176,204],[],[206],[205,151],[],[],[208,79,188],[209],[],[177,99],[132],[214,178,71],[202,216,217],[152,215],[],[179,218],[206],[219,153],[],[180,99],[136],[154,117,223],[],[225,227,226,155],[],[228],[228],[],[139],[79,231,232],[233,156],[59],[],[79,235,158],[236,157],[],[271,238],[272,240,239,101,273],[240,117,276,109],[277,241],[202,243,278,279,242],[117,243,282,109],[286,244],[245,251,299],[300,251,288,246,71],[249,301,247],[248,101,302,249,289],[117,304,109,254],[250],[305,254],[253,252],[253,310],[314,254],[117,109,317],[30],[257],[],[270,116],[],[240,243,244,254,237],[116],[261,116],[284,262,116,241],[263,116],[116,264],[265,116],[265,116],[267,269,266],[287,245,288,290],[],[239],[261,274],[275],[],[],[209],[242],[262,280],[281,172],[],[59],[263,285,283],[],[],[348,345,346,347,343,344,35,30],[291],[265,264],[287],[287,245,288],[287,245,289,247],[287,292,293],[287],[296,294,295],[264,297],[],[265,298],[],[],[246],[59],[248],[172,303],[59],[209],[307,266,306,308],[],[228],[82,290,309],[228],[311,79,312],[267,313],[103],[],[269,79,315],[268,316],[],[193],[319,378],[320,390],[321,397,327],[197,322,399,398,327],[410,323],[425,324],[431,325],[439,326],[331,442],[330,328,329],[329,454],[330,460],[331,470],[482,332],[486,339,333],[339,386,487,334,71],[335,488,337],[101,489,336,387,337],[491,285,342,109],[338],[492,342],[340,341],[497,341],[500,342],[285,504,109],[30],[345],[],[284,377],[],[318,320,331,319,342,332],[284],[284,349],[284,350],[284,321,351],[284,352,321],[284,321,353],[284,321,354],[284,355,321],[284,358,321,356],[411,412],[321,357],[359,321,357],[360,321,357],[284,321,351],[284,321,362],[284,321,363],[284,321,364],[284,365,321],[284,366,321],[284,367,321],[284,361,368,321],[284,369],[370],[373,370],[394,385],[371,376,375,372],[394,373,385],[386,333,383,388],[],[382],[361,359,380,381,360,382],[391,393],[391,380],[389],[367,379,368,369,385,384,382],[394,395],[394,381,384],[383],[386,333,383],[387,335,333,383],[382],[392],[392,354,353],[396],[391],[392,362,363],[394],[392],[323,324,322,326,325],[101,400,401],[403,404,71],[402,349],[103],[],[405,350],[407,408,406],[],[351,409],[],[59],[],[413],[352],[411],[411,415,414],[411],[416,417],[],[],[421,420,419],[422,423],[],[59],[352,424],[],[],[79,391,426],[427,428,91],[429,353],[430,354],[],[],[435,433,412,432,436,393,434],[],[],[355,437],[438,356],[103],[],[],[79,358,440],[441,357],[],[79,379,443],[380,447,446,445,444],[359,448],[],[449,360],[450,381,91],[],[],[452,451],[361,453],[],[],[79,394,455],[457,456,91],[458,362],[459,363],[],[],[462,461,465,395,466,463,464],[],[],[364,467],[365,468],[366,469],[103],[],[],[],[79,471,383],[474,475,473,384,472],[367,476],[],[477,368],[478,385,91],[],[],[479,480],[481,369],[],[],[483,79,484],[370,485],[103],[],[334],[59],[336],[172,490],[59],[209],[494,371,495,493],[],[228],[496,82,388],[228],[79,373,498],[499,372],[],[79,502,501],[374,503],[376,82,375],[],[193]],"attribute":["Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Switch Stmt ","Array Access Expr i ","Switch Entry Stmt ","Char Literal Expr ''' ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Simple Name length ","Switch Entry Stmt ","Char Literal Expr '{' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '}' ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Break Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Return Stmt ","Method Declaration Throws ","STATIC","FINAL","Void Type ","Simple Name skipObject ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","String Literal Expr Not Empty  ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr i ","Name Expr iter ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr level ","Simple Name level ","Name Expr level ","Name Expr level ","Variable Declarator int level = ","Primitive Type int ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","SwitchEntryStmt","'''","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Binary Expr PLUS ","Simple Name head ","PLUS","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name skipString ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name head ","break;","'{'","Unary Expr ++ ","'}'","Unary Expr -- ","POSTFIX_DECREMENT","Block Stmt ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Binary Expr PLUS ","Simple Name head ","Integer Literal Expr Note Zero  ","ReturnStmt","Field Access Expr ","Simple Name buf ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","For Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Break Stmt ","Name Expr iter ","If Stmt ","Binary Expr OR ","Break Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Throw Stmt ","If Stmt ","Name Expr escaped ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Void Type ","Simple Name skipString ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr code ","Name Expr end ","Class Or Interface Type JsonIterator ","Block Stmt ","Variable Declaration Expr ","Simple Name end ","Name Expr IterImplSkip ","Name Expr end ","Variable Declarator int end = ","Primitive Type int ","Method Call Expr ","Simple Name findStringEnd ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","MINUS","Variable Declaration Expr ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr i ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Binary Expr MINUS ","Field Access Expr ","Simple Name e ","Simple Name tail ","Variable Declaration Expr ","Name Expr escaped ","Simple Name escaped ","Variable Declarator boolean escaped = ","Primitive Type boolean ","Boolean Literal Expr true ","true","Block Stmt ","Block Stmt ","Binary Expr LESS ","OR","Binary Expr NOT_EQUALS ","Field Access Expr ","Simple Name head ","Array Access Expr j ","NOT_EQUALS","Char Literal Expr '' ","Field Access Expr ","Simple Name buf ","''","Assign Expr ASSIGN ","Super Expr ","false","Unary Expr -- ","Block Stmt ","Binary Expr LESS ","Binary Expr NOT_EQUALS ","Field Access Expr ","Simple Name head ","Array Access Expr j ","Char Literal Expr '' ","Field Access Expr ","Simple Name buf ","Unary Expr -- ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Name Expr lastParsedPos ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name head ","Return Stmt ","Field Access Expr ","Null Literal Expr ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","Block Stmt ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"skipString-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{"55":"srcmainjavacomjsoniterIterImplSkip.java-findStringEnd-IterImplSkip-JsonIterator"},"num":406,"succs":[[1,48],[2,49],[22,3,57],[22,52,58,59,4],[5,63],[78,6],[85,7],[86,8],[88,9,87,89,11],[10,99],[16,103],[12,104],[106,13],[108,15,88,14,107],[16,103],[115,16],[17,116],[18,117,19,118],[122,19],[127,20],[21,79],[128],[24,23],[24,132],[25,135],[28,34,30,31,32,26,27,29],[27],[],[29],[],[47,36],[33],[],[],[0],[36,45],[],[36,45,35],[36,45,37,41],[36,45,38],[36,45,39],[36,45,40],[36,45,120,41],[42,36,17,45],[36,45,43],[36,44,35,46],[52,3,50],[],[2,1],[53],[35,51],[],[50],[55,54,50],[50],[56,35,51],[],[4,5,6,16,19],[],[61,60],[62],[],[],[71],[37],[70,64],[65,64],[66,64],[67,64],[68,64],[69,64],[73,64,72],[64],[74,75,76],[77,37],[],[62],[],[81],[80],[],[82,83,80],[80],[84],[],[15,7,12,11],[10,9],[91,65,90],[],[94,95,93],[],[38,92],[],[66,96],[],[98],[97,39],[],[],[101,100,79],[],[102],[],[],[67,105],[],[14],[109,68,90],[94,111,112],[40,110],[],[69,113],[98],[114,41],[],[70,105],[18],[42,121,119],[],[],[],[155,154,158,31,159,157,27,26,156],[123,124,125,43],[],[126],[126],[],[21],[100,129,130],[131,44],[62],[],[100,133,46],[134,45],[],[],[170,137],[171,139,138,58,172],[139,121,175,135],[176,140],[94,142,177,178,141],[121,142,181,135],[185,143],[144,150,198],[199,150,187,145,90],[148,200,146],[147,58,201,148,188],[121,203,135,153],[149],[204,153],[152,151],[152,210],[215,153],[121,135,218],[26],[156],[],[169,120],[],[139,142,153,143,136],[120],[160,120],[183,161,120,140],[162,120],[120,163],[164,120],[164,120],[166,168,165],[186,144,187,189],[],[138],[160,173],[174],[],[],[102],[141],[161,179],[180,61],[],[62],[162,184,182],[],[],[249,246,248,247,244,245,31,26],[190],[164,163],[186],[186,144,187],[186,144,188,146],[186,191,192],[186],[195,193,194],[163,196],[],[164,197],[],[],[145],[62],[147],[61,202],[62],[102],[206,165,205,207],[],[126],[209,189,208],[126],[],[211,100,212],[166,213],[214],[],[],[168,100,216],[167,217],[],[84],[220,279],[221,291],[222,298,228],[88,223,300,299,228],[311,224],[326,225],[332,226],[340,227],[232,343],[231,229,230],[230,355],[231,361],[232,371],[383,233],[387,240,234],[240,287,388,235,90],[236,389,238],[58,390,237,288,238],[392,184,243,135],[239],[393,243],[241,242],[398,242],[401,243],[184,405,135],[26],[246],[],[183,278],[],[219,221,232,220,243,233],[183],[183,250],[183,251],[183,222,252],[183,253,222],[183,222,254],[183,222,255],[183,256,222],[183,259,222,257],[312,313],[222,258],[260,222,258],[261,222,258],[183,222,252],[183,222,263],[183,222,264],[183,222,265],[183,266,222],[183,267,222],[183,268,222],[183,262,222,269],[183,270],[271],[274,271],[295,286],[272,277,273,276],[274,295,286],[287,234,284,289],[],[283],[260,262,281,282,261,283],[292,294],[292,281],[290],[268,280,269,270,286,285,283],[295,296],[295,282,285],[284],[287,234,284],[288,236,234,284],[283],[293],[293,255,254],[297],[292],[293,263,264],[295],[293],[224,225,223,226,227],[58,301,302],[304,305,90],[303,250],[214],[],[306,251],[308,309,307],[],[252,310],[],[62],[],[314],[253],[312],[312,315,316],[312],[317,318],[],[],[322,321,320],[323,324],[],[62],[253,325],[],[],[292,100,327],[328,329,75],[330,254],[331,255],[],[],[334,336,313,337,333,294,335],[],[],[256,338],[339,257],[214],[],[],[100,259,341],[342,258],[],[100,280,344],[281,348,347,346,345],[260,349],[],[350,261],[351,282,75],[],[],[353,352],[262,354],[],[],[100,295,356],[358,357,75],[359,263],[360,264],[],[],[362,363,366,296,367,364,365],[],[],[265,368],[266,369],[267,370],[214],[],[],[],[100,372,284],[375,376,285,374,373],[268,377],[],[378,269],[379,286,75],[],[],[380,381],[382,270],[],[],[384,100,385],[386,271],[214],[],[235],[62],[237],[61,391],[62],[102],[395,272,396,394],[],[126],[397,209,289],[126],[100,274,399],[400,273],[],[100,403,402],[275,404],[277,209,276],[],[84]],"attribute":["For Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Break Stmt ","Name Expr iter ","If Stmt ","Binary Expr OR ","Break Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Throw Stmt ","If Stmt ","Name Expr escaped ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","STATIC","FINAL","Void Type ","Simple Name skipString ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr code ","Name Expr end ","Class Or Interface Type JsonIterator ","Block Stmt ","Variable Declaration Expr ","Simple Name end ","Name Expr IterImplSkip ","Name Expr end ","Variable Declarator int end = ","Primitive Type int ","Method Call Expr ","Simple Name findStringEnd ","Block Stmt ","EQUALS","Unary Expr - ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr i ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Binary Expr MINUS ","Field Access Expr ","MINUS","Simple Name e ","Simple Name tail ","Variable Declaration Expr ","Name Expr escaped ","Simple Name escaped ","Variable Declarator boolean escaped = ","Primitive Type boolean ","Boolean Literal Expr true ","true","Block Stmt ","Block Stmt ","Binary Expr LESS ","OR","Binary Expr NOT_EQUALS ","LESS","Field Access Expr ","Simple Name head ","Array Access Expr j ","NOT_EQUALS","Char Literal Expr '' ","Field Access Expr ","Simple Name buf ","''","Assign Expr ASSIGN ","ASSIGN","Super Expr ","false","break;","Unary Expr -- ","POSTFIX_DECREMENT","Block Stmt ","Binary Expr LESS ","Binary Expr NOT_EQUALS ","Field Access Expr ","Simple Name head ","Array Access Expr j ","Char Literal Expr '' ","Field Access Expr ","Simple Name buf ","Unary Expr -- ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Name Expr lastParsedPos ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name head ","Return Stmt ","Field Access Expr ","Null Literal Expr ","ReturnStmt","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","Block Stmt ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"skipUntilBreak-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":355,"succs":[[1,34],[2,9,35,3],[40,3],[37,4,10,44,45],[5,48],[56,6],[57,50,9,7],[8,60],[9,64,14],[47,38,3],[65,11],[12,66,67],[13,71],[64,14],[21,19,18,20,23,17,16,15],[16],[],[18],[],[33,25],[22],[],[],[0],[31,28,25],[],[24,31,28,25],[31,28,26,25],[31,27,29,25],[39,36],[28,69],[28,32,11],[28,11,30],[],[10,1],[4,5],[24],[36,29],[37,36],[36,38],[42,36,41],[36],[43,24],[],[],[46,26],[],[],[51],[39,27],[49],[49,53,52],[49],[39,54],[55,27],[],[8,7],[58,59],[],[],[62,61,29],[28,63],[],[],[],[13,12],[70,68,30],[],[],[],[95,99,94,98,20,97,16,15,96],[62,73,72],[31,74],[32,75],[],[],[110,77],[111,79,78,112,113],[79,70,116,64],[118,80],[120,119,82,121,81],[70,82,126,64],[130,83],[84,90,143],[144,90,132,85,44],[88,145,86],[87,112,146,88,133],[70,148,64,93],[89],[149,93],[92,91],[92,156],[161,93],[70,64,164],[15],[96],[],[109,69],[],[79,82,83,93,76],[69],[100,69],[128,101,69,80],[102,69],[69,103],[104,69],[104,69],[106,108,105],[131,84,132,134],[],[78],[100,114],[],[115],[],[],[117],[],[81],[101,122],[],[123,124],[],[125],[],[],[102,129,127],[],[],[196,193,194,195,191,192,20,15],[135],[104,103],[131],[131,84,132],[131,84,133,86],[131,136,137],[131],[140,138,139],[103,141],[],[104,142],[],[],[85],[125],[87],[124,147],[125],[117],[151,105,150,152],[],[153],[155,134,154],[],[153],[],[157,62,158],[106,159],[160],[],[],[108,62,162],[107,163],[],[165],[],[167,226],[168,238],[169,245,175],[247,170,246,248,175],[259,171],[274,172],[281,173],[289,174],[179,292],[178,176,177],[304,177],[178,310],[179,320],[332,180],[336,187,181],[187,234,337,182,44],[183,338,185],[112,339,184,235,185],[341,129,190,64],[186],[342,190],[188,189],[347,189],[350,190],[129,354,64],[15],[193],[],[128,225],[],[166,168,179,167,190,180],[128],[128,197],[128,198],[128,169,199],[128,200,169],[128,169,201],[128,169,202],[128,203,169],[128,206,169,204],[260,261],[169,205],[207,169,205],[208,169,205],[128,169,199],[128,169,210],[128,169,211],[128,169,212],[128,213,169],[128,214,169],[128,215,169],[128,209,216,169],[128,217],[218],[221,218],[242,233],[219,224,223,220],[221,242,233],[234,181,231,236],[],[230],[209,207,228,229,208,230],[239,241],[239,228],[237],[215,227,217,216,233,230,232],[242,243],[242,229,232],[231],[234,181,231],[235,183,181,231],[230],[240],[240,202,201],[244],[239],[240,210,211],[242],[240],[171,170,172,173,174],[112,249,250],[],[252,253,44],[251,197],[160],[],[254,198],[256,257,255],[],[258,199],[],[125],[],[262],[200],[260],[260,263,264],[260],[265,266],[],[],[270,269,268],[271,272],[],[125],[200,273],[],[],[239,62,275],[276,278,277],[279,201],[],[280,202],[],[],[283,285,261,282,286,241,284],[],[],[203,287],[288,204],[160],[],[],[62,206,290],[291,205],[],[62,227,293],[228,297,296,295,294],[207,298],[],[299,208],[300,229,277],[],[],[302,301],[209,303],[],[],[62,242,305],[307,306,277],[308,210],[309,211],[],[],[311,312,315,243,316,313,314],[],[],[212,317],[213,318],[214,319],[160],[],[],[],[62,321,231],[324,325,323,232,322],[215,326],[],[327,216],[328,233,277],[],[],[329,330],[331,217],[],[],[333,62,334],[335,218],[160],[],[182],[125],[184],[124,340],[125],[117],[344,219,345,343],[],[153],[346,155,236],[153],[62,221,348],[349,220],[],[62,352,351],[222,353],[224,155,223],[],[165]],"attribute":["For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Array Access Expr c ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Expression Stmt ","Name Expr keyType ","Method Declaration Throws ","STATIC","FINAL","Void Type ","Simple Name skipUntilBreak ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name head ","Name Expr iter ","Name Expr iter ","Primitive Type long ","Name Expr i ","Name Expr iter ","Name Expr bits ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name wrap ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","Block Stmt ","Field Access Expr ","Name Expr IterImplSkip ","Simple Name breaks ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name head ","ReturnStmt","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","EQUALS","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","StringLiteralExpr","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"skipNumber-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":385,"succs":[[1,39],[48,2],[49,3,4,14],[54,4],[51,5,15,58,59],[6,62],[7,73],[75,10,76,74,8],[9,86],[90,14],[91,11],[92,12,67,14],[95,13],[19,14,42,98],[61,4,52],[16,99],[100,17,101],[105,18],[19,43,98],[26,23,25,22,20,21,24,28],[21],[],[23],[],[38,30],[27],[],[],[1,0],[33,36,30],[],[29,33,36,30],[33,36,30,31],[32,36,30,34],[50,53],[33,103],[33,37,16],[35,33,16],[],[44],[41,43,42],[],[40],[40,42],[46,45,41],[41],[47],[],[15,2],[5,6,10],[29],[50,34],[51,50],[50,52],[55,50,56],[50],[29,57],[],[],[60,31],[],[],[68],[32,53],[63],[64,63],[63,65],[63,66],[63,69,70],[63],[71,53],[72,32],[],[9,8],[75,78,77],[],[84,79,66],[79,64,80],[79,65,82],[],[81],[],[83],[],[85],[],[87,88,40],[],[89],[],[],[12,13],[93,94],[],[],[87,96,34],[33,97],[],[],[17,18],[35,104,102],[],[],[],[129,25,128,132,133,131,20,21,130],[87,106,107],[108,36],[109,37],[],[],[144,111],[145,113,112,79,146],[113,104,149,98],[150,114],[152,151,116,153,115],[104,116,158,98],[162,117],[118,124,175],[176,124,164,119,58],[122,177,120],[121,79,178,122,165],[104,180,98,127],[123],[181,127],[126,125],[126,188],[193,127],[104,98,196],[20],[130],[],[143,103],[],[113,116,117,127,110],[103],[134,103],[160,135,103,114],[136,103],[103,137],[138,103],[138,103],[142,140,139],[163,118,164,166],[],[112],[134,147],[148],[],[],[47],[115],[135,154],[],[155,156],[],[157],[],[],[136,161,159],[],[],[227,224,225,226,222,223,25,20],[167],[138,137],[163],[163,118,164],[163,118,165,120],[163,168,169],[163],[172,170,171],[137,173],[],[138,174],[],[],[119],[157],[121],[156,179],[157],[47],[183,139,182,184],[],[185],[187,166,186],[],[185],[],[189,87,190],[140,191],[192],[],[],[142,87,194],[141,195],[],[89],[198,257],[199,269],[200,276,206],[75,201,277,278,206],[289,202],[304,203],[311,204],[319,205],[210,322],[209,207,208],[208,334],[209,340],[210,350],[362,211],[366,218,212],[218,265,367,213,58],[368,214,216],[79,369,215,266,216],[371,161,221,98],[217],[372,221],[219,220],[377,220],[380,221],[161,384,98],[20],[224],[],[160,256],[],[197,199,210,198,221,211],[160],[160,228],[160,229],[160,200,230],[160,231,200],[160,200,232],[160,200,233],[160,234,200],[160,237,200,235],[290,291],[200,236],[238,200,236],[239,200,236],[160,200,230],[160,200,241],[160,200,242],[160,200,243],[160,244,200],[160,245,200],[160,246,200],[160,240,200,247],[160,248],[249],[249,252],[273,264],[250,255,251,254],[252,273,264],[265,212,262,267],[],[261],[238,240,259,260,239,261],[270,272],[270,259],[268],[246,258,247,248,264,261,263],[273,274],[273,260,263],[262],[265,212,262],[266,214,212,262],[261],[271],[271,233,232],[275],[270],[271,241,242],[273],[271],[202,203,201,204,205],[79,279,280],[282,283,58],[281,228],[192],[],[284,229],[286,287,285],[],[288,230],[],[157],[],[292],[231],[290],[290,293,294],[290],[295,296],[],[],[300,299,298],[301,302],[],[157],[231,303],[],[],[270,87,305],[306,308,307],[309,232],[],[310,233],[],[],[315,313,291,316,312,272,314],[],[],[234,317],[318,235],[192],[],[],[87,237,320],[321,236],[],[87,258,323],[259,327,326,325,324],[238,328],[],[329,239],[330,260,307],[],[],[332,331],[240,333],[],[],[87,273,335],[337,336,307],[338,241],[339,242],[],[],[342,341,345,274,346,343,344],[],[],[243,347],[244,348],[245,349],[192],[],[],[],[87,351,262],[354,355,263,353,352],[246,356],[],[357,247],[358,264,307],[],[],[359,360],[361,248],[],[],[363,87,364],[249,365],[192],[],[213],[157],[215],[156,370],[157],[47],[374,250,375,373],[],[185],[376,187,267],[185],[87,252,378],[379,251],[],[87,382,381],[253,383],[255,187,254],[],[89]],"attribute":["Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Name Expr CodegenAccess ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Continue Stmt ","If Stmt ","Array Access Expr c ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","STATIC","FINAL","Primitive Type boolean ","Simple Name skipNumber ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Null Literal Expr ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr dotFound ","Name Expr typeArgs ","Name Expr dotFound ","Name Expr dotFound ","Variable Declarator boolean dotFound = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","Block Stmt ","Binary Expr OR ","OR","Binary Expr EQUALS ","Binary Expr EQUALS ","Binary Expr EQUALS ","EQUALS","Char Literal Expr '.' ","'.'","Char Literal Expr 'e' ","'e'","Char Literal Expr 'E' ","'E'","Assign Expr ASSIGN ","ASSIGN","Simple Name data ","true","continue;","Block Stmt ","Field Access Expr ","Name Expr IterImplSkip ","Simple Name breaks ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","ReturnStmt","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Name Expr iter ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","StringLiteralExpr","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readSlice-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{"66":"srcmainjavacomjsoniterIterImpl.java-nextToken-IterImpl-JsonIterator","163":"srcmainjavacomjsoniterIterImplString.java-findSliceEnd-IterImplString-JsonIterator","91":"srcmainjavacomjsoniterIterImplString.java-findSliceEnd-IterImplString-JsonIterator"},"num":594,"succs":[[1,65],[67,68,66,3,2],[3,74],[79,4],[93,5],[67,9,94,6,82],[98,7],[109,8],[114,29,9,113],[116,10],[11,140],[12,151],[13,152],[15,14,153,154],[15,158],[162,16],[165,22,17],[167,166,22,18,86],[19,169],[186,20],[193,21],[205],[24,26,28,23,27,25],[24,206],[222,25],[26,229],[239,27],[28,242],[29,249,113],[38,33,32,36,35,31,30,34],[31],[],[33],[],[64,40],[37],[],[],[10,11,3,9,0,4],[71,40],[],[39,1,40],[41,40],[40,42],[43,40],[44,40],[47,45,40],[83,80,5],[46],[48,46],[49,46],[50,46],[46,51],[60,63,52,46,156],[60,13,46,53],[60,54,46],[55,60,46],[60,46,56],[60,57,46],[60,55,46],[61,59,46],[84,88,86,17],[60],[60,62,58],[],[2],[39,72,69,70],[],[73],[],[],[],[276,278,35,275,274,277,31,30],[],[75,77,41,76],[],[78],[78],[],[89],[81,42],[],[80],[80,5,82],[47,55,61,80,85],[],[84],[84,86,17],[87,84,17],[90,91,80],[80],[81,92,42],[],[7,6,8],[95,96],[97],[],[],[100,103,102,101,99],[43,104],[],[44,105],[106,45],[83,108,107],[],[],[],[],[97],[47,111,110],[112,46],[],[],[],[48,115],[],[130],[50,49],[117],[118,117],[119,117,129],[120,117],[117,121],[122,117],[117,125,123],[172,170],[119,117],[126,117],[127,117],[117,128,124],[117,132,131],[117],[133,134],[],[],[136,137,107],[138,49],[139,50],[],[],[146,143,144,118,145,141,142],[],[],[147,51],[148,52],[149],[119,150],[],[],[],[],[15,12,16],[14],[157,155,53],[],[],[],[342,345,341,346,35,344,31,30,343],[54,161,159,160],[],[78],[78],[111,84,163],[55,85,164],[],[19,18,20,21],[],[96,168],[97],[173],[120,56],[170],[171,170],[175,174,170],[170],[177,176],[],[],[179,181,180],[120,182],[],[184,183],[],[185,56],[],[],[187,188,191,171,121,189,190],[],[],[149],[149],[192,122],[],[196,195,194,197,198,172,199],[],[],[200,57],[149],[201,123],[202,203],[],[],[58,204],[],[],[111,125,124],[212],[126,87],[207],[208,207],[207,209],[210,207],[214,213,207],[207],[216,215],[],[],[218,219,107],[87,180,220],[97],[126,221],[],[127,224,227,226,208,223,225],[],[],[149],[149],[128,228],[],[235,232,230,234,231,233,209],[],[],[236,59],[149],[237,129],[88,238,107],[],[],[97],[240,111,61],[60,241],[],[243,244,210,245,246],[62,247],[],[149],[211,248],[],[],[250,63],[],[252,286],[253,287,270,254],[292,254],[297,289,255,271,296],[300,256],[257,258,264,262,267,260],[301,258,264,262,267,260],[308,259,260],[309],[261,308,262],[310],[263,308,264],[311],[265,266,308],[312],[313,270],[268,308,269],[314,269],[302,72,270,113],[254,299,290],[319,272],[273,320,154],[72,113,322],[275],[],[285,71],[],[251],[282,71,284],[282,71,279],[282,71,280],[283,71,281],[291,288],[282,156],[],[252,271],[255,256],[279],[283,288],[289,288],[290,288],[293,294,288],[288],[279,295],[],[],[280,298],[],[],[303],[281,291],[257,301],[301,304,305],[301],[306,291],[307,281],[],[],[],[],[],[],[],[316,111,315],[282,317],[318,283,180],[],[97],[273],[157,284,321],[],[149],[357,324],[358,325,326,166,359],[326,157,362,113],[364,327],[67,329,365,366,328],[157,329,369,113],[373,330],[331,337,386],[387,337,375,332,296],[335,388,333],[334,166,389,335,376],[157,391,113,340],[336],[392,340],[339,338],[339,397],[401,340],[157,113,404],[30],[343],[],[356,156],[],[326,329,330,340,323],[156],[347,156],[371,348,156,327],[349,156],[156,350],[351,156],[351,156],[355,353,352],[374,331,375,377],[],[325],[347,360],[361],[],[],[363],[],[328],[348,367],[368,96],[],[97],[349,372,370],[],[],[436,433,435,434,432,431,35,30],[378],[351,350],[374],[374,331,375],[374,331,376,333],[374,379,380],[374],[383,381,382],[350,384],[],[351,385],[],[],[332],[97],[334],[96,390],[97],[363],[394,352,393,395],[],[78],[180,377,396],[78],[398,111,399],[353,400],[149],[],[355,111,402],[354,403],[],[405],[],[407,466],[408,478],[409,485,415],[487,410,488,486,415],[499,411],[514,412],[520,413],[528,414],[419,531],[418,416,417],[417,543],[418,549],[419,559],[571,420],[575,427,421],[427,474,576,422,296],[423,577,425],[166,578,424,475,425],[580,372,430,113],[426],[581,430],[428,429],[586,429],[589,430],[372,593,113],[30],[433],[],[371,465],[],[406,408,419,407,430,420],[371],[371,437],[371,438],[371,409,439],[371,440,409],[371,409,441],[371,409,442],[371,443,409],[371,446,409,444],[500,501],[409,445],[447,409,445],[448,409,445],[371,409,439],[371,409,450],[371,409,451],[371,409,452],[371,453,409],[371,454,409],[371,455,409],[371,449,409,456],[371,457],[458],[461,458],[482,473],[459,464,460,463],[461,482,473],[474,421,471,476],[],[470],[447,449,468,469,448,470],[479,481],[479,468],[477],[455,467,456,457,473,472,470],[482,483],[482,469,472],[471],[474,421,471],[475,423,421,471],[470],[480],[480,442,441],[484],[479],[480,450,451],[482],[480],[411,412,410,414,413],[166,489,490],[],[492,493,296],[491,437],[149],[],[494,438],[496,497,495],[],[439,498],[],[97],[],[502],[440],[500],[500,503,504],[500],[505,506],[],[],[510,509,508],[511,512],[],[97],[440,513],[],[],[479,111,515],[516,517,107],[518,441],[519,442],[],[],[524,522,501,521,525,481,523],[],[],[443,526],[527,444],[149],[],[],[111,446,529],[530,445],[],[111,467,532],[468,536,535,534,533],[447,537],[],[538,448],[539,469,107],[],[],[541,540],[449,542],[],[],[111,482,544],[546,545,107],[547,450],[548,451],[],[],[550,551,554,483,555,552,553],[],[],[452,556],[453,557],[454,558],[149],[],[],[],[111,560,471],[563,564,562,472,561],[455,565],[],[566,456],[567,473,107],[],[],[568,569],[570,457],[],[],[572,111,573],[458,574],[149],[],[422],[97],[424],[96,579],[97],[363],[583,459,584,582],[],[78],[585,180,476],[78],[111,461,587],[588,460],[],[111,591,590],[462,592],[464,180,463],[],[405]],"attribute":["If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","For Stmt ","If Stmt ","Unary Expr ! ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","STATIC","FINAL","Class Or Interface Type Slice ","Simple Name readSlice ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr sLen ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr end ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr end ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Method Call Expr ","NOT_EQUALS","Char Literal Expr ''' ","Name Expr IterImpl ","Simple Name nextToken ","Simple Name iter ","Method Declaration Throws ","'''","Method Call Expr ","Name Expr TypeLiteral ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name end ","Name Expr IterImplString ","Name Expr end ","Name Expr end ","Primitive Type int ","Name Expr IterImplString ","Name Expr end ","Name Expr end ","Name Expr end ","Variable Declarator int end = ","Primitive Type int ","Method Call Expr ","Simple Name findSliceEnd ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Method Call Expr ","Field Access Expr ","Simple Name reset ","Field Access Expr ","Field Access Expr ","Binary Expr MINUS ","Simple Name reusableSlice ","Simple Name buf ","Simple Name head ","MINUS","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name head ","ReturnStmt","Field Access Expr ","Simple Name reusableSlice ","Variable Declaration Expr ","Simple Name write ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Simple Name field ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Name Expr part1 ","Variable Declarator byte[] part1 = ","Name Expr writer ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name head ","Method Call Expr ","Name Expr writer ","Binary Expr LESS ","Name Expr rendered ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name buf ","Simple Name head ","Zero IntegerLiteralExpr","Simple Name length ","Block Stmt ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Expression Stmt ","Method Call Expr ","Simple Name findSliceEnd ","Block Stmt ","EQUALS","Unary Expr - ","Name Expr i ","Variable Declaration Expr ","Simple Name part2 ","Name Expr part2 ","Name Expr part2 ","Variable Declarator byte[] part2 = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr PLUS ","Field Access Expr ","PLUS","Field Access Expr ","Simple Name length ","Field Access Expr ","Simple Name length ","Simple Name buf ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Field Access Expr ","Simple Name buf ","Simple Name length ","Field Access Expr ","Simple Name length ","Simple Name buf ","Field Access Expr ","Variable Declaration Expr ","Simple Name part2 ","Name Expr part2 ","Name Expr part2 ","Name Expr part2 ","Name Expr part2 ","Variable Declarator byte[] part2 = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MINUS ","Binary Expr PLUS ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Binary Expr MINUS ","Simple Name buf ","Simple Name length ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Method Call Expr ","Field Access Expr ","Simple Name reset ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name reusableSlice ","Simple Name length ","Field Access Expr ","Simple Name reusableSlice ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr ' ' ","Switch Entry Stmt ","Primitive Type char ","Switch Entry Stmt ","Char Literal Expr 't' ","Switch Entry Stmt ","Char Literal Expr 'r' ","Continue Stmt ","Switch Entry Stmt ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Return Stmt ","Primitive Type byte ","Simple Name nextToken ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Primitive Type byte ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Unary Expr ++ ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","SwitchEntryStmt","' '","'n'","'t'","'r'","continue;","Assign Expr ASSIGN ","Switch Entry Stmt ","Binary Expr PLUS ","Simple Name head ","Integer Literal Expr Note Zero  ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Integer Literal Expr Zero  ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"nextToken-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":362,"succs":[[1,41],[2,42,3,19],[47,3],[52,44,4,20,51],[55,5],[6,7,13,11,16,9],[56,7,13,11,16,9],[63,8,9],[64],[10,63,11],[65],[12,63,13],[66],[14,15,63],[67],[68,19],[17,63,18],[69,18],[57,23,19,77],[54,3,45],[78,21],[22,79,80],[23,77,84],[28,32,29,26,27,30,24,25],[25],[],[27],[],[40,34],[31],[],[],[0],[37,34,39],[],[37,34,33],[37,34,35],[38,34,36],[46,43],[37,82],[],[1,20],[4,5],[33],[38,43],[44,43],[45,43],[48,49,43],[43],[33,50],[],[],[35,53],[],[],[58],[36,46],[6,56],[56,59,60],[56],[61,46],[62,36],[],[],[],[],[],[],[],[72,71,70],[73,37],[],[75,38,74],[],[],[76],[],[],[22],[83,39,81],[],[],[],[105,109,29,104,108,107,24,25,106],[85],[],[120,87],[121,89,88,122,123],[89,83,126,77],[128,90],[130,129,92,131,91],[83,92,135,77],[139,93],[94,100,152],[153,100,141,95,51],[98,154,96],[97,122,155,98,142],[83,157,77,103],[99],[158,103],[102,101],[102,164],[168,103],[83,77,171],[24],[106],[],[119,82],[],[89,92,93,103,86],[82],[110,82],[137,111,82,90],[112,82],[82,113],[114,82],[114,82],[118,116,115],[140,94,141,143],[],[88],[110,124],[],[125],[],[],[127],[],[91],[111,132],[],[133,134],[],[76],[],[112,138,136],[],[],[203,200,201,202,198,199,29,24],[144],[114,113],[140],[140,94,141],[140,94,142,96],[140,145,146],[140],[149,147,148],[113,150],[],[114,151],[],[],[95],[76],[97],[134,156],[76],[127],[160,115,159,161],[],[162],[74,143,163],[],[162],[165,71,166],[116,167],[85],[],[118,71,169],[117,170],[],[172],[],[174,233],[175,245],[176,252,182],[254,177,253,255,182],[266,178],[281,179],[288,180],[296,181],[186,299],[185,183,184],[311,184],[185,317],[186,327],[339,187],[343,194,188],[194,241,344,189,51],[190,345,192],[122,346,191,242,192],[348,138,197,77],[193],[349,197],[195,196],[354,196],[357,197],[138,361,77],[24],[200],[],[137,232],[],[173,175,186,174,197,187],[137],[137,204],[137,205],[137,176,206],[137,207,176],[137,176,208],[137,176,209],[137,210,176],[137,213,176,211],[267,268],[176,212],[214,176,212],[215,176,212],[137,176,206],[137,176,217],[137,176,218],[137,176,219],[137,220,176],[137,221,176],[137,222,176],[137,216,176,223],[137,224],[225],[225,228],[249,240],[226,231,230,227],[228,249,240],[241,188,238,243],[],[237],[214,216,235,236,215,237],[246,248],[246,235],[244],[222,234,224,223,240,237,239],[249,250],[249,236,239],[238],[241,188,238],[242,190,188,238],[237],[247],[247,209,208],[251],[246],[247,217,218],[249],[247],[178,179,177,180,181],[122,256,257],[],[259,260,51],[258,204],[85],[],[261,205],[263,264,262],[],[265,206],[],[76],[],[269],[207],[267],[267,271,270],[267],[272,273],[],[],[277,276,275],[278,279],[],[76],[207,280],[],[],[71,246,282],[283,285,284],[286,208],[],[287,209],[],[],[292,290,268,293,289,248,291],[],[],[210,294],[295,211],[85],[],[],[71,213,297],[298,212],[],[71,234,300],[235,304,303,302,301],[214,305],[],[306,215],[307,236,284],[],[],[309,308],[216,310],[],[],[71,249,312],[314,313,284],[315,217],[316,218],[],[],[319,318,322,250,323,320,321],[],[],[219,324],[220,325],[221,326],[85],[],[],[],[71,328,238],[331,332,330,239,329],[222,333],[],[334,223],[335,240,284],[],[],[336,337],[338,224],[],[],[340,71,341],[225,342],[85],[],[189],[76],[191],[134,347],[76],[127],[351,226,352,350],[],[162],[353,74,243],[162],[71,228,355],[356,227],[],[71,359,358],[229,360],[231,74,230],[],[172]],"attribute":["For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr ' ' ","Switch Entry Stmt ","Primitive Type char ","Switch Entry Stmt ","Char Literal Expr 't' ","Switch Entry Stmt ","Char Literal Expr 'r' ","Continue Stmt ","Switch Entry Stmt ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Return Stmt ","Method Declaration Throws ","STATIC","FINAL","Primitive Type byte ","Simple Name nextToken ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Primitive Type byte ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Unary Expr ++ ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","SwitchEntryStmt","' '","'n'","'t'","'r'","continue;","Assign Expr ASSIGN ","Switch Entry Stmt ","ASSIGN","Binary Expr PLUS ","Simple Name head ","PLUS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","ReturnStmt","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","EQUALS","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","StringLiteralExpr","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"loadMore-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":288,"succs":[[40,1],[41,2,3,42,43],[3,18,47,46],[49,4],[51,6,50,52,5],[18,6,57,46],[61,7],[8,14,74],[76,14,63,9,75],[12,77,10],[11,42,78,12,64],[80,18,46,17],[13],[81,17],[16,15],[16,88],[94,17],[18,46,97],[22,25,26,28,19,24,21,20,23],[20],[21],[],[23],[],[39,30],[27],[],[],[3,6,7,17,0],[30],[],[29,30],[59,31,30,4],[32,30],[30,33],[34,30],[34,30],[36,38,35],[62,8,63,65],[],[2],[29,44],[],[45],[],[],[],[48],[],[5],[31,53],[],[54,55],[],[56],[],[],[32,60,58],[],[],[129,126,128,127,124,125,25,20],[66],[34,33],[62],[62,8,63],[62,8,64,10],[62,67,68],[62],[71,69,70],[33,72],[],[34,73],[],[],[9],[],[56],[11],[55,79],[56],[48],[83,35,82,84],[],[85],[87,65,86],[],[85],[],[89,90,91],[36,92],[],[93],[],[],[38,90,95],[37,96],[],[98],[],[100,159],[101,171],[102,178,108],[180,103,181,179,108],[192,104],[207,105],[214,106],[222,107],[112,225],[111,109,110],[110,237],[111,243],[112,253],[265,113],[269,120,114],[120,167,270,115,75],[116,271,118],[42,272,117,168,118],[274,60,123,46],[119],[275,123],[121,122],[280,122],[283,123],[60,287,46],[20],[126],[],[59,158],[],[99,101,112,100,123,113],[59],[59,130],[59,131],[59,102,132],[59,133,102],[59,102,134],[59,102,135],[59,136,102],[59,139,102,137],[193,194],[102,138],[140,102,138],[141,102,138],[59,102,132],[59,102,143],[59,102,144],[59,102,145],[59,146,102],[59,147,102],[59,148,102],[59,142,102,149],[59,150],[151],[154,151],[175,166],[152,157,156,153],[154,175,166],[167,114,164,169],[],[163],[140,142,161,162,141,163],[172,174],[172,161],[170],[148,160,149,150,166,165,163],[175,176],[175,162,165],[164],[167,114,164],[168,116,114,164],[163],[173],[173,135,134],[177],[172],[173,143,144],[175],[173],[104,105,103,107,106],[42,182,183],[],[185,186,75],[184,130],[93],[],[187,131],[189,190,188],[],[132,191],[],[56],[],[195],[133],[193],[193,196,197],[193],[198,199],[],[],[203,202,201],[204,205],[],[56],[133,206],[],[],[90,172,208],[209,211,210],[212,134],[],[213,135],[],[],[216,218,194,219,215,174,217],[],[],[136,220],[221,137],[93],[],[],[90,139,223],[224,138],[],[90,160,226],[161,230,229,228,227],[140,231],[],[232,141],[233,162,210],[],[],[235,234],[142,236],[],[],[90,175,238],[240,239,210],[241,143],[242,144],[],[],[244,245,248,176,249,246,247],[],[],[145,250],[146,251],[147,252],[93],[],[],[],[90,254,164],[257,258,165,256,255],[148,259],[],[260,149],[261,166,210],[],[],[262,263],[264,150],[],[],[266,90,267],[151,268],[93],[],[115],[56],[117],[55,273],[56],[48],[277,152,278,276],[],[85],[279,87,169],[85],[90,154,281],[282,153],[],[90,285,284],[155,286],[157,87,156],[],[98]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","STATIC","FINAL","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","EQUALS","Null Literal Expr ","Simple Name in ","NullLiteralExpr","ReturnStmt","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","LESS","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","StringLiteralExpr","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Integer Literal Expr Zero  ","Simple Name head ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"keepSkippedBytesThenRead-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":205,"succs":[[1,65],[2,77],[3,84,9],[86,4,85,87,9],[102,5],[117,6],[125,7],[133,8],[13,136],[12,10,11],[148,11],[12,154],[13,164],[176,14],[180,21,15],[21,73,181,16,94],[17,182,19],[89,183,18,74,19],[187,25,24,186],[20],[189,24],[22,23],[196,23],[199,24],[25,203,186],[34,29,30,32,26,28,31,27],[27],[],[29],[],[36,64],[33],[],[],[0,2,13,1,24,14],[36],[],[36,35],[36,37],[36,3,38],[36,39,3],[36,3,40],[36,3,41],[36,42,3],[36,45,3,43],[103,104],[3,44],[46,3,44],[47,3,44],[36,3,38],[36,3,49],[36,3,50],[36,3,51],[36,52,3],[36,53,3],[36,54,3],[36,48,55,3],[36,56],[57],[57,60],[81,72],[58,63,62,59],[60,81,72],[73,15,70,75],[],[69],[46,48,67,68,47,69],[78,80],[78,67],[76],[54,66,55,56,72,69,71],[81,82],[81,68,71],[70],[73,15,70],[74,17,15,70],[69],[79],[79,41,40],[83],[78],[79,49,50],[81],[79],[5,6,4,7,8],[89,88,90],[],[93,95,94],[91,35],[],[92],[],[],[96,37],[],[98,99,97],[],[100,38],[],[101],[],[],[105],[39],[103],[103,106,107],[103],[108,109],[],[],[113,112,111],[114,115],[],[101],[39,116],[],[],[78,118,119],[],[120,122,121],[123,40],[],[124,41],[],[],[129,127,104,130,126,80,128],[],[],[42,131],[132,43],[92],[],[],[118,45,134],[135,44],[],[118,66,137],[67,141,140,139,138],[46,142],[],[143,47],[144,68,121],[],[],[146,145],[48,147],[],[],[118,81,149],[151,150,121],[152,49],[153,50],[],[],[156,155,159,82,160,157,158],[],[],[51,161],[52,162],[53,163],[92],[],[],[],[118,165,70],[168,169,167,71,166],[54,170],[],[171,55],[172,72,121],[],[],[173,174],[175,56],[],[],[177,118,178],[179,57],[92],[],[16],[101],[18],[185,184],[101],[],[],[188],[],[191,58,192,190],[],[193],[194,195,75],[],[193],[],[118,60,197],[198,59],[],[118,201,200],[61,202],[63,195,62],[],[204],[]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PRIVATE","STATIC","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","EQUALS","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Zero IntegerLiteralExpr","Field Access Expr ","LESS","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","ASSIGN","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","MINUS","ReturnStmt","Boolean Literal Expr false ","false","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","StringLiteralExpr","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true ","true"]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readByte-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":328,"succs":[[24,1],[25,27,26,2,5],[30,3],[31,4,5,32],[36,5],[42,6,41],[15,13,11,9,12,10,7,8],[8],[],[10],[],[23,17],[14],[],[],[0,5],[17],[],[16,17],[18,34,17,1],[3,19,17,1],[20,17],[21,17],[],[2],[16,28],[],[18,29],[],[],[4],[33,35,19],[],[],[],[68,72,67,71,12,70,7,8,69],[39,37,38,20],[],[40],[40],[],[],[43,44],[21,45],[47,46],[],[22,48],[],[],[83,50],[84,51,52,26,85],[52,35,88,41],[90,53],[92,91,55,93,54],[35,55,98,41],[102,56],[57,63,115],[117,63,104,58,116],[61,118,59],[60,26,119,61,105],[35,121,41,66],[62],[122,66],[65,64],[65,128],[134,66],[35,41,137],[7],[69],[],[82,34],[],[52,55,66,56,49],[34],[73,34],[100,74,34,53],[75,34],[34,76],[77,34],[77,34],[79,81,78],[103,57,104,106],[],[51],[73,86],[87],[],[],[89],[],[54],[74,94],[],[95,96],[],[97],[],[],[75,101,99],[],[],[169,166,167,168,164,165,12,7],[107],[77,76],[103],[103,57,104],[103,57,105,59],[103,108,109],[103],[112,110,111],[76,113],[],[77,114],[],[],[58],[],[97],[60],[96,120],[97],[89],[124,78,123,125],[],[40],[127,106,126],[40],[],[129,130,131],[79,132],[],[133],[],[],[81,130,135],[80,136],[],[138],[],[140,199],[141,211],[142,218,148],[220,143,221,219,148],[232,144],[247,145],[254,146],[262,147],[152,265],[151,149,150],[150,277],[151,283],[152,293],[305,153],[309,160,154],[160,207,310,155,116],[156,311,158],[26,312,157,208,158],[314,101,163,41],[159],[315,163],[161,162],[320,162],[323,163],[101,327,41],[7],[166],[],[100,198],[],[139,141,152,140,163,153],[100],[100,170],[100,171],[100,142,172],[100,173,142],[100,142,174],[100,142,175],[100,176,142],[100,179,142,177],[233,234],[142,178],[180,142,178],[181,142,178],[100,142,172],[100,142,183],[100,142,184],[100,142,185],[100,186,142],[100,187,142],[100,188,142],[100,182,142,189],[100,190],[191],[191,194],[215,206],[192,197,193,196],[194,215,206],[207,154,204,209],[],[203],[180,182,201,202,181,203],[212,214],[212,201],[210],[188,200,189,190,206,205,203],[215,216],[215,202,205],[204],[207,154,204],[208,156,154,204],[203],[213],[213,175,174],[217],[212],[213,183,184],[215],[213],[144,145,143,146,147],[26,222,223],[],[225,226,116],[224,170],[133],[],[227,171],[229,230,228],[],[231,172],[],[97],[],[235],[173],[233],[233,236,237],[233],[238,239],[],[],[243,242,241],[244,245],[],[97],[173,246],[],[],[212,130,248],[249,251,250],[252,174],[],[253,175],[],[],[256,258,234,255,259,214,257],[],[],[176,260],[261,177],[133],[],[],[130,179,263],[264,178],[],[130,200,266],[201,270,269,268,267],[180,271],[],[272,181],[273,202,250],[],[],[275,274],[182,276],[],[],[130,215,278],[280,279,250],[281,183],[282,184],[],[],[284,285,288,216,289,286,287],[],[],[185,290],[186,291],[187,292],[133],[],[],[],[130,294,204],[297,298,205,296,295],[188,299],[],[300,189],[301,206,250],[],[],[302,303],[304,190],[],[],[306,130,307],[308,191],[133],[],[155],[97],[157],[96,313],[97],[89],[317,192,318,316],[],[40],[319,127,209],[40],[130,194,321],[322,193],[],[130,325,324],[195,326],[197,127,196],[],[138]],"attribute":["If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","Method Declaration Throws ","STATIC","FINAL","Primitive Type byte ","Simple Name readByte ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","EQUALS","Field Access Expr ","Simple Name head ","Simple Name tail ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","ReturnStmt","Array Access Expr iter.head++ ","Field Access Expr ","Unary Expr ++ ","Simple Name buf ","Field Access Expr ","POSTFIX_INCREMENT","Simple Name head ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","LESS","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Integer Literal Expr Zero  ","Simple Name head ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readAny-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{"213":"srcmainjavacomjsoniteranyAny.java-lazyLong-Any-byte[]-int-int","103":"srcmainjavacomjsoniteranyAny.java-lazyString-Any-byte[]-int-int","152":"srcmainjavacomjsoniteranyAny.java-wrap-Any-int","168":"srcmainjavacomjsoniteranyAny.java-lazyArray-Any-byte[]-int-int","185":"srcmainjavacomjsoniteranyAny.java-lazyObject-Any-byte[]-int-int","201":"srcmainjavacomjsoniteranyAny.java-lazyDouble-Any-byte[]-int-int","138":"srcmainjavacomjsoniteranyAny.java-wrap-Any-int","124":"srcmainjavacomjsoniteranyAny.java-wrap-Any-int"},"num":1085,"succs":[[1,72],[78,2],[14,34,19,24,4,29,3,9],[14,19,34,24,4,29,9,79],[8,5,86,7,6],[87],[7,88],[92,8],[103,9,102,42],[11,13,86,12,10],[110],[111,12],[13,118],[124,14,102,42],[15,18,16,86,17],[129],[130,17],[133,18],[138,19,102,42],[23,21,86,20,22],[143],[144,22],[23,147],[24,152,102,42],[28,27,86,25,26],[159],[27,160],[28,164],[168,29,102,42],[31,33,86,30,32],[176],[177,32],[181,33],[34,185,102,42],[35,86],[39,193,36],[68,196,39,37,194],[197,38],[201,102,42],[40,41],[41,209],[213,102,42],[47,51,46,45,48,43,49,44],[44],[244],[46],[],[71,54],[50],[],[],[1,0,2],[53,54],[54],[],[52,84],[55,52,90],[52,56,100],[57,52,114],[52,58],[114,59],[60,59],[61,114],[61,62],[63,162],[63,64,100],[63,179,65],[63,66,100],[63,67,195],[63,68,36,100],[63,68,69,36,100],[],[74,75,73],[52,76],[],[53,77],[],[],[80],[55],[82,81,79],[79],[55,85,83],[],[],[247,249,48,246,245,248,44,244],[],[],[91,89,56],[],[],[322,326,324,48,325,244,323,44],[96],[57],[93],[93,94],[97,93,98],[93],[57,99,101],[],[],[427,423,424,426,425,44],[],[106,107,94,104,105],[],[],[108],[109,95],[],[],[],[58,112,113,116],[],[117,115],[],[],[487,489,486,490,485,488,43,48,44],[],[74,120,119],[121,59],[122,123],[],[117],[],[127,126,125],[],[],[128],[],[],[60,131,132,116],[],[117,115],[74,135,134],[61,136],[123,137],[],[117],[141,139,140],[],[],[142],[],[],[145,62,146,116],[],[117,115],[74,149,148],[63,150],[123,151],[],[117],[155,153,154],[],[],[157,156],[],[158],[],[],[163,64,161],[],[],[575,574,571,48,573,572,44,244],[74,166,165],[],[167,65,101],[],[172,170,171,173,169],[],[],[],[108],[174,175],[],[],[],[180,178,66],[],[],[668,665,664,48,667,666,44,244],[74,183,182],[],[67,184,101],[],[186,190,189,188,187],[],[],[],[108],[191,192],[],[],[38,37],[],[],[750,748,48,747,244,44,749,751],[199,198,74],[],[200,69,101],[],[204,203,202,205,206],[],[],[],[108],[208,207],[],[],[211,74,210],[],[70,212,101],[],[216,215,218,214,217],[],[],[],[108],[219,220],[],[],[222,257],[223,258,240,224],[263,224],[268,260,225,241,267],[271,226],[227,228,234,232,237,230],[272,228,234,232,237,230],[86,229,230],[279],[231,86,232],[280],[233,86,234],[281],[235,236,86],[282],[283,240],[238,86,239],[284,239],[273,85,240,102],[224,270,261],[290,242],[243,291,292],[85,102,296],[],[246],[],[256,84],[],[221],[253,84,255],[253,84,250],[253,84,251],[254,84,252],[262,259],[253,294],[],[222,241],[225,226],[250],[254,259],[260,259],[261,259],[264,265,259],[259],[250,266],[],[],[251,269],[],[],[274],[252,262],[227,272],[272,275,276],[272],[277,262],[278,252],[],[],[],[],[],[],[286,285,74],[253,287],[289,254,288],[],[],[117],[243],[295,255,293],[],[],[],[838,48,842,841,43,840,44,244,839],[108],[339,298],[299,340],[319,300,348],[319,343,349,350,301],[302,352],[367,303],[373,304],[374,305],[376,306,375,377,308],[307,386],[313,388],[309,389],[391,310],[393,312,376,311,392],[313,388],[400,313],[314,401],[315,402,316,292],[404,316],[409,317],[318,368],[410],[321,320],[321,414],[91,102],[323],[],[338,90],[],[297],[90,336],[90,336,327],[90,336,328,332],[90,336,329],[90,336,330],[90,336,331],[90,336,294,332],[333,90,314,336],[90,336,334],[90,327,335,337],[343,300,341],[],[299,298],[344],[327,342],[],[341],[346,345,341],[341],[347,327,342],[],[301,302,303,313,316],[],[123,351],[117],[360],[328],[359,353],[354,353],[355,353],[356,353],[357,353],[358,353],[362,353,361],[353],[363,364,365],[366,328],[],[117],[],[370],[369],[],[371,372,369],[369],[128],[312,304,309,308],[306,307],[378,354,267],[],[381,382,380],[329,379],[],[355,383],[],[385],[384,330],[],[],[387,74,368],[142],[],[356,390],[],[311],[394,357,267],[381,396,397],[331,395],[],[358,398],[385],[399,332],[],[359,390],[315],[333,295,403],[],[405,406,407,334],[],[408],[408],[],[318],[411,74,412],[413,335],[117],[],[74,415,337],[416,336],[],[418,434],[419,442],[420,447],[421,454],[465,422],[458,102,101],[44],[428,425],[],[433,100],[421,420,419,422,417,418],[],[100],[429,100],[430],[431,430],[],[438],[429],[435],[435,436],[440,435,439],[435],[429,441],[],[74,443,444],[445,430],[123,446],[],[117],[450],[431],[448],[448,452,451],[448],[431,453],[],[459],[449,436],[455],[455,456],[455,457],[455,461,460],[455],[462,463],[],[],[449,436,364],[437,470,468,466,469,467,456],[],[],[471,432],[108],[472,457],[],[],[474,505],[509,475],[511,512,510,476],[515,477],[478,525],[484,526,479,292],[480,528],[481,483,349,529,517],[482,530],[483,102,116],[484,535],[539],[486],[],[114,503],[115,504],[],[474,473],[114,492],[115],[491],[493,491],[494,475,491],[495,475,491],[475,496,491,294],[478,475,491,499],[478,475,491,497],[478,475,498],[500,475,502,498],[517,516],[],[],[507,506,492],[508,491],[],[],[484,477,476],[493,513],[],[494,514],[],[],[518],[495,496],[516],[519,520,516],[516],[522,521,364],[495,523],[524,496],[],[],[483,479],[527,295,497],[],[481,482],[108],[532,531,74],[498,533],[534,499],[],[],[500,538,537,536],[],[408],[408],[507,540,502],[501,541],[],[587,543],[595,544],[567,596,546,545],[602,546],[547,598,568,606,267],[549,559,555,548],[549,600,559,555,630],[552,86,553,550,554,551],[87],[552,608],[553,613],[554,615],[567,568,388],[558,556,86,557],[159],[558,620],[567,568,388],[561,562,560,86,566],[621],[562,622],[563,623],[564,349,624,566,591],[625,565],[163,566,102],[567,568,388],[270,546,599],[569,632],[570,633,292],[163,102],[572],[],[586,162],[],[543,542],[585,583,162],[583,576,162],[577,583,162],[578,580,583,162],[597,601,600],[90,579],[579,581],[584,582,579],[601],[583,294],[],[592],[589,591],[],[589,588],[589,590],[589,593,594],[589],[117],[544,568],[547],[576],[597,584,601],[597,601,598],[597,601,599],[597,580,582],[604,597,603],[597],[605,576],[],[577,607],[],[609,74,610],[611,579],[580,288,612],[],[117],[91,614,581],[],[74,601,616],[617,618,364],[582,619],[117],[],[588,270],[],[390,590],[564,565],[108],[626,74,627],[628,583],[629,584,288],[],[117],[578,631],[],[570],[295,585,634],[],[680,636],[688,637],[660,689,638,639],[695,639],[661,691,699,640,267],[648,642,641,652],[723,648,642,693,652],[647,645,644,86,646,643],[87],[645,701],[706,646],[647,708],[661,660,388],[649,86,651,650],[176],[713,651],[661,660,388],[653,654,655,86,659],[714],[655,715],[656,716],[684,349,717,659,657],[658,718],[180,659,102],[660,661,388],[270,692,639],[662,725],[726,663,292],[180,102],[665],[],[179,679],[],[635,636],[676,179,678],[676,179,669],[676,179,670],[676,671,179,673],[694,693,690],[672,90],[672,674],[672,675,677],[694],[676,294],[],[685],[684,682],[],[681,682],[683,682],[686,687,682],[682],[117],[661,637],[640],[669],[677,694,690],[691,694,690],[692,694,690],[673,675,690],[696,697,690],[690],[698,669],[],[700,670],[],[74,703,702],[672,704],[705,673,288],[],[117],[91,674,707],[],[74,694,709],[710,711,364],[675,712],[117],[],[681,270],[],[683,390],[658,657],[108],[74,719,720],[676,721],[288,677,722],[],[117],[724,671],[],[663],[295,678,727],[],[729,761],[769,730],[770,731,732,742],[775,732],[772,733,743,267,779],[734,781],[735,792],[376,738,793,794,736],[737,803],[283,742],[805,739],[806,740,786,742],[809,741],[196,742,764,102],[270,732,773],[744,812],[813,745,292],[815,746],[196,765,102],[748],[],[760,195],[],[729,728],[755,758,195],[752,755,758,195],[755,758,195,753],[754,758,195,756],[771,774],[755,294],[759,755,744],[757,755,744],[],[766],[763,765,764],[],[762],[764,762],[768,767,763],[763],[142],[743,730],[733,734,738],[752],[771,756],[772,771],[771,773],[776,771,777],[771],[752,778],[],[780,753],[],[787],[754,774],[782],[783,782],[782,784],[782,785],[782,788,789],[782],[790,774],[791,754],[],[737,736],[376,796,795],[801,349,785],[349,783,797],[349,784,799],[798],[],[800],[],[802],[],[74,804,762],[128],[740,741],[807,808],[],[],[74,810,756],[755,811],[],[745,746],[295,757,814],[],[74,816,817],[758,818],[819,759],[],[],[853,821],[854,823,822,349,855],[823,295,857,102],[858,824],[381,826,859,860,825],[295,826,863,102],[867,827],[828,834,880],[881,834,869,829,267],[832,882,830],[831,349,883,832,870],[885,295,102,837],[833],[886,837],[836,835],[836,891],[895,837],[295,102,898],[839],[],[852,294],[],[823,826,827,837,820],[294],[843,294],[865,844,294,824],[845,294],[294,846],[847,294],[847,294],[851,849,848],[868,828,869,871],[],[822],[843,856],[158],[],[142],[825],[844,861],[862,123],[],[117],[845,866,864],[],[],[928,925,926,927,423,924,48,44],[872],[847,846],[868],[868,828,869],[868,828,870,830],[868,873,874],[868],[877,875,876],[846,878],[],[847,879],[],[],[829],[117],[831],[123,884],[117],[142],[888,848,887,889],[],[408],[288,871,890],[408],[892,74,893],[849,894],[108],[],[851,74,896],[850,897],[],[128],[900,958],[901,970],[902,977,908],[376,903,978,979,908],[990,904],[1005,905],[1011,906],[1019,907],[912,1022],[911,909,910],[910,1034],[911,1040],[912,1050],[1062,913],[1066,920,914],[920,966,1067,915,267],[916,1068,918],[349,1069,917,967,918],[1071,866,923,102],[919],[1072,923],[921,922],[1077,922],[1080,923],[866,1084,102],[925],[],[865,957],[],[899,901,912,900,923,913],[865],[865,929],[865,930],[865,902,931],[865,932,902],[865,902,933],[865,902,934],[865,935,902],[865,938,902,936],[991,992],[902,937],[939,902,937],[940,902,937],[865,902,931],[865,902,942],[865,902,943],[865,902,944],[865,945,902],[865,946,902],[865,947,902],[865,941,948,902],[865,949],[950],[950,953],[974,965],[951,956,955,952],[953,974,965],[966,914,963,968],[],[962],[941,939,960,961,940,962],[971,973],[971,960],[969],[947,959,948,949,965,962,964],[974,975],[974,961,964],[963],[966,914,963],[967,916,914,963],[962],[972],[972,934,933],[976],[971],[972,942,943],[974],[972],[904,903,905,907,906],[349,980,981],[983,984,267],[982,929],[108],[],[985,930],[987,988,986],[],[931,989],[],[117],[],[993],[932],[991],[991,994,995],[991],[996,997],[],[],[1001,1000,999],[1002,1003],[],[117],[932,1004],[],[],[971,74,1006],[1007,1008,364],[1009,933],[1010,934],[],[],[1015,1013,992,1016,1012,973,1014],[],[],[935,1017],[1018,936],[108],[],[],[74,938,1020],[1021,937],[],[74,959,1023],[960,1027,1026,1025,1024],[939,1028],[],[1029,940],[1030,961,364],[],[],[1032,1031],[941,1033],[],[],[74,974,1035],[1037,1036,364],[1038,942],[1039,943],[],[],[1042,1041,1045,975,1046,1043,1044],[],[],[944,1047],[945,1048],[946,1049],[108],[],[],[],[74,1051,963],[1054,1055,1053,964,1052],[947,1056],[],[1057,948],[1058,965,364],[],[],[1059,1060],[1061,949],[],[],[1063,74,1064],[950,1065],[108],[],[915],[117],[917],[123,1070],[117],[142],[1074,951,1075,1073],[],[408],[1076,288,968],[408],[74,953,1078],[1079,952],[],[74,1082,1081],[954,1083],[956,288,955],[],[128]],"attribute":["Expression Stmt ","Expression Stmt ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr ''' ","Expression Stmt ","Expression Stmt ","Return Stmt ","Switch Entry Stmt ","Char Literal Expr 't' ","Expression Stmt ","Expression Stmt ","Return Stmt ","Switch Entry Stmt ","Char Literal Expr 'f' ","Expression Stmt ","Expression Stmt ","Return Stmt ","Switch Entry Stmt ","Char Literal Expr 'n' ","Expression Stmt ","Expression Stmt ","Return Stmt ","Switch Entry Stmt ","Char Literal Expr '[' ","Expression Stmt ","Expression Stmt ","Return Stmt ","Switch Entry Stmt ","Char Literal Expr '{' ","Expression Stmt ","Expression Stmt ","Return Stmt ","Switch Entry Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Return Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Class Or Interface Type Any ","Simple Name readAny ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type Byte ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Field Access Expr ","Simple Name skipStartedAt ","Simple Name head ","Variable Declaration Expr ","Simple Name c ","Variable Declarator byte c = ","Primitive Type byte ","Method Call Expr ","Simple Name nextToken ","Simple Name iter ","Method Declaration Throws ","SwitchEntryStmt","'''","Method Call Expr ","Simple Name skipString ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name copied ","Name Expr copied ","Name Expr copied ","Variable Declarator byte[] copied = ","Simple Name append ","Method Call Expr ","Simple Name copySkippedBytes ","Simple Name iter ","Method Declaration ","ReturnStmt","Method Call Expr ","Name Expr Any ","Simple Name lazyString ","Integer Literal Expr Zero  ","Field Access Expr ","Zero IntegerLiteralExpr","Simple Name length ","'t'","Method Call Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Simple Name iter ","Simple Name n ","Method Declaration Throws ","IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Boolean Literal Expr true ","true","'f'","Method Call Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Boolean Literal Expr false ","false","'n'","Method Call Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Cast Expr ","Class Or Interface Type Object ","Null Literal Expr ","NullLiteralExpr","'['","Method Call Expr ","Simple Name skipArray ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr copied ","Method Call Expr ","Simple Name copySkippedBytes ","Method Call Expr ","Name Expr Any ","Simple Name lazyArray ","Name Expr copied ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr copied ","Simple Name length ","'{'","Method Call Expr ","Simple Name skipObject ","String Literal Expr Not Empty  ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr copied ","Method Call Expr ","Simple Name copySkippedBytes ","Method Call Expr ","Name Expr Any ","Simple Name lazyObject ","Name Expr copied ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr copied ","Simple Name length ","Block Stmt ","Simple Name skipNumber ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Name Expr copied ","Method Call Expr ","Parameter ParseException e ","Method Call Expr ","Name Expr Any ","Simple Name lazyDouble ","Name Expr copied ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr copied ","Simple Name length ","Assign Expr ASSIGN ","Name Expr copied ","Method Call Expr ","Class Or Interface Type Map ","Method Call Expr ","Name Expr Any ","Simple Name lazyLong ","Name Expr copied ","Integer Literal Expr Zero  ","Field Access Expr ","Name Expr copied ","Simple Name length ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr ' ' ","Switch Entry Stmt ","Primitive Type char ","Switch Entry Stmt ","Char Literal Expr 't' ","Switch Entry Stmt ","Char Literal Expr 'r' ","Continue Stmt ","Switch Entry Stmt ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Return Stmt ","FINAL","Primitive Type byte ","Simple Name nextToken ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Primitive Type byte ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Unary Expr ++ ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","' '","'n'","'t'","'r'","continue;","Assign Expr ASSIGN ","Switch Entry Stmt ","Binary Expr PLUS ","Simple Name head ","PLUS","Integer Literal Expr Note Zero  ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Integer Literal Expr Zero  ","For Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","For Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Break Stmt ","Name Expr iter ","If Stmt ","Binary Expr OR ","Break Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Throw Stmt ","If Stmt ","Name Expr escaped ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Void Type ","Simple Name skipString ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr code ","Name Expr end ","Class Or Interface Type JsonIterator ","Block Stmt ","Variable Declaration Expr ","Simple Name end ","Name Expr IterImplSkip ","Name Expr end ","Variable Declarator int end = ","Primitive Type int ","Method Call Expr ","Simple Name findStringEnd ","Block Stmt ","EQUALS","Unary Expr - ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr i ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Binary Expr MINUS ","Field Access Expr ","MINUS","Simple Name e ","Simple Name tail ","Variable Declaration Expr ","Name Expr escaped ","Simple Name escaped ","Variable Declarator boolean escaped = ","Primitive Type boolean ","Boolean Literal Expr true ","Block Stmt ","Block Stmt ","Binary Expr LESS ","OR","Binary Expr NOT_EQUALS ","Field Access Expr ","Simple Name head ","Array Access Expr j ","NOT_EQUALS","Char Literal Expr '' ","Field Access Expr ","Simple Name buf ","''","Assign Expr ASSIGN ","Super Expr ","break;","Unary Expr -- ","POSTFIX_DECREMENT","Block Stmt ","Binary Expr LESS ","Binary Expr NOT_EQUALS ","Field Access Expr ","Simple Name head ","Array Access Expr j ","Char Literal Expr '' ","Field Access Expr ","Simple Name buf ","Unary Expr -- ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Name Expr lastParsedPos ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name head ","Return Stmt ","Field Access Expr ","Null Literal Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Array Type 1 ","Simple Name copySkippedBytes ","Parameter JsonIterator iter ","Block Stmt ","Primitive Type byte ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Simple Name start ","Name Expr start ","Name Expr start ","Variable Declarator int start = ","Primitive Type int ","Field Access Expr ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Simple Name end ","Name Expr end ","Variable Declarator int end = ","Primitive Type int ","Field Access Expr ","Simple Name head ","Variable Declaration Expr ","Simple Name bytes ","Name Expr bytes ","Name Expr bytes ","Name Expr bytes ","Variable Declarator byte[] bytes = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MINUS ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name buf ","Simple Name length ","Expression Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Throw Stmt ","Expression Stmt ","Void Type ","Simple Name skipFixedBytes ","Parameter JsonIterator iter ","Parameter int n ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr n ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr more ","Class Or Interface Type JsonIterator ","Primitive Type int ","Assign Expr PLUS ","Field Access Expr ","PLUS","Simple Name head ","Block Stmt ","Field Access Expr ","GREATER_EQUALS","Field Access Expr ","Simple Name head ","Simple Name tail ","Variable Declaration Expr ","Simple Name more ","Name Expr more ","Variable Declarator int more = ","Primitive Type int ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Block Stmt ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Assign Expr PLUS ","Field Access Expr ","Simple Name head ","Return Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Switch Stmt ","Array Access Expr i ","Switch Entry Stmt ","Char Literal Expr ''' ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '[' ","Simple Name calcHash ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr ']' ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Primitive Type double ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Return Stmt ","Void Type ","Simple Name skipArray ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Class Or Interface Type JsonIterator ","Method Declaration ","Name Expr level ","Simple Name level ","Name Expr level ","Name Expr level ","Marker Annotation Expr @Override ","Primitive Type int ","Integer Literal Expr Note Zero  ","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr e ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","Field Access Expr ","Simple Name tail ","Assign Expr ASSIGN ","Field Access Expr ","Binary Expr PLUS ","Simple Name head ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name skipString ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name head ","Unary Expr ++ ","']'","Unary Expr -- ","Block Stmt ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Binary Expr PLUS ","Simple Name head ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name buf ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Switch Stmt ","Array Access Expr i ","Switch Entry Stmt ","Char Literal Expr ''' ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Simple Name length ","Switch Entry Stmt ","Char Literal Expr '{' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr '}' ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Break Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Return Stmt ","Void Type ","Simple Name skipObject ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Simple Name keys ","Name Expr iter ","Name Expr i ","Name Expr iter ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr level ","Simple Name level ","Name Expr level ","Name Expr level ","Variable Declarator int level = ","Primitive Type int ","Integer Literal Expr Note Zero  ","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","Field Access Expr ","Simple Name tail ","Assign Expr ASSIGN ","Field Access Expr ","Binary Expr PLUS ","Simple Name head ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name skipString ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name head ","Unary Expr ++ ","'}'","Unary Expr -- ","Block Stmt ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Field Access Expr ","Binary Expr PLUS ","Simple Name head ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name buf ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Name Expr CodegenAccess ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Continue Stmt ","If Stmt ","Array Access Expr c ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name skipNumber ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Null Literal Expr ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr dotFound ","Name Expr typeArgs ","Name Expr dotFound ","Name Expr dotFound ","Variable Declarator boolean dotFound = ","Primitive Type boolean ","Boolean Literal Expr false ","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","Field Access Expr ","Simple Name tail ","Variable Declaration Expr ","Simple Name c ","Name Expr c ","Name Expr c ","Name Expr c ","Name Expr c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","Block Stmt ","Binary Expr OR ","Binary Expr EQUALS ","Binary Expr EQUALS ","Binary Expr EQUALS ","Char Literal Expr '.' ","'.'","Char Literal Expr 'e' ","'e'","Char Literal Expr 'E' ","'E'","Assign Expr ASSIGN ","Simple Name data ","Block Stmt ","Field Access Expr ","Name Expr IterImplSkip ","Simple Name breaks ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Name Expr iter ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","Boolean Literal Expr false ","Block Stmt ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"copySkippedBytes-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":65,"succs":[[1,20],[2,28],[3,36],[4,43],[55,5],[47,64,6],[12,9,7,11,10,8],[8],[],[13,10],[],[19,15],[4,3,2,5,0,1],[],[15],[],[14,15],[16],[17,16],[],[24],[14],[21],[21,22],[26,21,25],[21],[14,27],[],[30,29,31],[32,16],[],[34,33],[],[35],[],[],[39],[17],[37],[37,40,41],[37],[17,42],[],[48],[38,22],[44],[44,45],[44,46],[44,50,49],[44],[51,52],[],[],[38,22,54],[],[23,60,58,59,56,57,45],[],[],[61,18],[62],[63,46],[],[],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Array Type 1 ","Simple Name copySkippedBytes ","Parameter JsonIterator iter ","Block Stmt ","Primitive Type byte ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Simple Name start ","Name Expr start ","Name Expr start ","Variable Declarator int start = ","Primitive Type int ","Field Access Expr ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name end ","Name Expr end ","Variable Declarator int end = ","Primitive Type int ","Field Access Expr ","Simple Name head ","Variable Declaration Expr ","Simple Name bytes ","Name Expr bytes ","Name Expr bytes ","Name Expr bytes ","Variable Declarator byte[] bytes = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MINUS ","MINUS","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name buf ","Zero IntegerLiteralExpr","Simple Name length ","ReturnStmt"]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"skipFixedBytes-IterImplForStreaming-JsonIterator-int","callMethodNameReferTo":{},"num":361,"succs":[[1,39],[43,2],[45,46,44,3],[49,4],[5,60],[11,61,6,62],[7,66],[8,10,67,68,51],[9,70],[10,76,12],[11,77],[82],[17,20,16,22,15,18,13,19,14],[14],[103],[16],[],[25,37],[36,38],[21],[],[],[1,0],[25,24],[36],[],[23],[26,23],[27,2,23],[28,2,23],[2,29,23,64],[5,2,23,32],[5,2,23,30],[5,2,31],[33,35,2,31],[51,50],[],[],[],[41,40,24],[42,23],[],[],[11,4,3],[26,47],[],[27,48],[],[],[52],[28,29],[50],[53,54,50],[50],[55,57,56],[28,58],[],[59,29],[],[],[10,6],[63,65,30],[],[],[],[104,108,13,107,19,106,103,14,105],[8,9],[],[69],[],[73,71,72],[31,74],[],[75,32],[],[],[],[33,80,79,78],[],[81],[81],[],[41,83,35],[34,84],[],[119,86],[120,88,87,67,121],[88,65,124,76],[126,89],[128,127,91,129,90],[65,91,134,76],[138,92],[93,99,151],[153,99,140,94,152],[97,154,95],[96,67,155,97,141],[65,157,76,102],[98],[158,102],[101,100],[101,164],[168,102],[65,76,171],[],[105],[],[118,64],[],[88,91,92,102,85],[64],[109,64],[136,110,64,89],[111,64],[64,112],[113,64],[113,64],[115,117,114],[139,93,140,142],[],[87],[109,122],[123],[],[],[125],[],[90],[110,130],[],[131,132],[],[133],[],[],[111,137,135],[],[],[203,200,201,202,198,199,19,14],[143],[113,112],[139],[139,93,140],[139,93,141,95],[139,144,145],[139],[148,146,147],[112,149],[],[113,150],[],[],[94],[],[133],[96],[132,156],[133],[125],[160,114,159,161],[],[81],[163,142,162],[81],[],[165,72,166],[115,167],[69],[],[117,72,169],[116,170],[],[172],[],[174,233],[175,245],[176,252,182],[254,177,255,253,182],[266,178],[281,179],[287,180],[295,181],[186,298],[185,183,184],[310,184],[185,316],[186,326],[338,187],[342,194,188],[194,241,343,189,152],[190,344,192],[67,345,191,242,192],[347,137,197,76],[193],[348,197],[195,196],[353,196],[356,197],[137,360,76],[14],[200],[],[136,232],[],[173,175,186,174,197,187],[136],[136,204],[136,205],[136,176,206],[136,207,176],[136,176,208],[136,176,209],[136,210,176],[136,213,176,211],[267,268],[176,212],[214,176,212],[215,176,212],[136,176,206],[136,176,217],[136,176,218],[136,176,219],[136,220,176],[136,221,176],[136,222,176],[136,216,223,176],[136,224],[225],[228,225],[249,240],[226,231,230,227],[228,249,240],[241,188,238,243],[],[237],[216,214,235,236,215,237],[246,248],[246,235],[244],[222,234,224,223,240,239,237],[249,250],[249,236,239],[238],[241,188,238],[242,190,188,238],[237],[247],[247,209,208],[251],[246],[247,217,218],[249],[247],[178,177,179,180,181],[67,256,257],[],[259,260,152],[258,204],[69],[],[261,205],[263,264,262],[],[265,206],[],[133],[],[269],[207],[267],[267,270,271],[267],[272,273],[],[],[277,276,275],[278,279],[],[133],[207,280],[],[],[72,246,282],[283,284,56],[285,208],[286,209],[],[],[289,291,268,288,292,248,290],[],[],[210,293],[294,211],[69],[],[],[72,213,296],[297,212],[],[72,234,299],[235,303,302,301,300],[214,304],[],[305,215],[306,236,56],[],[],[308,307],[216,309],[],[],[72,249,311],[313,312,56],[314,217],[315,218],[],[],[317,318,321,250,322,319,320],[],[],[219,323],[220,324],[221,325],[69],[],[],[],[72,327,238],[330,331,329,239,328],[222,332],[],[333,223],[334,240,56],[],[],[335,336],[337,224],[],[],[339,72,340],[225,341],[69],[],[189],[133],[191],[132,346],[133],[125],[350,226,351,349],[],[81],[352,163,243],[81],[72,228,354],[355,227],[],[72,358,357],[229,359],[231,163,230],[],[172]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","Expression Stmt ","If Stmt ","Unary Expr ! ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Throw Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Void Type ","Simple Name skipFixedBytes ","Parameter JsonIterator iter ","Parameter int n ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Name Expr n ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr more ","Simple Name n ","Class Or Interface Type JsonIterator ","Primitive Type int ","Assign Expr PLUS ","Field Access Expr ","PLUS","Simple Name head ","Block Stmt ","Field Access Expr ","GREATER_EQUALS","Field Access Expr ","Simple Name head ","Simple Name tail ","Variable Declaration Expr ","Simple Name more ","Name Expr more ","Variable Declarator int more = ","Primitive Type int ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name head ","Simple Name tail ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Block Stmt ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Field Access Expr ","Simple Name head ","Simple Name tail ","ReturnStmt","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Assign Expr PLUS ","Field Access Expr ","Simple Name head ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","FINAL","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","LESS","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"updateStringCopyBound-IterImplForStreaming-JsonIterator-int","callMethodNameReferTo":{},"num":37,"succs":[[3,1,23],[18,25,24,2,3],[5,32,31],[4],[5,20,31],[9,10,11,12,6,8,7],[7],[],[9],[],[14,21],[19,22],[0],[14],[],[14,17,13],[14,15,1],[14,1,16],[19],[],[19,18,1],[],[],[2],[],[26,28,27],[29,13],[],[30,15],[],[],[],[33,34,27],[35,16],[36,17],[],[]],"attribute":["If Stmt ","Binary Expr GREATER ","Return Stmt ","Block Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Primitive Type int ","Simple Name updateStringCopyBound ","Parameter final JsonIterator iter ","Parameter final int bound ","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr bound ","Simple Name bound ","Name Expr bound ","Class Or Interface Type JsonIterator ","Primitive Type int ","Block Stmt ","GREATER","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name head ","ReturnStmt","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name head "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readStringSlowPath-IterImplForStreaming-JsonIterator-int","callMethodNameReferTo":{"274":"srcmainjavacomjsoniterIterImplString.java-translateHex-IterImplString-byte","260":"srcmainjavacomjsoniterIterImplString.java-translateHex-IterImplString-byte","268":"srcmainjavacomjsoniterIterImplString.java-translateHex-IterImplString-byte","254":"srcmainjavacomjsoniterIterImplString.java-translateHex-IterImplString-byte"},"num":875,"succs":[[162,1],[2,170],[3,171],[214,4],[6,173,215,5,216],[6,152,218,104],[62,219,7],[62,215,8,220,174],[9,222],[15,31,23,38,19,33,35,10,11,27,60],[15,31,23,38,19,33,35,7,11,60,175,27],[12,226,14,13],[227],[14,228],[80,231],[16,226,18,17],[232],[18,233],[80,231],[21,226,22,20],[236],[22,237],[80,231],[24,26,226,25],[240],[26,241],[80,231],[226,28,29,30],[244],[245,30],[80,231],[32,33,226],[217],[226,35,34],[248],[37,36,226],[221],[80,231],[39,40,226,59,41],[249],[250,41],[48,42,282],[48,285,43,284,286],[44,288,46],[45,163,46],[289,59],[47],[293,59],[296,49,55],[50,298,297,55,283],[53,300,51],[165,53,163,52],[59,301],[54],[303,59],[56],[306,57],[164,59,163,51,58],[307,59],[80,231],[226,61],[310,80],[63,315],[317,98,318,316,64],[323,65],[66,68,329],[330,215,331,68,67],[334,80],[69,70],[70,345],[73,351,71],[352,73,353,215,72],[356,80],[80,75,74],[374,75],[380,78,76],[381,215,382,77,78],[385,80],[79],[410,80],[414,81],[415,98,205,82,416],[83,417],[415,418,84,206],[423,85],[430,86],[154,215,90,87,431],[88,435],[89,450],[90,461],[91,464],[92,479],[96,156,215,480,93],[94,484],[95,498],[509,96],[97,512],[525],[526,99],[527,215,100,103,158],[101,531],[102,546],[557,103],[560],[109,111,113,108,115,105,112,110,106,107],[106],[107],[],[109],[],[117,160],[161,153],[114],[],[],[0,1],[150,117,212],[],[150,117,116,212],[118,150,117,212],[150,117,119,212],[150,117,120,212],[121,150,117,212],[150,117,122],[150,117,116,212],[150,117,124,212],[150,117,212,125],[150,117,126],[127,150,117],[150,117,128],[129,150,117,86],[150,117,130,86],[150,117,131,86],[150,117,134,132,86],[437,436],[136,133],[424],[135],[92,137,135],[138,92,135],[139,92,135],[92,140,135,142],[485,486],[141,124,144,123,125],[136,424],[143],[145,143,99],[143,146,99],[147,143,99],[143,148,99],[151,143,149],[207,172],[153,159],[],[152,153,159],[154,136,153,159],[155],[156,152,144,155],[157],[157,151,158],[],[],[166],[57],[44,163],[163,51],[163,168,167],[163],[169],[],[3,6,98,2,103],[208],[116],[172],[173,172],[118,172,7,174],[7,10,175],[7,176],[177,7],[178,7],[7,179],[121,119,180,183,7,182,120,122,184,185],[],[],[],[],[7,181],[186,42,7,181],[187,7,181],[172,7,174],[63,172,7,189],[66,63,172,192,7,193],[66,63,172,7,190],[324],[66,63,172,190,7],[66,63,172,197,7,196,198,71],[66,63,172,194,7,71],[324],[346],[66,63,194,172,7,200,71],[66,63,202,172,201,76,7,204,203,71],[66,63,172,76,7,199,71],[324],[346],[375],[66,63,172,7,199,71],[66,63,172,7,81,205,71],[66,195,63,172,206,7,81,188,191,71],[210,172,209],[172],[116,213,211],[],[],[576,577,575,573,112,574,107,106],[5],[],[217],[],[],[9,8],[221],[],[224,223,175],[],[118,225,213],[],[],[],[223,176,229],[230],[],[],[],[223,177,234],[235],[],[],[178,223,238],[239],[],[],[223,179,242],[243],[],[],[223,180,246],[247],[],[],[],[223,251,181],[252,253,254],[253,255,256],[],[279,280,185],[253,257,258],[273],[259],[267],[261,262,260],[263,264,182],[],[266],[],[265,119,213],[],[],[261,269,268],[270,271,183],[266],[],[272,213,120],[],[261,274,275],[277,276,184],[266],[],[121,278,213],[],[],[213,122,281],[],[43],[42],[],[],[287,186],[],[45],[291,290],[],[292],[],[223,164,294],[295],[],[50],[],[187,299],[],[52],[223,165,302],[169],[305,304],[],[292],[58],[309,308],[],[292],[312,311,313,123],[],[292],[314,253,188],[292],[64,65],[319],[],[322],[321,320,189],[],[266],[],[325,107],[202,124,197,193],[326,324,327],[324],[328,124,213],[],[67],[332],[266],[190,320,333],[266],[223,335,191],[336,253,337],[338],[343],[261,340,339],[341],[266],[192,342,320],[266],[344,320,193],[266],[347,107],[198,203,125],[348,349,346],[346],[213,350,125],[],[72],[354],[266],[194,320,355],[266],[195,223,357],[358,253,359],[360,253,361],[372],[362],[367],[261,363,364],[365],[266],[366,320,196],[266],[261,369,368],[370],[266],[371,197,320],[266],[373,320,198],[266],[376,107],[204,126],[378,377,375],[375],[213,379,126],[],[77],[383],[266],[384,320,199],[266],[223,386,200],[253,388,387],[389,390,253],[408],[253,391,392],[403],[393],[398],[261,395,394],[396],[266],[201,397,320],[266],[261,399,400],[401],[266],[202,402,320],[266],[261,405,404],[406],[266],[320,407,203],[266],[409,320,204],[266],[127,411,413,412],[],[292],[292],[97,91,96,84,90,82,85],[],[266],[419],[266],[420,128,421,422],[],[292],[292],[107,425],[207],[426,427,424],[424],[207,429,428],[],[266],[88,89,87],[433,432],[129,434],[],[],[438],[130],[436],[439,436,440],[436],[441,442],[],[],[444,446,445],[448,447],[],[266],[449,130],[],[],[451,453,437,455,454,452,456],[],[],[131,457],[322],[322],[459,458],[],[460,132],[],[],[223,462,134],[133,463],[],[223,466,465],[468,467],[472,471],[469,135],[470,155],[],[],[],[473],[475,474,253],[476],[266],[136,477,478],[],[266],[94,95,93],[482,481],[483,137],[],[],[487],[138],[485],[485,488,489],[485],[491,490],[],[],[493,445,494],[496,495],[266],[138,497],[],[],[499,486,501,502,500,504,503],[],[],[139,505],[322],[322],[507,506],[],[508,140],[],[],[223,510,142],[141,511],[],[223,513,514],[515,516],[518,519],[517,143],[470,157],[],[],[520],[253,521,522],[523],[266],[144,320,524],[266],[],[102,101,100],[529,528],[145,530],[],[],[535],[146],[532],[533,532],[537,532,536],[532],[539,538],[],[],[541,542,445],[544,543],[266],[146,545],[],[],[552,533,547,550,549,548,551],[],[],[147,553],[322],[322],[554,555],[],[556,148],[],[],[223,558,534],[559,149],[],[223,561,562],[564,563],[151,566],[150,565],[470,159],[],[],[585,568],[586,587,569,215,572],[590,570],[591,571,572,592],[596,572],[600,213,218],[574],[],[584,212],[],[572,567],[212],[578,212],[579,594,212,568],[570,580,212,568],[581,212],[582,212],[],[569],[578,588],[579,589],[],[],[571],[593,595,580],[],[],[],[624,627,105,112,628,626,107,106,625],[599,597,598,581],[],[292],[292],[601,602],[582,603],[470,604],[],[583,605],[],[639,607],[640,608,609,215,641],[609,595,644,218],[645,610],[317,612,646,647,611],[595,612,651,218],[655,613],[614,620,668],[670,620,657,615,669],[618,671,616],[617,215,672,618,658],[595,674,218,623],[619],[675,623],[622,621],[622,680],[684,623],[595,218,687],[625],[],[638,594],[],[609,612,623,613,606],[594],[629,594],[653,630,594,610],[631,594],[594,632],[633,594],[633,594],[637,635,634],[656,614,657,659],[],[608],[629,642],[643],[],[],[169],[611],[630,648],[649,650],[],[266],[],[631,654,652],[],[],[718,715,717,716,713,714,112,106],[660],[633,632],[656],[656,614,657],[656,614,658,616],[656,661,662],[656],[665,663,664],[632,666],[],[633,667],[],[],[615],[],[266],[617],[650,673],[266],[169],[677,634,676,678],[],[292],[253,659,679],[292],[681,223,682],[635,683],[322],[],[637,223,685],[636,686],[],[295],[689,748],[690,760],[691,767,697],[769,692,770,768,697],[781,693],[795,694],[801,695],[809,696],[701,812],[700,698,699],[699,824],[700,830],[701,840],[852,702],[856,709,703],[709,756,857,704,669],[705,858,707],[215,859,706,757,707],[861,654,712,218],[708],[862,712],[710,711],[867,711],[870,712],[654,874,218],[106],[715],[],[653,747],[],[688,690,701,689,712,702],[653],[653,719],[653,720],[653,691,721],[653,722,691],[653,691,723],[653,691,724],[653,725,691],[653,728,691,726],[782,783],[691,727],[729,691,727],[730,691,727],[653,691,721],[653,691,732],[653,691,733],[653,691,734],[653,735,691],[653,736,691],[653,737,691],[653,731,691,738],[653,739],[740],[740,743],[764,755],[741,746,745,742],[743,764,755],[756,703,753,758],[],[752],[729,731,750,751,730,752],[761,763],[761,750],[759],[737,749,738,739,755,754,752],[764,765],[764,751,754],[753],[756,703,753],[757,705,703,753],[752],[762],[762,724,723],[766],[761],[762,732,733],[764],[762],[693,694,692,695,696],[215,771,772],[],[774,775,669],[773,719],[322],[],[776,720],[778,779,777],[],[721,780],[],[266],[],[784],[722],[782],[782,785,786],[782],[787,788],[],[],[791,445,790],[792,793],[266],[722,794],[],[],[761,223,796],[797,798,428],[799,723],[800,724],[],[],[803,805,783,806,802,763,804],[],[],[725,807],[808,726],[322],[],[],[223,728,810],[811,727],[],[223,749,813],[750,817,816,815,814],[729,818],[],[819,730],[820,751,428],[],[],[822,821],[731,823],[],[],[223,764,825],[827,826,428],[828,732],[829,733],[],[],[831,832,835,765,836,833,834],[],[],[734,837],[735,838],[736,839],[322],[],[],[],[223,841,753],[844,845,843,754,842],[737,846],[],[847,738],[848,755,428],[],[],[849,850],[851,739],[],[],[853,223,854],[740,855],[322],[],[704],[266],[706],[650,860],[266],[169],[864,741,865,863],[],[292],[866,253,758],[292],[223,743,868],[869,742],[],[223,872,871],[744,873],[746,253,745],[],[295]],"attribute":["Expression Stmt ","For Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Switch Stmt ","Name Expr bc ","Switch Entry Stmt ","Char Literal Expr 'b' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr 't' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr 'n' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr 'f' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr 'r' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr ''' ","Switch Entry Stmt ","Char Literal Expr '/' ","Switch Entry Stmt ","Char Literal Expr '' ","Break Stmt ","Switch Entry Stmt ","Char Literal Expr 'u' ","Expression Stmt ","If Stmt ","Method Call Expr ","If Stmt ","Name Expr isExpectingLowSurrogate ","Throw Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","If Stmt ","Name Expr isExpectingLowSurrogate ","Expression Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","If Stmt ","Name Expr isExpectingLowSurrogate ","Throw Stmt ","Break Stmt ","Switch Entry Stmt ","Throw Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Throw Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","If Stmt ","Binary Expr GREATER_EQUALS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Continue Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","STATIC","FINAL","Primitive Type int ","Simple Name readStringSlowPath ","Parameter JsonIterator iter ","Parameter int j ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr sup ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr sup ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr bc ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr j ","Name Expr j ","Class Or Interface Type JsonIterator ","Primitive Type int ","Variable Declaration Expr ","Simple Name isExpectingLowSurrogate ","Name Expr isExpectingLowSurrogate ","Name Expr isExpectingLowSurrogate ","Variable Declarator boolean isExpectingLowSurrogate = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Block Stmt ","Variable Declaration Expr ","Simple Name bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr IterImplString ","Name Expr IterImplString ","Name Expr IterImplString ","Name Expr IterImplString ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr u2 ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr u2 ","Name Expr u3 ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Name Expr u2 ","Name Expr u3 ","Name Expr u4 ","Name Expr bc ","Name Expr bc ","Name Expr bc ","Variable Declarator int bc = ","Primitive Type int ","Method Call Expr ","Simple Name readByte ","Simple Name iter ","Method Declaration Throws ","Block Stmt ","EQUALS","Char Literal Expr ''' ","'''","ReturnStmt","Block Stmt ","Char Literal Expr '' ","''","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name readByte ","SwitchEntryStmt","'b'","Assign Expr ASSIGN ","Char Literal Expr 'b' ","'b'","break;","'t'","Assign Expr ASSIGN ","Char Literal Expr 't' ","'t'","'n'","Assign Expr ASSIGN ","Char Literal Expr 'n' ","'n'","'f'","Assign Expr ASSIGN ","Char Literal Expr 'f' ","'f'","'r'","Assign Expr ASSIGN ","Char Literal Expr 'r' ","'r'","'/'","'u'","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","Method Call Expr ","Binary Expr PLUS ","Enclosed Expr ","Enclosed Expr ","Enclosed Expr ","Binary Expr LEFT_SHIFT ","Method Call Expr ","LEFT_SHIFT","Integer Literal Expr Note Zero  ","Simple Name translateHex ","Method Call Expr ","Simple Name readByte ","IntegerLiteralExpr","Binary Expr LEFT_SHIFT ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name translateHex ","Method Call Expr ","Simple Name readByte ","Binary Expr LEFT_SHIFT ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name translateHex ","Method Call Expr ","Simple Name readByte ","Simple Name translateHex ","Method Call Expr ","Simple Name readByte ","Block Stmt ","Name Expr Character ","Name Expr Character ","Simple Name isHighSurrogate ","Cast Expr ","Primitive Type char ","Block Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","StringLiteralExpr","Assign Expr ASSIGN ","Boolean Literal Expr true ","true","Block Stmt ","Simple Name isLowSurrogate ","Cast Expr ","Primitive Type char ","Block Stmt ","Assign Expr ASSIGN ","Boolean Literal Expr false ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Block Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Block Stmt ","Enclosed Expr ","NOT_EQUALS","Integer Literal Expr Zero  ","Binary Expr BINARY_AND ","BINARY_AND","Integer Literal Expr Note Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr [FINAL] ","Simple Name u2 ","Variable Declarator int u2 = ","Primitive Type int ","Method Call Expr ","Simple Name readByte ","Block Stmt ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Binary Expr PLUS ","Enclosed Expr ","Enclosed Expr ","Binary Expr LEFT_SHIFT ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Variable Declaration Expr [FINAL] ","Simple Name u3 ","Variable Declarator int u3 = ","Primitive Type int ","Method Call Expr ","Simple Name readByte ","Block Stmt ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","Enclosed Expr ","Enclosed Expr ","Enclosed Expr ","Binary Expr LEFT_SHIFT ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Binary Expr LEFT_SHIFT ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Variable Declaration Expr [FINAL] ","Simple Name u4 ","Variable Declarator int u4 = ","Primitive Type int ","Method Call Expr ","Simple Name readByte ","Block Stmt ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Null Literal Expr ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","Enclosed Expr ","Binary Expr PLUS ","Enclosed Expr ","Enclosed Expr ","Enclosed Expr ","Binary Expr LEFT_SHIFT ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Binary Expr LEFT_SHIFT ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Binary Expr LEFT_SHIFT ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","GREATER_EQUALS","Integer Literal Expr Note Zero  ","Throw Stmt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Variable Declaration Expr [FINAL] ","Simple Name sup ","Variable Declarator int sup = ","Primitive Type int ","Binary Expr MINUS ","MINUS","Integer Literal Expr Note Zero  ","Block Stmt ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator char[] newBuf = ","Array Type 1 ","Array Creation Expr char Array Creation Level Not Empty ","Primitive Type char ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name reusableChars ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name reusableChars ","Assign Expr ASSIGN ","Array Access Expr j++ ","Cast Expr ","Field Access Expr ","Unary Expr ++ ","Simple Name reusableChars ","POSTFIX_INCREMENT","Primitive Type char ","Enclosed Expr ","Binary Expr PLUS ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr UNSIGNED_RIGHT_SHIFT ","UNSIGNED_RIGHT_SHIFT","Integer Literal Expr Note Zero  ","Block Stmt ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator char[] newBuf = ","Array Type 1 ","Array Creation Expr char Array Creation Level Not Empty ","Primitive Type char ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name reusableChars ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name reusableChars ","Assign Expr ASSIGN ","Array Access Expr j++ ","Cast Expr ","Field Access Expr ","Unary Expr ++ ","Simple Name reusableChars ","Primitive Type char ","Enclosed Expr ","Binary Expr PLUS ","Enclosed Expr ","Integer Literal Expr Note Zero  ","Binary Expr BINARY_AND ","Integer Literal Expr Note Zero  ","continue;","Block Stmt ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Name Expr newBuf ","Variable Declarator char[] newBuf = ","Array Type 1 ","Array Creation Expr char Array Creation Level Not Empty ","Primitive Type char ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name reusableChars ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name reusableChars ","Assign Expr ASSIGN ","Array Access Expr j++ ","Cast Expr ","Field Access Expr ","Unary Expr ++ ","Simple Name reusableChars ","Primitive Type char ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","Primitive Type byte ","Simple Name readByte ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Array Access Expr iter.head++ ","Field Access Expr ","Unary Expr ++ ","Simple Name buf ","Field Access Expr ","Simple Name head ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","Block Stmt ","Field Access Expr ","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","LESS","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readLongSlowPath-IterImplForStreaming-JsonIterator-long","callMethodNameReferTo":{"132":"srcmainjavacomjsoniterIterImpl.java-loadMore-IterImpl-JsonIterator"},"num":416,"succs":[[1,57],[2,61],[69,3],[5,4,18,70],[5,75],[6,72,19,80,79],[7,83],[95,8],[9,96,11,97,86],[10,100],[47,11,23,103],[104,12],[62,48,14,13,79],[105,14],[110,15],[123,16],[124,53,18,17,125],[127,18],[5,73,82],[131,20],[21,132,133],[138,22],[23,103,54],[26,28,30,32,25,29,27,24],[162],[26],[],[34,55],[56,46],[31],[],[],[0,2,1],[37,34,42,40],[],[34,37,33,42],[35,34,37,42],[34,42,36,38],[71,74],[37],[37,39],[37,136,40],[37,43,20],[37,41,20],[46,45],[46],[],[44,53,49,54],[47,44,49],[44,51,52,50],[44,48,49],[44,50,49],[86,84],[49],[53,49],[],[],[58,44,59],[],[60,45],[],[64],[63],[],[63,65,66],[63],[60,67],[68],[],[3,19],[7,11,6,14,15],[33],[71,38],[71,72],[73,71],[77,76,71],[71],[78,33],[],[],[35,81],[],[],[87],[85,36,74],[],[84],[88,84,89],[84],[90,91],[85,92],[93,74],[],[94,36],[],[9,10],[],[98,99],[],[],[58,101,38],[102,37],[],[],[13],[108,106,107,39],[],[109],[109],[],[58,49,111],[52,112,113],[116,115,114],[],[117],[],[121],[118,119,50],[],[120],[],[118,51,122],[120],[17],[],[126],[],[128,129,130,40],[],[109],[109],[21,22],[137,135,41,134],[],[],[],[],[163,166,167,29,161,165,162,24,164],[58,139,140],[42,141],[142,43],[],[],[178,144],[179,146,145,96,180],[146,137,183,103],[185,147],[187,149,186,188,148],[137,149,191,103],[195,150],[151,157,208],[209,157,197,152,79],[155,210,153],[154,96,211,155,198],[137,213,103,160],[156],[214,160],[159,158],[159,219],[223,160],[137,103,226],[24],[],[164],[],[177,136],[],[146,149,160,150,143],[136],[168,136],[193,169,136,147],[170,136],[136,171],[172,136],[172,136],[174,176,173],[196,151,197,199],[],[145],[168,181],[182],[],[],[184],[],[148],[169,189],[],[190,60],[],[120],[170,194,192],[],[],[258,255,256,257,254,253,29,24],[200],[172,171],[196],[196,151,197],[196,151,198,153],[196,201,202],[196],[205,203,204],[171,206],[],[172,207],[],[],[152],[120],[154],[60,212],[120],[184],[216,173,215,217],[],[109],[115,199,218],[109],[220,58,221],[174,222],[126],[],[176,58,224],[175,225],[],[227],[],[229,288],[230,300],[231,307,237],[309,232,310,308,237],[321,233],[336,234],[342,235],[350,236],[241,353],[240,238,239],[239,365],[240,371],[241,381],[393,242],[397,249,243],[249,296,398,244,79],[245,399,247],[96,400,246,297,247],[402,194,252,103],[248],[403,252],[250,251],[408,251],[411,252],[194,415,103],[24],[255],[],[193,287],[],[228,230,241,229,252,242],[193],[193,259],[193,260],[193,231,261],[193,262,231],[193,231,263],[193,231,264],[193,265,231],[193,268,231,266],[322,323],[231,267],[269,231,267],[270,231,267],[193,231,261],[193,231,272],[193,231,273],[193,231,274],[193,275,231],[193,276,231],[193,277,231],[193,271,231,278],[193,279],[280],[283,280],[304,295],[281,286,285,282],[304,283,295],[296,243,293,298],[],[292],[271,269,290,291,270,292],[301,303],[301,290],[299],[277,289,278,279,295,294,292],[304,305],[304,291,294],[293],[296,243,293],[297,245,243,293],[292],[302],[302,264,263],[306],[301],[302,272,273],[304],[302],[233,234,232,236,235],[96,311,312],[],[314,315,79],[313,259],[126],[],[316,260],[318,319,317],[],[320,261],[],[120],[],[324],[262],[322],[322,326,325],[322],[327,328],[],[],[332,331,330],[333,334],[],[120],[262,335],[],[],[58,301,337],[338,339,113],[340,263],[341,264],[],[],[346,344,323,343,347,303,345],[],[],[265,348],[349,266],[126],[],[],[58,268,351],[352,267],[],[58,289,354],[290,358,357,356,355],[269,359],[],[360,270],[361,291,113],[],[],[363,362],[271,364],[],[],[58,304,366],[368,367,113],[369,272],[370,273],[],[],[372,373,376,305,377,374,375],[],[],[274,378],[275,379],[276,380],[126],[],[],[],[58,382,293],[385,386,384,294,383],[277,387],[],[388,278],[389,295,113],[],[],[390,391],[392,279],[],[],[394,58,395],[396,280],[126],[],[244],[120],[246],[60,401],[120],[184],[405,281,406,404],[],[109],[407,115,298],[109],[58,283,409],[410,282],[],[58,413,412],[284,414],[286,115,285],[],[227]],"attribute":["Expression Stmt ","Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr LESS ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","Throw Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","STATIC","Primitive Type long ","Simple Name readLongSlowPath ","Parameter final JsonIterator iter ","Parameter long value ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Super Expr ","Name Expr value ","Simple Name value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr ind ","Name Expr value ","Name Expr value ","Class Or Interface Type JsonIterator ","Primitive Type long ","Assign Expr ASSIGN ","ASSIGN","Unary Expr - ","MINUS","Variable Declaration Expr ","Name Expr multmin ","Simple Name multmin ","Variable Declarator long multmin = ","Primitive Type long ","Unary Expr - ","Long Literal Expr Note Zero  ","LongLiteralExpr","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name ind ","Name Expr IterImplNumber ","Name Expr ind ","Variable Declarator int ind = ","Primitive Type int ","Array Access Expr iter.buf[i] ","Field Access Expr ","Array Access Expr i ","Simple Name intDigits ","Field Access Expr ","Simple Name buf ","Block Stmt ","EQUALS","Field Access Expr ","Name Expr IterImplNumber ","Simple Name INVALID_CHAR_FOR_NUMBER ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","ReturnStmt","Block Stmt ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Assign Expr ASSIGN ","Binary Expr MINUS ","Binary Expr PLUS ","MINUS","Enclosed Expr ","PLUS","Enclosed Expr ","Binary Expr LEFT_SHIFT ","LEFT_SHIFT","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Binary Expr LEFT_SHIFT ","Integer Literal Expr Note Zero  ","Block Stmt ","GREATER_EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr IterImpl ","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","FINAL","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readIntSlowPath-IterImplForStreaming-JsonIterator-int","callMethodNameReferTo":{"131":"srcmainjavacomjsoniterIterImpl.java-loadMore-IterImpl-JsonIterator"},"num":415,"succs":[[1,57],[2,61],[3,69],[70,4,18,5],[75,5],[6,80,19,72,79],[7,83],[8,95],[11,96,86,9,97],[100,10],[23,11,103,47],[12,104],[13,48,62,14,79],[105,14],[110,15],[16,122],[123,124,17,53,18],[18,126],[73,82,5],[130,20],[131,21,132],[22,137],[23,54,103],[26,30,25,28,29,32,27,24],[161],[26],[],[55,34],[56,46],[31],[],[],[0,2,1],[40,42,37,34],[],[42,33,37,34],[35,42,37,34],[36,38,42,34],[74,71],[37],[37,39],[40,37,135],[43,20,37],[20,37,41],[45,46],[46],[],[49,53,54,44],[49,44,47],[50,52,44,51],[49,48,44],[49,50,44],[86,84],[49],[49,53],[],[],[58,59,44],[],[60,45],[],[64],[63],[],[66,65,63],[63],[60,67],[68],[],[3,19],[6,11,14,15,7],[33],[38,71],[72,71],[73,71],[77,76,71],[71],[33,78],[],[],[35,81],[],[],[87],[36,74,85],[],[84],[88,84,89],[84],[90,91],[92,85],[74,93],[],[36,94],[],[9,10],[],[99,98],[],[],[101,58,38],[102,37],[],[],[13],[107,108,106,39],[],[109],[109],[],[49,58,111],[52,112,113],[116,114,115],[],[117],[],[120],[118,119,50],[],[68],[121,118,51],[68],[17],[],[125],[],[40,128,129,127],[],[109],[109],[21,22],[134,133,136,41],[],[],[],[],[162,165,166,29,160,164,161,24,163],[58,138,139],[140,42],[43,141],[],[],[177,143],[178,145,144,96,179],[145,136,182,103],[184,146],[186,148,185,187,147],[136,148,190,103],[194,149],[150,156,207],[208,156,196,151,79],[154,209,152],[153,96,210,154,197],[136,212,103,159],[155],[213,159],[158,157],[158,218],[222,159],[136,103,225],[24],[],[163],[],[176,135],[],[145,148,159,149,142],[135],[167,135],[192,168,135,146],[169,135],[135,170],[171,135],[171,135],[173,175,172],[195,150,196,198],[],[144],[167,180],[181],[],[],[183],[],[147],[168,188],[],[189,60],[],[68],[169,193,191],[],[],[257,254,255,256,253,252,29,24],[199],[171,170],[195],[195,150,196],[195,150,197,152],[195,200,201],[195],[204,202,203],[170,205],[],[171,206],[],[],[151],[68],[153],[60,211],[68],[183],[215,172,214,216],[],[109],[115,198,217],[109],[219,58,220],[173,221],[125],[],[175,58,223],[174,224],[],[226],[],[228,287],[229,299],[230,306,236],[308,231,309,307,236],[320,232],[335,233],[341,234],[349,235],[240,352],[239,237,238],[238,364],[239,370],[240,380],[392,241],[396,248,242],[248,295,397,243,79],[244,398,246],[96,399,245,296,246],[401,193,251,103],[247],[402,251],[249,250],[407,250],[410,251],[193,414,103],[24],[254],[],[192,286],[],[227,229,240,228,251,241],[192],[192,258],[192,259],[192,230,260],[192,261,230],[192,230,262],[192,230,263],[192,264,230],[192,267,230,265],[321,322],[230,266],[268,230,266],[269,230,266],[192,230,260],[192,230,271],[192,230,272],[192,230,273],[192,274,230],[192,275,230],[192,276,230],[192,270,230,277],[192,278],[279],[282,279],[303,294],[280,285,284,281],[303,282,294],[295,242,292,297],[],[291],[270,268,289,290,269,291],[300,302],[300,289],[298],[276,288,277,278,294,293,291],[303,304],[303,290,293],[292],[295,242,292],[296,244,242,292],[291],[301],[301,263,262],[305],[300],[301,271,272],[303],[301],[232,233,231,235,234],[96,310,311],[],[313,314,79],[312,258],[125],[],[315,259],[317,318,316],[],[319,260],[],[68],[],[323],[261],[321],[321,325,324],[321],[326,327],[],[],[331,330,329],[332,333],[],[68],[261,334],[],[],[58,300,336],[337,338,113],[339,262],[340,263],[],[],[345,343,322,342,346,302,344],[],[],[264,347],[348,265],[125],[],[],[58,267,350],[351,266],[],[58,288,353],[289,357,356,355,354],[268,358],[],[359,269],[360,290,113],[],[],[362,361],[270,363],[],[],[58,303,365],[367,366,113],[368,271],[369,272],[],[],[371,372,375,304,376,373,374],[],[],[273,377],[274,378],[275,379],[125],[],[],[],[58,381,292],[384,385,383,293,382],[276,386],[],[387,277],[388,294,113],[],[],[389,390],[391,278],[],[],[393,58,394],[395,279],[125],[],[243],[68],[245],[60,400],[68],[183],[404,280,405,403],[],[109],[406,115,297],[109],[58,282,408],[409,281],[],[58,412,411],[283,413],[285,115,284],[],[226]],"attribute":["Expression Stmt ","Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr LESS ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","Throw Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","STATIC","Primitive Type int ","Simple Name readIntSlowPath ","Parameter final JsonIterator iter ","Parameter int value ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr value ","Name Expr value ","Simple Name value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr ind ","Name Expr value ","Name Expr value ","Class Or Interface Type JsonIterator ","Primitive Type int ","Assign Expr ASSIGN ","ASSIGN","Unary Expr - ","MINUS","Variable Declaration Expr ","Name Expr multmin ","Simple Name multmin ","Variable Declarator int multmin = ","Primitive Type int ","Unary Expr - ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name ind ","Name Expr IterImplNumber ","Name Expr ind ","Variable Declarator int ind = ","Primitive Type int ","Array Access Expr iter.buf[i] ","Field Access Expr ","Array Access Expr i ","Simple Name intDigits ","Field Access Expr ","Simple Name buf ","Block Stmt ","EQUALS","Field Access Expr ","Name Expr IterImplNumber ","Simple Name INVALID_CHAR_FOR_NUMBER ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","ReturnStmt","Block Stmt ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Assign Expr ASSIGN ","Binary Expr MINUS ","Binary Expr PLUS ","MINUS","Enclosed Expr ","PLUS","Enclosed Expr ","Binary Expr LEFT_SHIFT ","LEFT_SHIFT","Integer Literal Expr Note Zero  ","Binary Expr LEFT_SHIFT ","Integer Literal Expr Note Zero  ","Block Stmt ","GREATER_EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr IterImpl ","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","FINAL","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readDoubleSlowPath-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":572,"succs":[[3,21,20,1],[22,2],[33,32,5],[4,45,46],[47],[9,10,6,12,11,8,7,15,13],[7],[8],[],[10],[],[17,19],[14],[],[],[0],[17,30],[],[16,17],[],[2,1],[3,44],[26],[16],[23],[23,24],[23,27,28],[23],[16,29,31],[],[],[119,120,118,121,12,6,7,8,117],[],[34,36,35],[],[],[38,39,40,37],[],[41,24],[42],[25,43],[],[],[],[4],[],[],[48,18,49,50],[],[51],[53,52],[],[],[],[141,55],[56,150],[159,57],[59,58,160,108],[59,165],[109,162,60,170,169],[61,173],[65,174,142,175,62],[179,63],[64,195],[65,206],[66,210],[75,68,91,101,70,87,67,81,93,83,85,89,95,77,79,97,72],[75,68,91,101,70,87,211,81,93,85,83,89,95,77,79,97,72],[69,70,217],[218],[71,217,72],[219],[217,74,73],[220],[75,221],[77,217,76],[224],[78,79,217],[225],[80,217,81],[226],[217,82,83],[227],[217,84,85],[228],[86,87,217],[229],[89,217,88],[230],[91,217,90],[231],[217,93,92],[232],[95,217,94],[233],[96,217,97],[234],[99,100,217,98],[235],[100,236],[109,243,108],[104,105,106,102,217,107,103],[244,103],[104,247],[257,105],[262,106],[265,107],[32,31,252,108],[59,163,172],[110,268],[269,111,270],[112,275],[113,280],[290,114],[115,295],[298,116],[285,32,31],[118],[],[140,30],[],[56,54,55],[135,133,139,137,30],[122,133,137,30],[123,133,137,30],[61,124,133,137,30],[61,125,133,137,30],[61,133,137,126,30],[129,61,127,133,137,30],[180,181],[128],[130,128,132],[211,67],[134,131],[161,164],[133],[135,133,273],[138,110,133],[110,136,133],[110,137],[],[147],[145,144,143,146],[],[142,143,132],[144],[145,144],[148,149,143],[143],[42],[155],[152,153,154],[],[151],[153,151],[157,152,156],[152],[158],[],[109,57],[65,66,60],[122],[161,134],[161,162],[163,161],[161,166,167],[161],[122,168],[],[],[171,123],[],[],[64,63,62],[],[176,177],[178,124],[],[],[182],[125],[180],[180,183,184],[180],[185,186],[],[],[188,190,189],[191,192],[],[194],[193,125],[],[],[],[200,199,197,198,196,201,181],[],[],[202,126],[42],[42],[204,203],[],[205,127],[],[],[129,208,207],[209,128],[],[],[212],[164,130],[213,211,214],[211],[164,215],[130,216],[],[],[],[],[],[208,151,222],[223],[],[],[],[],[],[],[],[],[],[],[],[],[],[208,237,238],[239,240],[242,132],[131,241],[172,144],[],[],[],[245,208,134],[246,133],[],[253],[135,249],[],[145,248],[250,153],[251],[255,254,249],[249],[256],[],[208,259,258],[260,248],[135,261],[],[],[208,145,263],[264,250],[],[208,153,266],[267,251],[],[115,113,116,111,114,112],[274,136,272,271],[],[],[],[],[319,6,322,12,323,321,7,8,320],[276,208,277],[278,137],[138,279],[],[],[286],[282,139],[],[281,146],[283,154],[284],[282,287,288],[282],[289],[],[291,208,292],[281,293],[294,139],[],[],[208,296,146],[297,283],[],[208,299,154],[300,284],[],[334,302],[335,304,303,174,336],[304,274,339,32],[340,305],[342,307,341,343,306],[274,307,347,32],[351,308],[309,315,364],[365,315,353,310,169],[313,366,311],[312,174,367,313,354],[274,369,32,318],[314],[370,318],[317,316],[317,376],[380,318],[274,32,383],[320],[],[333,273],[],[304,307,308,318,301],[273],[324,273],[349,325,273,305],[326,273],[273,327],[328,273],[328,273],[332,330,329],[352,309,353,355],[],[303],[324,337],[338],[],[],[158],[306],[325,344],[],[345,346],[],[194],[],[326,350,348],[],[],[414,411,413,412,410,409,12,7],[356],[328,327],[352],[352,309,353],[352,309,354,311],[352,357,358],[352],[361,359,360],[327,362],[],[328,363],[],[],[310],[194],[312],[346,368],[194],[158],[372,329,371,373],[],[51],[375,355,374],[51],[],[377,208,378],[330,379],[42],[],[332,208,381],[331,382],[],[223],[385,444],[386,456],[387,463,393],[465,388,464,466,393],[477,389],[491,390],[498,391],[506,392],[397,509],[396,394,395],[521,395],[396,527],[397,537],[549,398],[553,405,399],[405,452,554,400,169],[555,401,403],[174,556,402,453,403],[558,350,408,32],[404],[559,408],[406,407],[564,407],[567,408],[350,571,32],[7],[411],[],[349,443],[],[384,386,397,385,408,398],[349],[349,415],[349,416],[349,387,417],[349,418,387],[349,387,419],[349,387,420],[349,421,387],[349,424,387,422],[478,479],[387,423],[425,387,423],[426,387,423],[349,387,417],[349,387,428],[349,387,429],[349,387,430],[349,431,387],[349,432,387],[349,433,387],[349,427,387,434],[349,435],[436],[436,439],[460,451],[437,442,441,438],[439,460,451],[452,399,449,454],[],[448],[425,427,446,447,426,448],[457,459],[457,446],[455],[433,445,434,435,451,448,450],[460,461],[460,447,450],[449],[452,399,449],[453,401,399,449],[448],[458],[458,420,419],[462],[457],[458,428,429],[460],[458],[389,390,388,391,392],[174,467,468],[],[470,471,169],[469,415],[42],[],[472,416],[474,475,473],[],[417,476],[],[194],[],[480],[418],[478],[478,481,482],[478],[483,484],[],[],[487,189,486],[488,489],[194],[418,490],[],[],[457,208,492],[493,495,494],[496,419],[],[497,420],[],[],[502,500,479,499,503,459,501],[],[],[421,504],[505,422],[42],[],[],[208,424,507],[508,423],[],[208,445,510],[446,514,513,512,511],[425,515],[],[516,426],[517,447,494],[],[],[519,518],[427,520],[],[],[208,460,522],[524,523,494],[525,428],[526,429],[],[],[528,529,532,461,533,530,531],[],[],[430,534],[431,535],[432,536],[42],[],[],[],[208,538,449],[541,542,450,540,539],[433,543],[],[544,434],[545,451,494],[],[],[546,547],[548,435],[],[],[550,208,551],[436,552],[42],[],[400],[194],[402],[346,557],[194],[158],[561,437,562,560],[],[51],[563,375,454],[51],[208,439,565],[566,438],[],[208,569,568],[440,570],[442,375,441],[],[223]],"attribute":["Try Stmt ","Expression Stmt ","Return Stmt ","Parameter NumberFormatException e ","Throw Stmt ","Method Declaration Throws ","PUBLIC","STATIC","FINAL","Primitive Type double ","Simple Name readDoubleSlowPath ","Parameter final JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name numberChars ","Name Expr numberChars ","Name Expr numberChars ","Variable Declarator numberChars numberChars = ","Class Or Interface Type numberChars ","Method Call Expr ","Simple Name readNumber ","Simple Name iter ","Method Declaration Throws ","ReturnStmt","Method Call Expr ","Name Expr Double ","Simple Name valueOf ","Object Creation Expr String Optional.empty Optional.empty ","Class Or Interface Type String ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name chars ","Zero IntegerLiteralExpr","Simple Name charsLength ","Block Stmt ","Class Or Interface Type NumberFormatException ","Simple Name e ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr e ","Simple Name toString ","Expression Stmt ","Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr '.' ","Switch Entry Stmt ","Char Literal Expr 'e' ","Switch Entry Stmt ","Char Literal Expr 'E' ","Expression Stmt ","Switch Entry Stmt ","Char Literal Expr '-' ","Switch Entry Stmt ","Char Literal Expr '+' ","Switch Entry Stmt ","Char Literal Expr '0' ","Switch Entry Stmt ","Char Literal Expr '1' ","Marker Annotation Expr @Override ","Char Literal Expr '2' ","Switch Entry Stmt ","Char Literal Expr '3' ","Switch Entry Stmt ","Char Literal Expr '4' ","Switch Entry Stmt ","Char Literal Expr '5' ","Switch Entry Stmt ","Char Literal Expr '6' ","Marker Annotation Expr @Override ","Char Literal Expr '7' ","Switch Entry Stmt ","Char Literal Expr '8' ","Switch Entry Stmt ","Char Literal Expr '9' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type numberChars ","Simple Name readNumber ","Parameter final JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr c ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Name Expr dotFound ","Simple Name dotFound ","Name Expr dotFound ","Name Expr dotFound ","Variable Declarator boolean dotFound = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Block Stmt ","EQUALS","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator char[] newBuf = ","Array Type 1 ","Array Creation Expr char Array Creation Level Not Empty ","Primitive Type char ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","IntegerLiteralExpr","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name reusableChars ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name reusableChars ","Variable Declaration Expr ","Simple Name c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","SwitchEntryStmt","'.'","'e'","'E'","Assign Expr ASSIGN ","Boolean Literal Expr true ","true","'-'","'+'","'0'","'1'","'2'","'3'","'4'","'5'","'6'","'7'","'8'","'9'","Assign Expr ASSIGN ","Array Access Expr j++ ","Cast Expr ","Field Access Expr ","Unary Expr ++ ","Simple Name reusableChars ","Primitive Type char ","break;","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Variable Declaration Expr ","Name Expr numberChars ","Simple Name numberChars ","Name Expr numberChars ","Name Expr numberChars ","Name Expr numberChars ","Variable Declarator numberChars numberChars = ","Class Or Interface Type numberChars ","Object Creation Expr numberChars Optional.empty Optional.empty ","Class Or Interface Type numberChars ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name chars ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name charsLength ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name dotFound ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr IterImpl ","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","Variable Declaration Expr ","Name Expr numberChars ","Simple Name numberChars ","Name Expr numberChars ","Name Expr numberChars ","Name Expr numberChars ","Variable Declarator numberChars numberChars = ","Class Or Interface Type numberChars ","Object Creation Expr numberChars Optional.empty Optional.empty ","Class Or Interface Type numberChars ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name chars ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name charsLength ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name dotFound ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readNumber-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{"224":"srcmainjavacomjsoniterIterImpl.java-loadMore-IterImpl-JsonIterator"},"num":528,"succs":[[94,1],[2,104],[113,3],[5,4,114,54],[5,119],[55,116,6,124,123],[7,127],[11,128,95,129,8],[133,9],[10,149],[11,160],[12,164],[21,14,37,47,16,33,13,27,39,29,31,35,41,23,25,43,18],[21,37,14,16,47,33,165,27,39,29,31,35,41,23,25,43,18],[15,16,171],[172],[17,171,18],[173],[171,20,19],[174],[21,175],[23,171,22],[178],[24,171,25],[179],[26,171,27],[180],[171,28,29],[181],[171,30,31],[182],[32,33,171],[183],[35,171,34],[184],[37,171,36],[185],[171,39,38],[186],[41,171,40],[187],[42,171,43],[188],[45,46,171,44],[189],[46,190],[55,197,54],[50,51,52,48,171,53,49],[198,49],[50,201],[211,51],[216,52],[219,53],[222,54,63,206],[5,117,126],[56,223],[224,57,225],[58,230],[59,235],[245,60],[61,250],[253,62],[240,222,63],[69,71,68,73,64,70,65,66,67],[65],[66],[],[68],[],[93,75],[72],[],[],[2,0,1],[88,86,92,90,75],[],[74,86,90,75],[76,86,90,75],[7,77,86,90,75],[7,78,86,90,75],[7,86,90,79,75],[82,7,80,86,90,75],[134,135],[81],[83,81,85],[165,13],[87,84],[115,118],[86],[88,86,228],[91,56,86],[56,89,86],[56,90],[],[100],[98,97,96,99],[],[95,96,85],[97],[98,97],[101,102,96],[96],[103],[],[109],[106,107,108],[],[105],[107,105],[111,106,110],[106],[112],[],[55,3],[11,12,6],[74],[115,87],[115,116],[117,115],[115,121,120],[115],[74,122],[],[],[125,76],[],[],[10,9,8],[],[130,131],[132,77],[],[],[136],[78],[134],[134,137,138],[134],[139,140],[],[],[142,144,143],[145,146],[],[148],[147,78],[],[],[],[154,153,152,151,150,155,135],[],[],[156,79],[103],[103],[158,157],[],[159,80],[],[],[82,162,161],[163,81],[],[],[166],[118,83],[167,165,168],[165],[118,169],[83,170],[],[],[],[],[],[162,105,176],[177],[],[],[],[],[],[],[],[],[],[],[],[],[],[162,191,192],[193,194],[196,85],[195,84],[126,97],[],[],[],[199,162,87],[200,86],[],[207],[88,203],[],[98,202],[107,204],[205],[209,208,203],[203],[210],[],[162,213,212],[214,202],[88,215],[],[],[162,98,217],[218,204],[],[162,107,220],[221,205],[],[],[61,59,62,57,60,58],[229,89,227,226],[],[],[],[],[274,277,70,64,278,276,65,66,275],[231,162,232],[233,90],[91,234],[],[],[241],[237,92],[],[236,99],[238,108],[239],[237,242,243],[237],[244],[],[246,162,247],[236,248],[249,92],[],[],[162,251,99],[252,238],[],[162,254,108],[255,239],[],[289,257],[290,259,258,128,291],[259,229,294,222],[295,260],[297,296,262,298,261],[229,262,302,222],[306,263],[264,270,319],[320,270,308,265,123],[268,321,266],[267,128,322,268,309],[229,324,222,273],[269],[325,273],[272,271],[272,332],[336,273],[229,222,339],[275],[],[288,228],[],[259,262,263,273,256],[228],[279,228],[304,280,228,260],[281,228],[228,282],[283,228],[283,228],[287,285,284],[307,264,308,310],[],[258],[279,292],[293],[],[],[112],[261],[280,299],[],[300,301],[],[148],[],[281,305,303],[],[],[370,367,369,368,365,366,70,65],[311],[283,282],[307],[307,264,308],[307,264,309,266],[307,312,313],[307],[316,314,315],[282,317],[],[283,318],[],[],[265],[148],[267],[301,323],[148],[112],[327,284,326,328],[],[329],[331,310,330],[],[329],[],[333,162,334],[285,335],[103],[],[287,162,337],[286,338],[],[177],[341,400],[342,412],[343,419,349],[421,344,422,420,349],[433,345],[447,346],[454,347],[462,348],[353,465],[352,350,351],[477,351],[352,483],[353,493],[505,354],[509,361,355],[361,408,510,356,123],[357,511,359],[128,512,358,409,359],[514,305,364,222],[360],[515,364],[362,363],[520,363],[523,364],[305,527,222],[65],[367],[],[304,399],[],[340,342,353,341,364,354],[304],[304,371],[304,372],[304,343,373],[304,374,343],[304,343,375],[304,343,376],[304,377,343],[304,380,343,378],[434,435],[343,379],[381,343,379],[382,343,379],[304,343,373],[304,343,384],[304,343,385],[304,343,386],[304,387,343],[304,388,343],[304,389,343],[304,383,343,390],[304,391],[392],[392,395],[416,407],[393,398,397,394],[395,416,407],[408,355,405,410],[],[404],[381,383,402,403,382,404],[413,415],[413,402],[411],[389,401,390,391,407,404,406],[416,417],[416,403,406],[405],[408,355,405],[409,357,355,405],[404],[414],[414,376,375],[418],[413],[414,384,385],[416],[414],[345,346,344,348,347],[128,423,424],[],[426,427,123],[425,371],[103],[],[428,372],[430,431,429],[],[373,432],[],[148],[],[436],[374],[434],[434,438,437],[434],[439,440],[],[],[443,143,442],[444,445],[148],[374,446],[],[],[162,413,448],[449,451,450],[452,375],[],[453,376],[],[],[458,456,435,459,455,415,457],[],[],[377,460],[461,378],[103],[],[],[162,380,463],[464,379],[],[162,401,466],[402,470,469,468,467],[381,471],[],[472,382],[473,403,450],[],[],[475,474],[383,476],[],[],[162,416,478],[480,479,450],[481,384],[482,385],[],[],[485,484,488,417,489,486,487],[],[],[386,490],[387,491],[388,492],[103],[],[],[],[162,494,405],[497,498,406,496,495],[389,499],[],[500,390],[501,407,450],[],[],[502,503],[504,391],[],[],[506,162,507],[508,392],[103],[],[356],[148],[358],[301,513],[148],[112],[517,393,518,516],[],[329],[519,331,410],[329],[162,395,521],[522,394],[],[162,525,524],[396,526],[398,331,397],[],[177]],"attribute":["Expression Stmt ","Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr '.' ","Switch Entry Stmt ","Char Literal Expr 'e' ","Switch Entry Stmt ","Char Literal Expr 'E' ","Expression Stmt ","Switch Entry Stmt ","Char Literal Expr '-' ","Switch Entry Stmt ","Char Literal Expr '+' ","Switch Entry Stmt ","Char Literal Expr '0' ","Switch Entry Stmt ","Char Literal Expr '1' ","Marker Annotation Expr @Override ","Char Literal Expr '2' ","Switch Entry Stmt ","Char Literal Expr '3' ","Switch Entry Stmt ","Char Literal Expr '4' ","Switch Entry Stmt ","Char Literal Expr '5' ","Switch Entry Stmt ","Char Literal Expr '6' ","Marker Annotation Expr @Override ","Char Literal Expr '7' ","Switch Entry Stmt ","Char Literal Expr '8' ","Switch Entry Stmt ","Char Literal Expr '9' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","STATIC","FINAL","Class Or Interface Type numberChars ","Simple Name readNumber ","Parameter final JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr c ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr dotFound ","Simple Name dotFound ","Name Expr dotFound ","Name Expr dotFound ","Variable Declarator boolean dotFound = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Block Stmt ","EQUALS","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator char[] newBuf = ","Array Type 1 ","Array Creation Expr char Array Creation Level Not Empty ","Primitive Type char ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","IntegerLiteralExpr","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name reusableChars ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name reusableChars ","Variable Declaration Expr ","Simple Name c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","SwitchEntryStmt","'.'","'e'","'E'","Assign Expr ASSIGN ","Boolean Literal Expr true ","true","'-'","'+'","'0'","'1'","'2'","'3'","'4'","'5'","'6'","'7'","'8'","'9'","Assign Expr ASSIGN ","Array Access Expr j++ ","Cast Expr ","Field Access Expr ","Unary Expr ++ ","Simple Name reusableChars ","Primitive Type char ","break;","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Variable Declaration Expr ","Name Expr numberChars ","Simple Name numberChars ","Name Expr numberChars ","Name Expr numberChars ","Name Expr numberChars ","Variable Declarator numberChars numberChars = ","Class Or Interface Type numberChars ","Object Creation Expr numberChars Optional.empty Optional.empty ","Class Or Interface Type numberChars ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name chars ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name charsLength ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name dotFound ","ReturnStmt","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr IterImpl ","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","Variable Declaration Expr ","Name Expr numberChars ","Simple Name numberChars ","Name Expr numberChars ","Name Expr numberChars ","Name Expr numberChars ","Variable Declarator numberChars numberChars = ","Class Or Interface Type numberChars ","Object Creation Expr numberChars Optional.empty Optional.empty ","Class Or Interface Type numberChars ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name chars ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name charsLength ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name dotFound ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","StringLiteralExpr","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readDouble-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{},"num":584,"succs":[[4,5,7,3,9,6,2,1],[2],[],[4],[],[12,13],[8],[],[],[10],[0,15,14],[12,17],[],[],[],[11,16,18],[],[],[25,26,24,6,27,1,29,2,28],[22,34,33,20],[35,21],[45,14,18],[23,58,57],[59],[1],[26],[],[17,32],[],[19],[17,43],[30,17],[],[21,20],[22,56],[39],[30],[36],[36,37],[36,40,41],[36],[30,42,44],[],[],[131,132,130,133,6,24,1,2,129],[46,48,47],[],[],[50,51,52,49],[],[53,37],[54],[38,55],[],[],[],[23],[],[],[60,31,61,62],[],[63],[65,64],[],[],[],[153,67],[68,162],[171,69],[71,70,172,120],[71,177],[121,174,72,182,181],[73,185],[77,186,154,187,74],[191,75],[76,207],[77,218],[78,222],[87,80,103,113,82,99,93,79,105,95,97,101,107,89,91,109,84],[87,103,80,82,113,99,223,93,105,97,95,101,107,89,91,109,84],[81,82,229],[230],[83,229,84],[231],[229,86,85],[232],[87,233],[89,229,88],[236],[90,229,91],[237],[92,229,93],[238],[229,94,95],[239],[229,96,97],[240],[98,99,229],[241],[101,229,100],[242],[103,229,102],[243],[229,105,104],[244],[107,229,106],[245],[108,229,109],[246],[111,112,229,110],[247],[112,248],[121,255,120],[116,117,118,114,229,119,115],[256,115],[116,259],[269,117],[274,118],[277,119],[14,120,44,264],[175,71,184],[122,280],[281,123,282],[124,287],[125,292],[302,126],[127,307],[310,128],[297,14,44],[130],[],[152,43],[],[68,67,66],[147,145,151,149,43],[134,145,149,43],[135,145,149,43],[73,136,145,149,43],[73,137,145,149,43],[73,145,149,138,43],[141,73,139,145,149,43],[192,193],[140],[142,140,144],[223,79],[146,143],[173,176],[145],[147,285,145],[150,122,145],[122,148,145],[122,149],[],[159],[157,156,155,158],[],[154,155,144],[156],[157,156],[160,161,155],[155],[54],[167],[164,165,166],[],[163],[165,163],[169,164,168],[164],[170],[],[121,69],[77,78,72],[134],[173,146],[173,174],[175,173],[173,179,178],[173],[134,180],[],[],[183,135],[],[],[76,75,74],[],[188,189],[190,136],[],[],[194],[137],[192],[192,195,196],[192],[197,198],[],[],[200,202,201],[203,204],[],[206],[205,137],[],[],[],[212,211,210,209,208,213,193],[],[],[214,138],[54],[54],[216,215],[],[217,139],[],[],[141,220,219],[221,140],[],[],[224],[176,142],[225,223,226],[223],[176,227],[142,228],[],[],[],[],[],[220,163,234],[235],[],[],[],[],[],[],[],[],[],[],[],[],[],[220,249,250],[251,252],[254,144],[253,143],[184,156],[],[],[],[257,220,146],[258,145],[],[265],[147,261],[],[157,260],[165,262],[263],[267,266,261],[261],[268],[],[220,271,270],[272,260],[147,273],[],[],[220,157,275],[276,262],[],[220,165,278],[279,263],[],[127,125,128,123,126,124],[286,148,284,283],[],[],[],[],[331,334,6,24,335,333,1,2,332],[288,220,289],[290,149],[150,291],[],[],[298],[294,151],[],[293,158],[295,166],[296],[294,299,300],[294],[301],[],[303,220,304],[293,305],[306,151],[],[],[308,220,158],[309,295],[],[220,311,166],[312,296],[],[346,314],[347,316,315,186,348],[316,286,351,14],[352,317],[354,353,319,355,318],[286,319,359,14],[363,320],[321,327,376],[377,327,365,322,181],[325,378,323],[324,186,379,325,366],[286,381,14,330],[326],[382,330],[329,328],[329,388],[392,330],[286,14,395],[332],[],[345,285],[],[316,319,320,330,313],[285],[336,285],[361,337,285,317],[338,285],[285,339],[340,285],[340,285],[344,342,341],[364,321,365,367],[],[315],[336,349],[350],[],[],[170],[318],[337,356],[],[357,358],[],[206],[],[338,362,360],[],[],[426,423,425,424,421,422,6,1],[368],[340,339],[364],[364,321,365],[364,321,366,323],[364,369,370],[364],[373,371,372],[339,374],[],[340,375],[],[],[322],[206],[324],[358,380],[206],[170],[384,341,383,385],[],[63],[387,367,386],[63],[],[389,220,390],[342,391],[54],[],[344,220,393],[343,394],[],[235],[397,456],[398,468],[399,475,405],[477,400,476,478,405],[489,401],[503,402],[510,403],[518,404],[409,521],[408,406,407],[533,407],[408,539],[409,549],[561,410],[565,417,411],[417,464,566,412,181],[413,567,415],[186,568,414,465,415],[570,362,420,14],[416],[571,420],[418,419],[576,419],[579,420],[362,583,14],[1],[423],[],[361,455],[],[396,398,409,397,420,410],[361],[361,427],[361,428],[361,399,429],[361,430,399],[361,399,431],[361,399,432],[361,433,399],[361,436,399,434],[490,491],[399,435],[437,399,435],[438,399,435],[361,399,429],[361,399,440],[361,399,441],[361,399,442],[361,443,399],[361,444,399],[361,445,399],[361,439,399,446],[361,447],[448],[448,451],[472,463],[449,454,453,450],[451,472,463],[464,411,461,466],[],[460],[437,439,458,459,438,460],[469,471],[469,458],[467],[445,457,446,447,463,460,462],[472,473],[472,459,462],[461],[464,411,461],[465,413,411,461],[460],[470],[470,432,431],[474],[469],[470,440,441],[472],[470],[401,402,400,403,404],[186,479,480],[],[482,483,181],[481,427],[54],[],[484,428],[486,487,485],[],[429,488],[],[206],[],[492],[430],[490],[490,493,494],[490],[495,496],[],[],[499,201,498],[500,501],[206],[430,502],[],[],[469,220,504],[505,507,506],[508,431],[],[509,432],[],[],[512,514,491,515,511,471,513],[],[],[433,516],[517,434],[54],[],[],[220,436,519],[520,435],[],[220,457,522],[458,526,525,524,523],[437,527],[],[528,438],[529,459,506],[],[],[531,530],[439,532],[],[],[220,472,534],[536,535,506],[537,440],[538,441],[],[],[541,540,544,473,545,542,543],[],[],[442,546],[443,547],[444,548],[54],[],[],[],[220,550,461],[553,554,462,552,551],[445,555],[],[556,446],[557,463,506],[],[],[558,559],[560,447],[],[],[562,220,563],[448,564],[54],[],[412],[206],[414],[358,569],[206],[170],[573,449,574,572],[],[63],[575,387,466],[63],[220,451,577],[578,450],[],[220,581,580],[452,582],[454,387,453],[],[235]],"attribute":["Method Declaration Throws ","STATIC","FINAL","Primitive Type double ","Simple Name readDouble ","Parameter final JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Return Stmt ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","ReturnStmt","Method Call Expr ","Simple Name readDoubleSlowPath ","Simple Name iter ","Method Declaration Throws ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter NumberFormatException e ","Throw Stmt ","PUBLIC","Primitive Type double ","Simple Name readDoubleSlowPath ","Parameter final JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name numberChars ","Name Expr numberChars ","Name Expr numberChars ","Variable Declarator numberChars numberChars = ","Class Or Interface Type numberChars ","Method Call Expr ","Simple Name readNumber ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Name Expr Double ","Simple Name valueOf ","Object Creation Expr String Optional.empty Optional.empty ","Class Or Interface Type String ","Field Access Expr ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name chars ","Zero IntegerLiteralExpr","Simple Name charsLength ","Block Stmt ","Class Or Interface Type NumberFormatException ","Simple Name e ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Method Call Expr ","StringLiteralExpr","Name Expr e ","Simple Name toString ","Expression Stmt ","Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Switch Stmt ","Name Expr c ","Switch Entry Stmt ","Char Literal Expr '.' ","Switch Entry Stmt ","Char Literal Expr 'e' ","Switch Entry Stmt ","Char Literal Expr 'E' ","Expression Stmt ","Switch Entry Stmt ","Char Literal Expr '-' ","Switch Entry Stmt ","Char Literal Expr '+' ","Switch Entry Stmt ","Char Literal Expr '0' ","Switch Entry Stmt ","Char Literal Expr '1' ","Marker Annotation Expr @Override ","Char Literal Expr '2' ","Switch Entry Stmt ","Char Literal Expr '3' ","Switch Entry Stmt ","Char Literal Expr '4' ","Switch Entry Stmt ","Char Literal Expr '5' ","Switch Entry Stmt ","Char Literal Expr '6' ","Marker Annotation Expr @Override ","Char Literal Expr '7' ","Switch Entry Stmt ","Char Literal Expr '8' ","Switch Entry Stmt ","Char Literal Expr '9' ","Expression Stmt ","Break Stmt ","Switch Entry Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Class Or Interface Type numberChars ","Simple Name readNumber ","Parameter final JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr c ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr j ","Simple Name j ","Name Expr j ","Name Expr j ","Name Expr j ","Variable Declarator int j = ","Primitive Type int ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Name Expr dotFound ","Simple Name dotFound ","Name Expr dotFound ","Name Expr dotFound ","Variable Declarator boolean dotFound = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Block Stmt ","EQUALS","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator char[] newBuf = ","Array Type 1 ","Array Creation Expr char Array Creation Level Not Empty ","Primitive Type char ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","IntegerLiteralExpr","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name reusableChars ","Field Access Expr ","Simple Name length ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Simple Name reusableChars ","Variable Declaration Expr ","Simple Name c ","Variable Declarator byte c = ","Primitive Type byte ","Array Access Expr i ","Field Access Expr ","Simple Name buf ","SwitchEntryStmt","'.'","'e'","'E'","Assign Expr ASSIGN ","Boolean Literal Expr true ","true","'-'","'+'","'0'","'1'","'2'","'3'","'4'","'5'","'6'","'7'","'8'","'9'","Assign Expr ASSIGN ","Array Access Expr j++ ","Cast Expr ","Field Access Expr ","Unary Expr ++ ","Simple Name reusableChars ","Primitive Type char ","break;","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Variable Declaration Expr ","Name Expr numberChars ","Simple Name numberChars ","Name Expr numberChars ","Name Expr numberChars ","Name Expr numberChars ","Variable Declarator numberChars numberChars = ","Class Or Interface Type numberChars ","Object Creation Expr numberChars Optional.empty Optional.empty ","Class Or Interface Type numberChars ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name chars ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name charsLength ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name dotFound ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr IterImpl ","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","Variable Declaration Expr ","Name Expr numberChars ","Simple Name numberChars ","Name Expr numberChars ","Name Expr numberChars ","Name Expr numberChars ","Variable Declarator numberChars numberChars = ","Class Or Interface Type numberChars ","Object Creation Expr numberChars Optional.empty Optional.empty ","Class Or Interface Type numberChars ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name chars ","Simple Name reusableChars ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name charsLength ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name dotFound ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readLong-IterImplForStreaming-JsonIterator-byte","callMethodNameReferTo":{"58":"srcmainjavacomjsoniterIterImplForStreaming.java-readLongSlowPath-IterImplForStreaming-JsonIterator-long"},"num":566,"succs":[[28,1],[39,2],[5,31,40,41,3],[4,43],[5,9,48,47],[6,49],[40,8,32,7,50],[53,8],[9,58,47],[17,14,15,16,19,10,11,12,13],[11],[],[13],[],[21,26],[27,25],[18],[],[],[5,0,8,1],[21,45],[],[21,20],[61,21,22],[25],[],[],[],[34],[30,24],[],[29],[31,29],[29,32,62],[35,29,36],[29],[37,24],[30,38],[],[3,4],[],[42],[],[44,46,20],[],[],[76,79,16,78,77,75,10],[],[42],[7],[52,51],[],[],[22,54,56,55],[],[57],[57],[],[23,59,63,33,60],[],[],[],[],[150,152,153,154,149,16,151,10],[72,86,87,65],[88,66],[98,67],[68,100],[69,109],[110,103,40,71,70],[46,71,47],[113],[118,119,73],[120,74],[46,47],[76],[],[85,45],[],[64],[45,96],[80,45],[81,45],[84,45],[82,45],[],[68,65,71,66,67],[72,117],[92],[80,90],[],[89],[89,93,94],[89],[80,97,95,90],[],[],[268,267,266,264,16,265,11,10],[81,99],[],[104],[91,102],[],[101],[101,105,106],[101],[91,107],[102,108],[],[70],[112,111],[],[],[82,114,116,115],[],[57],[57],[74,73],[],[],[122,123,121],[83,124],[],[84,125],[],[],[127,177],[128,180],[188,129],[131,130,144,189],[131,194],[132,145,191,199,198],[133,202],[214,134],[135,40,137,215,205],[136,218],[167,137,63,47],[221,138],[181,168,140,139,198],[222,140],[226,141],[239,142],[240,173,144,143,241],[242,144],[131,192,201],[246,146],[147,247,248],[253,148],[63,47,174],[150],[],[61,175],[176,62],[],[126,127,128],[61,158,163,161],[61,158,155,163],[156,61,158,163],[61,163,157,159],[190,193],[158],[158,160],[158,251,161],[158,164,146],[158,162,146],[62,166],[62],[165,173,169,174],[167,165,169],[165,171,172,170],[165,168,169],[165,170,169],[205,203],[169],[173,169],[],[],[122,165,178],[179,166],[],[183],[182],[],[182,184,185],[182],[179,186],[187],[],[129,145],[133,137,132,140,141],[155],[190,159],[190,191],[192,190],[196,195,190],[190],[197,155],[],[],[156,200],[],[],[206],[204,157,193],[],[203],[207,203,208],[203],[209,210],[204,211],[212,193],[],[213,157],[],[135,136],[216,217],[],[],[219,122,159],[220,158],[],[139],[225,223,224,160],[],[57],[57],[122,169,227],[172,228,229],[232,231,230],[],[233],[],[237],[234,235,170],[],[236],[],[234,171,238],[236],[143],[],[42],[243,244,245,161],[],[57],[57],[147,148],[252,250,162,249],[],[],[],[],[313,317,316,16,312,315,11,10,314],[122,254,255],[163,256],[257,164],[],[],[276,259],[277,260,278,40,263],[281,261],[282,262,263,248],[284,263],[288,97,47],[265],[],[275,96],[],[258,263],[96],[269,96],[270,251,96,259],[261,271,96,259],[272,96],[273,96],[],[260],[269,279],[270,280],[],[],[262],[283,252,271],[],[287,286,285,272],[],[57],[57],[289,290],[273,291],[201,292],[],[274,293],[],[328,295],[329,297,296,40,330],[297,252,333,47],[335,298],[337,300,336,338,299],[252,300,341,47],[345,301],[302,308,358],[359,308,347,303,198],[306,360,304],[305,40,361,306,348],[363,252,47,311],[307],[364,311],[310,309],[310,369],[373,311],[252,47,376],[10],[314],[],[327,251],[],[297,300,311,301,294],[251],[318,251],[343,319,251,298],[320,251],[251,321],[322,251],[322,251],[324,326,323],[346,302,347,349],[],[296],[318,331],[332],[],[],[334],[],[299],[319,339],[],[340,179],[],[236],[320,344,342],[],[],[408,405,406,407,403,404,16,10],[350],[322,321],[346],[346,302,347],[346,302,348,304],[346,351,352],[346],[355,353,354],[321,356],[],[322,357],[],[],[303],[236],[305],[179,362],[236],[334],[366,323,365,367],[],[57],[231,349,368],[57],[370,122,371],[324,372],[42],[],[326,122,374],[325,375],[],[377],[],[379,438],[380,450],[381,457,387],[459,382,458,460,387],[471,383],[486,384],[492,385],[500,386],[391,503],[390,388,389],[389,515],[390,521],[391,531],[543,392],[547,399,393],[399,446,548,394,198],[395,549,397],[40,550,396,447,397],[552,344,402,47],[398],[553,402],[400,401],[558,401],[561,402],[344,565,47],[10],[405],[],[343,437],[],[378,380,391,379,402,392],[343],[343,409],[343,410],[343,381,411],[343,412,381],[343,381,413],[343,381,414],[343,415,381],[343,418,381,416],[472,473],[381,417],[419,381,417],[420,381,417],[343,381,411],[343,381,422],[343,381,423],[343,381,424],[343,425,381],[343,426,381],[343,427,381],[343,421,428,381],[343,429],[430],[433,430],[454,445],[431,436,435,432],[454,433,445],[446,393,443,448],[],[442],[421,419,440,441,420,442],[451,453],[451,440],[449],[427,439,429,428,445,442,444],[454,455],[454,441,444],[443],[446,393,443],[447,395,393,443],[442],[452],[452,414,413],[456],[451],[452,422,423],[454],[452],[383,382,384,385,386],[40,461,462],[],[464,465,198],[463,409],[42],[],[466,410],[468,469,467],[],[411,470],[],[236],[],[474],[412],[472],[472,475,476],[472],[477,478],[],[],[482,481,480],[483,484],[],[236],[412,485],[],[],[451,122,487],[488,489,229],[490,413],[491,414],[],[],[496,494,473,497,493,453,495],[],[],[415,498],[499,416],[42],[],[],[122,418,501],[502,417],[],[122,439,504],[440,508,507,506,505],[419,509],[],[510,420],[511,441,229],[],[],[513,512],[421,514],[],[],[122,454,516],[518,517,229],[519,422],[520,423],[],[],[523,522,526,455,527,524,525],[],[],[424,528],[425,529],[426,530],[42],[],[],[],[122,532,443],[535,536,534,444,533],[427,537],[],[538,428],[539,445,229],[],[],[540,541],[542,429],[],[],[544,122,545],[430,546],[42],[],[394],[236],[396],[179,551],[236],[334],[555,431,556,554],[],[57],[557,231,448],[57],[122,433,559],[560,432],[],[122,563,562],[434,564],[436,231,435],[],[377]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Return Stmt ","Method Declaration Throws ","STATIC","FINAL","Primitive Type long ","Simple Name readLong ","Parameter final JsonIterator iter ","Parameter final byte c ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr c ","Simple Name c ","Class Or Interface Type JsonIterator ","Primitive Type byte ","Variable Declaration Expr ","Simple Name ind ","Name Expr IterImplNumber ","Name Expr ind ","Name Expr ind ","Name Expr ind ","Variable Declarator long ind = ","Primitive Type long ","Array Access Expr c ","Field Access Expr ","Simple Name intDigits ","Block Stmt ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name assertNotLeadingZero ","Simple Name iter ","Method Declaration Throws ","ReturnStmt","Integer Literal Expr Zero  ","Block Stmt ","Field Access Expr ","Name Expr IterImplNumber ","Simple Name INVALID_CHAR_FOR_NUMBER ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Name Expr IterImplForStreaming ","Simple Name readLongSlowPath ","Simple Name iter ","Simple Name value ","Method Declaration Throws ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Throw Stmt ","Parameter ArrayIndexOutOfBoundsException e ","Expression Stmt ","Return Stmt ","Void Type ","Simple Name assertNotLeadingZero ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name nextByte ","Name Expr IterImpl ","Name Expr nextByte ","Variable Declarator byte nextByte = ","Primitive Type byte ","Method Call Expr ","Simple Name readByte ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Simple Name unreadByte ","Variable Declaration Expr ","Simple Name ind2 ","Name Expr IterImplNumber ","Name Expr ind2 ","Variable Declarator int ind2 = ","Primitive Type int ","Array Access Expr nextByte ","Field Access Expr ","Simple Name intDigits ","Block Stmt ","Field Access Expr ","Name Expr IterImplNumber ","Simple Name INVALID_CHAR_FOR_NUMBER ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Class Or Interface Type ArrayIndexOutOfBoundsException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Field Access Expr ","Simple Name head ","Simple Name tail ","Expression Stmt ","Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr LESS ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","Throw Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Primitive Type long ","Simple Name readLongSlowPath ","Parameter final JsonIterator iter ","Parameter long value ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Super Expr ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr ind ","Name Expr value ","Name Expr value ","Class Or Interface Type JsonIterator ","Primitive Type long ","Assign Expr ASSIGN ","Unary Expr - ","MINUS","Variable Declaration Expr ","Name Expr multmin ","Simple Name multmin ","Variable Declarator long multmin = ","Primitive Type long ","Unary Expr - ","Long Literal Expr Note Zero  ","LongLiteralExpr","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name ind ","Name Expr IterImplNumber ","Name Expr ind ","Variable Declarator int ind = ","Primitive Type int ","Array Access Expr iter.buf[i] ","Field Access Expr ","Array Access Expr i ","Simple Name intDigits ","Field Access Expr ","Simple Name buf ","Block Stmt ","Field Access Expr ","Name Expr IterImplNumber ","Simple Name INVALID_CHAR_FOR_NUMBER ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Block Stmt ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Binary Expr MINUS ","Binary Expr PLUS ","MINUS","Enclosed Expr ","PLUS","Enclosed Expr ","Binary Expr LEFT_SHIFT ","LEFT_SHIFT","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Binary Expr LEFT_SHIFT ","Integer Literal Expr Note Zero  ","Block Stmt ","GREATER_EQUALS","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr IterImpl ","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","Primitive Type byte ","Simple Name readByte ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Array Access Expr iter.head++ ","Field Access Expr ","Unary Expr ++ ","Simple Name buf ","Field Access Expr ","Simple Name head ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"readInt-IterImplForStreaming-JsonIterator-byte","callMethodNameReferTo":{"58":"srcmainjavacomjsoniterIterImplForStreaming.java-readIntSlowPath-IterImplForStreaming-JsonIterator-int"},"num":565,"succs":[[1,28],[39,2],[31,40,41,5,3],[4,43],[9,48,5,47],[6,49],[50,40,7,8,32],[8,53],[9,58,47],[13,17,14,12,19,16,10,11,15],[11],[],[13],[],[26,21],[25,27],[18],[],[],[1,8,0,5],[21,45],[],[21,20],[21,22,61],[25],[],[],[],[34],[30,24],[],[29],[31,29],[29,32,62],[36,29,35],[29],[37,24],[30,38],[],[4,3],[],[42],[],[44,46,20],[],[],[76,79,16,78,77,75,10],[],[42],[7],[51,52],[],[],[56,22,54,55],[],[57],[57],[],[63,23,33,59,60],[],[],[],[],[150,153,149,152,16,154,151,10],[72,86,87,65],[88,66],[98,67],[68,100],[69,109],[110,103,40,71,70],[46,71,47],[113],[118,119,73],[120,74],[46,47],[76],[],[85,45],[],[64],[45,96],[80,45],[81,45],[84,45],[82,45],[],[68,65,71,66,67],[72,117],[92],[80,90],[],[89],[89,93,94],[89],[80,97,95,90],[],[],[267,266,265,263,16,264,11,10],[81,99],[],[104],[91,102],[],[101],[101,105,106],[101],[91,107],[102,108],[],[70],[112,111],[],[],[82,114,116,115],[],[57],[57],[74,73],[],[],[122,123,121],[83,124],[],[84,125],[],[],[127,177],[128,180],[129,188],[189,130,144,131],[194,131],[132,199,145,191,198],[133,202],[134,214],[137,40,205,135,215],[218,136],[63,137,47,167],[138,221],[139,168,181,140,198],[222,140],[226,141],[142,238],[239,240,143,173,144],[241,144],[192,201,131],[245,146],[246,147,247],[148,252],[63,174,47],[150],[],[175,61],[176,62],[],[126,127,128],[161,163,158,61],[163,155,158,61],[156,163,158,61],[157,159,163,61],[193,190],[158],[158,160],[161,158,250],[164,146,158],[146,158,162],[166,62],[62],[169,174,173,165],[169,165,167],[170,172,165,171],[169,168,165],[169,170,165],[205,203],[169],[169,173],[],[],[122,178,165],[179,166],[],[183],[182],[],[185,184,182],[182],[179,186],[187],[],[129,145],[132,137,140,141,133],[155],[159,190],[191,190],[192,190],[196,195,190],[190],[155,197],[],[],[156,200],[],[],[206],[157,193,204],[],[203],[207,203,208],[203],[209,210],[211,204],[193,212],[],[157,213],[],[136,135],[217,216],[],[],[219,122,159],[220,158],[],[139],[224,225,223,160],[],[57],[57],[169,122,227],[172,228,229],[232,230,231],[],[233],[],[236],[234,235,170],[],[187],[237,234,171],[187],[143],[],[42],[161,243,244,242],[],[57],[57],[147,148],[249,248,251,162],[],[],[],[],[312,316,315,16,311,314,11,10,313],[122,253,254],[255,163],[164,256],[],[],[275,258],[276,259,277,40,262],[280,260],[281,261,262,247],[283,262],[287,97,47],[264],[],[274,96],[],[257,262],[96],[268,96],[269,250,96,258],[260,270,96,258],[271,96],[272,96],[],[259],[268,278],[269,279],[],[],[261],[282,251,270],[],[286,285,284,271],[],[57],[57],[288,289],[272,290],[201,291],[],[273,292],[],[327,294],[328,296,295,40,329],[296,251,332,47],[334,297],[336,299,335,337,298],[251,299,340,47],[344,300],[301,307,357],[358,307,346,302,198],[305,359,303],[304,40,360,305,347],[362,251,47,310],[306],[363,310],[309,308],[309,368],[372,310],[251,47,375],[10],[313],[],[326,250],[],[296,299,310,300,293],[250],[317,250],[342,318,250,297],[319,250],[250,320],[321,250],[321,250],[323,325,322],[345,301,346,348],[],[295],[317,330],[331],[],[],[333],[],[298],[318,338],[],[339,179],[],[187],[319,343,341],[],[],[407,404,405,406,402,403,16,10],[349],[321,320],[345],[345,301,346],[345,301,347,303],[345,350,351],[345],[354,352,353],[320,355],[],[321,356],[],[],[302],[187],[304],[179,361],[187],[333],[365,322,364,366],[],[57],[231,348,367],[57],[369,122,370],[323,371],[42],[],[325,122,373],[324,374],[],[376],[],[378,437],[379,449],[380,456,386],[458,381,457,459,386],[470,382],[485,383],[491,384],[499,385],[390,502],[389,387,388],[388,514],[389,520],[390,530],[542,391],[546,398,392],[398,445,547,393,198],[394,548,396],[40,549,395,446,396],[551,343,401,47],[397],[552,401],[399,400],[557,400],[560,401],[343,564,47],[10],[404],[],[342,436],[],[377,379,390,378,401,391],[342],[342,408],[342,409],[342,380,410],[342,411,380],[342,380,412],[342,380,413],[342,414,380],[342,417,380,415],[471,472],[380,416],[418,380,416],[419,380,416],[342,380,410],[342,380,421],[342,380,422],[342,380,423],[342,424,380],[342,425,380],[342,426,380],[342,420,427,380],[342,428],[429],[432,429],[453,444],[430,435,434,431],[453,432,444],[445,392,442,447],[],[441],[420,418,439,440,419,441],[450,452],[450,439],[448],[426,438,428,427,444,441,443],[453,454],[453,440,443],[442],[445,392,442],[446,394,392,442],[441],[451],[451,413,412],[455],[450],[451,421,422],[453],[451],[382,381,383,384,385],[40,460,461],[],[463,464,198],[462,408],[42],[],[465,409],[467,468,466],[],[410,469],[],[187],[],[473],[411],[471],[471,474,475],[471],[476,477],[],[],[481,480,479],[482,483],[],[187],[411,484],[],[],[450,122,486],[487,488,229],[489,412],[490,413],[],[],[495,493,472,496,492,452,494],[],[],[414,497],[498,415],[42],[],[],[122,417,500],[501,416],[],[122,438,503],[439,507,506,505,504],[418,508],[],[509,419],[510,440,229],[],[],[512,511],[420,513],[],[],[122,453,515],[517,516,229],[518,421],[519,422],[],[],[522,521,525,454,526,523,524],[],[],[423,527],[424,528],[425,529],[42],[],[],[],[122,531,442],[534,535,533,443,532],[426,536],[],[537,427],[538,444,229],[],[],[539,540],[541,428],[],[],[543,122,544],[429,545],[42],[],[393],[187],[395],[179,550],[187],[333],[554,430,555,553],[],[57],[556,231,447],[57],[122,432,558],[559,431],[],[122,562,561],[433,563],[435,231,434],[],[376]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Return Stmt ","Method Declaration Throws ","STATIC","FINAL","Primitive Type int ","Simple Name readInt ","Parameter final JsonIterator iter ","Parameter final byte c ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr c ","Simple Name c ","Class Or Interface Type JsonIterator ","Primitive Type byte ","Variable Declaration Expr ","Simple Name ind ","Name Expr IterImplNumber ","Name Expr ind ","Name Expr ind ","Name Expr ind ","Variable Declarator int ind = ","Primitive Type int ","Array Access Expr c ","Field Access Expr ","Simple Name intDigits ","Block Stmt ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Simple Name assertNotLeadingZero ","Simple Name iter ","Method Declaration Throws ","ReturnStmt","Integer Literal Expr Zero  ","Block Stmt ","Field Access Expr ","Name Expr IterImplNumber ","Simple Name INVALID_CHAR_FOR_NUMBER ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Name Expr IterImplForStreaming ","Simple Name readIntSlowPath ","Simple Name iter ","Simple Name value ","Method Declaration Throws ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Throw Stmt ","Parameter ArrayIndexOutOfBoundsException e ","Expression Stmt ","Return Stmt ","Void Type ","Simple Name assertNotLeadingZero ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name nextByte ","Name Expr IterImpl ","Name Expr nextByte ","Variable Declarator byte nextByte = ","Primitive Type byte ","Method Call Expr ","Simple Name readByte ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Simple Name unreadByte ","Variable Declaration Expr ","Simple Name ind2 ","Name Expr IterImplNumber ","Name Expr ind2 ","Variable Declarator int ind2 = ","Primitive Type int ","Array Access Expr nextByte ","Field Access Expr ","Simple Name intDigits ","Block Stmt ","Field Access Expr ","Name Expr IterImplNumber ","Simple Name INVALID_CHAR_FOR_NUMBER ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Class Or Interface Type ArrayIndexOutOfBoundsException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Field Access Expr ","Simple Name head ","Simple Name tail ","Expression Stmt ","Expression Stmt ","For Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr LESS ","Throw Stmt ","Expression Stmt ","If Stmt ","Binary Expr GREATER_EQUALS ","Throw Stmt ","Unary Expr ++ ","If Stmt ","Unary Expr ! ","Expression Stmt ","Return Stmt ","Primitive Type int ","Simple Name readIntSlowPath ","Parameter final JsonIterator iter ","Parameter int value ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr i ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr value ","Name Expr ind ","Name Expr value ","Name Expr value ","Class Or Interface Type JsonIterator ","Primitive Type int ","Assign Expr ASSIGN ","Unary Expr - ","MINUS","Variable Declaration Expr ","Name Expr multmin ","Simple Name multmin ","Variable Declarator int multmin = ","Primitive Type int ","Unary Expr - ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Block Stmt ","Block Stmt ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Field Access Expr ","Simple Name head ","LESS","Field Access Expr ","Simple Name tail ","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name ind ","Name Expr IterImplNumber ","Name Expr ind ","Variable Declarator int ind = ","Primitive Type int ","Array Access Expr iter.buf[i] ","Field Access Expr ","Array Access Expr i ","Simple Name intDigits ","Field Access Expr ","Simple Name buf ","Block Stmt ","Field Access Expr ","Name Expr IterImplNumber ","Simple Name INVALID_CHAR_FOR_NUMBER ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Block Stmt ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Binary Expr MINUS ","Binary Expr PLUS ","MINUS","Enclosed Expr ","PLUS","Enclosed Expr ","Binary Expr LEFT_SHIFT ","LEFT_SHIFT","Integer Literal Expr Note Zero  ","Binary Expr LEFT_SHIFT ","Integer Literal Expr Note Zero  ","Block Stmt ","GREATER_EQUALS","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Name Expr IterImpl ","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Assign Expr ASSIGN ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","Primitive Type byte ","Simple Name readByte ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","Block Stmt ","Method Call Expr ","Simple Name loadMore ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Array Access Expr iter.head++ ","Field Access Expr ","Unary Expr ++ ","Simple Name buf ","Field Access Expr ","Simple Name head ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
{"fileName":"srcmainjavacomjsoniterIterImplForStreaming.java","version":"0.9.22","methodName":"assertNotLeadingZero-IterImplForStreaming-JsonIterator","callMethodNameReferTo":{"35":"srcmainjavacomjsoniterIterImpl.java-readByte-IterImpl-JsonIterator"},"num":389,"succs":[[8,27,28,1],[29,2],[39,3],[4,41],[5,50],[52,44,51,7,6],[11,7,55],[56],[62,63,9],[64,10],[11,55],[14,19,16,17,13,12,15],[76],[14],[],[26,21],[18],[],[],[0],[21,37],[],[20,21],[22,21],[25,21],[23,21],[],[4,1,7,2,3],[8,61],[33],[20,31],[],[30],[30,34,35],[30],[20,38,36,31],[],[],[81,80,79,16,77,78,12,76],[22,40],[],[45],[32,43],[],[42],[42,46,47],[42],[32,48],[43,49],[],[6],[],[54,53],[],[],[],[23,57,59,58],[],[60],[60],[],[10,9],[],[],[66,67,65],[24,68],[],[25,69],[],[],[89,71],[90,72,51,91,75],[94,73],[95,74,75,96],[100,75],[104,38,55],[],[78],[],[88,37],[],[75,70],[37],[82,37],[83,98,37,71],[73,84,37,71],[85,37],[86,37],[],[72],[92,82],[83,93],[],[],[74],[97,99,84],[],[],[],[130,16,134,129,133,132,76,12,131],[103,102,101,85],[],[60],[60],[105,106],[86,107],[109,108],[],[87,110],[],[],[145,112],[146,114,113,51,147],[114,99,150,55],[152,115],[154,153,117,155,116],[99,117,160,55],[164,118],[119,125,177],[179,125,166,120,178],[123,180,121],[122,51,181,123,167],[99,183,55,128],[124],[184,128],[127,126],[127,190],[195,128],[99,55,198],[12],[131],[],[144,98],[],[114,117,118,128,111],[98],[135,98],[162,136,98,115],[137,98],[98,138],[139,98],[139,98],[143,141,140],[165,119,166,168],[],[113],[135,148],[149],[],[],[151],[],[116],[136,156],[],[157,158],[],[159],[],[],[137,163,161],[],[],[230,227,229,228,225,226,16,12],[169],[139,138],[165],[165,119,166],[165,119,167,121],[165,170,171],[165],[174,172,173],[138,175],[],[139,176],[],[],[120],[],[159],[122],[158,182],[159],[151],[186,140,185,187],[],[60],[189,168,188],[60],[],[191,66,192],[141,193],[194],[],[],[143,66,196],[142,197],[],[199],[],[201,260],[202,272],[203,279,209],[281,204,282,280,209],[293,205],[308,206],[315,207],[323,208],[213,326],[212,210,211],[211,338],[212,344],[213,354],[366,214],[370,221,215],[221,268,371,216,178],[217,372,219],[51,373,218,269,219],[375,163,224,55],[220],[376,224],[222,223],[381,223],[384,224],[163,388,55],[12],[227],[],[162,259],[],[200,202,213,201,224,214],[162],[162,231],[162,232],[162,203,233],[162,234,203],[162,203,235],[162,203,236],[162,237,203],[162,240,203,238],[294,295],[203,239],[241,203,239],[242,203,239],[162,203,233],[162,203,244],[162,203,245],[162,203,246],[162,247,203],[162,248,203],[162,249,203],[162,243,203,250],[162,251],[252],[255,252],[276,267],[253,258,254,257],[255,276,267],[268,215,265,270],[],[264],[243,241,262,263,242,264],[273,275],[273,262],[271],[249,261,250,251,267,266,264],[276,277],[276,263,266],[265],[268,215,265],[269,217,215,265],[264],[274],[274,236,235],[278],[273],[274,244,245],[276],[274],[205,206,204,207,208],[51,283,284],[],[286,287,178],[285,231],[194],[],[288,232],[290,291,289],[],[233,292],[],[159],[],[296],[234],[294],[294,297,298],[294],[299,300],[],[],[304,303,302],[305,306],[],[159],[234,307],[],[],[66,273,309],[310,312,311],[313,235],[],[314,236],[],[],[317,319,295,316,320,275,318],[],[],[237,321],[322,238],[194],[],[],[66,240,324],[325,239],[],[66,261,327],[262,331,330,329,328],[241,332],[],[333,242],[334,263,311],[],[],[336,335],[243,337],[],[],[66,276,339],[341,340,311],[342,244],[343,245],[],[],[345,346,349,277,350,347,348],[],[],[246,351],[247,352],[248,353],[194],[],[],[],[66,355,265],[358,359,266,357,356],[249,360],[],[361,250],[362,267,311],[],[],[363,364],[365,251],[],[],[367,66,368],[252,369],[194],[],[216],[159],[218],[158,374],[159],[151],[378,253,379,377],[],[60],[380,189,270],[60],[66,255,382],[383,254],[],[66,386,385],[256,387],[258,189,257],[],[199]],"attribute":["Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Throw Stmt ","Parameter ArrayIndexOutOfBoundsException e ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","STATIC","Void Type ","Simple Name assertNotLeadingZero ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Catch Clause ","Variable Declaration Expr ","Simple Name nextByte ","Name Expr IterImpl ","Name Expr nextByte ","Variable Declarator byte nextByte = ","Primitive Type byte ","Method Call Expr ","Simple Name readByte ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Simple Name unreadByte ","Variable Declaration Expr ","Simple Name ind2 ","Name Expr IterImplNumber ","Name Expr ind2 ","Variable Declarator int ind2 = ","Primitive Type int ","Array Access Expr nextByte ","Field Access Expr ","Simple Name intDigits ","Block Stmt ","EQUALS","Field Access Expr ","Name Expr IterImplNumber ","Simple Name INVALID_CHAR_FOR_NUMBER ","ReturnStmt","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Class Or Interface Type ArrayIndexOutOfBoundsException ","Simple Name e ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Field Access Expr ","Simple Name head ","Simple Name tail ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Unary Expr ! ","Throw Stmt ","Return Stmt ","FINAL","Primitive Type byte ","Simple Name readByte ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Field Access Expr ","Simple Name head ","Simple Name tail ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Simple Name loadMore ","Simple Name iter ","Method Declaration Throws ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Array Access Expr iter.head++ ","Field Access Expr ","Unary Expr ++ ","Simple Name buf ","Field Access Expr ","POSTFIX_INCREMENT","Simple Name head ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PUBLIC","Primitive Type boolean ","Simple Name loadMore ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr n ","Class Or Interface Type JsonIterator ","Block Stmt ","Field Access Expr ","Null Literal Expr ","Simple Name in ","NullLiteralExpr","Boolean Literal Expr false ","false","Block Stmt ","Field Access Expr ","NOT_EQUALS","Unary Expr - ","Simple Name skipStartedAt ","Integer Literal Expr Note Zero  ","MINUS","IntegerLiteralExpr","Method Call Expr ","Simple Name keepSkippedBytesThenRead ","Simple Name iter ","Method Declaration Throws ","Variable Declaration Expr ","Simple Name n ","Name Expr n ","Name Expr n ","Name Expr n ","Variable Declarator int n = ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Simple Name in ","Simple Name buf ","Block Stmt ","LESS","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Name Expr lines ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name head ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Field Access Expr ","Simple Name tail ","Boolean Literal Expr true ","true","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr OR ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr LESS ","If Stmt ","Name Expr current ","Return Stmt ","Block Stmt ","Throw Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","PRIVATE","Primitive Type boolean ","Simple Name keepSkippedBytesThenRead ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Name Expr iter ","Name Expr iter ","Simple Name tail ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr newBuf ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Simple Name wrap ","Name Expr iter ","Name Expr offset ","Name Expr iter ","Name Expr offset ","Name Expr n ","Class Or Interface Type JsonIterator ","Variable Declaration Expr ","Name Expr n ","Name Expr offset ","Name Expr offset ","Simple Name n ","Name Expr n ","Name Expr offset ","Name Expr offset ","Name Expr n ","Name Expr n ","Name Expr n ","Primitive Type int ","Variable Declaration Expr ","Name Expr offset ","Simple Name offset ","Name Expr offset ","Name Expr offset ","Name Expr offset ","Primitive Type int ","Block Stmt ","Binary Expr EQUALS ","OR","Binary Expr LESS ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Field Access Expr ","Binary Expr DIVIDE ","Simple Name skipStartedAt ","Field Access Expr ","DIVIDE","Integer Literal Expr Note Zero  ","Simple Name tail ","Variable Declaration Expr ","Simple Name newBuf ","Name Expr newBuf ","Variable Declarator byte[] newBuf = ","Array Type 1 ","Array Creation Expr byte Array Creation Level Not Empty ","Primitive Type byte ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","MINUS","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name writeTo ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Primitive Type int ","Field Access Expr ","Field Access Expr ","Binary Expr SIGNED_RIGHT_SHIFT ","Unary Expr ++ ","Assign Expr ASSIGN ","Binary Expr MINUS ","Field Access Expr ","Field Access Expr ","Simple Name tail ","Simple Name skipStartedAt ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Field Access Expr ","Field Access Expr ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name buf ","Simple Name skipStartedAt ","Simple Name buf ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name read ","Field Access Expr ","Binary Expr MINUS ","Simple Name in ","Simple Name buf ","Field Access Expr ","Field Access Expr ","Simple Name length ","Simple Name buf ","Assign Expr ASSIGN ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name skipStartedAt ","Block Stmt ","Integer Literal Expr Note Zero  ","Block Stmt ","Unary Expr - ","Integer Literal Expr Note Zero  ","Boolean Literal Expr false ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name head ","Assign Expr ASSIGN ","Simple Name fillCache ","Binary Expr PLUS ","Simple Name tail ","Boolean Literal Expr true "]}
