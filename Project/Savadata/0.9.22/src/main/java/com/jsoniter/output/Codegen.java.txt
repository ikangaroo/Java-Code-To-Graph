{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","hasMethodName":["getReflectionEncoder-Codegen-String-Type","getEncoder-Codegen-String-Type","gen-Codegen-String-Type","addPlaceholderEncoderToSupportRecursiveStructure-Codegen-String","chooseAccessibleSuper-Codegen-Type","walkSuperUntilPublic-Codegen-Class","getGeneratedSource-Codegen-String","staticGen-Codegen-Class-String-CodegenResult","staticGen-Codegen-Class-String-OutputStreamWriter-CodegenResult","createDir-Codegen-String","genSource-Codegen-String-ClassInfo","staticGenEncoders-Codegen-TypeLiteral[]-CodegenAccess.StaticCodegenTarget"]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"getReflectionEncoder-Codegen-String-Type","callMethodNameReferTo":{"88":"srcmainjavacomjsoniteroutputReflectionEncoderFactory.java-create-ReflectionEncoderFactory-ClassInfo"},"num":103,"succs":[[39,1],[2,63],[64,65,4,42,3],[4,43,20,67],[5,68],[72,6],[64,8,7,73,46],[8,47,20,67],[9,74],[10,75],[76,11],[79,12],[64,14,50,80,13],[14,51,20,67],[15,81],[16,87],[90,17],[99,18],[19,101],[20,67,56],[23,24,21,27,25,22,26],[22],[],[28,29,24],[],[31,37],[35,38],[4,8,5,0,1],[],[],[31],[],[30,31],[32,31],[35],[],[35,34],[],[],[57],[41,34],[],[40],[42,40,2],[30,43,45,40],[],[44],[44,46,6],[47,44,32,49],[],[48],[48,50,12],[48,51,54,53],[],[82],[52],[52,55],[58,40,59],[40],[60,61,34],[62,41],[],[],[3],[],[66],[],[],[69,70,44],[],[30,45,71],[],[7],[66],[14,19,10,16,17,18,15,11],[],[69,48,77],[32,49,78],[],[13],[66],[83],[36],[82,84,85],[82],[86,36],[],[52,69,88],[89,54,53],[],[95],[92],[],[91],[93,91],[97,96,91],[91],[92,98],[],[93,33,100,55],[],[69,102,94],[]],"attribute":["Expression Stmt ","If Stmt ","Return Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Synchronized Stmt ","Class Expr Codegen.class ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type ReflectionEncoder ","Simple Name getReflectionEncoder ","Parameter String cacheKey ","Parameter Type type ","Block Stmt ","Class Or Interface Type Encoder ","Simple Name ReflectionEncoder ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr type ","Simple Name type ","Name Expr type ","Class Or Interface Type String ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name encoder ","Name Expr CodegenImplNative ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr reflectionEncoders ","Return Stmt ","Name Expr encoder ","Return Stmt ","Name Expr reflectionEncoders ","Simple Name writeTo ","Name Expr encoder ","Name Expr encoder ","Name Expr ReflectionEncoderFactory ","Name Expr classInfo ","Name Expr encoder ","Name Expr encoder ","Variable Declarator Encoder.ReflectionEncoder encoder = ","Class Or Interface Type ReflectionEncoder ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name NATIVE_ENCODERS ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name get ","Block Stmt ","Null Literal Expr ","Block Stmt ","Class Or Interface Type Codegen ","Assign Expr ASSIGN ","Method Call Expr ","Name Expr obj ","Block Stmt ","Simple Name wrap ","Variable Declaration Expr ","Simple Name classInfo ","Variable Declarator ClassInfo classInfo = ","Marker Annotation Expr @Override ","Object Creation Expr ClassInfo Optional.empty Optional.empty ","Class Or Interface Type ClassInfo ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name create ","Variable Declaration Expr ","Simple Name copy ","Name Expr reflectionEncoders ","Name Expr copy ","Name Expr copy ","Variable Declarator HashMap<String, Encoder.ReflectionEncoder> copy = ","Class Or Interface Type HashMap ","Object Creation Expr HashMap<String, Encoder.ReflectionEncoder> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Char Literal Expr 't' ","Assign Expr ASSIGN ","Name Expr reflectionEncoders "]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"getEncoder-Codegen-String-Type","callMethodNameReferTo":{"432":"srcmainjavacomjsoniterspiJsoniterSpi.java-getEncoder-JsoniterSpi-String","408":"srcmainjavacomjsoniterspiJsoniterSpi.java-getEncoder-JsoniterSpi-String","27":"srcmainjavacomjsoniterspiJsoniterSpi.java-getEncoder-JsoniterSpi-String","155":"srcmainjavacomjsoniterspiJsoniterSpi.java-getEncoder-JsoniterSpi-String"},"num":864,"succs":[[20,1],[2,29],[30,4,3,31,23],[4,24,5,33],[34,5,33],[8,9,10,11,6,7,12],[7],[99],[9],[],[18,14],[17,19],[4,0,1],[14],[],[36,13,14],[17,37],[],[],[],[25],[22,13],[],[21],[2,21,23],[21,26,27],[21],[22,28,13],[],[3],[],[32],[],[],[15,38,35,16],[],[],[],[101,100,103,98,99,102,104,7],[40,126],[157,41],[30,42,158,43,129],[38,130,43,33],[159,44],[166,45,46],[52,46,160],[167,47],[169,48],[49,173],[30,50,133,174,45],[51,175],[135,38,45,33],[178,53],[183,54],[30,184,55,57,138],[56,185],[38,57,140,33],[58,188],[193,59,192],[60,194],[61,206],[30,67,207,197,62],[210,63],[64,215],[65,220],[66,222,221,67,121],[224,67],[230,68],[242,69],[70,71,244,243,245],[71,258],[266,72],[73,267,222,198,75],[74,270],[38,144,33,75],[273,76],[84,222,275,274,77],[84,277,276,78,80],[278,79],[84,38,146,33],[287,81,288],[82,289],[84,222,83,290,199],[84,293],[297,85],[310,86,93,309,97],[87,311],[314,88,90],[222,315,316,89,90],[317,92],[91],[322,92],[38,151,97,33],[332,94,331],[95,333],[96,354],[358,97],[361],[7],[],[101],[],[36,124],[37,125],[39,40,57,53,58,52,43,44],[36],[36,105],[106,36],[107,36],[36,108,190],[36,109],[36,110,306],[111,36],[112,36],[112,326,113,36],[114,36],[37],[37,116],[37,117],[120,37],[218,37,118],[119],[121,119],[122,119],[],[],[153],[128,105],[],[127],[127,41,129],[127,106,132,116,130],[167],[131],[133,49,131],[49,134,131],[135,137,117,131],[],[136],[138,136,54],[139,136,54],[143,140,142,136],[],[234,231],[141],[141,110,144],[147,145],[149,148,113,150,146,145],[],[235,231],[299,298],[146,145],[151,145],[127,154,155],[127],[156,128,105],[],[42],[32],[162],[161],[],[163,164,160],[160],[161,165],[],[47,48],[168],[167],[170,171,131],[],[106,132,116,172],[],[51,50],[32],[176,177,107,134],[],[],[170,179,136],[180,181,117],[182,137],[],[],[55,56],[32],[139,187,108,186],[],[],[189,191,109],[],[],[365,98,367,7,366,364],[60,84,59,85,71,67,68,75],[97],[200],[196],[],[195],[195,197],[195,198],[195,201,202],[195],[203,204],[196,205],[],[],[64,63,62],[208,209],[],[],[213],[118],[211],[214,211,118],[211],[170,216,119],[120,217,219],[],[],[483,484,486,98,485,7],[66],[223],[],[],[226,225],[],[228,227,212],[229],[],[],[238],[122],[231],[232,231],[69,233,231],[143,307,231],[149,235,231],[236,231],[239,240,231],[231],[241,122],[],[70],[248,247,246],[],[253,251,252],[249],[],[250,232],[],[],[254,255],[],[257],[256,233],[],[],[],[261,259,260],[],[],[263,262],[234,264],[265],[],[],[73,74],[269,268],[],[],[141,170,271],[272,143,142],[],[77],[],[32],[79,78],[286,80],[170,279,145],[280,281],[],[282,283],[110,285,284],[],[],[],[81],[],[],[83],[291,292],[],[],[294,295,296],[],[229],[],[302],[111,235],[298],[150,299,327,298],[300,298],[304,303,298],[298],[111,308,235,305],[],[],[],[572,570,98,574,571,7,573],[87,86,92],[330,93],[313,112,312,299],[],[],[89],[],[32],[170,147,318],[148,113,150,319,320],[],[321,149],[],[114,328,300,323,324],[],[329,236,325],[],[],[],[634,638,636,635,637,98,633,384,632,7],[],[95,96,94],[],[],[340],[123,335,237,336],[],[],[338,334,301],[334],[337],[341,334,342],[334],[228,343,336],[344,345,228],[347,228,346],[229],[348,228,349],[352,335,351],[123,350,228],[229],[229],[],[237,353],[],[170,337,355],[228,356,301],[357,338,228],[229],[359,360,339],[],[],[362,363,115,152],[],[],[365],[],[371,190],[372],[190],[368,190],[369,190],[],[373],[374,376,368,375],[],[],[377],[],[380,385,383,379,381,382,384,387,6],[],[381],[],[389,392],[391,393],[386],[],[],[395,394,396],[389],[],[391],[],[],[],[395,397],[411,410],[463],[406],[369,399],[],[398],[402,403,400,398,370,410],[],[401,410],[403,401,410],[404,401],[398,407,408],[398],[409,369,399],[],[412,222,400,414,396],[415,414],[413],[],[418,416,417,419],[457,456],[423,417],[420,429,415,427,426],[422,428,417],[429,430],[422,421],[],[420,421],[424,425,421],[421],[265],[],[257],[],[431,430],[434,435,436],[170,401,432],[402,370,433],[],[438,222,437,403,436],[438],[454],[413],[418,446,439,441,440],[441],[446,447],[418,442],[443,444,445],[],[],[257],[449,450,448],[450],[],[],[418,451],[453,452],[],[],[415,455],[],[404,222,459,396,458],[459],[413],[460,396],[461,462],[],[229],[390,388,405,464,378],[],[492,466],[504,467],[515,468,472],[487,517,469,516,472],[470,519],[471,525],[474,530],[473],[474,533],[536,475],[539,476,538,477,537],[477,33,219,490],[478,541],[479,548,481],[480,222,550,549,481],[512,33,219],[482],[33,219,552],[484],[],[218,491],[478,474,466,477,467,465],[218],[218,487,468],[218,488,487,468],[218,489],[],[498],[495,494],[520,506],[493],[495],[495,479,496],[495,499,500],[495],[501,502],[],[],[265],[507],[506,507],[520],[514],[505,489,507],[508],[511,508],[509,508],[510],[512,510],[507],[470,471,469],[518],[],[],[521],[488],[520,523,522],[520],[524,488],[],[170,505,526],[528,527],[],[506,529],[],[170,531,493],[532,494],[],[170,508,534],[535,489],[],[476],[],[],[509,540],[],[170,510,542],[544,543,546],[],[545,511,547],[],[98,704,705,706,7,707],[],[480],[551,496],[265],[],[497,555,513,554,553],[],[],[32],[557,585],[558,596],[560,587,559,597],[308,560,33,598],[561,601],[603,562,563,588,602],[605,308,563,33],[608,564],[610,565,566,589,609],[612,566,308,33],[615,567],[569,590,616,568],[569,308,617,33],[620,308,33],[571],[],[583,306],[584,307],[569,556,566,563,557,560],[306],[575,306],[306,576],[307],[578,307],[579,307],[307,580],[307,581],[],[],[592],[578],[586],[587,586],[588,586],[589,586],[590,567,586],[593,594,586],[586],[578,595],[],[559],[],[575,579,599,600],[],[],[562],[604],[],[],[606,576,607,580],[],[],[565],[611],[],[],[613,614,577,581],[],[],[568],[],[619,618,591],[],[],[582,621,622],[],[],[624,647],[651,625],[626,664],[627,678,677],[679,628],[687,688,629],[689,631,630],[631,696],[698],[633],[],[644,325],[326,645],[646,327],[],[623,624,626,625],[691,325],[326,649],[326,640],[326,692,641],[694,327],[],[],[],[640,648,650],[],[],[731,733,732,98,734,7],[654],[641],[652],[652,656,655],[652],[657,228,658],[660,659,661,641],[229],[],[662],[663],[],[],[669],[653,666],[],[665],[667,665],[670,671,665],[665],[673,672],[],[675,653,674],[],[666,676],[],[627,628],[631],[683],[667],[693,680],[681,680],[684,685,680],[680],[667,686],[],[629],[630],[690,695,643,639,642,681],[],[],[],[],[],[797,799,795,801,800,796,794,98,384,798,7],[682,697],[],[668,699],[],[701,712],[714,715,703,702,713],[709,703,546,33],[546,717,33],[705],[],[545,711],[700,703],[545],[545,708,701],[545,709],[],[702],[],[],[708,716],[],[719,546,718],[],[545,710,720],[],[737,722],[746,723],[725,724,758,730],[725,763],[726,759,766,426],[727,771],[728,777],[729,784],[786,730],[428,725,761],[732],[],[649,736],[723,722,721],[649],[],[741],[735],[738,740],[739,738],[743,738,742],[738],[745,735,744],[],[229],[752],[748],[],[747,750],[747,749,751],[779,778],[747,753,754],[747],[755,756],[],[757,748],[],[727,726,729,728],[762,760],[],[759,760],[761,760],[765,764,760],[760],[265],[767,769,768],[739,770],[],[257],[],[774],[762,740],[772],[772,776,775],[772],[762,740],[780],[749,773],[778],[781,778,782],[778],[783,749,773],[],[779,785],[],[170,750,751],[788,818],[789,830],[790,841],[791,847],[792,853],[793,857],[861],[795],[],[691,814],[692,815],[816,693],[694,817],[],[793,788,791,789,790,792,787],[691],[692],[803,692],[692,804],[692,805],[693],[807,693],[808,693],[809,693],[810,693],[694],[812,694],[],[],[],[],[821],[803,804],[819],[823,819,822],[819],[803,825,824],[],[826,228,827],[829,804,828],[257],[],[662],[833],[806,805],[831],[835,831,834],[831],[837,836,838,805],[],[265],[806,839,840],[],[662],[843,842,807],[],[844,845,228],[846,228,832],[229],[229],[849,808,848],[],[851,228,850],[820,852,228],[229],[229],[809,854,855],[],[802,812,856],[],[858,810,859],[],[813,860],[],[811,863,862],[],[229]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Binary Expr NOT_EQUALS ","Variable Declaration Expr ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type Encoder ","Simple Name getEncoder ","Parameter String cacheKey ","Parameter Type type ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr type ","Simple Name type ","Class Or Interface Type String ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name encoder ","Name Expr JsoniterSpi ","Name Expr encoder ","Primitive Type boolean ","Expression Stmt ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name getEncoder ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr val ","Simple Name cacheKey ","Simple Name type ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr extensions ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Variable Declarator boolean escaped = ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Method Call Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","For Each Stmt ","Binary Expr AND ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","Expression Stmt ","Expression Stmt ","Throw Stmt ","Expression Stmt ","PRIVATE","SYNCHRONIZED","Class Or Interface Type Encoder ","Simple Name gen ","Parameter final String cacheKey ","Parameter Type type ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr iter ","Name Expr iter ","Name Expr type ","Name Expr type ","Name Expr type ","Class Or Interface Type String ","Class Or Interface Type Type ","Expression Stmt ","Simple Name encoder ","Name Expr JsoniterSpi ","Name Expr _score_ ","Name Expr encoder ","Name Expr encoder ","Name Expr extension ","Simple Name writeTo ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr CodegenImplNative ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr ReflectionEncoderFactory ","Name Expr classInfo ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr DynamicCodegen ","Name Expr classInfo ","Name Expr source ","Name Expr encoder ","Name Expr pattern ","Variable Declarator Encoder encoder = ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name getEncoder ","Block Stmt ","Null Literal Expr ","Variable Declaration Expr ","Simple Name extensions ","Name Expr JsoniterSpi ","Variable Declarator List<Extension> extensions = ","Class Or Interface Type List ","Method Call Expr ","Simple Name getExtensions ","Block Stmt ","Simple Name nextToken ","Class Or Interface Type Extension ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name createEncoder ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name NATIVE_ENCODERS ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Method Call Expr ","Simple Name addPlaceholderEncoderToSupportRecursiveStructure ","Simple Name cacheKey ","Method Declaration ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name mode ","Name Expr JsoniterSpi ","Name Expr mode ","Name Expr mode ","Name Expr iter ","Variable Declarator EncodingMode mode = ","Return Stmt ","Method Call Expr ","Method Call Expr ","Simple Name encodingMode ","Simple Name getCurrentConfig ","Block Stmt ","Field Access Expr ","Method Call Expr ","Simple Name REFLECTION_MODE ","Variable Declaration Expr ","Simple Name originalType ","Name Expr originalType ","Variable Declarator Type originalType = ","Class Or Interface Type Type ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name chooseAccessibleSuper ","Simple Name type ","Method Declaration ","Block Stmt ","Class Expr Object.class ","EQUALS","Name Expr mapped ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr","Variable Declaration Expr ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Variable Declarator ClassInfo classInfo = ","Marker Annotation Expr @Override ","Object Creation Expr ClassInfo Optional.empty Optional.empty ","Class Or Interface Type ClassInfo ","Block Stmt ","Method Call Expr ","AND","Binary Expr GREATER ","Class Expr Map.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Map ","Simple Name clazz ","Field Access Expr ","GREATER","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name typeArgs ","IntegerLiteralExpr","Method Call Expr ","Name Expr MapKeyEncoders ","Simple Name registerOrGetExisting ","Array Access Expr 0 ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name typeArgs ","Zero IntegerLiteralExpr","Block Stmt ","Field Access Expr ","Name Expr EncodingMode ","Simple Name REFLECTION_MODE ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name create ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Encoder ","Method Call Expr ","Method Call Expr ","Simple Name newInstance ","Name Expr Class ","Simple Name forName ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Block Stmt ","Field Access Expr ","Name Expr EncodingMode ","Simple Name STATIC_MODE ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Name Expr e ","Variable Declaration Expr ","Simple Name source ","Name Expr source ","Name Expr source ","Name Expr source ","Variable Declarator CodegenResult source = ","Class Or Interface Type CodegenResult ","Method Call Expr ","Simple Name genSource ","Simple Name cacheKey ","Simple Name classInfo ","Method Declaration ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr generatedSources ","Simple Name put ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name gen ","Field Access Expr ","Simple Name clazz ","Method Call Expr ","Simple Name staticGen ","Field Access Expr ","Simple Name clazz ","Simple Name cacheKey ","Simple Name source ","Method Declaration Throws ","Simple Name entry ","Block Stmt ","Field Access Expr ","Simple Name e ","Variable Declaration Expr ","Simple Name msg ","Name Expr Arrays ","Name Expr e ","Class Or Interface Type Any ","String Literal Expr Not Empty  ","Name Expr msg ","Variable Declarator String msg = ","Class Or Interface Type String ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Simple Name toString ","Field Access Expr ","Simple Name typeArgs ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","Name Expr iter ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Void Type ","Simple Name addPlaceholderEncoderToSupportRecursiveStructure ","Parameter final String cacheKey ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Class Or Interface Type String ","Expression Stmt ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Object Creation Expr Encoder Optional.empty Optional.empty ","Class Or Interface Type Encoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Name Expr keys ","Simple Name encode ","Parameter Object obj ","Parameter JsonStream stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr stream ","Simple Name stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Expression Stmt ","If Stmt ","Expression Stmt ","Variable Declaration Expr ","Simple Name encoder ","Name Expr JsoniterSpi ","Name Expr encoder ","Name Expr encoder ","Name Expr JsoniterSpi ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Variable Declarator Encoder encoder = ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name getEncoder ","Binary Expr EQUALS ","Block Stmt ","This Expr ","ThisExpr","For Stmt ","If Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Unary Expr ++ ","Block Stmt ","Name Expr i ","Simple Name i ","Simple Name e ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Integer Literal Expr Note Zero  ","POSTFIX_INCREMENT","Expression Stmt ","If Stmt ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getEncoder ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","This Expr ","Try Stmt ","Block Stmt ","Catch Clause ","Expression Stmt ","Method Call Expr ","Name Expr Thread ","Simple Name sleep ","Integer Literal Expr Note Zero  ","Parameter InterruptedException e ","Block Stmt ","Class Or Interface Type InterruptedException ","Simple Name e ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Break Stmt ","break;","Binary Expr EQUALS ","Block Stmt ","This Expr ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name encode ","Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Name Expr lastParsedPos ","Block Stmt ","Return Stmt ","Name Expr sLen ","Simple Name chooseAccessibleSuper ","Parameter Type type ","Block Stmt ","Void Type ","Name Expr type ","Name Expr size ","Name Expr type ","Class Or Interface Type Type ","Variable Declaration Expr ","Binary Expr NOT_EQUALS ","Name Expr clazz ","String Literal Expr Not Empty  ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Simple Name append ","Array Creation Expr Type Array Creation Level Not Empty ","Class Or Interface Type Type ","Name Expr key ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Name Expr cache ","Name Expr pType ","Simple Name clazz ","Name Expr cache ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr lines ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Assign Expr ASSIGN ","Cast Expr ","Name Expr cache ","Method Call Expr ","Simple Name getRawType ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getActualTypeArguments ","Binary Expr EQUALS ","Cast Expr ","Class Or Interface Type Class ","Block Stmt ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name walkSuperUntilPublic ","Method Call Expr ","Simple Name clazz ","Method Declaration ","Simple Name getSuperclass ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Null Literal Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Class Or Interface Type CodegenResult ","Simple Name genSource ","Parameter String cacheKey ","Parameter ClassInfo classInfo ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Class Or Interface Type String ","Class Or Interface Type ClassInfo ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr part2 ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Field Access Expr ","Simple Name clazz ","Block Stmt ","Simple Name isArray ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genArray ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Class Or Interface Type Map ","Method Call Expr ","Name Expr CodegenImplMap ","Simple Name genMap ","Block Stmt ","Expression Stmt ","Simple Name isAssignableFrom ","Class Or Interface Type Collection ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genCollection ","Block Stmt ","Simple Name isEnum ","Method Call Expr ","Name Expr CodegenImplNative ","Simple Name genEnum ","Method Call Expr ","Name Expr CodegenImplObject ","Simple Name genObject ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Simple Name next ","Simple Name staticGen ","Parameter Class clazz ","Parameter String cacheKey ","Parameter CodegenResult source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr clazz ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr source ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type CodegenResult ","Method Call Expr ","Simple Name createDir ","Simple Name cacheKey ","Method Declaration ","Variable Declaration Expr ","Simple Name fileName ","Name Expr fileName ","Variable Declarator String fileName = ","Class Or Interface Type String ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '.' ","Char Literal Expr '/' ","'.'","'/'","Variable Declaration Expr ","Simple Name fileOutputStream ","Name Expr isDoingStaticCodegen ","Name Expr fileOutputStream ","Name Expr fileOutputStream ","Variable Declarator FileOutputStream fileOutputStream = ","Class Or Interface Type FileOutputStream ","Object Creation Expr FileOutputStream Optional.empty Optional.empty ","Class Or Interface Type FileOutputStream ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name writer ","Name Expr writer ","Name Expr writer ","Variable Declarator OutputStreamWriter writer = ","Class Or Interface Type OutputStreamWriter ","Object Creation Expr OutputStreamWriter Optional.empty Optional.empty ","Field Access Expr ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name staticGen ","Simple Name clazz ","Simple Name cacheKey ","Simple Name writer ","Simple Name source ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Call Expr ","Simple Name close ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Name Expr index ","Simple Name walkSuperUntilPublic ","Parameter Class clazz ","Block Stmt ","Name Expr clazz ","Name Expr cache ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","Method Call Expr ","Simple Name walkSuperUntilPublic ","Method Call Expr ","Simple Name getSuperclass ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name createDir ","Parameter String cacheKey ","Block Stmt ","Name Expr cacheKey ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name parts ","Name Expr parts ","Name Expr parts ","Variable Declarator String[] parts = ","Array Type 1 ","Method Call Expr ","Simple Name split ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name parent ","Name Expr isDoingStaticCodegen ","Name Expr parent ","Name Expr copied ","Name Expr current ","Variable Declarator File parent = ","Class Or Interface Type File ","Object Creation Expr File Optional.empty Optional.empty ","Primitive Type byte ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","Variable Declaration Expr ","Simple Name part ","Name Expr part ","Variable Declarator String part = ","Name Expr stream ","Array Access Expr i ","Variable Declaration Expr ","Simple Name current ","Class Or Interface Type Builder ","Variable Declarator File current = ","Name Expr iter ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Method Call Expr ","Simple Name mkdir ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter Class clazz ","Parameter String cacheKey ","Parameter OutputStreamWriter writer ","Parameter CodegenResult source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr clazz ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr source ","Name Expr source ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type OutputStreamWriter ","Class Or Interface Type CodegenResult ","Variable Declaration Expr ","Simple Name className ","Name Expr className ","Variable Declarator String className = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Binary Expr PLUS ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Variable Declaration Expr ","Simple Name packageName ","Name Expr packageName ","Variable Declarator String packageName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name charsLength ","Char Literal Expr '.' ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name generateWrapperCode ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name toString ","Return Stmt ","Simple Name write ","String Literal Expr Not Empty  "]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"gen-Codegen-String-Type","callMethodNameReferTo":{"226":"srcmainjavacomjsoniteroutputMapKeyEncoders.java-registerOrGetExisting-MapKeyEncoders-Type","132":"srcmainjavacomjsoniterspiJsoniterSpi.java-getExtensions-JsoniterSpi-","329":"srcmainjavacomjsoniterspiJsoniterSpi.java-addNewEncoder-JsoniterSpi-String-Encoder","139":"srcmainjavacomjsoniterspiExtension.java-createEncoder-Extension-String-Type","171":"srcmainjavacomjsoniterspiJsoniterSpi.java-getCurrentConfig-JsoniterSpi-","143":"srcmainjavacomjsoniterspiJsoniterSpi.java-addNewEncoder-JsoniterSpi-String-Encoder","239":"srcmainjavacomjsoniteroutputReflectionEncoderFactory.java-create-ReflectionEncoderFactory-ClassInfo","401":"srcmainjavacomjsoniterspiJsoniterSpi.java-getEncoder-JsoniterSpi-String","341":"srcmainjavacomjsoniterspiJsoniterSpi.java-addNewEncoder-JsoniterSpi-String-Encoder","120":"srcmainjavacomjsoniterspiJsoniterSpi.java-getEncoder-JsoniterSpi-String","153":"srcmainjavacomjsoniterspiJsoniterSpi.java-addNewEncoder-JsoniterSpi-String-Encoder","377":"srcmainjavacomjsoniterspiJsoniterSpi.java-getEncoder-JsoniterSpi-String","286":"srcmainjavacomjsoniteroutputDynamicCodegen.java-gen-DynamicCodegen-Class-String-CodegenResult"},"num":833,"succs":[[1,91],[122,2],[123,3,124,4,94],[59,95,4,126],[127,5],[134,6,7],[13,7,128],[135,8],[137,9],[10,141],[123,11,98,142,6],[12,143],[100,59,6,126],[146,14],[151,15],[123,152,18,16,103],[17,153],[59,18,105,126],[19,156],[161,20,160],[21,162],[22,174],[123,175,28,165,23],[178,24],[25,183],[26,188],[27,190,189,28,86],[192,28],[198,29],[210,30],[32,31,212,211,213],[32,226],[234,33],[34,235,190,166,36],[35,238],[59,109,126,36],[241,37],[45,190,243,242,38],[45,245,244,39,41],[246,40],[45,59,111,126],[255,42,256],[43,257],[45,190,44,258,167],[45,261],[265,46],[278,47,54,277,58],[48,279],[282,49,51],[190,283,284,50,51],[285,53],[52],[290,53],[59,116,58,126],[300,55,299],[56,301],[57,322],[326,58],[329],[64,63,66,60,65,62,67,61],[61],[62],[],[64],[],[69,89],[81,90],[0,1,14,18,19,13,4,5],[69],[],[69,68],[70,69],[71,69],[69,72,158],[69,73],[69,74,274],[75,69],[76,69],[76,294,77,69],[78,69],[81],[],[81,80],[81,82],[85,81],[186,81,83],[84],[86,84],[87,84],[],[],[118],[93,68],[],[92],[92,2,94],[92,70,97,80,95],[135],[96],[98,10,96],[10,96,99],[100,102,82,96],[],[101],[103,101,15],[104,101,15],[108,105,107,101],[],[202,199],[106],[106,74,109],[112,110],[114,113,77,115,111,110],[],[203,199],[267,266],[111,110],[116,110],[92,119,120],[92],[121,93,68],[],[3],[],[125],[],[],[130],[129],[],[131,132,128],[128],[129,133],[],[8,9],[136],[135],[138,139,96],[],[70,97,80,140],[],[12,11],[125],[144,145,71,99],[],[],[138,147,101],[148,149,82],[102,150],[],[],[16,17],[125],[104,155,72,154],[],[],[157,159,73],[],[],[333,60,335,61,332,334],[21,45,20,46,32,28,36,29],[58],[168],[164],[],[163],[163,165],[163,166],[163,169,170],[163],[171,172],[164,173],[],[],[25,24,23],[176,177],[],[],[181],[83],[179],[182,179,83],[179],[138,184,84],[85,185,187],[],[],[455,453,452,60,454,61],[27],[191],[],[],[194,193],[],[195,196,180],[197],[],[],[206],[87],[199],[200,199],[30,201,199],[108,275,199],[114,203,199],[204,199],[207,208,199],[199],[209,87],[],[31],[216,215,214],[],[221,219,220],[217],[],[218,200],[],[],[222,223],[],[225],[224,201],[],[],[],[229,227,228],[],[],[231,230],[202,232],[233],[],[],[34,35],[237,236],[],[],[106,138,239],[240,108,107],[],[38],[],[125],[40,39],[254,41],[138,247,110],[248,249],[],[250,251],[74,253,252],[],[],[],[42],[],[],[44],[259,260],[],[],[262,263,264],[],[197],[],[270],[75,203],[266],[115,267,295,266],[268,266],[272,271,266],[266],[75,276,203,273],[],[],[],[541,539,60,543,540,61,542],[48,47,53],[298,54],[76,281,280,267],[],[],[50],[],[125],[138,112,286],[113,77,115,287,288],[],[289,114],[],[296,78,268,291,292],[],[297,204,293],[],[],[],[603,607,605,606,604,60,602,353,601,61],[],[56,57,55],[],[],[308],[88,303,205,304],[],[],[306,302,269],[302],[305],[309,302,310],[302],[196,311,304],[312,313,196],[315,196,314],[197],[316,196,317],[320,303,319],[88,318,196],[197],[197],[],[205,321],[],[138,305,323],[196,324,269],[325,196,306],[197],[327,328,307],[],[],[330,331,79,117],[],[],[333],[],[339,158],[340],[158],[336,158],[337,158],[],[341],[342,344,336,343],[],[],[345],[],[349,352,354,350,347,351,356,348,353],[],[],[350],[],[358,361],[360,362],[355],[],[],[364,363,365],[358],[],[360],[],[],[],[364,366],[380,379],[432],[375],[337,368],[],[367],[371,372,369,367,338,379],[],[370,379],[372,370,379],[373,370],[367,376,377],[367],[378,337,368],[],[381,190,369,383,365],[384,383],[382],[],[387,385,386,388],[426,425],[392,386],[389,398,384,396,395],[391,397,386],[399,398],[391,390],[],[389,390],[393,394,390],[390],[233],[],[225],[],[400,399],[404,403,405],[138,370,401],[371,338,402],[],[407,406,190,372,405],[407],[423],[382],[387,415,408,410,409],[410],[415,416],[387,411],[412,413,414],[],[],[225],[418,419,417],[419],[],[],[387,420],[422,421],[],[],[384,424],[],[373,428,190,365,427],[428],[382],[429,365],[430,431],[],[197],[359,357,374,346,433],[],[461,435],[473,436],[484,437,441],[456,486,438,485,441],[439,488],[440,494],[443,499],[442],[443,502],[505,444],[508,445,507,446,506],[446,126,187,459],[447,510],[448,517,450],[449,190,519,450,518],[481,126,187],[451],[126,187,521],[453],[],[186,460],[447,443,435,446,436,434],[186],[186,456,437],[186,456,457,437],[186,458],[],[467],[464,463],[489,475],[462],[464],[464,448,465],[464,468,469],[464],[470,471],[],[],[233],[476],[475,476],[489],[483],[474,458,476],[477],[480,477],[478,477],[479],[481,479],[476],[439,440,438],[487],[],[],[490],[457],[489,492,491],[489],[493,457],[],[138,474,495],[497,496],[],[475,498],[],[138,500,462],[501,463],[],[138,477,503],[504,458],[],[445],[],[],[478,509],[],[138,479,511],[513,512,515],[],[480,514,516],[],[60,673,674,675,61,676],[],[449],[520,465],[233],[],[466,524,482,523,522],[],[],[125],[526,554],[527,565],[529,556,528,566],[276,529,126,567],[530,570],[572,531,532,557,571],[574,276,532,126],[577,533],[579,534,535,558,578],[581,535,276,126],[584,536],[538,559,585,537],[538,276,586,126],[589,276,126],[540],[],[552,274],[553,275],[538,525,535,532,526,529],[274],[544,274],[274,545],[275],[547,275],[548,275],[275,549],[275,550],[],[],[561],[547],[555],[556,555],[557,555],[558,555],[559,536,555],[562,563,555],[555],[547,564],[],[528],[],[548,544,568,569],[],[],[531],[573],[],[],[575,545,576,549],[],[],[534],[580],[],[],[582,583,546,550],[],[],[537],[],[588,587,560],[],[],[551,590,591],[],[],[593,616],[620,594],[595,633],[596,647,646],[648,597],[656,657,598],[658,600,599],[600,665],[667],[602],[],[613,293],[294,614],[615,295],[],[592,593,595,594],[660,293],[294,618],[294,609],[294,661,610],[663,295],[],[],[],[609,617,619],[],[],[700,702,701,60,703,61],[623],[610],[621],[621,625,624],[621],[626,196,627],[629,628,630,610],[197],[],[631],[632],[],[],[638],[622,635],[],[634],[636,634],[639,640,634],[634],[642,641],[],[644,622,643],[],[635,645],[],[596,597],[600],[652],[636],[662,649],[650,649],[653,654,649],[649],[636,655],[],[598],[599],[659,664,612,608,611,650],[],[],[],[],[],[766,768,764,765,769,770,763,60,353,767,61],[651,666],[],[637,668],[],[670,681],[683,684,672,671,682],[678,672,515,126],[515,686,126],[674],[],[514,680],[669,672],[514],[514,677,670],[514,678],[],[671],[],[],[677,685],[],[688,515,687],[],[514,679,689],[],[706,691],[715,692],[694,693,727,699],[694,732],[695,728,735,395],[696,740],[697,746],[698,753],[755,699],[694,397,730],[701],[],[618,705],[692,691,690],[618],[],[710],[704],[707,709],[708,707],[712,707,711],[707],[714,704,713],[],[197],[721],[717],[],[716,719],[716,718,720],[748,747],[716,722,723],[716],[724,725],[],[726,717],[],[695,696,698,697],[731,729],[],[728,729],[730,729],[734,733,729],[729],[233],[736,738,737],[708,739],[],[225],[],[743],[731,709],[741],[741,745,744],[741],[731,709],[749],[718,742],[747],[750,747,751],[747],[752,718,742],[],[748,754],[],[138,719,720],[757,787],[758,799],[759,810],[760,816],[761,822],[762,826],[830],[764],[],[660,783],[661,784],[785,662],[663,786],[],[757,762,760,758,759,761,756],[660],[661],[772,661],[661,773],[661,774],[662],[776,662],[777,662],[778,662],[779,662],[663],[781,663],[],[],[],[],[790],[772,773],[788],[792,788,791],[788],[772,794,793],[],[795,196,796],[798,773,797],[225],[],[631],[802],[775,774],[800],[804,800,803],[800],[806,805,807,774],[],[233],[775,808,809],[],[631],[812,811,776],[],[813,814,196],[815,196,801],[197],[197],[818,777,817],[],[820,196,819],[789,821,196],[197],[197],[778,823,824],[],[771,781,825],[],[827,828,779],[],[782,829],[],[780,832,831],[],[197]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr extensions ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Variable Declarator boolean escaped = ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Method Call Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","For Each Stmt ","Binary Expr AND ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","Expression Stmt ","Expression Stmt ","Throw Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","SYNCHRONIZED","Class Or Interface Type Encoder ","Simple Name gen ","Parameter final String cacheKey ","Parameter Type type ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr type ","Simple Name type ","Name Expr type ","Name Expr type ","Name Expr iter ","Name Expr iter ","Name Expr type ","Name Expr type ","Name Expr type ","Class Or Interface Type String ","Class Or Interface Type Type ","Expression Stmt ","Simple Name encoder ","Name Expr JsoniterSpi ","Name Expr _score_ ","Name Expr encoder ","Name Expr encoder ","Name Expr extension ","Simple Name writeTo ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr CodegenImplNative ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr ReflectionEncoderFactory ","Name Expr classInfo ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr DynamicCodegen ","Name Expr classInfo ","Name Expr source ","Name Expr encoder ","Name Expr pattern ","Variable Declarator Encoder encoder = ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name getEncoder ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Variable Declaration Expr ","Simple Name extensions ","Name Expr JsoniterSpi ","Variable Declarator List<Extension> extensions = ","Class Or Interface Type List ","Method Call Expr ","Simple Name getExtensions ","Block Stmt ","Simple Name nextToken ","Class Or Interface Type Extension ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name createEncoder ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name NATIVE_ENCODERS ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Method Call Expr ","Simple Name addPlaceholderEncoderToSupportRecursiveStructure ","Simple Name cacheKey ","Method Declaration ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name mode ","Name Expr JsoniterSpi ","Name Expr mode ","Name Expr mode ","Name Expr iter ","Variable Declarator EncodingMode mode = ","Return Stmt ","Method Call Expr ","Method Call Expr ","Simple Name encodingMode ","Simple Name getCurrentConfig ","Block Stmt ","Field Access Expr ","Method Call Expr ","Simple Name REFLECTION_MODE ","Variable Declaration Expr ","Simple Name originalType ","Name Expr originalType ","Variable Declarator Type originalType = ","Class Or Interface Type Type ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name chooseAccessibleSuper ","Simple Name type ","Method Declaration ","Block Stmt ","Class Expr Object.class ","EQUALS","Name Expr mapped ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr","Variable Declaration Expr ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Variable Declarator ClassInfo classInfo = ","Marker Annotation Expr @Override ","Object Creation Expr ClassInfo Optional.empty Optional.empty ","Class Or Interface Type ClassInfo ","Block Stmt ","Method Call Expr ","AND","Binary Expr GREATER ","Class Expr Map.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Map ","Simple Name clazz ","Field Access Expr ","GREATER","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name typeArgs ","IntegerLiteralExpr","Method Call Expr ","Name Expr MapKeyEncoders ","Simple Name registerOrGetExisting ","Array Access Expr 0 ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name typeArgs ","Zero IntegerLiteralExpr","Block Stmt ","Field Access Expr ","Name Expr EncodingMode ","Simple Name REFLECTION_MODE ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name create ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Encoder ","Method Call Expr ","Method Call Expr ","Simple Name newInstance ","Name Expr Class ","Simple Name forName ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Block Stmt ","Field Access Expr ","Name Expr EncodingMode ","Simple Name STATIC_MODE ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Name Expr e ","Variable Declaration Expr ","Simple Name source ","Name Expr source ","Name Expr source ","Name Expr source ","Variable Declarator CodegenResult source = ","Class Or Interface Type CodegenResult ","Method Call Expr ","Simple Name genSource ","Simple Name cacheKey ","Simple Name classInfo ","Method Declaration ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr generatedSources ","Simple Name put ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name gen ","Field Access Expr ","Simple Name clazz ","Method Call Expr ","Simple Name staticGen ","Field Access Expr ","Simple Name clazz ","Simple Name cacheKey ","Simple Name source ","Method Declaration Throws ","Simple Name entry ","Block Stmt ","Field Access Expr ","Simple Name e ","Variable Declaration Expr ","Simple Name msg ","Name Expr Arrays ","Name Expr e ","Class Or Interface Type Any ","String Literal Expr Not Empty  ","Name Expr msg ","Variable Declarator String msg = ","Class Or Interface Type String ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Simple Name toString ","Field Access Expr ","Simple Name typeArgs ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","Name Expr iter ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Void Type ","Simple Name addPlaceholderEncoderToSupportRecursiveStructure ","Parameter final String cacheKey ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Class Or Interface Type String ","Expression Stmt ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Object Creation Expr Encoder Optional.empty Optional.empty ","Class Or Interface Type Encoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Name Expr keys ","Simple Name encode ","Parameter Object obj ","Parameter JsonStream stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr stream ","Simple Name stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Expression Stmt ","If Stmt ","Expression Stmt ","Variable Declaration Expr ","Simple Name encoder ","Name Expr JsoniterSpi ","Name Expr encoder ","Name Expr encoder ","Name Expr JsoniterSpi ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Variable Declarator Encoder encoder = ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name getEncoder ","Binary Expr EQUALS ","Block Stmt ","This Expr ","ThisExpr","For Stmt ","If Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Unary Expr ++ ","Block Stmt ","Name Expr i ","Simple Name i ","Simple Name e ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Integer Literal Expr Note Zero  ","POSTFIX_INCREMENT","Expression Stmt ","If Stmt ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getEncoder ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","This Expr ","Try Stmt ","Block Stmt ","Catch Clause ","Expression Stmt ","Method Call Expr ","Name Expr Thread ","Simple Name sleep ","Integer Literal Expr Note Zero  ","Parameter InterruptedException e ","Block Stmt ","Class Or Interface Type InterruptedException ","Simple Name e ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Break Stmt ","break;","Binary Expr EQUALS ","Block Stmt ","This Expr ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name encode ","Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Name Expr lastParsedPos ","Block Stmt ","Return Stmt ","Name Expr sLen ","Simple Name chooseAccessibleSuper ","Parameter Type type ","Block Stmt ","Void Type ","Name Expr type ","Name Expr size ","Name Expr type ","Class Or Interface Type Type ","Variable Declaration Expr ","Binary Expr NOT_EQUALS ","Name Expr clazz ","String Literal Expr Not Empty  ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Simple Name append ","Array Creation Expr Type Array Creation Level Not Empty ","Class Or Interface Type Type ","Name Expr key ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Name Expr cache ","Name Expr pType ","Simple Name clazz ","Name Expr cache ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr lines ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Assign Expr ASSIGN ","Cast Expr ","Name Expr cache ","Method Call Expr ","Simple Name getRawType ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getActualTypeArguments ","Binary Expr EQUALS ","Cast Expr ","Class Or Interface Type Class ","Block Stmt ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name walkSuperUntilPublic ","Method Call Expr ","Simple Name clazz ","Method Declaration ","Simple Name getSuperclass ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Null Literal Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Class Or Interface Type CodegenResult ","Simple Name genSource ","Parameter String cacheKey ","Parameter ClassInfo classInfo ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Class Or Interface Type String ","Class Or Interface Type ClassInfo ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr part2 ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Field Access Expr ","Simple Name clazz ","Block Stmt ","Simple Name isArray ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genArray ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Class Or Interface Type Map ","Method Call Expr ","Name Expr CodegenImplMap ","Simple Name genMap ","Block Stmt ","Expression Stmt ","Simple Name isAssignableFrom ","Class Or Interface Type Collection ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genCollection ","Block Stmt ","Simple Name isEnum ","Method Call Expr ","Name Expr CodegenImplNative ","Simple Name genEnum ","Method Call Expr ","Name Expr CodegenImplObject ","Simple Name genObject ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Simple Name next ","Simple Name staticGen ","Parameter Class clazz ","Parameter String cacheKey ","Parameter CodegenResult source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr clazz ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr source ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type CodegenResult ","Method Call Expr ","Simple Name createDir ","Simple Name cacheKey ","Method Declaration ","Variable Declaration Expr ","Simple Name fileName ","Name Expr fileName ","Variable Declarator String fileName = ","Class Or Interface Type String ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '.' ","Char Literal Expr '/' ","'.'","'/'","Variable Declaration Expr ","Simple Name fileOutputStream ","Name Expr isDoingStaticCodegen ","Name Expr fileOutputStream ","Name Expr fileOutputStream ","Variable Declarator FileOutputStream fileOutputStream = ","Class Or Interface Type FileOutputStream ","Object Creation Expr FileOutputStream Optional.empty Optional.empty ","Class Or Interface Type FileOutputStream ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name writer ","Name Expr writer ","Name Expr writer ","Variable Declarator OutputStreamWriter writer = ","Class Or Interface Type OutputStreamWriter ","Object Creation Expr OutputStreamWriter Optional.empty Optional.empty ","Field Access Expr ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name staticGen ","Simple Name clazz ","Simple Name cacheKey ","Simple Name writer ","Simple Name source ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Call Expr ","Simple Name close ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Name Expr index ","Simple Name walkSuperUntilPublic ","Parameter Class clazz ","Block Stmt ","Name Expr clazz ","Name Expr cache ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","Method Call Expr ","Simple Name walkSuperUntilPublic ","Method Call Expr ","Simple Name getSuperclass ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name createDir ","Parameter String cacheKey ","Block Stmt ","Name Expr cacheKey ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name parts ","Name Expr parts ","Name Expr parts ","Variable Declarator String[] parts = ","Array Type 1 ","Method Call Expr ","Simple Name split ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name parent ","Name Expr isDoingStaticCodegen ","Name Expr parent ","Name Expr copied ","Name Expr current ","Variable Declarator File parent = ","Class Or Interface Type File ","Object Creation Expr File Optional.empty Optional.empty ","Primitive Type byte ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","Variable Declaration Expr ","Simple Name part ","Name Expr part ","Variable Declarator String part = ","Name Expr stream ","Array Access Expr i ","Variable Declaration Expr ","Simple Name current ","Class Or Interface Type Builder ","Variable Declarator File current = ","Name Expr iter ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Method Call Expr ","Simple Name mkdir ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter Class clazz ","Parameter String cacheKey ","Parameter OutputStreamWriter writer ","Parameter CodegenResult source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr clazz ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr source ","Name Expr source ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type OutputStreamWriter ","Class Or Interface Type CodegenResult ","Variable Declaration Expr ","Simple Name className ","Name Expr className ","Variable Declarator String className = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Binary Expr PLUS ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Variable Declaration Expr ","Simple Name packageName ","Name Expr packageName ","Variable Declarator String packageName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name charsLength ","Char Literal Expr '.' ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name generateWrapperCode ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name toString ","Return Stmt ","Simple Name write ","String Literal Expr Not Empty  "]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"addPlaceholderEncoderToSupportRecursiveStructure-Codegen-String","callMethodNameReferTo":{"49":"srcmainjavacomjsoniterspiJsoniterSpi.java-getEncoder-JsoniterSpi-String","77":"srcmainjavacomjsoniterspiJsoniterSpi.java-getEncoder-JsoniterSpi-String","109":"srcmainjavacomjsoniterspiEncoder.java-encode-Encoder-Object-JsonStream"},"num":111,"succs":[[4,1,6,2,3,5],[2],[],[4],[],[11,8],[12],[8],[],[7,8],[9,8],[],[13],[14,16,7,15],[],[],[17],[],[24,26,21,23,22,19,25,28,20],[],[],[22],[],[30,33],[32,34],[27],[],[],[36,35,37],[30],[],[32],[],[],[],[36,38],[52,51],[109],[47],[9,40],[],[39],[43,44,41,39,10,51],[],[42,51],[44,42,51],[45,42],[39,48,49],[39],[50,9,40],[],[53,54,56,41,37],[57,56],[55],[],[],[60,58,59,61],[102,101],[65,59],[62,57,73,70,69],[64,72,59],[73,74],[64,63],[],[62,63],[66,67,63],[63],[68],[],[],[71],[],[],[75,74],[79,80,81],[76,42,77],[],[43,10,78],[],[83,82,54,44,81],[83],[99],[55],[60,91,84,86,85],[86],[91,92],[60,87],[88,89,90],[],[],[71],[94,95,93],[95],[],[],[60,96],[98,97],[],[],[57,100],[],[45,54,104,37,103],[104],[55],[105,37],[106,107],[],[108],[],[31,29,46,18,110],[]],"attribute":["Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name addPlaceholderEncoderToSupportRecursiveStructure ","Parameter final String cacheKey ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Class Or Interface Type String ","Expression Stmt ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Object Creation Expr Encoder Optional.empty Optional.empty ","Class Or Interface Type Encoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Name Expr keys ","Simple Name encode ","Parameter Object obj ","Parameter JsonStream stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr stream ","Simple Name stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Expression Stmt ","If Stmt ","Expression Stmt ","Variable Declaration Expr ","Simple Name encoder ","Name Expr JsoniterSpi ","Name Expr encoder ","Name Expr encoder ","Name Expr JsoniterSpi ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Variable Declarator Encoder encoder = ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name getEncoder ","Binary Expr EQUALS ","Block Stmt ","This Expr ","EQUALS","ThisExpr","For Stmt ","If Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Unary Expr ++ ","Block Stmt ","Name Expr i ","Simple Name i ","Simple Name e ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","POSTFIX_INCREMENT","Expression Stmt ","If Stmt ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name getEncoder ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","This Expr ","Try Stmt ","Block Stmt ","Catch Clause ","Expression Stmt ","Method Call Expr ","Name Expr Thread ","Simple Name sleep ","Integer Literal Expr Note Zero  ","Parameter InterruptedException e ","Block Stmt ","Class Or Interface Type InterruptedException ","Simple Name e ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Break Stmt ","break;","Binary Expr EQUALS ","Block Stmt ","This Expr ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name encode "]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"chooseAccessibleSuper-Codegen-Type","callMethodNameReferTo":{"95":"srcmainjavacomjsoniterspiGenericsHelper.java-createParameterizedType-GenericsHelper-Type[]-Type-Type"},"num":121,"succs":[[31,1],[44,2],[55,3,7],[25,57,4,56,7],[5,59],[6,65],[9,71],[8],[9,74],[77,10],[80,11,79,12,78],[12,82,18,29],[13,83],[14,90,16],[15,92,93,91,16],[52,82,18],[17],[82,95,18],[22,21,24,19,23,20],[20],[],[22],[],[26,30],[13,9,1,12,2,0],[26],[],[26,25,3],[26,25,27,3],[26,28],[],[37],[34,33],[60,46],[32],[34],[34,14,35],[34,38,39],[34],[40,41],[],[],[43],[],[47],[46,47],[60],[54],[45,28,47],[48],[51,48],[49,48],[50],[52,50],[47],[5,6,4],[58],[],[],[61],[27],[60,63,62],[60],[64,27],[],[66,45,67],[],[68,69],[],[46,70],[],[66,72,32],[73,33],[],[66,48,75],[76,28],[],[11],[],[],[49,81],[],[],[66,50,84],[86,88,85],[],[87,51,89],[],[19,104,105,106,20,107],[],[15],[94,35],[],[43],[],[36,98,53,97,96],[],[],[99],[],[101,112],[114,115,103,102,113],[109,103,88,82],[88,117,82],[105],[],[87,111],[100,103],[87],[87,108,101],[87,109],[],[102],[],[],[108,116],[],[119,88,118],[],[87,110,120],[]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Name Expr lastParsedPos ","Block Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Name Expr sLen ","Simple Name chooseAccessibleSuper ","Parameter Type type ","Block Stmt ","Void Type ","Simple Name type ","Name Expr type ","Name Expr size ","Name Expr type ","Class Or Interface Type Type ","Variable Declaration Expr ","Binary Expr NOT_EQUALS ","Name Expr clazz ","String Literal Expr Not Empty  ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Simple Name append ","Array Creation Expr Type Array Creation Level Not Empty ","Class Or Interface Type Type ","Name Expr key ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr cache ","Name Expr pType ","Simple Name clazz ","Name Expr cache ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr lines ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Assign Expr ASSIGN ","ASSIGN","Cast Expr ","Name Expr cache ","Method Call Expr ","Simple Name getRawType ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getActualTypeArguments ","Binary Expr EQUALS ","Cast Expr ","Class Or Interface Type Class ","Block Stmt ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","ReturnStmt","Assign Expr ASSIGN ","Method Call Expr ","Simple Name walkSuperUntilPublic ","Method Call Expr ","Simple Name clazz ","Method Declaration ","Simple Name getSuperclass ","Block Stmt ","Field Access Expr ","EQUALS","Integer Literal Expr Zero  ","Simple Name length ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Null Literal Expr ","NullLiteralExpr","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Name Expr index ","Simple Name walkSuperUntilPublic ","Parameter Class clazz ","Block Stmt ","Name Expr clazz ","Name Expr cache ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","Method Call Expr ","Simple Name walkSuperUntilPublic ","Method Call Expr ","Simple Name getSuperclass "]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"walkSuperUntilPublic-Codegen-Class","callMethodNameReferTo":{},"num":26,"succs":[[1,16],[18,19,3,2,17],[13,3,4,21],[4,22,21],[5,7,8,9,6,10],[6],[],[8],[],[12,15],[0,3],[12],[],[12,11,1],[12,13],[],[2],[],[],[11,20],[],[],[24,4,23],[],[12,14,25],[]],"attribute":["If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Name Expr index ","Simple Name walkSuperUntilPublic ","Parameter Class clazz ","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr cache ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","ReturnStmt","Method Call Expr ","Simple Name walkSuperUntilPublic ","Method Call Expr ","Simple Name getSuperclass "]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"getGeneratedSource-Codegen-String","callMethodNameReferTo":{},"num":15,"succs":[[4,6,3,5,1,2],[2],[],[4],[],[10,9],[7],[0,12,11],[9],[],[],[],[8,14,13],[],[]],"attribute":["Method Declaration ","PUBLIC","STATIC","Class Or Interface Type CodegenResult ","Simple Name getGeneratedSource ","Parameter String cacheKey ","Block Stmt ","Return Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Class Or Interface Type String ","ReturnStmt","Method Call Expr ","Name Expr generatedSources ","Char Literal Expr ''' "]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"staticGen-Codegen-Class-String-CodegenResult","callMethodNameReferTo":{},"num":235,"succs":[[1,32],[36,2],[3,51],[4,65,64],[66,5],[74,75,6],[76,8,7],[8,83],[85],[14,16,20,15,18,10,13,17,12,11],[11],[],[13],[],[29,22],[24,30],[31,28],[19],[],[],[0,1,3,2],[78,22],[],[24,34],[],[24,23],[24,79,25],[81,28],[],[],[],[],[23,33,35],[],[],[97,99,98,10,100,11],[39],[25],[37],[37,41,40],[37],[42,43,44],[46,45,47,25],[],[50],[],[48],[49],[],[],[],[56],[38,53],[],[52],[54,52],[57,58,52],[52],[60,59],[],[38,62,61],[],[53,63],[],[4,5],[8],[70],[54],[80,67],[68,67],[71,72,67],[67],[54,73],[],[6],[7],[82,77,27,21,26,68],[],[],[],[],[],[168,170,166,172,167,171,165,10,17,169,11],[69,84],[],[55,86],[],[103,88],[112,89],[91,90,124,96],[91,129],[92,125,134,133],[93,141],[94,147],[95,154],[156,96],[140,91,127],[98],[],[34,102],[89,88,87],[34],[],[107],[101],[104,106],[105,104],[109,104,108],[104],[111,101,110],[],[50],[118],[114],[],[113,116],[113,115,117],[149,148],[113,119,120],[113],[121,122],[],[123,114],[],[93,92,95,94],[128,126],[],[125,126],[127,126],[131,130,126],[126],[132],[],[],[135,137,136],[105,138],[],[139],[],[],[],[144],[128,106],[142],[142,146,145],[142],[128,106],[150],[115,143],[148],[148,151,152],[148],[153,115,143],[],[149,155],[],[157,116,117],[],[159,189],[160,201],[161,212],[162,218],[163,224],[164,228],[232],[166],[],[78,185],[79,186],[187,80],[81,188],[],[164,159,162,160,161,163,158],[78],[79],[174,79],[79,175],[79,176],[80],[178,80],[179,80],[180,80],[181,80],[81],[183,81],[],[],[],[],[192],[174,175],[190],[194,190,193],[190],[174,196,195],[],[197,43,198],[200,199,175],[139],[],[48],[204],[177,176],[202],[206,202,205],[202],[208,207,209,176],[],[132],[177,210,211],[],[48],[214,213,178],[],[215,216,43],[43,217,203],[50],[50],[220,179,219],[],[222,43,221],[191,223,43],[50],[50],[180,225,226],[],[173,183,227],[],[229,181,230],[],[184,231],[],[182,234,233],[],[50]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","STATIC","Simple Name next ","Simple Name staticGen ","Parameter Class clazz ","Parameter String cacheKey ","Parameter CodegenResult source ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr source ","Simple Name source ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type CodegenResult ","Method Call Expr ","Simple Name createDir ","Simple Name cacheKey ","Method Declaration ","Variable Declaration Expr ","Simple Name fileName ","Name Expr fileName ","Variable Declarator String fileName = ","Class Or Interface Type String ","Binary Expr PLUS ","Method Call Expr ","PLUS","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '.' ","Char Literal Expr '/' ","'.'","'/'","StringLiteralExpr","Variable Declaration Expr ","Simple Name fileOutputStream ","Name Expr isDoingStaticCodegen ","Name Expr fileOutputStream ","Name Expr fileOutputStream ","Variable Declarator FileOutputStream fileOutputStream = ","Class Or Interface Type FileOutputStream ","Object Creation Expr FileOutputStream Optional.empty Optional.empty ","Class Or Interface Type FileOutputStream ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name writer ","Name Expr writer ","Name Expr writer ","Variable Declarator OutputStreamWriter writer = ","Class Or Interface Type OutputStreamWriter ","Object Creation Expr OutputStreamWriter Optional.empty Optional.empty ","Field Access Expr ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name staticGen ","Simple Name clazz ","Simple Name cacheKey ","Simple Name writer ","Simple Name source ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Call Expr ","Simple Name close ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name createDir ","Parameter String cacheKey ","Block Stmt ","Name Expr cacheKey ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name parts ","Name Expr parts ","Name Expr parts ","Variable Declarator String[] parts = ","Array Type 1 ","Method Call Expr ","Simple Name split ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name parent ","Name Expr isDoingStaticCodegen ","Name Expr parent ","Name Expr copied ","Name Expr current ","Variable Declarator File parent = ","Class Or Interface Type File ","Object Creation Expr File Optional.empty Optional.empty ","Primitive Type byte ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name part ","Name Expr part ","Variable Declarator String part = ","Name Expr stream ","Array Access Expr i ","Variable Declaration Expr ","Simple Name current ","Class Or Interface Type Builder ","Variable Declarator File current = ","Name Expr iter ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Method Call Expr ","Simple Name mkdir ","Assign Expr ASSIGN ","ASSIGN","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter Class clazz ","Parameter String cacheKey ","Parameter OutputStreamWriter writer ","Parameter CodegenResult source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr clazz ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr source ","Name Expr source ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type OutputStreamWriter ","Class Or Interface Type CodegenResult ","Variable Declaration Expr ","Simple Name className ","Name Expr className ","Variable Declarator String className = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Binary Expr PLUS ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Variable Declaration Expr ","Simple Name packageName ","Name Expr packageName ","Variable Declarator String packageName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name charsLength ","Char Literal Expr '.' ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name generateWrapperCode ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name toString ","Return Stmt ","Simple Name write ","String Literal Expr Not Empty  "]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"staticGen-Codegen-Class-String-OutputStreamWriter-CodegenResult","callMethodNameReferTo":{},"num":91,"succs":[[1,40],[2,55],[3,67],[4,74],[5,80],[6,84],[88],[13,15,11,19,12,17,10,8,16,14,9],[9],[],[11],[],[21,36],[23,37],[38,28],[34,39],[18],[],[],[6,1,2,4,3,5,0],[21],[],[23],[],[22,23],[23,24],[23,25],[28],[],[27,28],[29,28],[30,28],[31,28],[34],[],[33,34],[],[],[],[],[43],[22,24],[41],[45,41,44],[41],[22,47,46],[],[48,49,50],[52,24,51],[],[54],[],[53],[],[],[58],[26,25],[56],[60,56,59],[56],[62,61,63,25],[],[64],[26,65,66],[],[],[53],[69,68,27],[],[70,71,49],[49,72,57],[73],[73],[],[76,29,75],[],[78,49,77],[42,79,49],[73],[73],[30,81,82],[],[20,33,83],[],[85,31,86],[],[35,87],[],[32,90,89],[],[73]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","STATIC","Void Type ","Simple Name staticGen ","Parameter Class clazz ","Parameter String cacheKey ","Parameter OutputStreamWriter writer ","Parameter CodegenResult source ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr clazz ","Simple Name clazz ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr writer ","Simple Name writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr source ","Simple Name source ","Name Expr source ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type OutputStreamWriter ","Class Or Interface Type CodegenResult ","Variable Declaration Expr ","Simple Name className ","Name Expr className ","Variable Declarator String className = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Binary Expr PLUS ","Method Call Expr ","PLUS","Integer Literal Expr Note Zero  ","Simple Name lastIndexOf ","Char Literal Expr '.' ","'.'","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name packageName ","Name Expr packageName ","Variable Declarator String packageName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Method Call Expr ","Zero IntegerLiteralExpr","Simple Name charsLength ","Char Literal Expr '.' ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name generateWrapperCode ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name toString ","Return Stmt ","Simple Name write ","String Literal Expr Not Empty  "]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"createDir-Codegen-String","callMethodNameReferTo":{},"num":76,"succs":[[20,1],[30,2],[4,3,42,9],[4,47],[5,43,52,51],[6,59],[7,65],[8,72],[74,9],[4,58,45],[13,15,14,11,16,12],[12],[],[14],[],[18,19],[2,1,0],[18],[],[],[24],[17],[21,23],[22,21],[26,21,25],[21],[28,17,27],[],[29],[],[36],[32],[],[31,34],[31,33,35],[67,66],[31,37,38],[31],[39,40],[],[41,32],[],[5,6,8,7],[46,44],[],[43,44],[45,44],[49,48,44],[44],[50],[],[],[53,55,54],[22,56],[],[57],[],[],[],[62],[46,23],[60],[60,64,63],[60],[46,23],[68],[33,61],[66],[66,69,70],[66],[71,33,61],[],[67,73],[],[75,34,35],[]],"attribute":["Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name createDir ","Parameter String cacheKey ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name parts ","Name Expr parts ","Name Expr parts ","Variable Declarator String[] parts = ","Array Type 1 ","Method Call Expr ","Simple Name split ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name parent ","Name Expr isDoingStaticCodegen ","Name Expr parent ","Name Expr copied ","Name Expr current ","Variable Declarator File parent = ","Class Or Interface Type File ","Object Creation Expr File Optional.empty Optional.empty ","Primitive Type byte ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","POSTFIX_INCREMENT","Variable Declaration Expr ","Simple Name part ","Name Expr part ","Variable Declarator String part = ","Name Expr stream ","Array Access Expr i ","Variable Declaration Expr ","Simple Name current ","Class Or Interface Type Builder ","Variable Declarator File current = ","Name Expr iter ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Method Call Expr ","Simple Name mkdir ","Assign Expr ASSIGN ","ASSIGN"]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"genSource-Codegen-String-ClassInfo","callMethodNameReferTo":{"48":"srcmainjavacomjsoniteroutputCodegenImplArray.java-genArray-CodegenImplArray-String-ClassInfo","67":"srcmainjavacomjsoniteroutputCodegenImplNative.java-genEnum-CodegenImplNative-Class","70":"srcmainjavacomjsoniteroutputCodegenImplObject.java-genObject-CodegenImplObject-ClassInfo","55":"srcmainjavacomjsoniteroutputCodegenImplMap.java-genMap-CodegenImplMap-String-ClassInfo","62":"srcmainjavacomjsoniteroutputCodegenImplArray.java-genCollection-CodegenImplArray-String-ClassInfo"},"num":73,"succs":[[1,34],[2,45],[4,36,3,46],[14,4,47,48],[5,51],[53,6,7,37,52],[55,14,7,47],[58,8],[60,9,10,38,59],[62,10,14,47],[65,11],[13,39,66,12],[13,67,14,47],[70,14,47],[19,17,15,21,18,16,20],[16],[],[18],[],[32,23],[33,27],[13,0,10,1,7,4],[23],[],[22,23],[23,24],[27],[],[26,27],[28,27],[27,29],[27,30],[],[],[41],[26],[35],[36,35],[37,35],[38,35],[39,11,35],[42,43,35],[35],[26,44],[],[3],[],[],[22,28,49,50],[],[],[6],[54],[],[],[56,24,57,29],[],[],[9],[61],[],[],[63,64,25,30],[],[],[12],[],[69,68,40],[],[],[31,71,72],[],[]],"attribute":["Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type CodegenResult ","Simple Name genSource ","Parameter String cacheKey ","Parameter ClassInfo classInfo ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr classInfo ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Class Or Interface Type String ","Class Or Interface Type ClassInfo ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr part2 ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Field Access Expr ","Simple Name clazz ","Block Stmt ","Simple Name isArray ","ReturnStmt","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genArray ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Class Or Interface Type Map ","Method Call Expr ","Name Expr CodegenImplMap ","Simple Name genMap ","Block Stmt ","Expression Stmt ","Simple Name isAssignableFrom ","Class Or Interface Type Collection ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genCollection ","Block Stmt ","Simple Name isEnum ","Method Call Expr ","Name Expr CodegenImplNative ","Simple Name genEnum ","Method Call Expr ","Name Expr CodegenImplObject ","Simple Name genObject "]}
{"fileName":"srcmainjavacomjsoniteroutputCodegen.java","version":"0.9.22","methodName":"staticGenEncoders-Codegen-TypeLiteral[]-CodegenAccess.StaticCodegenTarget","callMethodNameReferTo":{"32":"srcmainjavacomjsoniterspiTypeLiteral.java-getType-TypeLiteral-","31":"srcmainjavacomjsoniterspiTypeLiteral.java-getEncoderCacheKey-TypeLiteral-"},"num":865,"succs":[[1,21],[3,2,24],[3,13],[26,4],[29,2],[12,10,11,9,6,7,8],[7],[98],[9],[],[13,16],[18,15],[1,0],[],[15],[],[17],[],[20,19],[],[],[23,22,14],[],[],[4],[26],[28],[25,26],[26],[35,31,32,30],[],[25,36,33],[27,34,37],[],[],[100,99,102,97,98,101,103,7],[],[],[39,125],[156,40],[157,41,158,42,128],[35,129,42,160],[161,43],[168,44,45],[51,45,162],[169,46],[171,47],[48,174],[157,49,132,175,44],[50,176],[35,134,44,160],[179,52],[184,53],[157,185,54,56,137],[55,186],[35,56,139,160],[57,189],[194,58,193],[59,195],[60,207],[157,208,66,198,61],[211,62],[63,216],[64,221],[65,223,222,66,120],[225,66],[231,67],[243,68],[69,70,245,244,246],[70,259],[267,71],[268,72,223,199,74],[73,271],[35,143,160,74],[274,75],[83,223,276,275,76],[83,278,277,77,79],[279,78],[83,35,145,160],[288,80,289],[81,290],[83,223,82,291,200],[83,294],[298,84],[311,85,92,310,96],[86,312],[315,87,89],[223,316,317,88,89],[318,91],[90],[323,91],[35,150,96,160],[333,93,332],[94,334],[95,355],[359,96],[362],[7],[],[100],[],[33,123],[34,124],[38,39,52,56,57,51,42,43],[33],[33,104],[105,33],[106,33],[33,107,191],[33,108],[33,109,307],[110,33],[111,33],[327,111,112,33],[113,33],[34],[34,115],[34,116],[119,34],[219,34,117],[118],[120,118],[121,118],[],[],[152],[127,104],[],[126],[126,40,128],[105,126,131,115,129],[169],[130],[132,48,130],[48,133,130],[134,136,116,130],[],[135],[137,135,53],[138,135,53],[142,139,141,135],[],[235,232],[140],[140,109,143],[146,144],[148,147,112,149,145,144],[],[236,232],[300,299],[145,144],[150,144],[126,153,154],[126],[155,127,104],[],[41],[],[159],[],[],[164],[163],[],[165,166,162],[162],[163,167],[],[46,47],[170],[169],[23,172,130],[105,131,115,173],[],[50,49],[159],[177,178,106,133],[],[],[23,180,135],[181,182,116],[136,183],[],[],[54,55],[159],[138,188,107,187],[],[],[190,192,108],[],[],[366,97,368,7,365,367],[59,83,58,84,70,66,74,67],[96],[201],[197],[],[196],[196,198],[196,199],[196,202,203],[196],[204,205],[197,206],[],[],[63,62,61],[209,210],[],[],[214],[117],[212],[215,212,117],[212],[23,217,118],[119,218,220],[],[],[487,485,484,97,486,7],[65],[224],[],[],[227,226],[],[228,229,213],[230],[],[],[239],[121],[232],[233,232],[68,234,232],[142,308,232],[148,236,232],[237,232],[240,241,232],[232],[242,121],[],[69],[249,248,247],[],[254,252,253],[250],[],[251,233],[],[],[255,256],[],[258],[257,234],[],[],[],[262,260,261],[],[],[264,263],[235,265],[266],[],[],[72,73],[270,269],[],[],[140,23,272],[273,142,141],[],[76],[],[159],[78,77],[287,79],[23,280,144],[281,282],[],[283,284],[286,109,285],[],[],[],[80],[],[],[82],[292,293],[],[],[295,296,297],[],[230],[],[303],[110,236],[299],[149,300,328,299],[301,299],[305,304,299],[299],[110,309,236,306],[],[],[],[573,571,97,575,572,7,574],[86,85,91],[331,92],[314,111,313,300],[],[],[88],[],[159],[23,146,319],[147,112,149,320,321],[],[322,148],[],[329,113,301,324,325],[],[330,237,326],[],[],[],[635,637,639,638,636,97,634,385,633,7],[],[94,95,93],[],[],[341],[122,336,238,337],[],[],[339,335,302],[335],[338],[342,335,343],[335],[229,344,337],[345,346,229],[348,229,347],[230],[349,229,350],[353,336,352],[122,351,229],[230],[230],[],[238,354],[],[23,338,356],[229,357,302],[358,339,229],[230],[360,361,340],[],[],[363,364,114,151],[],[],[366],[],[372,191],[373],[191],[369,191],[370,191],[],[374],[375,377,369,376],[],[],[378],[],[381,384,386,382,380,383,388,6,385],[],[382],[],[390,393],[392,394],[387],[],[],[396,395,397],[390],[],[392],[],[],[],[396,398],[412,411],[464],[407],[370,400],[],[399],[403,404,401,399,371,411],[],[402,411],[404,402,411],[405,402],[399,408,409],[399],[410,370,400],[],[413,223,415,401,397],[416,415],[414],[],[419,417,418,420],[458,457],[424,418],[421,430,416,428,427],[423,429,418],[430,431],[423,422],[],[421,422],[425,426,422],[422],[266],[],[258],[],[432,431],[435,436,437],[23,402,433],[403,371,434],[],[439,438,223,404,437],[439],[455],[414],[419,447,440,442,441],[442],[447,448],[419,443],[444,445,446],[],[],[258],[451,450,449],[451],[],[],[419,452],[454,453],[],[],[416,456],[],[405,223,460,397,459],[460],[414],[461,397],[462,463],[],[230],[391,389,406,379,465],[],[493,467],[505,468],[516,469,473],[488,518,517,470,473],[471,520],[472,526],[475,531],[474],[475,534],[537,476],[540,477,539,478,538],[478,160,491,220],[479,542],[480,549,482],[481,223,550,482,551],[513,160,220],[483],[160,220,553],[485],[],[219,492],[479,475,467,478,468,466],[219],[219,488,469],[219,488,489,469],[219,490],[],[499],[496,495],[521,507],[494],[496],[496,480,497],[496,500,501],[496],[502,503],[],[],[266],[508],[507,508],[521],[515],[506,490,508],[509],[512,509],[510,509],[511],[513,511],[508],[471,472,470],[519],[],[],[522],[489],[521,524,523],[521],[525,489],[],[23,506,527],[528,529],[],[507,530],[],[23,532,494],[533,495],[],[23,509,535],[536,490],[],[477],[],[],[510,541],[],[23,511,543],[545,544,547],[],[546,512,548],[],[97,705,706,707,7,708],[],[481],[552,497],[266],[],[498,556,514,555,554],[],[],[159],[558,586],[559,597],[561,588,560,598],[309,561,160,599],[562,602],[604,563,564,589,603],[606,309,564,160],[609,565],[611,566,567,590,610],[613,567,309,160],[616,568],[570,591,617,569],[570,309,618,160],[621,309,160],[572],[],[584,307],[585,308],[570,557,567,564,558,561],[307],[576,307],[307,577],[308],[579,308],[580,308],[308,581],[308,582],[],[],[593],[579],[587],[588,587],[589,587],[590,587],[591,568,587],[594,595,587],[587],[579,596],[],[560],[],[576,580,600,601],[],[],[563],[605],[],[],[607,577,608,581],[],[],[566],[612],[],[],[614,615,578,582],[],[],[569],[],[620,619,592],[],[],[583,622,623],[],[],[625,648],[652,626],[627,665],[628,679,678],[680,629],[688,689,630],[690,632,631],[632,697],[699],[634],[],[645,326],[327,646],[647,328],[],[624,625,627,626],[692,326],[327,650],[327,641],[327,693,642],[695,328],[],[],[],[641,649,651],[],[],[733,732,734,97,735,7],[655],[642],[653],[653,657,656],[653],[658,229,659],[661,660,662,642],[230],[],[663],[664],[],[],[670],[654,667],[],[666],[668,666],[671,672,666],[666],[674,673],[],[676,654,675],[],[667,677],[],[628,629],[632],[684],[668],[694,681],[682,681],[685,686,681],[681],[668,687],[],[630],[631],[691,696,644,640,643,682],[],[],[],[],[],[798,800,796,801,797,802,795,97,385,799,7],[683,698],[],[669,700],[],[702,713],[715,716,704,703,714],[710,704,547,160],[547,718,160],[706],[],[546,712],[701,704],[546],[546,709,702],[546,710],[],[703],[],[],[709,717],[],[720,547,719],[],[546,711,721],[],[738,723],[747,724],[726,725,759,731],[726,764],[727,760,767,427],[728,772],[729,778],[730,785],[787,731],[429,726,762],[733],[],[650,737],[724,723,722],[650],[],[742],[736],[739,741],[740,739],[744,739,743],[739],[746,736,745],[],[230],[753],[749],[],[748,751],[748,750,752],[780,779],[748,754,755],[748],[756,757],[],[758,749],[],[727,728,730,729],[763,761],[],[760,761],[762,761],[766,765,761],[761],[266],[768,770,769],[740,771],[],[258],[],[775],[763,741],[773],[773,777,776],[773],[763,741],[781],[750,774],[779],[782,779,783],[779],[784,750,774],[],[780,786],[],[23,751,752],[789,819],[790,831],[791,842],[792,848],[793,854],[794,858],[862],[796],[],[692,815],[693,816],[817,694],[695,818],[],[789,794,790,792,791,793,788],[692],[693],[804,693],[693,805],[693,806],[694],[808,694],[809,694],[810,694],[811,694],[695],[813,695],[],[],[],[],[822],[804,805],[820],[824,820,823],[820],[804,826,825],[],[827,229,828],[830,805,829],[258],[],[663],[834],[807,806],[832],[836,832,835],[832],[838,837,839,806],[],[266],[807,840,841],[],[663],[844,843,808],[],[845,846,229],[847,229,833],[230],[230],[850,809,849],[],[852,229,851],[821,853,229],[230],[230],[810,855,856],[],[803,813,857],[],[859,811,860],[],[814,861],[],[812,864,863],[],[230]],"attribute":["Expression Stmt ","For Each Stmt ","Name Expr typeLiterals ","Variable Declaration Expr ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name staticGenEncoders ","Parameter TypeLiteral[] typeLiterals ","Parameter CodegenAccess.StaticCodegenTarget staticCodegenTarget ","Block Stmt ","Simple Name typeLiterals ","Name Expr staticCodegenTarget ","Simple Name staticCodegenTarget ","Array Type 1 ","Class Or Interface Type TypeLiteral ","Class Or Interface Type StaticCodegenTarget ","Class Or Interface Type CodegenAccess ","Simple Name StaticCodegenTarget ","Assign Expr ASSIGN ","Name Expr isDoingStaticCodegen ","ASSIGN","Block Stmt ","Name Expr typeLiteral ","Simple Name typeLiteral ","Name Expr typeLiteral ","Class Or Interface Type TypeLiteral ","Method Call Expr ","Simple Name gen ","Method Call Expr ","Method Call Expr ","Simple Name cacheKey ","Simple Name type ","Method Declaration ","Simple Name getEncoderCacheKey ","Simple Name getType ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr extensions ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Variable Declarator boolean escaped = ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Method Call Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","For Each Stmt ","Binary Expr AND ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","Expression Stmt ","Expression Stmt ","Throw Stmt ","Expression Stmt ","PRIVATE","SYNCHRONIZED","Class Or Interface Type Encoder ","Simple Name gen ","Parameter final String cacheKey ","Parameter Type type ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr iter ","Name Expr iter ","Name Expr type ","Name Expr type ","Name Expr type ","Class Or Interface Type String ","Class Or Interface Type Type ","Expression Stmt ","Simple Name encoder ","Name Expr JsoniterSpi ","Name Expr _score_ ","Name Expr encoder ","Name Expr encoder ","Name Expr extension ","Simple Name writeTo ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr CodegenImplNative ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr ReflectionEncoderFactory ","Name Expr classInfo ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Name Expr DynamicCodegen ","Name Expr classInfo ","Name Expr source ","Name Expr encoder ","Name Expr pattern ","Variable Declarator Encoder encoder = ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name getEncoder ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Variable Declaration Expr ","Simple Name extensions ","Name Expr JsoniterSpi ","Variable Declarator List<Extension> extensions = ","Class Or Interface Type List ","Method Call Expr ","Simple Name getExtensions ","Block Stmt ","Simple Name nextToken ","Class Or Interface Type Extension ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name createEncoder ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name get ","Simple Name NATIVE_ENCODERS ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Method Call Expr ","Simple Name addPlaceholderEncoderToSupportRecursiveStructure ","Simple Name cacheKey ","Method Declaration ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name mode ","Name Expr JsoniterSpi ","Name Expr mode ","Name Expr mode ","Name Expr iter ","Variable Declarator EncodingMode mode = ","Return Stmt ","Method Call Expr ","Method Call Expr ","Simple Name encodingMode ","Simple Name getCurrentConfig ","Block Stmt ","Field Access Expr ","Method Call Expr ","Simple Name REFLECTION_MODE ","Variable Declaration Expr ","Simple Name originalType ","Name Expr originalType ","Variable Declarator Type originalType = ","Class Or Interface Type Type ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name chooseAccessibleSuper ","Simple Name type ","Method Declaration ","Block Stmt ","Class Expr Object.class ","EQUALS","Name Expr mapped ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr","Variable Declaration Expr ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Variable Declarator ClassInfo classInfo = ","Marker Annotation Expr @Override ","Object Creation Expr ClassInfo Optional.empty Optional.empty ","Class Or Interface Type ClassInfo ","Block Stmt ","Method Call Expr ","AND","Binary Expr GREATER ","Class Expr Map.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Map ","Simple Name clazz ","Field Access Expr ","GREATER","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name length ","Simple Name typeArgs ","IntegerLiteralExpr","Method Call Expr ","Name Expr MapKeyEncoders ","Simple Name registerOrGetExisting ","Array Access Expr 0 ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name typeArgs ","Zero IntegerLiteralExpr","Block Stmt ","Field Access Expr ","Name Expr EncodingMode ","Simple Name REFLECTION_MODE ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name create ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Encoder ","Method Call Expr ","Method Call Expr ","Simple Name newInstance ","Name Expr Class ","Simple Name forName ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Block Stmt ","Field Access Expr ","Name Expr EncodingMode ","Simple Name STATIC_MODE ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Name Expr e ","Variable Declaration Expr ","Simple Name source ","Name Expr source ","Name Expr source ","Name Expr source ","Variable Declarator CodegenResult source = ","Class Or Interface Type CodegenResult ","Method Call Expr ","Simple Name genSource ","Simple Name cacheKey ","Simple Name classInfo ","Method Declaration ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr generatedSources ","Simple Name put ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name gen ","Field Access Expr ","Simple Name clazz ","Method Call Expr ","Simple Name staticGen ","Field Access Expr ","Simple Name clazz ","Simple Name cacheKey ","Simple Name source ","Method Declaration Throws ","Simple Name entry ","Block Stmt ","Field Access Expr ","Simple Name e ","Variable Declaration Expr ","Simple Name msg ","Name Expr Arrays ","Name Expr e ","Class Or Interface Type Any ","String Literal Expr Not Empty  ","Name Expr msg ","Variable Declarator String msg = ","Class Or Interface Type String ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Simple Name toString ","Field Access Expr ","Simple Name typeArgs ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","Name Expr iter ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Void Type ","Simple Name addPlaceholderEncoderToSupportRecursiveStructure ","Parameter final String cacheKey ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Class Or Interface Type String ","Expression Stmt ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewEncoder ","Object Creation Expr Encoder Optional.empty Optional.empty ","Class Or Interface Type Encoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Name Expr keys ","Simple Name encode ","Parameter Object obj ","Parameter JsonStream stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr stream ","Simple Name stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Expression Stmt ","If Stmt ","Expression Stmt ","Variable Declaration Expr ","Simple Name encoder ","Name Expr JsoniterSpi ","Name Expr encoder ","Name Expr encoder ","Name Expr JsoniterSpi ","Name Expr encoder ","Name Expr encoder ","Name Expr encoder ","Variable Declarator Encoder encoder = ","Class Or Interface Type Encoder ","Method Call Expr ","Simple Name getEncoder ","Binary Expr EQUALS ","Block Stmt ","This Expr ","ThisExpr","For Stmt ","If Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Unary Expr ++ ","Block Stmt ","Name Expr i ","Simple Name i ","Simple Name e ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Integer Literal Expr Note Zero  ","POSTFIX_INCREMENT","Expression Stmt ","If Stmt ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getEncoder ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","This Expr ","Try Stmt ","Block Stmt ","Catch Clause ","Expression Stmt ","Method Call Expr ","Name Expr Thread ","Simple Name sleep ","Integer Literal Expr Note Zero  ","Parameter InterruptedException e ","Block Stmt ","Class Or Interface Type InterruptedException ","Simple Name e ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Break Stmt ","break;","Binary Expr EQUALS ","Block Stmt ","This Expr ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name encode ","Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Name Expr lastParsedPos ","Block Stmt ","Return Stmt ","Name Expr sLen ","Simple Name chooseAccessibleSuper ","Parameter Type type ","Block Stmt ","Void Type ","Name Expr type ","Name Expr size ","Name Expr type ","Class Or Interface Type Type ","Variable Declaration Expr ","Binary Expr NOT_EQUALS ","Name Expr clazz ","String Literal Expr Not Empty  ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Simple Name append ","Array Creation Expr Type Array Creation Level Not Empty ","Class Or Interface Type Type ","Name Expr key ","Integer Literal Expr Zero  ","Variable Declaration Expr ","Name Expr cache ","Name Expr pType ","Simple Name clazz ","Name Expr cache ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr lines ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Assign Expr ASSIGN ","Cast Expr ","Name Expr cache ","Method Call Expr ","Simple Name getRawType ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getActualTypeArguments ","Binary Expr EQUALS ","Cast Expr ","Class Or Interface Type Class ","Block Stmt ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name walkSuperUntilPublic ","Method Call Expr ","Simple Name clazz ","Method Declaration ","Simple Name getSuperclass ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Null Literal Expr ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Class Or Interface Type CodegenResult ","Simple Name genSource ","Parameter String cacheKey ","Parameter ClassInfo classInfo ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Class Or Interface Type String ","Class Or Interface Type ClassInfo ","Variable Declaration Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr part2 ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Class Or Interface Type Class ","Field Access Expr ","Simple Name clazz ","Block Stmt ","Simple Name isArray ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genArray ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Class Or Interface Type Map ","Method Call Expr ","Name Expr CodegenImplMap ","Simple Name genMap ","Block Stmt ","Expression Stmt ","Simple Name isAssignableFrom ","Class Or Interface Type Collection ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genCollection ","Block Stmt ","Simple Name isEnum ","Method Call Expr ","Name Expr CodegenImplNative ","Simple Name genEnum ","Method Call Expr ","Name Expr CodegenImplObject ","Simple Name genObject ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Simple Name next ","Simple Name staticGen ","Parameter Class clazz ","Parameter String cacheKey ","Parameter CodegenResult source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr clazz ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr source ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type CodegenResult ","Method Call Expr ","Simple Name createDir ","Simple Name cacheKey ","Method Declaration ","Variable Declaration Expr ","Simple Name fileName ","Name Expr fileName ","Variable Declarator String fileName = ","Class Or Interface Type String ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '.' ","Char Literal Expr '/' ","'.'","'/'","Variable Declaration Expr ","Simple Name fileOutputStream ","Name Expr isDoingStaticCodegen ","Name Expr fileOutputStream ","Name Expr fileOutputStream ","Variable Declarator FileOutputStream fileOutputStream = ","Class Or Interface Type FileOutputStream ","Object Creation Expr FileOutputStream Optional.empty Optional.empty ","Class Or Interface Type FileOutputStream ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name writer ","Name Expr writer ","Name Expr writer ","Variable Declarator OutputStreamWriter writer = ","Class Or Interface Type OutputStreamWriter ","Object Creation Expr OutputStreamWriter Optional.empty Optional.empty ","Field Access Expr ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name staticGen ","Simple Name clazz ","Simple Name cacheKey ","Simple Name writer ","Simple Name source ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Call Expr ","Simple Name close ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Name Expr index ","Simple Name walkSuperUntilPublic ","Parameter Class clazz ","Block Stmt ","Name Expr clazz ","Name Expr cache ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","Name Expr Modifier ","Simple Name isPublic ","Method Call Expr ","Simple Name getModifiers ","Method Call Expr ","Simple Name walkSuperUntilPublic ","Method Call Expr ","Simple Name getSuperclass ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name createDir ","Parameter String cacheKey ","Block Stmt ","Name Expr cacheKey ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name parts ","Name Expr parts ","Name Expr parts ","Variable Declarator String[] parts = ","Array Type 1 ","Method Call Expr ","Simple Name split ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name parent ","Name Expr isDoingStaticCodegen ","Name Expr parent ","Name Expr copied ","Name Expr current ","Variable Declarator File parent = ","Class Or Interface Type File ","Object Creation Expr File Optional.empty Optional.empty ","Primitive Type byte ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","Variable Declaration Expr ","Simple Name part ","Name Expr part ","Variable Declarator String part = ","Name Expr stream ","Array Access Expr i ","Variable Declaration Expr ","Simple Name current ","Class Or Interface Type Builder ","Variable Declarator File current = ","Name Expr iter ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Method Call Expr ","Simple Name mkdir ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter Class clazz ","Parameter String cacheKey ","Parameter OutputStreamWriter writer ","Parameter CodegenResult source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr clazz ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr source ","Name Expr source ","Class Or Interface Type Class ","Class Or Interface Type String ","Class Or Interface Type OutputStreamWriter ","Class Or Interface Type CodegenResult ","Variable Declaration Expr ","Simple Name className ","Name Expr className ","Variable Declarator String className = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Binary Expr PLUS ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Variable Declaration Expr ","Simple Name packageName ","Name Expr packageName ","Variable Declarator String packageName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name charsLength ","Char Literal Expr '.' ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name generateWrapperCode ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name toString ","Return Stmt ","Simple Name write ","String Literal Expr Not Empty  "]}
