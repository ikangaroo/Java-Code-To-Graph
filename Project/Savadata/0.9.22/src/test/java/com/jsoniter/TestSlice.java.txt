{"fileName":"srctestjavacomjsoniterTestSlice.java","version":"0.9.22","hasMethodName":["test_equals-TestSlice-","test_hashcode-TestSlice-"]}
{"fileName":"srctestjavacomjsoniterTestSlice.java","version":"0.9.22","methodName":"test_equals-TestSlice-","callMethodNameReferTo":{"22":"srcmainjavacomjsoniterspiSlice.java-equals-Slice-Object","23":"srcmainjavacomjsoniterspiSlice.java-make-Slice-String","9":"srcmainjavacomjsoniterspiSlice.java-equals-Slice-Object","10":"srcmainjavacomjsoniterspiSlice.java-make-Slice-String","12":"srcmainjavacomjsoniterspiSlice.java-make-Slice-String"},"num":36,"succs":[[1,7],[20],[5,6,3,4],[],[5],[],[1,0],[9,8],[],[11,10,12],[13,15,14],[],[18,19,17],[],[],[16],[],[],[],[16],[22,21],[],[24,25,23],[28,26,27],[],[30,32,29,31],[],[],[16],[],[34,33],[35],[35],[16],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name noIndention ","Block Stmt ","Method Call Expr ","Simple Name assertTrue ","Method Call Expr ","Method Call Expr ","Simple Name equals ","Method Call Expr ","Name Expr Slice ","Simple Name make ","String Literal Expr Not Empty  ","StringLiteralExpr","Name Expr Slice ","Simple Name make ","String Literal Expr Not Empty  ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Method Call Expr ","Simple Name equals ","Object Creation Expr Slice Optional.empty Optional.empty ","Name Expr Slice ","Simple Name make ","String Literal Expr Not Empty  ","Class Or Interface Type Slice ","Method Call Expr ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","String Literal Expr Not Empty  ","Simple Name getBytes ","IntegerLiteralExpr"]}
{"fileName":"srctestjavacomjsoniterTestSlice.java","version":"0.9.22","methodName":"test_hashcode-TestSlice-","callMethodNameReferTo":{"49":"srcmainjavacomjsoniterspiSlice.java-make-Slice-String","22":"srcmainjavacomjsoniterspiSlice.java-make-Slice-String","40":"srcmainjavacomjsoniterspiSlice.java-make-Slice-String","30":"srcmainjavacomjsoniterspiSlice.java-make-Slice-String"},"num":53,"succs":[[1,10],[2,20],[3,28],[35,4],[44],[8,9,7,6],[],[8],[],[3,0,1,2,4],[16],[12],[],[11,12],[13,12],[14,12],[12,18,17],[12],[19],[],[23,11,22,21],[],[25,24,26],[27],[],[],[27],[],[31,13,30,29],[],[32,34,33],[27],[],[],[27],[38,36,37],[],[27],[14,39,40],[],[41,43,42],[],[],[27],[47,46,45],[],[27],[15,49,48],[],[51,50,52],[],[],[27]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_hashcode ","Block Stmt ","Variable Declaration Expr ","Primitive Type int ","Simple Name map ","Primitive Type int ","Name Expr map ","Simple Name obj ","Variable Declarator HashMap map = ","Class Or Interface Type CtClass ","Object Creation Expr HashMap Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Method Call Expr ","Name Expr com ","Method Call Expr ","String Literal Expr Not Empty  ","Name Expr Slice ","Simple Name lang ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name val ","Method Call Expr ","String Literal Expr Not Empty  ","Name Expr Slice ","Simple Name make ","String Literal Expr Not Empty  ","Method Call Expr ","Expression Stmt ","String Literal Expr Not Empty  ","Method Call Expr ","Unary Expr ++ ","Method Call Expr ","Name Expr Slice ","Simple Name make ","String Literal Expr Not Empty  ","Assign Expr ASSIGN ","Return Stmt ","Simple Name setMode ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Simple Name obj ","Method Call Expr ","Name Expr Slice ","Simple Name make ","String Literal Expr Not Empty  "]}
