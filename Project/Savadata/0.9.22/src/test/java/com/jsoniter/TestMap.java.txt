{"fileName":"srctestjavacomjsoniterTestMap.java","version":"0.9.22","hasMethodName":["test_object_key-TestMap-","test_string_key-TestMap-","test_integer_key-TestMap-","test_MapKeyCodec-TestMap-"]}
{"fileName":"srctestjavacomjsoniterTestMap.java","version":"0.9.22","methodName":"test_object_key-TestMap-","callMethodNameReferTo":{},"num":33,"succs":[[1,10],[22],[4,5,3,6,7,9],[],[5],[],[8],[],[],[1,0],[13],[12],[],[12,14,15],[12],[17,16,19,18],[],[],[20],[21],[],[],[11,23,24],[],[25],[],[],[28],[29,30,31],[],[20],[32],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Assign Expr ASSIGN ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name len ","Simple Name map ","Variable Declarator Map<Object, Object> map = ","Class Or Interface Type Map ","Method Call Expr ","Name Expr JsonIterator ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<Object, Object>> Optional.empty Optional.empty ","StringLiteralExpr","Class Or Interface Type TypeLiteral ","Method Call Expr ","Class Or Interface Type JsonIterator ","Object Creation Expr HashMap<Object, Object> Optional.empty Optional.empty ","Class Or Interface Type HashMap ","Initializer Declaration ","Expression Stmt ","Return Stmt ","Simple Name put ","Name Expr iter ","Name Expr iter ","NullLiteralExpr"]}
{"fileName":"srctestjavacomjsoniterTestMap.java","version":"0.9.22","methodName":"test_string_key-TestMap-","callMethodNameReferTo":{},"num":33,"succs":[[1,10],[22],[4,3,6,9,5,7],[],[5],[],[8],[],[],[1,0],[13],[12],[],[15,14,12],[12],[18,19,17,16],[],[],[20],[21],[],[],[24,23,11],[],[25],[],[],[28],[29,31,30],[],[20],[32],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Void Type ","Simple Name test_string_key ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name any ","Simple Name map ","Variable Declarator Map<String, Object> map = ","Field Access Expr ","Method Call Expr ","Class Or Interface Type WildcardType ","Simple Name deserialize ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<String, Object>> Optional.empty Optional.empty ","StringLiteralExpr","Class Or Interface Type TypeLiteral ","Method Call Expr ","Return Stmt ","Object Creation Expr HashMap<String, Object> Optional.empty Optional.empty ","Method Call Expr ","Initializer Declaration ","Expression Stmt ","Unary Expr ! ","Simple Name any ","String Literal Expr Not Empty  ","Simple Name code ","NullLiteralExpr"]}
{"fileName":"srctestjavacomjsoniterTestMap.java","version":"0.9.22","methodName":"test_integer_key-TestMap-","callMethodNameReferTo":{},"num":34,"succs":[[1,10],[22],[5,7,3,4,6,9],[],[5],[],[8],[],[],[0,1],[13],[12],[],[12,14,15],[12],[19,16,17,18],[],[],[20],[21],[],[],[11,23,24],[],[25],[],[],[28],[31,30,29],[],[32],[33],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PUBLIC","Name Expr list ","Simple Name test_one_element ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Variable Declaration Expr ","Simple Name len ","Simple Name any ","Variable Declarator Map<Integer, Object> map = ","Method Call Expr ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<Integer, Object>> Optional.empty Optional.empty ","StringLiteralExpr","Class Or Interface Type TypeLiteral ","Method Call Expr ","Simple Name assertEquals ","Object Creation Expr HashMap<Integer, Object> Optional.empty Optional.empty ","Method Call Expr ","Initializer Declaration ","Return Stmt ","Method Call Expr ","Name Expr ctx ","Integer Literal Expr Note Zero  ","Simple Name iter ","IntegerLiteralExpr","NullLiteralExpr"]}
{"fileName":"srctestjavacomjsoniterTestMap.java","version":"0.9.22","methodName":"test_MapKeyCodec-TestMap-","callMethodNameReferTo":{},"num":125,"succs":[[1,15],[2,54],[3,68],[4,81],[87,5],[96,6],[7,107],[8,112],[117],[11,10,13,12],[],[12],[],[7,0,3,8,1,2,4,5,6],[22,53,9,39],[19,17,16,18],[],[],[20],[21],[],[],[25,24,10,26,27,30,28,23],[],[25],[],[33,32],[29],[],[],[35,14,34],[32],[],[],[36],[44],[40],[38,31],[],[37],[41,38,42],[38],[43],[],[46,47,45],[37,48],[],[51,50,49],[],[],[],[52,31],[],[],[59],[56],[],[56,55],[57],[61,56,60],[56],[64,63,62,65],[],[],[66],[67],[],[],[75],[55],[69],[69,70],[71,69,58],[72],[72,73],[69,77,76],[69],[79,78],[],[80,55],[],[83,82,84],[],[85],[70,86],[],[],[90,89,88],[],[85],[92,91],[71,94,93],[],[],[95],[],[97,46,57],[102,100,98,101,99],[],[],[103,104],[66],[106],[105],[],[],[],[46,72,108],[109,110],[],[58,111],[],[113,115,114],[],[85],[73,116],[],[119,120,118],[],[85],[122,121],[123,124,74],[],[],[95]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","Void Type ","Simple Name test_MapKeyCodec ","Block Stmt ","Return Stmt ","Method Call Expr ","Return Stmt ","Simple Name registerMapKeyDecoder ","Class Expr TestObject2.class ","Object Creation Expr Decoder Optional.empty Optional.empty ","Class Or Interface Type TestObject2 ","Class Or Interface Type Decoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Name Expr output ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","Expression Stmt ","Variable Declaration Expr ","Name Expr obj ","Simple Name obj ","Simple Name val ","Variable Declarator TestObject1 obj = ","Name Expr _firstName_ ","Object Creation Expr TestObject1 Optional.empty Optional.empty ","Class Or Interface Type TestObject1 ","Assign Expr ASSIGN ","Field Access Expr ","ASSIGN","Method Call Expr ","Simple Name Field ","Name Expr keyType ","Simple Name valueOf ","Method Call Expr ","Simple Name readString ","ReturnStmt","Variable Declaration Expr ","Name Expr map ","Simple Name map ","Name Expr map ","Name Expr map ","Variable Declarator Map<TestObject1, Object> map = ","Single Member Annotation Expr @JsonProperty('field-1') ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<TestObject1, Object>> Optional.empty Optional.empty ","StringLiteralExpr","Class Or Interface Type TypeLiteral ","Variable Declaration Expr ","Simple Name keys ","Name Expr keys ","Simple Name head ","Name Expr map1 ","Name Expr keys ","Name Expr map2 ","Variable Declarator ArrayList<TestObject1> keys = ","Class Or Interface Type ArrayList ","Object Creation Expr ArrayList<TestObject1> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name keySet ","Expression Stmt ","Class Or Interface Type JsonIterator ","Integer Literal Expr Note Zero  ","Method Call Expr ","IntegerLiteralExpr","Name Expr args ","Expression Stmt ","Simple Name assertEquals ","Simple Name obj ","Field Access Expr ","Method Call Expr ","Simple Name Field ","Simple Name get ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","Method Call Expr ","Name Expr JsonIterator ","Simple Name deserialize ","Method Call Expr ","String Literal Expr Not Empty  ","Object Creation Expr TypeLiteral<Map<TestObject1, Object>> Optional.empty Optional.empty ","Object Creation Expr GsonCompatibilityMode.Builder Optional.empty Optional.empty ","Simple Name build ","Class Or Interface Type Builder ","Class Or Interface Type TypeLiteral ","Method Call Expr ","Object Creation Expr ArrayList<TestObject1> Optional.empty Optional.empty ","Class Or Interface Type ArrayList ","Method Call Expr ","Simple Name keySet ","Method Call Expr ","Return Stmt ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name size ","Method Call Expr ","Simple Name assertEquals ","Integer Literal Expr Note Zero  ","Field Access Expr ","Method Call Expr ","Simple Name Field ","Simple Name get ","Integer Literal Expr Zero  "]}
